
HSM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d690  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001c54  0800d820  0800d820  0001d820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 CMOX_CTA_PROTECTED_DATA 00000a00  0800f474  0800f474  0001f474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0800fe74  0800fe74  0002016c  2**0
                  CONTENTS
  5 .ARM          00000008  0800fe74  0800fe74  0001fe74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0800fe7c  0800fe7c  0002016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000004  0800fe7c  0800fe7c  0001fe7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000004  0800fe80  0800fe80  0001fe80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         0000016c  20000000  0800fe84  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .ccmram       00000000  10000000  10000000  0002016c  2**0
                  CONTENTS
 11 .bss          000022c0  2000016c  2000016c  0002016c  2**2
                  ALLOC
 12 ._user_heap_stack 00000604  2000242c  2000242c  0002016c  2**0
                  ALLOC
 13 .ARM.attributes 00000034  00000000  00000000  0002016c  2**0
                  CONTENTS, READONLY
 14 .comment      00000043  00000000  00000000  000201a0  2**0
                  CONTENTS, READONLY
 15 .iar_vfe_header 00000040  00000000  00000000  000201e4  2**2
                  CONTENTS, READONLY
 16 .debug_info   0001a016  00000000  00000000  00020224  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 0000465e  00000000  00000000  0003a23a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 000018a8  00000000  00000000  0003e898  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 000012e1  00000000  00000000  00040140  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00026f4d  00000000  00000000  00041421  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   000203d0  00000000  00000000  0006836e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    000d5c19  00000000  00000000  0008873e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_frame  00006fec  00000000  00000000  0015e358  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line_str 00000049  00000000  00000000  00165344  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000016c 	.word	0x2000016c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800d808 	.word	0x0800d808

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000170 	.word	0x20000170
 80001cc:	0800d808 	.word	0x0800d808

080001d0 <CMOX_CBC_DEC_AESFAST_IMPL>:
 80001d0:	08000339 0800db04                       9.......

080001d8 <cmox_cbc_decrypt>:
 80001d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80001da:	b0cb      	sub	sp, #300	; 0x12c
 80001dc:	4604      	mov	r4, r0
 80001de:	460d      	mov	r5, r1
 80001e0:	4616      	mov	r6, r2
 80001e2:	461f      	mov	r7, r3
 80001e4:	4909      	ldr	r1, [pc, #36]	; (800020c <cmox_cbc_decrypt+0x34>)
 80001e6:	a805      	add	r0, sp, #20
 80001e8:	f000 f888 	bl	80002fc <cmox_cbc_construct>
 80001ec:	9953      	ldr	r1, [sp, #332]	; 0x14c
 80001ee:	9a52      	ldr	r2, [sp, #328]	; 0x148
 80001f0:	9104      	str	r1, [sp, #16]
 80001f2:	9203      	str	r2, [sp, #12]
 80001f4:	9700      	str	r7, [sp, #0]
 80001f6:	9951      	ldr	r1, [sp, #324]	; 0x144
 80001f8:	9a50      	ldr	r2, [sp, #320]	; 0x140
 80001fa:	9102      	str	r1, [sp, #8]
 80001fc:	9201      	str	r2, [sp, #4]
 80001fe:	4633      	mov	r3, r6
 8000200:	462a      	mov	r2, r5
 8000202:	4621      	mov	r1, r4
 8000204:	f000 fac0 	bl	8000788 <cmox_cipher_innerCompute>
 8000208:	b04b      	add	sp, #300	; 0x12c
 800020a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800020c:	080001d0 	.word	0x080001d0

08000210 <CMOX_CBC_ENC_AESFAST_IMPL>:
 8000210:	080006c9 0800db10                       ........

08000218 <cmox_cbc_encrypt>:
 8000218:	b5f0      	push	{r4, r5, r6, r7, lr}
 800021a:	b0cb      	sub	sp, #300	; 0x12c
 800021c:	4604      	mov	r4, r0
 800021e:	460d      	mov	r5, r1
 8000220:	4616      	mov	r6, r2
 8000222:	461f      	mov	r7, r3
 8000224:	4909      	ldr	r1, [pc, #36]	; (800024c <cmox_cbc_encrypt+0x34>)
 8000226:	a805      	add	r0, sp, #20
 8000228:	f000 f868 	bl	80002fc <cmox_cbc_construct>
 800022c:	9953      	ldr	r1, [sp, #332]	; 0x14c
 800022e:	9a52      	ldr	r2, [sp, #328]	; 0x148
 8000230:	9104      	str	r1, [sp, #16]
 8000232:	9203      	str	r2, [sp, #12]
 8000234:	9700      	str	r7, [sp, #0]
 8000236:	9951      	ldr	r1, [sp, #324]	; 0x144
 8000238:	9a50      	ldr	r2, [sp, #320]	; 0x140
 800023a:	9102      	str	r1, [sp, #8]
 800023c:	9201      	str	r2, [sp, #4]
 800023e:	4633      	mov	r3, r6
 8000240:	462a      	mov	r2, r5
 8000242:	4621      	mov	r1, r4
 8000244:	f000 faa0 	bl	8000788 <cmox_cipher_innerCompute>
 8000248:	b04b      	add	sp, #300	; 0x12c
 800024a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800024c:	08000210 	.word	0x08000210

08000250 <cmox_cbc_getByCipher>:
 8000250:	6802      	ldr	r2, [r0, #0]
 8000252:	428a      	cmp	r2, r1
 8000254:	bf18      	it	ne
 8000256:	2000      	movne	r0, #0
 8000258:	4770      	bx	lr
	...

0800025c <cmox_cbc_cleanup>:
 800025c:	b510      	push	{r4, lr}
 800025e:	f7ff fff7 	bl	8000250 <cmox_cbc_getByCipher>
 8000262:	f44f 3480 	mov.w	r4, #65536	; 0x10000
 8000266:	2800      	cmp	r0, #0
 8000268:	bf0e      	itee	eq
 800026a:	4c03      	ldreq	r4, [pc, #12]	; (8000278 <cmox_cbc_cleanup+0x1c>)
 800026c:	f44f 718a 	movne.w	r1, #276	; 0x114
 8000270:	f00c fd77 	blne	800cd62 <__aeabi_memclr>
 8000274:	4620      	mov	r0, r4
 8000276:	bd10      	pop	{r4, pc}
 8000278:	00010003 	.word	0x00010003

0800027c <cmox_cbc_init>:
 800027c:	b538      	push	{r3, r4, r5, lr}
 800027e:	0004      	movs	r4, r0
 8000280:	4d06      	ldr	r5, [pc, #24]	; (800029c <cmox_cbc_init+0x20>)
 8000282:	d008      	beq.n	8000296 <cmox_cbc_init+0x1a>
 8000284:	f7ff ffe4 	bl	8000250 <cmox_cbc_getByCipher>
 8000288:	b128      	cbz	r0, 8000296 <cmox_cbc_init+0x1a>
 800028a:	f100 0108 	add.w	r1, r0, #8
 800028e:	4620      	mov	r0, r4
 8000290:	f000 faac 	bl	80007ec <cmox_cipherMode_init>
 8000294:	4605      	mov	r5, r0
 8000296:	4628      	mov	r0, r5
 8000298:	bd32      	pop	{r1, r4, r5, pc}
 800029a:	bf00      	nop
 800029c:	00010003 	.word	0x00010003

080002a0 <cmox_cbc_setKey>:
 80002a0:	b570      	push	{r4, r5, r6, lr}
 80002a2:	460c      	mov	r4, r1
 80002a4:	4615      	mov	r5, r2
 80002a6:	4619      	mov	r1, r3
 80002a8:	4e06      	ldr	r6, [pc, #24]	; (80002c4 <cmox_cbc_setKey+0x24>)
 80002aa:	b140      	cbz	r0, 80002be <cmox_cbc_setKey+0x1e>
 80002ac:	f7ff ffd0 	bl	8000250 <cmox_cbc_getByCipher>
 80002b0:	b128      	cbz	r0, 80002be <cmox_cbc_setKey+0x1e>
 80002b2:	462a      	mov	r2, r5
 80002b4:	4621      	mov	r1, r4
 80002b6:	3008      	adds	r0, #8
 80002b8:	f000 faa0 	bl	80007fc <cmox_cipherMode_setKey>
 80002bc:	4606      	mov	r6, r0
 80002be:	4630      	mov	r0, r6
 80002c0:	bd70      	pop	{r4, r5, r6, pc}
 80002c2:	bf00      	nop
 80002c4:	00010003 	.word	0x00010003

080002c8 <cmox_cbc_setIV>:
 80002c8:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 80002ca:	0004      	movs	r4, r0
 80002cc:	460d      	mov	r5, r1
 80002ce:	4616      	mov	r6, r2
 80002d0:	d003      	beq.n	80002da <cmox_cbc_setIV+0x12>
 80002d2:	4619      	mov	r1, r3
 80002d4:	f7ff ffbc 	bl	8000250 <cmox_cbc_getByCipher>
 80002d8:	b908      	cbnz	r0, 80002de <cmox_cbc_setIV+0x16>
 80002da:	4807      	ldr	r0, [pc, #28]	; (80002f8 <cmox_cbc_setIV+0x30>)
 80002dc:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 80002de:	2e10      	cmp	r6, #16
 80002e0:	bf0c      	ite	eq
 80002e2:	2101      	moveq	r1, #1
 80002e4:	2100      	movne	r1, #0
 80002e6:	9100      	str	r1, [sp, #0]
 80002e8:	4633      	mov	r3, r6
 80002ea:	f500 7182 	add.w	r1, r0, #260	; 0x104
 80002ee:	462a      	mov	r2, r5
 80002f0:	4620      	mov	r0, r4
 80002f2:	f000 fc67 	bl	8000bc4 <cmox_cipherMode_setIV>
 80002f6:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 80002f8:	00010003 	.word	0x00010003

080002fc <cmox_cbc_construct>:
 80002fc:	460a      	mov	r2, r1
 80002fe:	6853      	ldr	r3, [r2, #4]
 8000300:	6812      	ldr	r2, [r2, #0]
 8000302:	6819      	ldr	r1, [r3, #0]

08000304 <__iar_annotation$$tailcall>:
 8000304:	4710      	bx	r2
	...

08000308 <cmox_cbc_decrypt_cleanup>:
 8000308:	4901      	ldr	r1, [pc, #4]	; (8000310 <cmox_cbc_decrypt_cleanup+0x8>)
 800030a:	f7ff bfa7 	b.w	800025c <cmox_cbc_cleanup>
 800030e:	bf00      	nop
 8000310:	0800d984 	.word	0x0800d984

08000314 <cmox_cbc_decrypt_init>:
 8000314:	4901      	ldr	r1, [pc, #4]	; (800031c <cmox_cbc_decrypt_init+0x8>)
 8000316:	f7ff bfb1 	b.w	800027c <cmox_cbc_init>
 800031a:	bf00      	nop
 800031c:	0800d984 	.word	0x0800d984

08000320 <cmox_cbc_decrypt_setKey>:
 8000320:	4b01      	ldr	r3, [pc, #4]	; (8000328 <cmox_cbc_decrypt_setKey+0x8>)
 8000322:	f7ff bfbd 	b.w	80002a0 <cmox_cbc_setKey>
 8000326:	bf00      	nop
 8000328:	0800d984 	.word	0x0800d984

0800032c <cmox_cbc_decrypt_setIV>:
 800032c:	4b01      	ldr	r3, [pc, #4]	; (8000334 <cmox_cbc_decrypt_setIV+0x8>)
 800032e:	f7ff bfcb 	b.w	80002c8 <cmox_cbc_setIV>
 8000332:	bf00      	nop
 8000334:	0800d984 	.word	0x0800d984

08000338 <cmox_cbcDecrypt_construct>:
 8000338:	b110      	cbz	r0, 8000340 <cmox_cbcDecrypt_construct+0x8>
 800033a:	4a02      	ldr	r2, [pc, #8]	; (8000344 <cmox_cbcDecrypt_construct+0xc>)
 800033c:	6002      	str	r2, [r0, #0]
 800033e:	6081      	str	r1, [r0, #8]
 8000340:	4770      	bx	lr
 8000342:	bf00      	nop
 8000344:	0800d984 	.word	0x0800d984

08000348 <cmox_cbc_decrypt>:
 8000348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800034c:	4617      	mov	r7, r2
 800034e:	2500      	movs	r5, #0
 8000350:	2f10      	cmp	r7, #16
 8000352:	b089      	sub	sp, #36	; 0x24
 8000354:	4606      	mov	r6, r0
 8000356:	4689      	mov	r9, r1
 8000358:	4698      	mov	r8, r3
 800035a:	d309      	bcc.n	8000370 <cmox_cbc_decrypt+0x28>
 800035c:	7930      	ldrb	r0, [r6, #4]
 800035e:	07c2      	lsls	r2, r0, #31
 8000360:	d506      	bpl.n	8000370 <cmox_cbc_decrypt+0x28>
 8000362:	496f      	ldr	r1, [pc, #444]	; (8000520 <cmox_cbc_decrypt+0x1d8>)
 8000364:	4630      	mov	r0, r6
 8000366:	f7ff ff73 	bl	8000250 <cmox_cbc_getByCipher>
 800036a:	ea5f 0a00 	movs.w	sl, r0
 800036e:	d101      	bne.n	8000374 <cmox_cbc_decrypt+0x2c>
 8000370:	486c      	ldr	r0, [pc, #432]	; (8000524 <cmox_cbc_decrypt+0x1dc>)
 8000372:	e0d2      	b.n	800051a <cmox_cbc_decrypt+0x1d2>
 8000374:	f89a 0010 	ldrb.w	r0, [sl, #16]
 8000378:	f000 0005 	and.w	r0, r0, #5
 800037c:	2805      	cmp	r0, #5
 800037e:	bf18      	it	ne
 8000380:	4869      	ldrne	r0, [pc, #420]	; (8000528 <cmox_cbc_decrypt+0x1e0>)
 8000382:	d1f6      	bne.n	8000372 <cmox_cbc_decrypt+0x2a>
 8000384:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8000386:	b104      	cbz	r4, 800038a <cmox_cbc_decrypt+0x42>
 8000388:	6025      	str	r5, [r4, #0]
 800038a:	f017 0f0f 	tst.w	r7, #15
 800038e:	bf08      	it	eq
 8000390:	463d      	moveq	r5, r7
 8000392:	d009      	beq.n	80003a8 <cmox_cbc_decrypt+0x60>
 8000394:	2f20      	cmp	r7, #32
 8000396:	bf38      	it	cc
 8000398:	6075      	strcc	r5, [r6, #4]
 800039a:	d305      	bcc.n	80003a8 <cmox_cbc_decrypt+0x60>
 800039c:	093d      	lsrs	r5, r7, #4
 800039e:	1e6d      	subs	r5, r5, #1
 80003a0:	2000      	movs	r0, #0
 80003a2:	012d      	lsls	r5, r5, #4
 80003a4:	f8ca 0010 	str.w	r0, [sl, #16]
 80003a8:	2600      	movs	r6, #0
 80003aa:	f50a 7b82 	add.w	fp, sl, #260	; 0x104
 80003ae:	e01f      	b.n	80003f0 <cmox_cbc_decrypt+0xa8>
 80003b0:	a904      	add	r1, sp, #16
 80003b2:	eb09 0006 	add.w	r0, r9, r6
 80003b6:	f000 fc39 	bl	8000c2c <convert_block_2_words>
 80003ba:	f8da 3008 	ldr.w	r3, [sl, #8]
 80003be:	f8d3 c000 	ldr.w	ip, [r3]
 80003c2:	466a      	mov	r2, sp
 80003c4:	a904      	add	r1, sp, #16
 80003c6:	f10a 0008 	add.w	r0, sl, #8
 80003ca:	47e0      	blx	ip
 80003cc:	4659      	mov	r1, fp
 80003ce:	4668      	mov	r0, sp
 80003d0:	f000 fc57 	bl	8000c82 <xor_blocks>
 80003d4:	eb08 0106 	add.w	r1, r8, r6
 80003d8:	4668      	mov	r0, sp
 80003da:	f000 fc3b 	bl	8000c54 <convert_block_2_bytes>
 80003de:	4659      	mov	r1, fp
 80003e0:	a804      	add	r0, sp, #16
 80003e2:	f000 fc5b 	bl	8000c9c <copy_block>
 80003e6:	b114      	cbz	r4, 80003ee <cmox_cbc_decrypt+0xa6>
 80003e8:	6820      	ldr	r0, [r4, #0]
 80003ea:	3010      	adds	r0, #16
 80003ec:	6020      	str	r0, [r4, #0]
 80003ee:	3610      	adds	r6, #16
 80003f0:	42ae      	cmp	r6, r5
 80003f2:	d3dd      	bcc.n	80003b0 <cmox_cbc_decrypt+0x68>
 80003f4:	42bd      	cmp	r5, r7
 80003f6:	f080 808e 	bcs.w	8000516 <cmox_cbc_decrypt+0x1ce>
 80003fa:	a904      	add	r1, sp, #16
 80003fc:	eb09 0005 	add.w	r0, r9, r5
 8000400:	f000 fc14 	bl	8000c2c <convert_block_2_words>
 8000404:	f8da 3008 	ldr.w	r3, [sl, #8]
 8000408:	f8d3 c000 	ldr.w	ip, [r3]
 800040c:	466a      	mov	r2, sp
 800040e:	a904      	add	r1, sp, #16
 8000410:	f10a 0008 	add.w	r0, sl, #8
 8000414:	47e0      	blx	ip
 8000416:	f105 0110 	add.w	r1, r5, #16
 800041a:	1a7b      	subs	r3, r7, r1
 800041c:	4620      	mov	r0, r4
 800041e:	f04f 0e00 	mov.w	lr, #0
 8000422:	aa04      	add	r2, sp, #16
 8000424:	089c      	lsrs	r4, r3, #2
 8000426:	e014      	b.n	8000452 <cmox_cbc_decrypt+0x10a>
 8000428:	eb01 038e 	add.w	r3, r1, lr, lsl #2
 800042c:	f859 5003 	ldr.w	r5, [r9, r3]
 8000430:	ba2d      	rev	r5, r5
 8000432:	f842 502e 	str.w	r5, [r2, lr, lsl #2]
 8000436:	f85d 602e 	ldr.w	r6, [sp, lr, lsl #2]
 800043a:	4075      	eors	r5, r6
 800043c:	f84d 502e 	str.w	r5, [sp, lr, lsl #2]
 8000440:	ba2d      	rev	r5, r5
 8000442:	f848 5003 	str.w	r5, [r8, r3]
 8000446:	b110      	cbz	r0, 800044e <cmox_cbc_decrypt+0x106>
 8000448:	6803      	ldr	r3, [r0, #0]
 800044a:	1d1b      	adds	r3, r3, #4
 800044c:	6003      	str	r3, [r0, #0]
 800044e:	f10e 0e01 	add.w	lr, lr, #1
 8000452:	45a6      	cmp	lr, r4
 8000454:	d3e8      	bcc.n	8000428 <cmox_cbc_decrypt+0xe0>
 8000456:	4643      	mov	r3, r8
 8000458:	4688      	mov	r8, r1
 800045a:	2100      	movs	r1, #0
 800045c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8000460:	f04f 0e00 	mov.w	lr, #0
 8000464:	eb08 0184 	add.w	r1, r8, r4, lsl #2
 8000468:	1a7f      	subs	r7, r7, r1
 800046a:	4625      	mov	r5, r4
 800046c:	9108      	str	r1, [sp, #32]
 800046e:	e01c      	b.n	80004aa <cmox_cbc_decrypt+0x162>
 8000470:	9c08      	ldr	r4, [sp, #32]
 8000472:	f852 6025 	ldr.w	r6, [r2, r5, lsl #2]
 8000476:	4474      	add	r4, lr
 8000478:	ea4f 0cce 	mov.w	ip, lr, lsl #3
 800047c:	f819 1004 	ldrb.w	r1, [r9, r4]
 8000480:	f1cc 0c18 	rsb	ip, ip, #24
 8000484:	fa01 f10c 	lsl.w	r1, r1, ip
 8000488:	404e      	eors	r6, r1
 800048a:	f842 6025 	str.w	r6, [r2, r5, lsl #2]
 800048e:	f85d 6025 	ldr.w	r6, [sp, r5, lsl #2]
 8000492:	f819 1004 	ldrb.w	r1, [r9, r4]
 8000496:	fa26 f60c 	lsr.w	r6, r6, ip
 800049a:	404e      	eors	r6, r1
 800049c:	551e      	strb	r6, [r3, r4]
 800049e:	b110      	cbz	r0, 80004a6 <cmox_cbc_decrypt+0x15e>
 80004a0:	6804      	ldr	r4, [r0, #0]
 80004a2:	1c64      	adds	r4, r4, #1
 80004a4:	6004      	str	r4, [r0, #0]
 80004a6:	f10e 0e01 	add.w	lr, lr, #1
 80004aa:	45be      	cmp	lr, r7
 80004ac:	d3e0      	bcc.n	8000470 <cmox_cbc_decrypt+0x128>
 80004ae:	461e      	mov	r6, r3
 80004b0:	4604      	mov	r4, r0
 80004b2:	f85d 1025 	ldr.w	r1, [sp, r5, lsl #2]
 80004b6:	f04f 33ff 	mov.w	r3, #4294967295
 80004ba:	00ff      	lsls	r7, r7, #3
 80004bc:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 80004c0:	40fb      	lsrs	r3, r7
 80004c2:	4019      	ands	r1, r3
 80004c4:	4048      	eors	r0, r1
 80004c6:	f842 0025 	str.w	r0, [r2, r5, lsl #2]
 80004ca:	1c68      	adds	r0, r5, #1
 80004cc:	2804      	cmp	r0, #4
 80004ce:	d20a      	bcs.n	80004e6 <cmox_cbc_decrypt+0x19e>
 80004d0:	4669      	mov	r1, sp
 80004d2:	f1c5 0503 	rsb	r5, r5, #3
 80004d6:	eb01 0180 	add.w	r1, r1, r0, lsl #2
 80004da:	ab04      	add	r3, sp, #16
 80004dc:	00aa      	lsls	r2, r5, #2
 80004de:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80004e2:	f00c fc3c 	bl	800cd5e <__aeabi_memcpy>
 80004e6:	f8da 3008 	ldr.w	r3, [sl, #8]
 80004ea:	681f      	ldr	r7, [r3, #0]
 80004ec:	466a      	mov	r2, sp
 80004ee:	a904      	add	r1, sp, #16
 80004f0:	f10a 0008 	add.w	r0, sl, #8
 80004f4:	47b8      	blx	r7
 80004f6:	f50a 7182 	add.w	r1, sl, #260	; 0x104
 80004fa:	4668      	mov	r0, sp
 80004fc:	f000 fbc1 	bl	8000c82 <xor_blocks>
 8000500:	eb06 0008 	add.w	r0, r6, r8
 8000504:	f1a0 0110 	sub.w	r1, r0, #16
 8000508:	4668      	mov	r0, sp
 800050a:	f000 fba3 	bl	8000c54 <convert_block_2_bytes>
 800050e:	b114      	cbz	r4, 8000516 <cmox_cbc_decrypt+0x1ce>
 8000510:	6820      	ldr	r0, [r4, #0]
 8000512:	3010      	adds	r0, #16
 8000514:	6020      	str	r0, [r4, #0]
 8000516:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 800051a:	b009      	add	sp, #36	; 0x24
 800051c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000520:	0800d984 	.word	0x0800d984
 8000524:	00010003 	.word	0x00010003
 8000528:	00010004 	.word	0x00010004

0800052c <cmox_cbc_encrypt_cleanup>:
 800052c:	4901      	ldr	r1, [pc, #4]	; (8000534 <cmox_cbc_encrypt_cleanup+0x8>)
 800052e:	f7ff be95 	b.w	800025c <cmox_cbc_cleanup>
 8000532:	bf00      	nop
 8000534:	0800d9b0 	.word	0x0800d9b0

08000538 <cmox_cbc_encrypt_init>:
 8000538:	4901      	ldr	r1, [pc, #4]	; (8000540 <cmox_cbc_encrypt_init+0x8>)
 800053a:	f7ff be9f 	b.w	800027c <cmox_cbc_init>
 800053e:	bf00      	nop
 8000540:	0800d9b0 	.word	0x0800d9b0

08000544 <cmox_cbc_encrypt_setKey>:
 8000544:	4b01      	ldr	r3, [pc, #4]	; (800054c <cmox_cbc_encrypt_setKey+0x8>)
 8000546:	f7ff beab 	b.w	80002a0 <cmox_cbc_setKey>
 800054a:	bf00      	nop
 800054c:	0800d9b0 	.word	0x0800d9b0

08000550 <cmox_cbc_encrypt_setIV>:
 8000550:	4b01      	ldr	r3, [pc, #4]	; (8000558 <cmox_cbc_encrypt_setIV+0x8>)
 8000552:	f7ff beb9 	b.w	80002c8 <cmox_cbc_setIV>
 8000556:	bf00      	nop
 8000558:	0800d9b0 	.word	0x0800d9b0

0800055c <cmox_cbc_encrypt>:
 800055c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000560:	4615      	mov	r5, r2
 8000562:	2d10      	cmp	r5, #16
 8000564:	b086      	sub	sp, #24
 8000566:	4606      	mov	r6, r0
 8000568:	460f      	mov	r7, r1
 800056a:	4698      	mov	r8, r3
 800056c:	d307      	bcc.n	800057e <cmox_cbc_encrypt+0x22>
 800056e:	7930      	ldrb	r0, [r6, #4]
 8000570:	07c2      	lsls	r2, r0, #31
 8000572:	d504      	bpl.n	800057e <cmox_cbc_encrypt+0x22>
 8000574:	4951      	ldr	r1, [pc, #324]	; (80006bc <cmox_cbc_encrypt+0x160>)
 8000576:	4630      	mov	r0, r6
 8000578:	f7ff fe6a 	bl	8000250 <cmox_cbc_getByCipher>
 800057c:	b908      	cbnz	r0, 8000582 <cmox_cbc_encrypt+0x26>
 800057e:	4850      	ldr	r0, [pc, #320]	; (80006c0 <cmox_cbc_encrypt+0x164>)
 8000580:	e098      	b.n	80006b4 <cmox_cbc_encrypt+0x158>
 8000582:	7c01      	ldrb	r1, [r0, #16]
 8000584:	f001 0105 	and.w	r1, r1, #5
 8000588:	2905      	cmp	r1, #5
 800058a:	bf18      	it	ne
 800058c:	484d      	ldrne	r0, [pc, #308]	; (80006c4 <cmox_cbc_encrypt+0x168>)
 800058e:	d1f7      	bne.n	8000580 <cmox_cbc_encrypt+0x24>
 8000590:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8000592:	b10c      	cbz	r4, 8000598 <cmox_cbc_encrypt+0x3c>
 8000594:	2100      	movs	r1, #0
 8000596:	6021      	str	r1, [r4, #0]
 8000598:	f015 0f0f 	tst.w	r5, #15
 800059c:	bf08      	it	eq
 800059e:	46a9      	moveq	r9, r5
 80005a0:	d004      	beq.n	80005ac <cmox_cbc_encrypt+0x50>
 80005a2:	0929      	lsrs	r1, r5, #4
 80005a4:	ea4f 1901 	mov.w	r9, r1, lsl #4
 80005a8:	2100      	movs	r1, #0
 80005aa:	6071      	str	r1, [r6, #4]
 80005ac:	2600      	movs	r6, #0
 80005ae:	f500 7b82 	add.w	fp, r0, #260	; 0x104
 80005b2:	4682      	mov	sl, r0
 80005b4:	e01e      	b.n	80005f4 <cmox_cbc_encrypt+0x98>
 80005b6:	4669      	mov	r1, sp
 80005b8:	19b8      	adds	r0, r7, r6
 80005ba:	f000 fb37 	bl	8000c2c <convert_block_2_words>
 80005be:	4659      	mov	r1, fp
 80005c0:	4668      	mov	r0, sp
 80005c2:	f000 fb5e 	bl	8000c82 <xor_blocks>
 80005c6:	f8da 3008 	ldr.w	r3, [sl, #8]
 80005ca:	f8d3 c000 	ldr.w	ip, [r3]
 80005ce:	466a      	mov	r2, sp
 80005d0:	4669      	mov	r1, sp
 80005d2:	f10a 0008 	add.w	r0, sl, #8
 80005d6:	47e0      	blx	ip
 80005d8:	eb08 0106 	add.w	r1, r8, r6
 80005dc:	4668      	mov	r0, sp
 80005de:	f000 fb39 	bl	8000c54 <convert_block_2_bytes>
 80005e2:	4659      	mov	r1, fp
 80005e4:	4668      	mov	r0, sp
 80005e6:	f000 fb59 	bl	8000c9c <copy_block>
 80005ea:	b114      	cbz	r4, 80005f2 <cmox_cbc_encrypt+0x96>
 80005ec:	6820      	ldr	r0, [r4, #0]
 80005ee:	3010      	adds	r0, #16
 80005f0:	6020      	str	r0, [r4, #0]
 80005f2:	3610      	adds	r6, #16
 80005f4:	454e      	cmp	r6, r9
 80005f6:	d3de      	bcc.n	80005b6 <cmox_cbc_encrypt+0x5a>
 80005f8:	45a9      	cmp	r9, r5
 80005fa:	d259      	bcs.n	80006b0 <cmox_cbc_encrypt+0x154>
 80005fc:	eba5 0109 	sub.w	r1, r5, r9
 8000600:	0889      	lsrs	r1, r1, #2
 8000602:	2300      	movs	r3, #0
 8000604:	e010      	b.n	8000628 <cmox_cbc_encrypt+0xcc>
 8000606:	eb09 0283 	add.w	r2, r9, r3, lsl #2
 800060a:	58b8      	ldr	r0, [r7, r2]
 800060c:	ba00      	rev	r0, r0
 800060e:	f84d 0023 	str.w	r0, [sp, r3, lsl #2]
 8000612:	f85b 6023 	ldr.w	r6, [fp, r3, lsl #2]
 8000616:	4070      	eors	r0, r6
 8000618:	f84d 0023 	str.w	r0, [sp, r3, lsl #2]
 800061c:	f85b 0023 	ldr.w	r0, [fp, r3, lsl #2]
 8000620:	ba00      	rev	r0, r0
 8000622:	f848 0002 	str.w	r0, [r8, r2]
 8000626:	1c5b      	adds	r3, r3, #1
 8000628:	428b      	cmp	r3, r1
 800062a:	d3ec      	bcc.n	8000606 <cmox_cbc_encrypt+0xaa>
 800062c:	eb09 0281 	add.w	r2, r9, r1, lsl #2
 8000630:	9204      	str	r2, [sp, #16]
 8000632:	4613      	mov	r3, r2
 8000634:	f85b 2021 	ldr.w	r2, [fp, r1, lsl #2]
 8000638:	f84d 2021 	str.w	r2, [sp, r1, lsl #2]
 800063c:	9705      	str	r7, [sp, #20]
 800063e:	2200      	movs	r2, #0
 8000640:	e015      	b.n	800066e <cmox_cbc_encrypt+0x112>
 8000642:	9f04      	ldr	r7, [sp, #16]
 8000644:	9e05      	ldr	r6, [sp, #20]
 8000646:	f85d 0021 	ldr.w	r0, [sp, r1, lsl #2]
 800064a:	19d7      	adds	r7, r2, r7
 800064c:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 8000650:	5df6      	ldrb	r6, [r6, r7]
 8000652:	f1cc 0c18 	rsb	ip, ip, #24
 8000656:	fa06 f60c 	lsl.w	r6, r6, ip
 800065a:	4070      	eors	r0, r6
 800065c:	f84d 0021 	str.w	r0, [sp, r1, lsl #2]
 8000660:	1c52      	adds	r2, r2, #1
 8000662:	f85b 0021 	ldr.w	r0, [fp, r1, lsl #2]
 8000666:	fa20 f00c 	lsr.w	r0, r0, ip
 800066a:	f808 0007 	strb.w	r0, [r8, r7]
 800066e:	1aef      	subs	r7, r5, r3
 8000670:	42ba      	cmp	r2, r7
 8000672:	d3e6      	bcc.n	8000642 <cmox_cbc_encrypt+0xe6>
 8000674:	e003      	b.n	800067e <cmox_cbc_encrypt+0x122>
 8000676:	f85b 2021 	ldr.w	r2, [fp, r1, lsl #2]
 800067a:	f84d 2021 	str.w	r2, [sp, r1, lsl #2]
 800067e:	1c49      	adds	r1, r1, #1
 8000680:	2904      	cmp	r1, #4
 8000682:	d3f8      	bcc.n	8000676 <cmox_cbc_encrypt+0x11a>
 8000684:	f8da 3008 	ldr.w	r3, [sl, #8]
 8000688:	f8d3 b000 	ldr.w	fp, [r3]
 800068c:	466a      	mov	r2, sp
 800068e:	4669      	mov	r1, sp
 8000690:	f10a 0008 	add.w	r0, sl, #8
 8000694:	47d8      	blx	fp
 8000696:	eb08 0009 	add.w	r0, r8, r9
 800069a:	f1a0 0110 	sub.w	r1, r0, #16
 800069e:	4668      	mov	r0, sp
 80006a0:	f000 fad8 	bl	8000c54 <convert_block_2_bytes>
 80006a4:	b124      	cbz	r4, 80006b0 <cmox_cbc_encrypt+0x154>
 80006a6:	6820      	ldr	r0, [r4, #0]
 80006a8:	182d      	adds	r5, r5, r0
 80006aa:	eba5 0509 	sub.w	r5, r5, r9
 80006ae:	6025      	str	r5, [r4, #0]
 80006b0:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 80006b4:	b007      	add	sp, #28
 80006b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80006ba:	bf00      	nop
 80006bc:	0800d9b0 	.word	0x0800d9b0
 80006c0:	00010003 	.word	0x00010003
 80006c4:	00010004 	.word	0x00010004

080006c8 <cmox_cbcEncrypt_construct>:
 80006c8:	b110      	cbz	r0, 80006d0 <cmox_cbcEncrypt_construct+0x8>
 80006ca:	4a02      	ldr	r2, [pc, #8]	; (80006d4 <cmox_cbcEncrypt_construct+0xc>)
 80006cc:	6002      	str	r2, [r0, #0]
 80006ce:	6081      	str	r1, [r0, #8]
 80006d0:	4770      	bx	lr
 80006d2:	bf00      	nop
 80006d4:	0800d9b0 	.word	0x0800d9b0

080006d8 <cmox_cipher_encrypt>:
 80006d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006da:	460c      	mov	r4, r1
 80006dc:	4611      	mov	r1, r2
 80006de:	0005      	movs	r5, r0
 80006e0:	461a      	mov	r2, r3
 80006e2:	b084      	sub	sp, #16
 80006e4:	4b10      	ldr	r3, [pc, #64]	; (8000728 <cmox_cipher_encrypt+0x50>)
 80006e6:	d01b      	beq.n	8000720 <cmox_cipher_encrypt+0x48>
 80006e8:	6868      	ldr	r0, [r5, #4]
 80006ea:	283a      	cmp	r0, #58	; 0x3a
 80006ec:	bf18      	it	ne
 80006ee:	4b0f      	ldrne	r3, [pc, #60]	; (800072c <cmox_cipher_encrypt+0x54>)
 80006f0:	d116      	bne.n	8000720 <cmox_cipher_encrypt+0x48>
 80006f2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80006f4:	b90c      	cbnz	r4, 80006fa <cmox_cipher_encrypt+0x22>
 80006f6:	b109      	cbz	r1, 80006fc <cmox_cipher_encrypt+0x24>
 80006f8:	e012      	b.n	8000720 <cmox_cipher_encrypt+0x48>
 80006fa:	b188      	cbz	r0, 8000720 <cmox_cipher_encrypt+0x48>
 80006fc:	b182      	cbz	r2, 8000720 <cmox_cipher_encrypt+0x48>
 80006fe:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8000700:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8000702:	b907      	cbnz	r7, 8000706 <cmox_cipher_encrypt+0x2e>
 8000704:	b966      	cbnz	r6, 8000720 <cmox_cipher_encrypt+0x48>
 8000706:	b158      	cbz	r0, 8000720 <cmox_cipher_encrypt+0x48>
 8000708:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
 800070c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800070e:	9002      	str	r0, [sp, #8]
 8000710:	f8cd c00c 	str.w	ip, [sp, #12]
 8000714:	9601      	str	r6, [sp, #4]
 8000716:	9700      	str	r7, [sp, #0]
 8000718:	4620      	mov	r0, r4
 800071a:	682c      	ldr	r4, [r5, #0]
 800071c:	47a0      	blx	r4
 800071e:	4603      	mov	r3, r0
 8000720:	4618      	mov	r0, r3
 8000722:	b005      	add	sp, #20
 8000724:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000726:	bf00      	nop
 8000728:	00010003 	.word	0x00010003
 800072c:	00010002 	.word	0x00010002

08000730 <cmox_cipher_decrypt>:
 8000730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000732:	460c      	mov	r4, r1
 8000734:	4611      	mov	r1, r2
 8000736:	0005      	movs	r5, r0
 8000738:	461a      	mov	r2, r3
 800073a:	b084      	sub	sp, #16
 800073c:	4b10      	ldr	r3, [pc, #64]	; (8000780 <cmox_cipher_decrypt+0x50>)
 800073e:	d01c      	beq.n	800077a <cmox_cipher_decrypt+0x4a>
 8000740:	6868      	ldr	r0, [r5, #4]
 8000742:	f110 0f3b 	cmn.w	r0, #59	; 0x3b
 8000746:	bf18      	it	ne
 8000748:	4b0e      	ldrne	r3, [pc, #56]	; (8000784 <cmox_cipher_decrypt+0x54>)
 800074a:	d116      	bne.n	800077a <cmox_cipher_decrypt+0x4a>
 800074c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800074e:	b90c      	cbnz	r4, 8000754 <cmox_cipher_decrypt+0x24>
 8000750:	b109      	cbz	r1, 8000756 <cmox_cipher_decrypt+0x26>
 8000752:	e012      	b.n	800077a <cmox_cipher_decrypt+0x4a>
 8000754:	b188      	cbz	r0, 800077a <cmox_cipher_decrypt+0x4a>
 8000756:	b182      	cbz	r2, 800077a <cmox_cipher_decrypt+0x4a>
 8000758:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800075a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800075c:	b907      	cbnz	r7, 8000760 <cmox_cipher_decrypt+0x30>
 800075e:	b966      	cbnz	r6, 800077a <cmox_cipher_decrypt+0x4a>
 8000760:	b158      	cbz	r0, 800077a <cmox_cipher_decrypt+0x4a>
 8000762:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
 8000766:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8000768:	9002      	str	r0, [sp, #8]
 800076a:	f8cd c00c 	str.w	ip, [sp, #12]
 800076e:	9601      	str	r6, [sp, #4]
 8000770:	9700      	str	r7, [sp, #0]
 8000772:	4620      	mov	r0, r4
 8000774:	682c      	ldr	r4, [r5, #0]
 8000776:	47a0      	blx	r4
 8000778:	4603      	mov	r3, r0
 800077a:	4618      	mov	r0, r3
 800077c:	b005      	add	sp, #20
 800077e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000780:	00010003 	.word	0x00010003
 8000784:	00010002 	.word	0x00010002

08000788 <cmox_cipher_innerCompute>:
 8000788:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 800078c:	4604      	mov	r4, r0
 800078e:	460d      	mov	r5, r1
 8000790:	6821      	ldr	r1, [r4, #0]
 8000792:	4616      	mov	r6, r2
 8000794:	684a      	ldr	r2, [r1, #4]
 8000796:	461f      	mov	r7, r3
 8000798:	4790      	blx	r2
 800079a:	4680      	mov	r8, r0
 800079c:	f5b8 3f80 	cmp.w	r8, #65536	; 0x10000
 80007a0:	d11d      	bne.n	80007de <cmox_cipher_innerCompute+0x56>
 80007a2:	6823      	ldr	r3, [r4, #0]
 80007a4:	9a08      	ldr	r2, [sp, #32]
 80007a6:	4639      	mov	r1, r7
 80007a8:	689f      	ldr	r7, [r3, #8]
 80007aa:	4620      	mov	r0, r4
 80007ac:	47b8      	blx	r7
 80007ae:	4680      	mov	r8, r0
 80007b0:	f5b8 3f80 	cmp.w	r8, #65536	; 0x10000
 80007b4:	d113      	bne.n	80007de <cmox_cipher_innerCompute+0x56>
 80007b6:	6823      	ldr	r3, [r4, #0]
 80007b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80007ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80007bc:	68df      	ldr	r7, [r3, #12]
 80007be:	4620      	mov	r0, r4
 80007c0:	47b8      	blx	r7
 80007c2:	4680      	mov	r8, r0
 80007c4:	f5b8 3f80 	cmp.w	r8, #65536	; 0x10000
 80007c8:	d109      	bne.n	80007de <cmox_cipher_innerCompute+0x56>
 80007ca:	4629      	mov	r1, r5
 80007cc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80007ce:	9000      	str	r0, [sp, #0]
 80007d0:	4632      	mov	r2, r6
 80007d2:	6825      	ldr	r5, [r4, #0]
 80007d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80007d6:	6a2e      	ldr	r6, [r5, #32]
 80007d8:	4620      	mov	r0, r4
 80007da:	47b0      	blx	r6
 80007dc:	4680      	mov	r8, r0
 80007de:	6821      	ldr	r1, [r4, #0]
 80007e0:	680a      	ldr	r2, [r1, #0]
 80007e2:	4620      	mov	r0, r4
 80007e4:	4790      	blx	r2
 80007e6:	4640      	mov	r0, r8
 80007e8:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

080007ec <cmox_cipherMode_init>:
 80007ec:	2200      	movs	r2, #0
 80007ee:	6042      	str	r2, [r0, #4]
 80007f0:	2001      	movs	r0, #1
 80007f2:	6088      	str	r0, [r1, #8]
 80007f4:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 80007f8:	4770      	bx	lr
	...

080007fc <cmox_cipherMode_setKey>:
 80007fc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000800:	b08c      	sub	sp, #48	; 0x30
 8000802:	4692      	mov	sl, r2
 8000804:	f1ba 0f10 	cmp.w	sl, #16
 8000808:	4ae7      	ldr	r2, [pc, #924]	; (8000ba8 <cmox_cipherMode_setKey+0x3ac>)
 800080a:	4be8      	ldr	r3, [pc, #928]	; (8000bac <cmox_cipherMode_setKey+0x3b0>)
 800080c:	4de8      	ldr	r5, [pc, #928]	; (8000bb0 <cmox_cipherMode_setKey+0x3b4>)
 800080e:	f8df 83a4 	ldr.w	r8, [pc, #932]	; 8000bb4 <cmox_cipherMode_setKey+0x3b8>
 8000812:	4ee9      	ldr	r6, [pc, #932]	; (8000bb8 <cmox_cipherMode_setKey+0x3bc>)
 8000814:	f8df b3a4 	ldr.w	fp, [pc, #932]	; 8000bbc <cmox_cipherMode_setKey+0x3c0>
 8000818:	f10d 0c04 	add.w	ip, sp, #4
 800081c:	d008      	beq.n	8000830 <cmox_cipherMode_setKey+0x34>
 800081e:	f1ba 0f18 	cmp.w	sl, #24
 8000822:	f000 8092 	beq.w	800094a <cmox_cipherMode_setKey+0x14e>
 8000826:	f1ba 0f20 	cmp.w	sl, #32
 800082a:	f000 8118 	beq.w	8000a5e <cmox_cipherMode_setKey+0x262>
 800082e:	e1a8      	b.n	8000b82 <cmox_cipherMode_setKey+0x386>
 8000830:	e9db 0400 	ldrd	r0, r4, [fp]
 8000834:	f10d 0e24 	add.w	lr, sp, #36	; 0x24
 8000838:	4fe1      	ldr	r7, [pc, #900]	; (8000bc0 <cmox_cipherMode_setKey+0x3c4>)
 800083a:	e9ce 0400 	strd	r0, r4, [lr]
 800083e:	7838      	ldrb	r0, [r7, #0]
 8000840:	2800      	cmp	r0, #0
 8000842:	bf0c      	ite	eq
 8000844:	f04f 0900 	moveq.w	r9, #0
 8000848:	f04f 0904 	movne.w	r9, #4
 800084c:	f856 4009 	ldr.w	r4, [r6, r9]
 8000850:	f85e 7009 	ldr.w	r7, [lr, r9]
 8000854:	443c      	add	r4, r7
 8000856:	6023      	str	r3, [r4, #0]
 8000858:	2301      	movs	r3, #1
 800085a:	6827      	ldr	r7, [r4, #0]
 800085c:	60a3      	str	r3, [r4, #8]
 800085e:	f8d6 9000 	ldr.w	r9, [r6]
 8000862:	6873      	ldr	r3, [r6, #4]
 8000864:	7b8c      	ldrb	r4, [r1, #14]
 8000866:	9400      	str	r4, [sp, #0]
 8000868:	405f      	eors	r7, r3
 800086a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800086c:	407c      	eors	r4, r7
 800086e:	f8de 7004 	ldr.w	r7, [lr, #4]
 8000872:	ea87 0709 	eor.w	r7, r7, r9
 8000876:	f084 0404 	eor.w	r4, r4, #4
 800087a:	f087 0efc 	eor.w	lr, r7, #252	; 0xfc
 800087e:	4474      	add	r4, lr
 8000880:	9f00      	ldr	r7, [sp, #0]
 8000882:	f084 0e52 	eor.w	lr, r4, #82	; 0x52
 8000886:	44be      	add	lr, r7
 8000888:	f88c e00e 	strb.w	lr, [ip, #14]
 800088c:	f04f 0e01 	mov.w	lr, #1
 8000890:	f811 400e 	ldrb.w	r4, [r1, lr]
 8000894:	f80c 400e 	strb.w	r4, [ip, lr]
 8000898:	f10e 0e01 	add.w	lr, lr, #1
 800089c:	f1be 0f0e 	cmp.w	lr, #14
 80008a0:	d3f6      	bcc.n	8000890 <cmox_cipherMode_setKey+0x94>
 80008a2:	e9db 4700 	ldrd	r4, r7, [fp]
 80008a6:	f10d 0e24 	add.w	lr, sp, #36	; 0x24
 80008aa:	2800      	cmp	r0, #0
 80008ac:	e9ce 4700 	strd	r4, r7, [lr]
 80008b0:	bf0c      	ite	eq
 80008b2:	2700      	moveq	r7, #0
 80008b4:	2704      	movne	r7, #4
 80008b6:	463c      	mov	r4, r7
 80008b8:	59f7      	ldr	r7, [r6, r7]
 80008ba:	f85e 4004 	ldr.w	r4, [lr, r4]
 80008be:	19e4      	adds	r4, r4, r7
 80008c0:	2701      	movs	r7, #1
 80008c2:	f8c4 8000 	str.w	r8, [r4]
 80008c6:	2800      	cmp	r0, #0
 80008c8:	f8d4 8000 	ldr.w	r8, [r4]
 80008cc:	60a7      	str	r7, [r4, #8]
 80008ce:	ea83 0808 	eor.w	r8, r3, r8
 80008d2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80008d4:	780f      	ldrb	r7, [r1, #0]
 80008d6:	ea84 0408 	eor.w	r4, r4, r8
 80008da:	f084 0804 	eor.w	r8, r4, #4
 80008de:	f8de 4004 	ldr.w	r4, [lr, #4]
 80008e2:	ea84 0409 	eor.w	r4, r4, r9
 80008e6:	f084 04fc 	eor.w	r4, r4, #252	; 0xfc
 80008ea:	4444      	add	r4, r8
 80008ec:	f084 080b 	eor.w	r8, r4, #11
 80008f0:	e9db 4e00 	ldrd	r4, lr, [fp]
 80008f4:	44b8      	add	r8, r7
 80008f6:	af09      	add	r7, sp, #36	; 0x24
 80008f8:	f88d 8004 	strb.w	r8, [sp, #4]
 80008fc:	e9c7 4e00 	strd	r4, lr, [r7]
 8000900:	bf0e      	itee	eq
 8000902:	f04f 0e00 	moveq.w	lr, #0
 8000906:	2004      	movne	r0, #4
 8000908:	4686      	movne	lr, r0
 800090a:	ac09      	add	r4, sp, #36	; 0x24
 800090c:	5836      	ldr	r6, [r6, r0]
 800090e:	f854 000e 	ldr.w	r0, [r4, lr]
 8000912:	1986      	adds	r6, r0, r6
 8000914:	6035      	str	r5, [r6, #0]
 8000916:	2501      	movs	r5, #1
 8000918:	6830      	ldr	r0, [r6, #0]
 800091a:	60b5      	str	r5, [r6, #8]
 800091c:	4043      	eors	r3, r0
 800091e:	7bce      	ldrb	r6, [r1, #15]
 8000920:	9909      	ldr	r1, [sp, #36]	; 0x24
 8000922:	6860      	ldr	r0, [r4, #4]
 8000924:	404b      	eors	r3, r1
 8000926:	ea80 0009 	eor.w	r0, r0, r9
 800092a:	f083 0304 	eor.w	r3, r3, #4
 800092e:	f080 00fc 	eor.w	r0, r0, #252	; 0xfc
 8000932:	4403      	add	r3, r0
 8000934:	f083 0385 	eor.w	r3, r3, #133	; 0x85
 8000938:	199b      	adds	r3, r3, r6
 800093a:	f88c 300f 	strb.w	r3, [ip, #15]
 800093e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000940:	7a28      	ldrb	r0, [r5, #8]
 8000942:	07c1      	lsls	r1, r0, #31
 8000944:	f100 811f 	bmi.w	8000b86 <cmox_cipherMode_setKey+0x38a>
 8000948:	e11b      	b.n	8000b82 <cmox_cipherMode_setKey+0x386>
 800094a:	e9db e900 	ldrd	lr, r9, [fp]
 800094e:	a809      	add	r0, sp, #36	; 0x24
 8000950:	4c9b      	ldr	r4, [pc, #620]	; (8000bc0 <cmox_cipherMode_setKey+0x3c4>)
 8000952:	e9c0 e900 	strd	lr, r9, [r0]
 8000956:	7820      	ldrb	r0, [r4, #0]
 8000958:	2800      	cmp	r0, #0
 800095a:	bf0c      	ite	eq
 800095c:	f04f 0900 	moveq.w	r9, #0
 8000960:	f04f 0904 	movne.w	r9, #4
 8000964:	f10d 0e24 	add.w	lr, sp, #36	; 0x24
 8000968:	f856 4009 	ldr.w	r4, [r6, r9]
 800096c:	f85e 7009 	ldr.w	r7, [lr, r9]
 8000970:	443c      	add	r4, r7
 8000972:	6025      	str	r5, [r4, #0]
 8000974:	2501      	movs	r5, #1
 8000976:	6827      	ldr	r7, [r4, #0]
 8000978:	60a5      	str	r5, [r4, #8]
 800097a:	f8d6 9000 	ldr.w	r9, [r6]
 800097e:	6875      	ldr	r5, [r6, #4]
 8000980:	7b8c      	ldrb	r4, [r1, #14]
 8000982:	9400      	str	r4, [sp, #0]
 8000984:	406f      	eors	r7, r5
 8000986:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8000988:	407c      	eors	r4, r7
 800098a:	f8de 7004 	ldr.w	r7, [lr, #4]
 800098e:	ea87 0709 	eor.w	r7, r7, r9
 8000992:	f084 0404 	eor.w	r4, r4, #4
 8000996:	f087 0efc 	eor.w	lr, r7, #252	; 0xfc
 800099a:	4474      	add	r4, lr
 800099c:	9f00      	ldr	r7, [sp, #0]
 800099e:	f084 0e85 	eor.w	lr, r4, #133	; 0x85
 80009a2:	44be      	add	lr, r7
 80009a4:	f88c e00e 	strb.w	lr, [ip, #14]
 80009a8:	f04f 0e01 	mov.w	lr, #1
 80009ac:	f811 400e 	ldrb.w	r4, [r1, lr]
 80009b0:	f80c 400e 	strb.w	r4, [ip, lr]
 80009b4:	f10e 0e01 	add.w	lr, lr, #1
 80009b8:	f1be 0f0e 	cmp.w	lr, #14
 80009bc:	d3f6      	bcc.n	80009ac <cmox_cipherMode_setKey+0x1b0>
 80009be:	e9db 4700 	ldrd	r4, r7, [fp]
 80009c2:	f10d 0e24 	add.w	lr, sp, #36	; 0x24
 80009c6:	2800      	cmp	r0, #0
 80009c8:	e9ce 4700 	strd	r4, r7, [lr]
 80009cc:	bf0c      	ite	eq
 80009ce:	2700      	moveq	r7, #0
 80009d0:	2704      	movne	r7, #4
 80009d2:	463c      	mov	r4, r7
 80009d4:	59f7      	ldr	r7, [r6, r7]
 80009d6:	f85e 4004 	ldr.w	r4, [lr, r4]
 80009da:	19e4      	adds	r4, r4, r7
 80009dc:	6023      	str	r3, [r4, #0]
 80009de:	2301      	movs	r3, #1
 80009e0:	6827      	ldr	r7, [r4, #0]
 80009e2:	60a3      	str	r3, [r4, #8]
 80009e4:	406f      	eors	r7, r5
 80009e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80009e8:	780c      	ldrb	r4, [r1, #0]
 80009ea:	405f      	eors	r7, r3
 80009ec:	f8de 3004 	ldr.w	r3, [lr, #4]
 80009f0:	ea83 0309 	eor.w	r3, r3, r9
 80009f4:	f087 0704 	eor.w	r7, r7, #4
 80009f8:	f083 03fc 	eor.w	r3, r3, #252	; 0xfc
 80009fc:	441f      	add	r7, r3
 80009fe:	f087 0752 	eor.w	r7, r7, #82	; 0x52
 8000a02:	193f      	adds	r7, r7, r4
 8000a04:	f88d 7004 	strb.w	r7, [sp, #4]
 8000a08:	ac09      	add	r4, sp, #36	; 0x24
 8000a0a:	e9db 7300 	ldrd	r7, r3, [fp]
 8000a0e:	e9c4 7300 	strd	r7, r3, [r4]
 8000a12:	2800      	cmp	r0, #0
 8000a14:	bf0e      	itee	eq
 8000a16:	2300      	moveq	r3, #0
 8000a18:	2004      	movne	r0, #4
 8000a1a:	2304      	movne	r3, #4
 8000a1c:	5836      	ldr	r6, [r6, r0]
 8000a1e:	58e0      	ldr	r0, [r4, r3]
 8000a20:	1986      	adds	r6, r0, r6
 8000a22:	2301      	movs	r3, #1
 8000a24:	f8c6 8000 	str.w	r8, [r6]
 8000a28:	6830      	ldr	r0, [r6, #0]
 8000a2a:	60b3      	str	r3, [r6, #8]
 8000a2c:	4045      	eors	r5, r0
 8000a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a30:	6860      	ldr	r0, [r4, #4]
 8000a32:	405d      	eors	r5, r3
 8000a34:	ea80 0009 	eor.w	r0, r0, r9
 8000a38:	f085 0504 	eor.w	r5, r5, #4
 8000a3c:	f080 00fc 	eor.w	r0, r0, #252	; 0xfc
 8000a40:	7bce      	ldrb	r6, [r1, #15]
 8000a42:	4405      	add	r5, r0
 8000a44:	f085 050b 	eor.w	r5, r5, #11
 8000a48:	19ad      	adds	r5, r5, r6
 8000a4a:	f88c 500f 	strb.w	r5, [ip, #15]
 8000a4e:	2010      	movs	r0, #16
 8000a50:	5c0b      	ldrb	r3, [r1, r0]
 8000a52:	f80c 3000 	strb.w	r3, [ip, r0]
 8000a56:	1c40      	adds	r0, r0, #1
 8000a58:	2818      	cmp	r0, #24
 8000a5a:	d3f9      	bcc.n	8000a50 <cmox_cipherMode_setKey+0x254>
 8000a5c:	e76f      	b.n	800093e <cmox_cipherMode_setKey+0x142>
 8000a5e:	e9db e900 	ldrd	lr, r9, [fp]
 8000a62:	a809      	add	r0, sp, #36	; 0x24
 8000a64:	4c56      	ldr	r4, [pc, #344]	; (8000bc0 <cmox_cipherMode_setKey+0x3c4>)
 8000a66:	e9c0 e900 	strd	lr, r9, [r0]
 8000a6a:	7820      	ldrb	r0, [r4, #0]
 8000a6c:	2800      	cmp	r0, #0
 8000a6e:	bf0c      	ite	eq
 8000a70:	f04f 0900 	moveq.w	r9, #0
 8000a74:	f04f 0904 	movne.w	r9, #4
 8000a78:	f10d 0e24 	add.w	lr, sp, #36	; 0x24
 8000a7c:	f856 4009 	ldr.w	r4, [r6, r9]
 8000a80:	f85e 7009 	ldr.w	r7, [lr, r9]
 8000a84:	443c      	add	r4, r7
 8000a86:	f8c4 8000 	str.w	r8, [r4]
 8000a8a:	f04f 0801 	mov.w	r8, #1
 8000a8e:	6827      	ldr	r7, [r4, #0]
 8000a90:	f8c4 8008 	str.w	r8, [r4, #8]
 8000a94:	f8d6 9000 	ldr.w	r9, [r6]
 8000a98:	f8d6 8004 	ldr.w	r8, [r6, #4]
 8000a9c:	7fcc      	ldrb	r4, [r1, #31]
 8000a9e:	9400      	str	r4, [sp, #0]
 8000aa0:	ea88 0707 	eor.w	r7, r8, r7
 8000aa4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8000aa6:	407c      	eors	r4, r7
 8000aa8:	f8de 7004 	ldr.w	r7, [lr, #4]
 8000aac:	ea87 0709 	eor.w	r7, r7, r9
 8000ab0:	f084 0404 	eor.w	r4, r4, #4
 8000ab4:	f087 0efc 	eor.w	lr, r7, #252	; 0xfc
 8000ab8:	4474      	add	r4, lr
 8000aba:	9f00      	ldr	r7, [sp, #0]
 8000abc:	f084 0e0b 	eor.w	lr, r4, #11
 8000ac0:	44be      	add	lr, r7
 8000ac2:	f88c e01f 	strb.w	lr, [ip, #31]
 8000ac6:	f04f 0e00 	mov.w	lr, #0
 8000aca:	f811 400e 	ldrb.w	r4, [r1, lr]
 8000ace:	f80c 400e 	strb.w	r4, [ip, lr]
 8000ad2:	f10e 0e01 	add.w	lr, lr, #1
 8000ad6:	f1be 0f10 	cmp.w	lr, #16
 8000ada:	d3f6      	bcc.n	8000aca <cmox_cipherMode_setKey+0x2ce>
 8000adc:	e9db 4700 	ldrd	r4, r7, [fp]
 8000ae0:	f10d 0e24 	add.w	lr, sp, #36	; 0x24
 8000ae4:	2800      	cmp	r0, #0
 8000ae6:	e9ce 4700 	strd	r4, r7, [lr]
 8000aea:	bf0c      	ite	eq
 8000aec:	2700      	moveq	r7, #0
 8000aee:	2704      	movne	r7, #4
 8000af0:	463c      	mov	r4, r7
 8000af2:	59f7      	ldr	r7, [r6, r7]
 8000af4:	f85e 4004 	ldr.w	r4, [lr, r4]
 8000af8:	19e4      	adds	r4, r4, r7
 8000afa:	6025      	str	r5, [r4, #0]
 8000afc:	2501      	movs	r5, #1
 8000afe:	6827      	ldr	r7, [r4, #0]
 8000b00:	60a5      	str	r5, [r4, #8]
 8000b02:	ea88 0707 	eor.w	r7, r8, r7
 8000b06:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8000b08:	7c4c      	ldrb	r4, [r1, #17]
 8000b0a:	406f      	eors	r7, r5
 8000b0c:	f8de 5004 	ldr.w	r5, [lr, #4]
 8000b10:	ea85 0509 	eor.w	r5, r5, r9
 8000b14:	f087 0704 	eor.w	r7, r7, #4
 8000b18:	f085 05fc 	eor.w	r5, r5, #252	; 0xfc
 8000b1c:	442f      	add	r7, r5
 8000b1e:	f087 0785 	eor.w	r7, r7, #133	; 0x85
 8000b22:	193f      	adds	r7, r7, r4
 8000b24:	f88c 7011 	strb.w	r7, [ip, #17]
 8000b28:	ad09      	add	r5, sp, #36	; 0x24
 8000b2a:	e9db 4700 	ldrd	r4, r7, [fp]
 8000b2e:	e9c5 4700 	strd	r4, r7, [r5]
 8000b32:	2800      	cmp	r0, #0
 8000b34:	bf0e      	itee	eq
 8000b36:	f04f 0b00 	moveq.w	fp, #0
 8000b3a:	2004      	movne	r0, #4
 8000b3c:	4683      	movne	fp, r0
 8000b3e:	5836      	ldr	r6, [r6, r0]
 8000b40:	f855 000b 	ldr.w	r0, [r5, fp]
 8000b44:	1986      	adds	r6, r0, r6
 8000b46:	6033      	str	r3, [r6, #0]
 8000b48:	2301      	movs	r3, #1
 8000b4a:	6830      	ldr	r0, [r6, #0]
 8000b4c:	60b3      	str	r3, [r6, #8]
 8000b4e:	ea88 0000 	eor.w	r0, r8, r0
 8000b52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b54:	7c0e      	ldrb	r6, [r1, #16]
 8000b56:	4058      	eors	r0, r3
 8000b58:	f080 0804 	eor.w	r8, r0, #4
 8000b5c:	6868      	ldr	r0, [r5, #4]
 8000b5e:	ea80 0009 	eor.w	r0, r0, r9
 8000b62:	f080 00fc 	eor.w	r0, r0, #252	; 0xfc
 8000b66:	4440      	add	r0, r8
 8000b68:	f080 0852 	eor.w	r8, r0, #82	; 0x52
 8000b6c:	44b0      	add	r8, r6
 8000b6e:	f88c 8010 	strb.w	r8, [ip, #16]
 8000b72:	2012      	movs	r0, #18
 8000b74:	5c0b      	ldrb	r3, [r1, r0]
 8000b76:	f80c 3000 	strb.w	r3, [ip, r0]
 8000b7a:	1c40      	adds	r0, r0, #1
 8000b7c:	281f      	cmp	r0, #31
 8000b7e:	d3f9      	bcc.n	8000b74 <cmox_cipherMode_setKey+0x378>
 8000b80:	e6dd      	b.n	800093e <cmox_cipherMode_setKey+0x142>
 8000b82:	4610      	mov	r0, r2
 8000b84:	e00d      	b.n	8000ba2 <cmox_cipherMode_setKey+0x3a6>
 8000b86:	682b      	ldr	r3, [r5, #0]
 8000b88:	685e      	ldr	r6, [r3, #4]
 8000b8a:	4652      	mov	r2, sl
 8000b8c:	a901      	add	r1, sp, #4
 8000b8e:	4628      	mov	r0, r5
 8000b90:	47b0      	blx	r6
 8000b92:	68a8      	ldr	r0, [r5, #8]
 8000b94:	f8c5 a004 	str.w	sl, [r5, #4]
 8000b98:	f040 0004 	orr.w	r0, r0, #4
 8000b9c:	60a8      	str	r0, [r5, #8]
 8000b9e:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000ba2:	b00d      	add	sp, #52	; 0x34
 8000ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ba8:	00010003 	.word	0x00010003
 8000bac:	f78e2254 	.word	0xf78e2254
 8000bb0:	2e8f137d 	.word	0x2e8f137d
 8000bb4:	910e0ba4 	.word	0x910e0ba4
 8000bb8:	0800d9dc 	.word	0x0800d9dc
 8000bbc:	08000c24 	.word	0x08000c24
 8000bc0:	20000188 	.word	0x20000188

08000bc4 <cmox_cipherMode_setIV>:
 8000bc4:	b530      	push	{r4, r5, lr}
 8000bc6:	9c03      	ldr	r4, [sp, #12]
 8000bc8:	2c00      	cmp	r4, #0
 8000bca:	bf18      	it	ne
 8000bcc:	2a00      	cmpne	r2, #0
 8000bce:	d101      	bne.n	8000bd4 <cmox_cipherMode_setIV+0x10>
 8000bd0:	4809      	ldr	r0, [pc, #36]	; (8000bf8 <cmox_cipherMode_setIV+0x34>)
 8000bd2:	bd30      	pop	{r4, r5, pc}
 8000bd4:	2400      	movs	r4, #0
 8000bd6:	e004      	b.n	8000be2 <cmox_cipherMode_setIV+0x1e>
 8000bd8:	5955      	ldr	r5, [r2, r5]
 8000bda:	ba2d      	rev	r5, r5
 8000bdc:	f841 5024 	str.w	r5, [r1, r4, lsl #2]
 8000be0:	1c64      	adds	r4, r4, #1
 8000be2:	00a5      	lsls	r5, r4, #2
 8000be4:	429d      	cmp	r5, r3
 8000be6:	d3f7      	bcc.n	8000bd8 <cmox_cipherMode_setIV+0x14>
 8000be8:	6841      	ldr	r1, [r0, #4]
 8000bea:	f041 0101 	orr.w	r1, r1, #1
 8000bee:	6041      	str	r1, [r0, #4]
 8000bf0:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000bf4:	bd30      	pop	{r4, r5, pc}
 8000bf6:	bf00      	nop
 8000bf8:	00010003 	.word	0x00010003

08000bfc <cmox_cipher_setTagLen_empty>:
 8000bfc:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000c00:	4770      	bx	lr

08000c02 <cmox_cipher_setPayloadLen_empty>:
 8000c02:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000c06:	4770      	bx	lr

08000c08 <cmox_cipher_setADLen_empty>:
 8000c08:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000c0c:	4770      	bx	lr

08000c0e <cmox_cipher_appendAD_empty>:
 8000c0e:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8000c12:	4770      	bx	lr

08000c14 <cmox_cipher_generateTag_empty>:
 8000c14:	4800      	ldr	r0, [pc, #0]	; (8000c18 <cmox_cipher_generateTag_empty+0x4>)
 8000c16:	4770      	bx	lr
 8000c18:	00010002 	.word	0x00010002

08000c1c <cmox_cipher_verifyTag_empty>:
 8000c1c:	4800      	ldr	r0, [pc, #0]	; (8000c20 <cmox_cipher_verifyTag_empty+0x4>)
 8000c1e:	4770      	bx	lr
 8000c20:	00010002 	.word	0x00010002
 8000c24:	0101b004 	.word	0x0101b004
 8000c28:	45011700 	.word	0x45011700

08000c2c <convert_block_2_words>:
 8000c2c:	b530      	push	{r4, r5, lr}
 8000c2e:	2200      	movs	r2, #0
 8000c30:	eb00 0382 	add.w	r3, r0, r2, lsl #2
 8000c34:	785d      	ldrb	r5, [r3, #1]
 8000c36:	781c      	ldrb	r4, [r3, #0]
 8000c38:	042d      	lsls	r5, r5, #16
 8000c3a:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
 8000c3e:	789c      	ldrb	r4, [r3, #2]
 8000c40:	78db      	ldrb	r3, [r3, #3]
 8000c42:	ea45 2504 	orr.w	r5, r5, r4, lsl #8
 8000c46:	431d      	orrs	r5, r3
 8000c48:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
 8000c4c:	1c52      	adds	r2, r2, #1
 8000c4e:	2a04      	cmp	r2, #4
 8000c50:	d3ee      	bcc.n	8000c30 <convert_block_2_words+0x4>
 8000c52:	bd30      	pop	{r4, r5, pc}

08000c54 <convert_block_2_bytes>:
 8000c54:	b530      	push	{r4, r5, lr}
 8000c56:	2200      	movs	r2, #0
 8000c58:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8000c5c:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
 8000c60:	70dc      	strb	r4, [r3, #3]
 8000c62:	f850 5022 	ldr.w	r5, [r0, r2, lsl #2]
 8000c66:	0a2d      	lsrs	r5, r5, #8
 8000c68:	709d      	strb	r5, [r3, #2]
 8000c6a:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
 8000c6e:	0c24      	lsrs	r4, r4, #16
 8000c70:	705c      	strb	r4, [r3, #1]
 8000c72:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
 8000c76:	1c52      	adds	r2, r2, #1
 8000c78:	0e24      	lsrs	r4, r4, #24
 8000c7a:	2a04      	cmp	r2, #4
 8000c7c:	701c      	strb	r4, [r3, #0]
 8000c7e:	d3eb      	bcc.n	8000c58 <convert_block_2_bytes+0x4>
 8000c80:	bd30      	pop	{r4, r5, pc}

08000c82 <xor_blocks>:
 8000c82:	b510      	push	{r4, lr}
 8000c84:	2200      	movs	r2, #0
 8000c86:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8000c8a:	f851 4022 	ldr.w	r4, [r1, r2, lsl #2]
 8000c8e:	4063      	eors	r3, r4
 8000c90:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8000c94:	1c52      	adds	r2, r2, #1
 8000c96:	2a04      	cmp	r2, #4
 8000c98:	d3f5      	bcc.n	8000c86 <xor_blocks+0x4>
 8000c9a:	bd10      	pop	{r4, pc}

08000c9c <copy_block>:
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8000ca2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8000ca6:	1c52      	adds	r2, r2, #1
 8000ca8:	2a04      	cmp	r2, #4
 8000caa:	d3f8      	bcc.n	8000c9e <copy_block+0x2>
 8000cac:	4770      	bx	lr
	...

08000cb0 <cmox_hash_compute>:
 8000cb0:	b538      	push	{r3, r4, r5, lr}
 8000cb2:	460c      	mov	r4, r1
 8000cb4:	4611      	mov	r1, r2
 8000cb6:	2800      	cmp	r0, #0
 8000cb8:	461a      	mov	r2, r3
 8000cba:	bf1c      	itt	ne
 8000cbc:	6805      	ldrne	r5, [r0, #0]
 8000cbe:	2d00      	cmpne	r5, #0
 8000cc0:	4b07      	ldr	r3, [pc, #28]	; (8000ce0 <cmox_hash_compute+0x30>)
 8000cc2:	d00a      	beq.n	8000cda <cmox_hash_compute+0x2a>
 8000cc4:	b14a      	cbz	r2, 8000cda <cmox_hash_compute+0x2a>
 8000cc6:	b904      	cbnz	r4, 8000cca <cmox_hash_compute+0x1a>
 8000cc8:	b939      	cbnz	r1, 8000cda <cmox_hash_compute+0x2a>
 8000cca:	9804      	ldr	r0, [sp, #16]
 8000ccc:	b128      	cbz	r0, 8000cda <cmox_hash_compute+0x2a>
 8000cce:	9b05      	ldr	r3, [sp, #20]
 8000cd0:	9300      	str	r3, [sp, #0]
 8000cd2:	4603      	mov	r3, r0
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	47a8      	blx	r5
 8000cd8:	4603      	mov	r3, r0
 8000cda:	4618      	mov	r0, r3
 8000cdc:	bd32      	pop	{r1, r4, r5, pc}
 8000cde:	bf00      	nop
 8000ce0:	00020003 	.word	0x00020003

08000ce4 <cmox_hash_common_compute>:
 8000ce4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ce8:	4604      	mov	r4, r0
 8000cea:	460e      	mov	r6, r1
 8000cec:	6821      	ldr	r1, [r4, #0]
 8000cee:	4617      	mov	r7, r2
 8000cf0:	684a      	ldr	r2, [r1, #4]
 8000cf2:	461d      	mov	r5, r3
 8000cf4:	4790      	blx	r2
 8000cf6:	4680      	mov	r8, r0
 8000cf8:	f5b8 3f00 	cmp.w	r8, #131072	; 0x20000
 8000cfc:	d119      	bne.n	8000d32 <cmox_hash_common_compute+0x4e>
 8000cfe:	6822      	ldr	r2, [r4, #0]
 8000d00:	9906      	ldr	r1, [sp, #24]
 8000d02:	6893      	ldr	r3, [r2, #8]
 8000d04:	4620      	mov	r0, r4
 8000d06:	4798      	blx	r3
 8000d08:	4680      	mov	r8, r0
 8000d0a:	f5b8 3f00 	cmp.w	r8, #131072	; 0x20000
 8000d0e:	d110      	bne.n	8000d32 <cmox_hash_common_compute+0x4e>
 8000d10:	6823      	ldr	r3, [r4, #0]
 8000d12:	4631      	mov	r1, r6
 8000d14:	68de      	ldr	r6, [r3, #12]
 8000d16:	463a      	mov	r2, r7
 8000d18:	4620      	mov	r0, r4
 8000d1a:	47b0      	blx	r6
 8000d1c:	4680      	mov	r8, r0
 8000d1e:	f5b8 3f00 	cmp.w	r8, #131072	; 0x20000
 8000d22:	d106      	bne.n	8000d32 <cmox_hash_common_compute+0x4e>
 8000d24:	6823      	ldr	r3, [r4, #0]
 8000d26:	9a07      	ldr	r2, [sp, #28]
 8000d28:	4629      	mov	r1, r5
 8000d2a:	691d      	ldr	r5, [r3, #16]
 8000d2c:	4620      	mov	r0, r4
 8000d2e:	47a8      	blx	r5
 8000d30:	4680      	mov	r8, r0
 8000d32:	6821      	ldr	r1, [r4, #0]
 8000d34:	680a      	ldr	r2, [r1, #0]
 8000d36:	4620      	mov	r0, r4
 8000d38:	4790      	blx	r2
 8000d3a:	4640      	mov	r0, r8
 8000d3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000d40 <cmox_initialize>:
 8000d40:	b538      	push	{r3, r4, r5, lr}
 8000d42:	2800      	cmp	r0, #0
 8000d44:	bf1c      	itt	ne
 8000d46:	6801      	ldrne	r1, [r0, #0]
 8000d48:	2900      	cmpne	r1, #0
 8000d4a:	4a18      	ldr	r2, [pc, #96]	; (8000dac <cmox_initialize+0x6c>)
 8000d4c:	d123      	bne.n	8000d96 <cmox_initialize+0x56>
 8000d4e:	4b18      	ldr	r3, [pc, #96]	; (8000db0 <cmox_initialize+0x70>)
 8000d50:	681c      	ldr	r4, [r3, #0]
 8000d52:	f64f 71f0 	movw	r1, #65520	; 0xfff0
 8000d56:	400c      	ands	r4, r1
 8000d58:	f24c 2540 	movw	r5, #49728	; 0xc240
 8000d5c:	42ac      	cmp	r4, r5
 8000d5e:	bf1f      	itttt	ne
 8000d60:	681b      	ldrne	r3, [r3, #0]
 8000d62:	4019      	andne	r1, r3
 8000d64:	f24c 2470 	movwne	r4, #49776	; 0xc270
 8000d68:	42a1      	cmpne	r1, r4
 8000d6a:	d112      	bne.n	8000d92 <cmox_initialize+0x52>
 8000d6c:	4d11      	ldr	r5, [pc, #68]	; (8000db4 <cmox_initialize+0x74>)
 8000d6e:	6829      	ldr	r1, [r5, #0]
 8000d70:	b979      	cbnz	r1, 8000d92 <cmox_initialize+0x52>
 8000d72:	4911      	ldr	r1, [pc, #68]	; (8000db8 <cmox_initialize+0x78>)
 8000d74:	680b      	ldr	r3, [r1, #0]
 8000d76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000d7a:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8000d7e:	bf1f      	itttt	ne
 8000d80:	6809      	ldrne	r1, [r1, #0]
 8000d82:	f3c1 010b 	ubfxne	r1, r1, #0, #12
 8000d86:	f240 4383 	movwne	r3, #1155	; 0x483
 8000d8a:	4299      	cmpne	r1, r3
 8000d8c:	bf04      	itt	eq
 8000d8e:	2101      	moveq	r1, #1
 8000d90:	7011      	strbeq	r1, [r2, #0]
 8000d92:	b928      	cbnz	r0, 8000da0 <cmox_initialize+0x60>
 8000d94:	e005      	b.n	8000da2 <cmox_initialize+0x62>
 8000d96:	4b09      	ldr	r3, [pc, #36]	; (8000dbc <cmox_initialize+0x7c>)
 8000d98:	4299      	cmp	r1, r3
 8000d9a:	bf04      	itt	eq
 8000d9c:	2101      	moveq	r1, #1
 8000d9e:	7011      	strbeq	r1, [r2, #0]
 8000da0:	6840      	ldr	r0, [r0, #4]
 8000da2:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8000da6:	f001 ba85 	b.w	80022b4 <cmox_ll_init>
 8000daa:	bf00      	nop
 8000dac:	20000188 	.word	0x20000188
 8000db0:	e000ed00 	.word	0xe000ed00
 8000db4:	e0042000 	.word	0xe0042000
 8000db8:	5c001000 	.word	0x5c001000
 8000dbc:	48370000 	.word	0x48370000

08000dc0 <cmox_sha256_cleanup>:
 8000dc0:	b500      	push	{lr}
 8000dc2:	b081      	sub	sp, #4
 8000dc4:	6801      	ldr	r1, [r0, #0]
 8000dc6:	4a07      	ldr	r2, [pc, #28]	; (8000de4 <cmox_sha256_cleanup+0x24>)
 8000dc8:	4291      	cmp	r1, r2
 8000dca:	d100      	bne.n	8000dce <cmox_sha256_cleanup+0xe>
 8000dcc:	b910      	cbnz	r0, 8000dd4 <cmox_sha256_cleanup+0x14>
 8000dce:	4806      	ldr	r0, [pc, #24]	; (8000de8 <cmox_sha256_cleanup+0x28>)
 8000dd0:	b001      	add	sp, #4
 8000dd2:	bd00      	pop	{pc}
 8000dd4:	217c      	movs	r1, #124	; 0x7c
 8000dd6:	f00b ffc4 	bl	800cd62 <__aeabi_memclr>
 8000dda:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8000dde:	b001      	add	sp, #4
 8000de0:	bd00      	pop	{pc}
 8000de2:	bf00      	nop
 8000de4:	08000ecc 	.word	0x08000ecc
 8000de8:	00020003 	.word	0x00020003

08000dec <cmox_sha256_init>:
 8000dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000df0:	4a0b      	ldr	r2, [pc, #44]	; (8000e20 <cmox_sha256_init+0x34>)
 8000df2:	e892 51f8 	ldmia.w	r2, {r3, r4, r5, r6, r7, r8, ip, lr}
 8000df6:	b088      	sub	sp, #32
 8000df8:	4669      	mov	r1, sp
 8000dfa:	e881 51f8 	stmia.w	r1, {r3, r4, r5, r6, r7, r8, ip, lr}
 8000dfe:	6802      	ldr	r2, [r0, #0]
 8000e00:	4b08      	ldr	r3, [pc, #32]	; (8000e24 <cmox_sha256_init+0x38>)
 8000e02:	429a      	cmp	r2, r3
 8000e04:	d100      	bne.n	8000e08 <cmox_sha256_init+0x1c>
 8000e06:	b918      	cbnz	r0, 8000e10 <cmox_sha256_init+0x24>
 8000e08:	4807      	ldr	r0, [pc, #28]	; (8000e28 <cmox_sha256_init+0x3c>)
 8000e0a:	b008      	add	sp, #32
 8000e0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e10:	2220      	movs	r2, #32
 8000e12:	3008      	adds	r0, #8
 8000e14:	f000 fd23 	bl	800185e <cmox_md_init>
 8000e18:	b008      	add	sp, #32
 8000e1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e1e:	bf00      	nop
 8000e20:	08000eac 	.word	0x08000eac
 8000e24:	08000ecc 	.word	0x08000ecc
 8000e28:	00020003 	.word	0x00020003

08000e2c <cmox_sha256_setTagLen>:
 8000e2c:	2921      	cmp	r1, #33	; 0x21
 8000e2e:	d204      	bcs.n	8000e3a <cmox_sha256_setTagLen+0xe>
 8000e30:	6802      	ldr	r2, [r0, #0]
 8000e32:	4b04      	ldr	r3, [pc, #16]	; (8000e44 <cmox_sha256_setTagLen+0x18>)
 8000e34:	429a      	cmp	r2, r3
 8000e36:	d100      	bne.n	8000e3a <cmox_sha256_setTagLen+0xe>
 8000e38:	b908      	cbnz	r0, 8000e3e <cmox_sha256_setTagLen+0x12>
 8000e3a:	4803      	ldr	r0, [pc, #12]	; (8000e48 <cmox_sha256_setTagLen+0x1c>)
 8000e3c:	4770      	bx	lr
 8000e3e:	3008      	adds	r0, #8
 8000e40:	f000 bd1c 	b.w	800187c <cmox_md_setTagSize>
 8000e44:	08000ecc 	.word	0x08000ecc
 8000e48:	00020003 	.word	0x00020003

08000e4c <cmox_sha256_append>:
 8000e4c:	b410      	push	{r4}
 8000e4e:	b081      	sub	sp, #4
 8000e50:	4613      	mov	r3, r2
 8000e52:	6802      	ldr	r2, [r0, #0]
 8000e54:	4c07      	ldr	r4, [pc, #28]	; (8000e74 <cmox_sha256_append+0x28>)
 8000e56:	42a2      	cmp	r2, r4
 8000e58:	d100      	bne.n	8000e5c <cmox_sha256_append+0x10>
 8000e5a:	b918      	cbnz	r0, 8000e64 <cmox_sha256_append+0x18>
 8000e5c:	b001      	add	sp, #4
 8000e5e:	bc10      	pop	{r4}
 8000e60:	4805      	ldr	r0, [pc, #20]	; (8000e78 <cmox_sha256_append+0x2c>)
 8000e62:	4770      	bx	lr
 8000e64:	b001      	add	sp, #4
 8000e66:	f100 0224 	add.w	r2, r0, #36	; 0x24
 8000e6a:	bc10      	pop	{r4}
 8000e6c:	3008      	adds	r0, #8
 8000e6e:	f000 bd09 	b.w	8001884 <cmox_md_append>
 8000e72:	bf00      	nop
 8000e74:	08000ecc 	.word	0x08000ecc
 8000e78:	00020003 	.word	0x00020003

08000e7c <cmox_sha256_generateTag>:
 8000e7c:	b410      	push	{r4}
 8000e7e:	b081      	sub	sp, #4
 8000e80:	4613      	mov	r3, r2
 8000e82:	6802      	ldr	r2, [r0, #0]
 8000e84:	4c07      	ldr	r4, [pc, #28]	; (8000ea4 <cmox_sha256_generateTag+0x28>)
 8000e86:	42a2      	cmp	r2, r4
 8000e88:	d100      	bne.n	8000e8c <cmox_sha256_generateTag+0x10>
 8000e8a:	b918      	cbnz	r0, 8000e94 <cmox_sha256_generateTag+0x18>
 8000e8c:	b001      	add	sp, #4
 8000e8e:	bc10      	pop	{r4}
 8000e90:	4805      	ldr	r0, [pc, #20]	; (8000ea8 <cmox_sha256_generateTag+0x2c>)
 8000e92:	4770      	bx	lr
 8000e94:	460a      	mov	r2, r1
 8000e96:	b001      	add	sp, #4
 8000e98:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8000e9c:	bc10      	pop	{r4}
 8000e9e:	3008      	adds	r0, #8
 8000ea0:	f000 bd44 	b.w	800192c <cmox_md_generateTag>
 8000ea4:	08000ecc 	.word	0x08000ecc
 8000ea8:	00020003 	.word	0x00020003
 8000eac:	6a09e667 	.word	0x6a09e667
 8000eb0:	bb67ae85 	.word	0xbb67ae85
 8000eb4:	3c6ef372 	.word	0x3c6ef372
 8000eb8:	a54ff53a 	.word	0xa54ff53a
 8000ebc:	510e527f 	.word	0x510e527f
 8000ec0:	9b05688c 	.word	0x9b05688c
 8000ec4:	1f83d9ab 	.word	0x1f83d9ab
 8000ec8:	5be0cd19 	.word	0x5be0cd19

08000ecc <CMOX_SHA256_VTABLE>:
 8000ecc:	08000dc1 08000ded 08000e2d 08000e4d     ........-...M...
 8000edc:	08000e7d                                }...

08000ee0 <cmox_sha256_compute>:
 8000ee0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ee2:	b0a3      	sub	sp, #140	; 0x8c
 8000ee4:	4604      	mov	r4, r0
 8000ee6:	480b      	ldr	r0, [pc, #44]	; (8000f14 <cmox_sha256_compute+0x34>)
 8000ee8:	9002      	str	r0, [sp, #8]
 8000eea:	460d      	mov	r5, r1
 8000eec:	4616      	mov	r6, r2
 8000eee:	461f      	mov	r7, r3
 8000ef0:	4b09      	ldr	r3, [pc, #36]	; (8000f18 <cmox_sha256_compute+0x38>)
 8000ef2:	2208      	movs	r2, #8
 8000ef4:	2140      	movs	r1, #64	; 0x40
 8000ef6:	a804      	add	r0, sp, #16
 8000ef8:	f000 fcad 	bl	8001856 <cmox_md_construct>
 8000efc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8000efe:	9001      	str	r0, [sp, #4]
 8000f00:	9700      	str	r7, [sp, #0]
 8000f02:	4633      	mov	r3, r6
 8000f04:	462a      	mov	r2, r5
 8000f06:	4621      	mov	r1, r4
 8000f08:	a802      	add	r0, sp, #8
 8000f0a:	f7ff feeb 	bl	8000ce4 <cmox_hash_common_compute>
 8000f0e:	b023      	add	sp, #140	; 0x8c
 8000f10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f12:	bf00      	nop
 8000f14:	08000ecc 	.word	0x08000ecc
 8000f18:	0800daec 	.word	0x0800daec

08000f1c <cmox_sha256_transform>:
 8000f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f20:	b0c1      	sub	sp, #260	; 0x104
 8000f22:	680b      	ldr	r3, [r1, #0]
 8000f24:	ba1b      	rev	r3, r3
 8000f26:	9301      	str	r3, [sp, #4]
 8000f28:	4602      	mov	r2, r0
 8000f2a:	684b      	ldr	r3, [r1, #4]
 8000f2c:	a801      	add	r0, sp, #4
 8000f2e:	ba1b      	rev	r3, r3
 8000f30:	6043      	str	r3, [r0, #4]
 8000f32:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8000f36:	688b      	ldr	r3, [r1, #8]
 8000f38:	ba1b      	rev	r3, r3
 8000f3a:	6083      	str	r3, [r0, #8]
 8000f3c:	68cb      	ldr	r3, [r1, #12]
 8000f3e:	ba1b      	rev	r3, r3
 8000f40:	60c3      	str	r3, [r0, #12]
 8000f42:	690b      	ldr	r3, [r1, #16]
 8000f44:	ba1b      	rev	r3, r3
 8000f46:	6103      	str	r3, [r0, #16]
 8000f48:	694b      	ldr	r3, [r1, #20]
 8000f4a:	ba1b      	rev	r3, r3
 8000f4c:	6143      	str	r3, [r0, #20]
 8000f4e:	698b      	ldr	r3, [r1, #24]
 8000f50:	ba1b      	rev	r3, r3
 8000f52:	6183      	str	r3, [r0, #24]
 8000f54:	69cb      	ldr	r3, [r1, #28]
 8000f56:	ba1b      	rev	r3, r3
 8000f58:	61c3      	str	r3, [r0, #28]
 8000f5a:	6a0b      	ldr	r3, [r1, #32]
 8000f5c:	ba1b      	rev	r3, r3
 8000f5e:	6203      	str	r3, [r0, #32]
 8000f60:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8000f62:	ba1b      	rev	r3, r3
 8000f64:	6243      	str	r3, [r0, #36]	; 0x24
 8000f66:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8000f68:	ba1b      	rev	r3, r3
 8000f6a:	6283      	str	r3, [r0, #40]	; 0x28
 8000f6c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8000f6e:	ba1b      	rev	r3, r3
 8000f70:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000f72:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 8000f74:	ba1b      	rev	r3, r3
 8000f76:	6303      	str	r3, [r0, #48]	; 0x30
 8000f78:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8000f7a:	ba1b      	rev	r3, r3
 8000f7c:	6343      	str	r3, [r0, #52]	; 0x34
 8000f7e:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 8000f80:	ba1b      	rev	r3, r3
 8000f82:	6383      	str	r3, [r0, #56]	; 0x38
 8000f84:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
 8000f86:	ba09      	rev	r1, r1
 8000f88:	63c1      	str	r1, [r0, #60]	; 0x3c
 8000f8a:	2018      	movs	r0, #24
 8000f8c:	f85c 4c08 	ldr.w	r4, [ip, #-8]
 8000f90:	ea4f 41f4 	mov.w	r1, r4, ror #19
 8000f94:	ea91 4374 	eors.w	r3, r1, r4, ror #17
 8000f98:	f85c 1c3c 	ldr.w	r1, [ip, #-60]
 8000f9c:	ea83 2394 	eor.w	r3, r3, r4, lsr #10
 8000fa0:	ea4f 47b1 	mov.w	r7, r1, ror #18
 8000fa4:	f85c 4c1c 	ldr.w	r4, [ip, #-28]
 8000fa8:	ea97 16f1 	eors.w	r6, r7, r1, ror #7
 8000fac:	4423      	add	r3, r4
 8000fae:	ea86 06d1 	eor.w	r6, r6, r1, lsr #3
 8000fb2:	18f3      	adds	r3, r6, r3
 8000fb4:	f85c 6c40 	ldr.w	r6, [ip, #-64]
 8000fb8:	18f3      	adds	r3, r6, r3
 8000fba:	f8cc 3000 	str.w	r3, [ip]
 8000fbe:	f85c 4c04 	ldr.w	r4, [ip, #-4]
 8000fc2:	ea4f 46f4 	mov.w	r6, r4, ror #19
 8000fc6:	ea96 4374 	eors.w	r3, r6, r4, ror #17
 8000fca:	f85c 6c38 	ldr.w	r6, [ip, #-56]
 8000fce:	ea83 2394 	eor.w	r3, r3, r4, lsr #10
 8000fd2:	ea4f 4ab6 	mov.w	sl, r6, ror #18
 8000fd6:	f85c 4c18 	ldr.w	r4, [ip, #-24]
 8000fda:	ea8a 17f6 	eor.w	r7, sl, r6, ror #7
 8000fde:	4423      	add	r3, r4
 8000fe0:	ea87 07d6 	eor.w	r7, r7, r6, lsr #3
 8000fe4:	18fb      	adds	r3, r7, r3
 8000fe6:	18c9      	adds	r1, r1, r3
 8000fe8:	f8cc 1004 	str.w	r1, [ip, #4]
 8000fec:	1e40      	subs	r0, r0, #1
 8000fee:	f10c 0c08 	add.w	ip, ip, #8
 8000ff2:	d1cb      	bne.n	8000f8c <cmox_sha256_transform+0x70>
 8000ff4:	4610      	mov	r0, r2
 8000ff6:	9200      	str	r2, [sp, #0]
 8000ff8:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8000ffa:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8000ffc:	f8d0 e060 	ldr.w	lr, [r0, #96]	; 0x60
 8001000:	f8d0 8070 	ldr.w	r8, [r0, #112]	; 0x70
 8001004:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8001006:	6f44      	ldr	r4, [r0, #116]	; 0x74
 8001008:	f8d0 a068 	ldr.w	sl, [r0, #104]	; 0x68
 800100c:	6f85      	ldr	r5, [r0, #120]	; 0x78
 800100e:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8001104 <cmox_sha256_transform+0x1e8>
 8001012:	f10d 0c04 	add.w	ip, sp, #4
 8001016:	2020      	movs	r0, #32
 8001018:	ea4f 16b3 	mov.w	r6, r3, ror #6
 800101c:	ea86 26f3 	eor.w	r6, r6, r3, ror #11
 8001020:	ea86 6673 	eor.w	r6, r6, r3, ror #25
 8001024:	1975      	adds	r5, r6, r5
 8001026:	ea84 0608 	eor.w	r6, r4, r8
 800102a:	401e      	ands	r6, r3
 800102c:	4066      	eors	r6, r4
 800102e:	1975      	adds	r5, r6, r5
 8001030:	f859 6b04 	ldr.w	r6, [r9], #4
 8001034:	f85c 7b04 	ldr.w	r7, [ip], #4
 8001038:	1975      	adds	r5, r6, r5
 800103a:	197e      	adds	r6, r7, r5
 800103c:	ea4f 07b1 	mov.w	r7, r1, ror #2
 8001040:	ea4e 0b01 	orr.w	fp, lr, r1
 8001044:	ea87 3771 	eor.w	r7, r7, r1, ror #13
 8001048:	ea0e 0501 	and.w	r5, lr, r1
 800104c:	ea0b 0b02 	and.w	fp, fp, r2
 8001050:	ea87 57b1 	eor.w	r7, r7, r1, ror #22
 8001054:	ea4b 0505 	orr.w	r5, fp, r5
 8001058:	19ef      	adds	r7, r5, r7
 800105a:	4645      	mov	r5, r8
 800105c:	eb06 080a 	add.w	r8, r6, sl
 8001060:	4692      	mov	sl, r2
 8001062:	4672      	mov	r2, lr
 8001064:	eb07 0e06 	add.w	lr, r7, r6
 8001068:	ea4f 16b8 	mov.w	r6, r8, ror #6
 800106c:	ea86 26f8 	eor.w	r6, r6, r8, ror #11
 8001070:	ea86 6678 	eor.w	r6, r6, r8, ror #25
 8001074:	1934      	adds	r4, r6, r4
 8001076:	ea85 0603 	eor.w	r6, r5, r3
 800107a:	ea06 0608 	and.w	r6, r6, r8
 800107e:	406e      	eors	r6, r5
 8001080:	1934      	adds	r4, r6, r4
 8001082:	f859 6b04 	ldr.w	r6, [r9], #4
 8001086:	f85c 7b04 	ldr.w	r7, [ip], #4
 800108a:	1934      	adds	r4, r6, r4
 800108c:	193e      	adds	r6, r7, r4
 800108e:	ea4f 07be 	mov.w	r7, lr, ror #2
 8001092:	ea41 0b0e 	orr.w	fp, r1, lr
 8001096:	ea87 377e 	eor.w	r7, r7, lr, ror #13
 800109a:	ea01 040e 	and.w	r4, r1, lr
 800109e:	ea0b 0b02 	and.w	fp, fp, r2
 80010a2:	ea87 57be 	eor.w	r7, r7, lr, ror #22
 80010a6:	ea4b 0404 	orr.w	r4, fp, r4
 80010aa:	19e7      	adds	r7, r4, r7
 80010ac:	461c      	mov	r4, r3
 80010ae:	eb06 030a 	add.w	r3, r6, sl
 80010b2:	4692      	mov	sl, r2
 80010b4:	460a      	mov	r2, r1
 80010b6:	19b9      	adds	r1, r7, r6
 80010b8:	1e40      	subs	r0, r0, #1
 80010ba:	d1ad      	bne.n	8001018 <cmox_sha256_transform+0xfc>
 80010bc:	9800      	ldr	r0, [sp, #0]
 80010be:	6dc6      	ldr	r6, [r0, #92]	; 0x5c
 80010c0:	4431      	add	r1, r6
 80010c2:	65c1      	str	r1, [r0, #92]	; 0x5c
 80010c4:	9900      	ldr	r1, [sp, #0]
 80010c6:	6e08      	ldr	r0, [r1, #96]	; 0x60
 80010c8:	4470      	add	r0, lr
 80010ca:	6608      	str	r0, [r1, #96]	; 0x60
 80010cc:	9800      	ldr	r0, [sp, #0]
 80010ce:	6e41      	ldr	r1, [r0, #100]	; 0x64
 80010d0:	1852      	adds	r2, r2, r1
 80010d2:	6642      	str	r2, [r0, #100]	; 0x64
 80010d4:	9900      	ldr	r1, [sp, #0]
 80010d6:	6e88      	ldr	r0, [r1, #104]	; 0x68
 80010d8:	4450      	add	r0, sl
 80010da:	6688      	str	r0, [r1, #104]	; 0x68
 80010dc:	9800      	ldr	r0, [sp, #0]
 80010de:	6ec1      	ldr	r1, [r0, #108]	; 0x6c
 80010e0:	185b      	adds	r3, r3, r1
 80010e2:	66c3      	str	r3, [r0, #108]	; 0x6c
 80010e4:	9900      	ldr	r1, [sp, #0]
 80010e6:	6f08      	ldr	r0, [r1, #112]	; 0x70
 80010e8:	4440      	add	r0, r8
 80010ea:	6708      	str	r0, [r1, #112]	; 0x70
 80010ec:	9800      	ldr	r0, [sp, #0]
 80010ee:	6f41      	ldr	r1, [r0, #116]	; 0x74
 80010f0:	1864      	adds	r4, r4, r1
 80010f2:	6744      	str	r4, [r0, #116]	; 0x74
 80010f4:	9900      	ldr	r1, [sp, #0]
 80010f6:	6f88      	ldr	r0, [r1, #120]	; 0x78
 80010f8:	182d      	adds	r5, r5, r0
 80010fa:	678d      	str	r5, [r1, #120]	; 0x78
 80010fc:	b041      	add	sp, #260	; 0x104
 80010fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001102:	bf00      	nop
 8001104:	0800d9ec 	.word	0x0800d9ec

08001108 <cmox_aesFast_decrypt>:
 8001108:	e92d 4ff4 	stmdb	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800110c:	f100 050c 	add.w	r5, r0, #12
 8001110:	b08c      	sub	sp, #48	; 0x30
 8001112:	680e      	ldr	r6, [r1, #0]
 8001114:	684c      	ldr	r4, [r1, #4]
 8001116:	6842      	ldr	r2, [r0, #4]
 8001118:	68cf      	ldr	r7, [r1, #12]
 800111a:	08d3      	lsrs	r3, r2, #3
 800111c:	08d2      	lsrs	r2, r2, #3
 800111e:	00d2      	lsls	r2, r2, #3
 8001120:	f102 0818 	add.w	r8, r2, #24
 8001124:	eb05 0588 	add.w	r5, r5, r8, lsl #2
 8001128:	1cdb      	adds	r3, r3, #3
 800112a:	682a      	ldr	r2, [r5, #0]
 800112c:	4056      	eors	r6, r2
 800112e:	686a      	ldr	r2, [r5, #4]
 8001130:	ea82 0e04 	eor.w	lr, r2, r4
 8001134:	688c      	ldr	r4, [r1, #8]
 8001136:	68aa      	ldr	r2, [r5, #8]
 8001138:	68e9      	ldr	r1, [r5, #12]
 800113a:	9300      	str	r3, [sp, #0]
 800113c:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 8001140:	4054      	eors	r4, r2
 8001142:	404f      	eors	r7, r1
 8001144:	f1a0 0514 	sub.w	r5, r0, #20
 8001148:	f8df 8290 	ldr.w	r8, [pc, #656]	; 80013dc <cmox_aesFast_decrypt+0x2d4>
 800114c:	e056      	b.n	80011fc <cmox_aesFast_decrypt+0xf4>
 800114e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8001150:	f858 7020 	ldr.w	r7, [r8, r0, lsl #2]
 8001154:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8001158:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 800115c:	f858 1021 	ldr.w	r1, [r8, r1, lsl #2]
 8001160:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8001164:	ea4f 2037 	mov.w	r0, r7, ror #8
 8001168:	f858 702b 	ldr.w	r7, [r8, fp, lsl #2]
 800116c:	4070      	eors	r0, r6
 800116e:	ea90 4037 	eors.w	r0, r0, r7, ror #16
 8001172:	ea90 6031 	eors.w	r0, r0, r1, ror #24
 8001176:	ea82 0600 	eor.w	r6, r2, r0
 800117a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800117c:	f858 1020 	ldr.w	r1, [r8, r0, lsl #2]
 8001180:	f858 202e 	ldr.w	r2, [r8, lr, lsl #2]
 8001184:	ea4f 2031 	mov.w	r0, r1, ror #8
 8001188:	ea4f 4132 	mov.w	r1, r2, ror #16
 800118c:	ea4f 6233 	mov.w	r2, r3, ror #24
 8001190:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8001194:	4058      	eors	r0, r3
 8001196:	4048      	eors	r0, r1
 8001198:	ea82 0100 	eor.w	r1, r2, r0
 800119c:	6868      	ldr	r0, [r5, #4]
 800119e:	9b05      	ldr	r3, [sp, #20]
 80011a0:	ea80 0e01 	eor.w	lr, r0, r1
 80011a4:	9908      	ldr	r1, [sp, #32]
 80011a6:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
 80011aa:	9907      	ldr	r1, [sp, #28]
 80011ac:	ea4f 2430 	mov.w	r4, r0, ror #8
 80011b0:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
 80011b4:	9906      	ldr	r1, [sp, #24]
 80011b6:	f858 2021 	ldr.w	r2, [r8, r1, lsl #2]
 80011ba:	ea4f 6132 	mov.w	r1, r2, ror #24
 80011be:	f858 2023 	ldr.w	r2, [r8, r3, lsl #2]
 80011c2:	9b01      	ldr	r3, [sp, #4]
 80011c4:	4054      	eors	r4, r2
 80011c6:	ea94 4430 	eors.w	r4, r4, r0, ror #16
 80011ca:	68a8      	ldr	r0, [r5, #8]
 80011cc:	404c      	eors	r4, r1
 80011ce:	9904      	ldr	r1, [sp, #16]
 80011d0:	4044      	eors	r4, r0
 80011d2:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
 80011d6:	9903      	ldr	r1, [sp, #12]
 80011d8:	ea4f 2730 	mov.w	r7, r0, ror #8
 80011dc:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
 80011e0:	9902      	ldr	r1, [sp, #8]
 80011e2:	f858 2021 	ldr.w	r2, [r8, r1, lsl #2]
 80011e6:	ea4f 6132 	mov.w	r1, r2, ror #24
 80011ea:	f858 2023 	ldr.w	r2, [r8, r3, lsl #2]
 80011ee:	4057      	eors	r7, r2
 80011f0:	ea97 4730 	eors.w	r7, r7, r0, ror #16
 80011f4:	68e8      	ldr	r0, [r5, #12]
 80011f6:	404f      	eors	r7, r1
 80011f8:	4047      	eors	r7, r0
 80011fa:	3d20      	subs	r5, #32
 80011fc:	0238      	lsls	r0, r7, #8
 80011fe:	0e00      	lsrs	r0, r0, #24
 8001200:	f858 1020 	ldr.w	r1, [r8, r0, lsl #2]
 8001204:	0420      	lsls	r0, r4, #16
 8001206:	ea4f 2231 	mov.w	r2, r1, ror #8
 800120a:	0e00      	lsrs	r0, r0, #24
 800120c:	f858 1020 	ldr.w	r1, [r8, r0, lsl #2]
 8001210:	ea4f 4031 	mov.w	r0, r1, ror #16
 8001214:	fa5f f38e 	uxtb.w	r3, lr
 8001218:	f858 1023 	ldr.w	r1, [r8, r3, lsl #2]
 800121c:	0e33      	lsrs	r3, r6, #24
 800121e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8001222:	405a      	eors	r2, r3
 8001224:	4042      	eors	r2, r0
 8001226:	6928      	ldr	r0, [r5, #16]
 8001228:	ea92 6231 	eors.w	r2, r2, r1, ror #24
 800122c:	0231      	lsls	r1, r6, #8
 800122e:	0e09      	lsrs	r1, r1, #24
 8001230:	4042      	eors	r2, r0
 8001232:	f858 3021 	ldr.w	r3, [r8, r1, lsl #2]
 8001236:	0438      	lsls	r0, r7, #16
 8001238:	ea4f 2133 	mov.w	r1, r3, ror #8
 800123c:	0e00      	lsrs	r0, r0, #24
 800123e:	f858 3020 	ldr.w	r3, [r8, r0, lsl #2]
 8001242:	ea4f 4033 	mov.w	r0, r3, ror #16
 8001246:	b2e3      	uxtb	r3, r4
 8001248:	f858 b023 	ldr.w	fp, [r8, r3, lsl #2]
 800124c:	ea4f 633b 	mov.w	r3, fp, ror #24
 8001250:	ea4f 6b1e 	mov.w	fp, lr, lsr #24
 8001254:	f858 b02b 	ldr.w	fp, [r8, fp, lsl #2]
 8001258:	ea81 010b 	eor.w	r1, r1, fp
 800125c:	4041      	eors	r1, r0
 800125e:	6968      	ldr	r0, [r5, #20]
 8001260:	4059      	eors	r1, r3
 8001262:	ea4f 230e 	mov.w	r3, lr, lsl #8
 8001266:	4041      	eors	r1, r0
 8001268:	0e1b      	lsrs	r3, r3, #24
 800126a:	f858 0023 	ldr.w	r0, [r8, r3, lsl #2]
 800126e:	ea4f 2330 	mov.w	r3, r0, ror #8
 8001272:	0430      	lsls	r0, r6, #16
 8001274:	0e00      	lsrs	r0, r0, #24
 8001276:	f858 b020 	ldr.w	fp, [r8, r0, lsl #2]
 800127a:	ea4f 4b3b 	mov.w	fp, fp, ror #16
 800127e:	f8cd b004 	str.w	fp, [sp, #4]
 8001282:	b2f8      	uxtb	r0, r7
 8001284:	f858 b020 	ldr.w	fp, [r8, r0, lsl #2]
 8001288:	ea4f 603b 	mov.w	r0, fp, ror #24
 800128c:	ea4f 6b14 	mov.w	fp, r4, lsr #24
 8001290:	f858 b02b 	ldr.w	fp, [r8, fp, lsl #2]
 8001294:	ea83 030b 	eor.w	r3, r3, fp
 8001298:	f8dd b004 	ldr.w	fp, [sp, #4]
 800129c:	ea8b 0303 	eor.w	r3, fp, r3
 80012a0:	4043      	eors	r3, r0
 80012a2:	0224      	lsls	r4, r4, #8
 80012a4:	69a8      	ldr	r0, [r5, #24]
 80012a6:	0e24      	lsrs	r4, r4, #24
 80012a8:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80012ac:	4043      	eors	r3, r0
 80012ae:	ea4f 2034 	mov.w	r0, r4, ror #8
 80012b2:	ea4f 440e 	mov.w	r4, lr, lsl #16
 80012b6:	0e3f      	lsrs	r7, r7, #24
 80012b8:	ea4f 6e14 	mov.w	lr, r4, lsr #24
 80012bc:	f858 7027 	ldr.w	r7, [r8, r7, lsl #2]
 80012c0:	f858 e02e 	ldr.w	lr, [r8, lr, lsl #2]
 80012c4:	b2f6      	uxtb	r6, r6
 80012c6:	f858 4026 	ldr.w	r4, [r8, r6, lsl #2]
 80012ca:	4047      	eors	r7, r0
 80012cc:	ea87 473e 	eor.w	r7, r7, lr, ror #16
 80012d0:	69e8      	ldr	r0, [r5, #28]
 80012d2:	ea97 6734 	eors.w	r7, r7, r4, ror #24
 80012d6:	9c00      	ldr	r4, [sp, #0]
 80012d8:	4047      	eors	r7, r0
 80012da:	0438      	lsls	r0, r7, #16
 80012dc:	ea4f 6e10 	mov.w	lr, r0, lsr #24
 80012e0:	0210      	lsls	r0, r2, #8
 80012e2:	0e00      	lsrs	r0, r0, #24
 80012e4:	1e64      	subs	r4, r4, #1
 80012e6:	9400      	str	r4, [sp, #0]
 80012e8:	0e3e      	lsrs	r6, r7, #24
 80012ea:	040c      	lsls	r4, r1, #16
 80012ec:	9601      	str	r6, [sp, #4]
 80012ee:	0e24      	lsrs	r4, r4, #24
 80012f0:	021e      	lsls	r6, r3, #8
 80012f2:	9403      	str	r4, [sp, #12]
 80012f4:	0e36      	lsrs	r6, r6, #24
 80012f6:	9604      	str	r6, [sp, #16]
 80012f8:	0e1c      	lsrs	r4, r3, #24
 80012fa:	0416      	lsls	r6, r2, #16
 80012fc:	9405      	str	r4, [sp, #20]
 80012fe:	0e36      	lsrs	r6, r6, #24
 8001300:	020c      	lsls	r4, r1, #8
 8001302:	9607      	str	r6, [sp, #28]
 8001304:	0e24      	lsrs	r4, r4, #24
 8001306:	0e16      	lsrs	r6, r2, #24
 8001308:	b2d2      	uxtb	r2, r2
 800130a:	9408      	str	r4, [sp, #32]
 800130c:	9009      	str	r0, [sp, #36]	; 0x24
 800130e:	0e0c      	lsrs	r4, r1, #24
 8001310:	0418      	lsls	r0, r3, #16
 8001312:	0e00      	lsrs	r0, r0, #24
 8001314:	900a      	str	r0, [sp, #40]	; 0x28
 8001316:	9202      	str	r2, [sp, #8]
 8001318:	0238      	lsls	r0, r7, #8
 800131a:	0e00      	lsrs	r0, r0, #24
 800131c:	900b      	str	r0, [sp, #44]	; 0x2c
 800131e:	b2ff      	uxtb	r7, r7
 8001320:	9706      	str	r7, [sp, #24]
 8001322:	b2db      	uxtb	r3, r3
 8001324:	9800      	ldr	r0, [sp, #0]
 8001326:	682a      	ldr	r2, [r5, #0]
 8001328:	2800      	cmp	r0, #0
 800132a:	b2c9      	uxtb	r1, r1
 800132c:	f47f af0f 	bne.w	800114e <cmox_aesFast_decrypt+0x46>
 8001330:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 80013e0 <cmox_aesFast_decrypt+0x2d8>
 8001334:	f819 0006 	ldrb.w	r0, [r9, r6]
 8001338:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800133a:	f819 6006 	ldrb.w	r6, [r9, r6]
 800133e:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001342:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8001344:	0436      	lsls	r6, r6, #16
 8001346:	ea46 6000 	orr.w	r0, r6, r0, lsl #24
 800134a:	f819 600a 	ldrb.w	r6, [r9, sl]
 800134e:	ea40 2606 	orr.w	r6, r0, r6, lsl #8
 8001352:	f819 0001 	ldrb.w	r0, [r9, r1]
 8001356:	4330      	orrs	r0, r6
 8001358:	4042      	eors	r2, r0
 800135a:	603a      	str	r2, [r7, #0]
 800135c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800135e:	f819 2000 	ldrb.w	r2, [r9, r0]
 8001362:	f819 1004 	ldrb.w	r1, [r9, r4]
 8001366:	f819 000e 	ldrb.w	r0, [r9, lr]
 800136a:	0412      	lsls	r2, r2, #16
 800136c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001370:	f819 1003 	ldrb.w	r1, [r9, r3]
 8001374:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001378:	6868      	ldr	r0, [r5, #4]
 800137a:	430a      	orrs	r2, r1
 800137c:	4042      	eors	r2, r0
 800137e:	607a      	str	r2, [r7, #4]
 8001380:	9905      	ldr	r1, [sp, #20]
 8001382:	f819 0001 	ldrb.w	r0, [r9, r1]
 8001386:	9908      	ldr	r1, [sp, #32]
 8001388:	f819 2001 	ldrb.w	r2, [r9, r1]
 800138c:	9b06      	ldr	r3, [sp, #24]
 800138e:	0412      	lsls	r2, r2, #16
 8001390:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001394:	9807      	ldr	r0, [sp, #28]
 8001396:	f819 1000 	ldrb.w	r1, [r9, r0]
 800139a:	68a8      	ldr	r0, [r5, #8]
 800139c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80013a0:	f819 1003 	ldrb.w	r1, [r9, r3]
 80013a4:	430a      	orrs	r2, r1
 80013a6:	4042      	eors	r2, r0
 80013a8:	60ba      	str	r2, [r7, #8]
 80013aa:	9901      	ldr	r1, [sp, #4]
 80013ac:	f819 0001 	ldrb.w	r0, [r9, r1]
 80013b0:	9904      	ldr	r1, [sp, #16]
 80013b2:	f819 2001 	ldrb.w	r2, [r9, r1]
 80013b6:	9b02      	ldr	r3, [sp, #8]
 80013b8:	0412      	lsls	r2, r2, #16
 80013ba:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80013be:	9803      	ldr	r0, [sp, #12]
 80013c0:	f819 1000 	ldrb.w	r1, [r9, r0]
 80013c4:	f819 0003 	ldrb.w	r0, [r9, r3]
 80013c8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80013cc:	68e9      	ldr	r1, [r5, #12]
 80013ce:	4302      	orrs	r2, r0
 80013d0:	404a      	eors	r2, r1
 80013d2:	60fa      	str	r2, [r7, #12]
 80013d4:	b00d      	add	sp, #52	; 0x34
 80013d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80013da:	bf00      	nop
 80013dc:	0800f474 	.word	0x0800f474
 80013e0:	0800fd74 	.word	0x0800fd74

080013e4 <cmox_aesFast_keySchedule_dec>:
 80013e4:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 80013e8:	4615      	mov	r5, r2
 80013ea:	f100 040c 	add.w	r4, r0, #12
 80013ee:	f000 fb71 	bl	8001ad4 <cmox_aesSmall_keySchedule>
 80013f2:	08ed      	lsrs	r5, r5, #3
 80013f4:	1ce8      	adds	r0, r5, #3
 80013f6:	0040      	lsls	r0, r0, #1
 80013f8:	2802      	cmp	r0, #2
 80013fa:	f0c0 808c 	bcc.w	8001516 <cmox_aesFast_keySchedule_dec+0x132>
 80013fe:	006d      	lsls	r5, r5, #1
 8001400:	1d68      	adds	r0, r5, #5
 8001402:	4a46      	ldr	r2, [pc, #280]	; (800151c <cmox_aesFast_keySchedule_dec+0x138>)
 8001404:	f8df 3118 	ldr.w	r3, [pc, #280]	; 8001520 <cmox_aesFast_keySchedule_dec+0x13c>
 8001408:	f854 7f10 	ldr.w	r7, [r4, #16]!
 800140c:	0239      	lsls	r1, r7, #8
 800140e:	0e09      	lsrs	r1, r1, #24
 8001410:	043e      	lsls	r6, r7, #16
 8001412:	f812 c001 	ldrb.w	ip, [r2, r1]
 8001416:	f853 102c 	ldr.w	r1, [r3, ip, lsl #2]
 800141a:	0e36      	lsrs	r6, r6, #24
 800141c:	ea4f 2c31 	mov.w	ip, r1, ror #8
 8001420:	f812 e006 	ldrb.w	lr, [r2, r6]
 8001424:	f853 102e 	ldr.w	r1, [r3, lr, lsl #2]
 8001428:	b2fe      	uxtb	r6, r7
 800142a:	ea4f 4e31 	mov.w	lr, r1, ror #16
 800142e:	5d96      	ldrb	r6, [r2, r6]
 8001430:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
 8001434:	0e3f      	lsrs	r7, r7, #24
 8001436:	ea4f 6631 	mov.w	r6, r1, ror #24
 800143a:	5dd7      	ldrb	r7, [r2, r7]
 800143c:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8001440:	ea8c 0101 	eor.w	r1, ip, r1
 8001444:	ea8e 0101 	eor.w	r1, lr, r1
 8001448:	4071      	eors	r1, r6
 800144a:	6021      	str	r1, [r4, #0]
 800144c:	6867      	ldr	r7, [r4, #4]
 800144e:	0239      	lsls	r1, r7, #8
 8001450:	0e09      	lsrs	r1, r1, #24
 8001452:	f812 e001 	ldrb.w	lr, [r2, r1]
 8001456:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
 800145a:	0439      	lsls	r1, r7, #16
 800145c:	0e09      	lsrs	r1, r1, #24
 800145e:	ea4f 2c36 	mov.w	ip, r6, ror #8
 8001462:	f812 9001 	ldrb.w	r9, [r2, r1]
 8001466:	f853 6029 	ldr.w	r6, [r3, r9, lsl #2]
 800146a:	ea4f 4e36 	mov.w	lr, r6, ror #16
 800146e:	b2fe      	uxtb	r6, r7
 8001470:	0e3f      	lsrs	r7, r7, #24
 8001472:	5dd7      	ldrb	r7, [r2, r7]
 8001474:	f812 9006 	ldrb.w	r9, [r2, r6]
 8001478:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 800147c:	f853 6029 	ldr.w	r6, [r3, r9, lsl #2]
 8001480:	ea8c 0101 	eor.w	r1, ip, r1
 8001484:	ea8e 0101 	eor.w	r1, lr, r1
 8001488:	ea91 6136 	eors.w	r1, r1, r6, ror #24
 800148c:	6061      	str	r1, [r4, #4]
 800148e:	68a7      	ldr	r7, [r4, #8]
 8001490:	0239      	lsls	r1, r7, #8
 8001492:	0e09      	lsrs	r1, r1, #24
 8001494:	f812 e001 	ldrb.w	lr, [r2, r1]
 8001498:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
 800149c:	0439      	lsls	r1, r7, #16
 800149e:	0e09      	lsrs	r1, r1, #24
 80014a0:	ea4f 2c36 	mov.w	ip, r6, ror #8
 80014a4:	f812 9001 	ldrb.w	r9, [r2, r1]
 80014a8:	f853 6029 	ldr.w	r6, [r3, r9, lsl #2]
 80014ac:	ea4f 4e36 	mov.w	lr, r6, ror #16
 80014b0:	b2fe      	uxtb	r6, r7
 80014b2:	0e3f      	lsrs	r7, r7, #24
 80014b4:	5dd7      	ldrb	r7, [r2, r7]
 80014b6:	f812 9006 	ldrb.w	r9, [r2, r6]
 80014ba:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80014be:	f853 6029 	ldr.w	r6, [r3, r9, lsl #2]
 80014c2:	ea8c 0101 	eor.w	r1, ip, r1
 80014c6:	ea8e 0101 	eor.w	r1, lr, r1
 80014ca:	ea91 6136 	eors.w	r1, r1, r6, ror #24
 80014ce:	60a1      	str	r1, [r4, #8]
 80014d0:	68e7      	ldr	r7, [r4, #12]
 80014d2:	0239      	lsls	r1, r7, #8
 80014d4:	0e09      	lsrs	r1, r1, #24
 80014d6:	f812 e001 	ldrb.w	lr, [r2, r1]
 80014da:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
 80014de:	0439      	lsls	r1, r7, #16
 80014e0:	0e09      	lsrs	r1, r1, #24
 80014e2:	ea4f 2536 	mov.w	r5, r6, ror #8
 80014e6:	f812 e001 	ldrb.w	lr, [r2, r1]
 80014ea:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
 80014ee:	b2f9      	uxtb	r1, r7
 80014f0:	0e3f      	lsrs	r7, r7, #24
 80014f2:	f812 c001 	ldrb.w	ip, [r2, r1]
 80014f6:	f853 102c 	ldr.w	r1, [r3, ip, lsl #2]
 80014fa:	5dd7      	ldrb	r7, [r2, r7]
 80014fc:	ea4f 6c31 	mov.w	ip, r1, ror #24
 8001500:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8001504:	404d      	eors	r5, r1
 8001506:	ea85 4536 	eor.w	r5, r5, r6, ror #16
 800150a:	ea8c 0505 	eor.w	r5, ip, r5
 800150e:	1e40      	subs	r0, r0, #1
 8001510:	60e5      	str	r5, [r4, #12]
 8001512:	f47f af79 	bne.w	8001408 <cmox_aesFast_keySchedule_dec+0x24>
 8001516:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 800151a:	bf00      	nop
 800151c:	0800fc74 	.word	0x0800fc74
 8001520:	0800f474 	.word	0x0800f474

08001524 <cmox_aesFast_encrypt>:
 8001524:	e92d 4ff4 	stmdb	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001528:	f100 030c 	add.w	r3, r0, #12
 800152c:	b08c      	sub	sp, #48	; 0x30
 800152e:	681a      	ldr	r2, [r3, #0]
 8001530:	684c      	ldr	r4, [r1, #4]
 8001532:	688f      	ldr	r7, [r1, #8]
 8001534:	6845      	ldr	r5, [r0, #4]
 8001536:	6808      	ldr	r0, [r1, #0]
 8001538:	4050      	eors	r0, r2
 800153a:	685a      	ldr	r2, [r3, #4]
 800153c:	4054      	eors	r4, r2
 800153e:	689a      	ldr	r2, [r3, #8]
 8001540:	4057      	eors	r7, r2
 8001542:	68ca      	ldr	r2, [r1, #12]
 8001544:	68d9      	ldr	r1, [r3, #12]
 8001546:	08ed      	lsrs	r5, r5, #3
 8001548:	1ced      	adds	r5, r5, #3
 800154a:	ea81 0e02 	eor.w	lr, r1, r2
 800154e:	4aa6      	ldr	r2, [pc, #664]	; (80017e8 <cmox_aesFast_encrypt+0x2c4>)
 8001550:	9500      	str	r5, [sp, #0]
 8001552:	4621      	mov	r1, r4
 8001554:	e059      	b.n	800160a <cmox_aesFast_encrypt+0xe6>
 8001556:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8001558:	f852 4020 	ldr.w	r4, [r2, r0, lsl #2]
 800155c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001560:	f852 c02a 	ldr.w	ip, [r2, sl, lsl #2]
 8001564:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8001568:	f852 7027 	ldr.w	r7, [r2, r7, lsl #2]
 800156c:	ea4f 2034 	mov.w	r0, r4, ror #8
 8001570:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
 8001574:	4060      	eors	r0, r4
 8001576:	ea80 403c 	eor.w	r0, r0, ip, ror #16
 800157a:	ea90 6031 	eors.w	r0, r0, r1, ror #24
 800157e:	6819      	ldr	r1, [r3, #0]
 8001580:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8001584:	685c      	ldr	r4, [r3, #4]
 8001586:	4048      	eors	r0, r1
 8001588:	f852 102c 	ldr.w	r1, [r2, ip, lsl #2]
 800158c:	f852 c02e 	ldr.w	ip, [r2, lr, lsl #2]
 8001590:	f852 e029 	ldr.w	lr, [r2, r9, lsl #2]
 8001594:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8001598:	ea97 2131 	eors.w	r1, r7, r1, ror #8
 800159c:	ea81 413c 	eor.w	r1, r1, ip, ror #16
 80015a0:	ea81 613e 	eor.w	r1, r1, lr, ror #24
 80015a4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80015a8:	9f08      	ldr	r7, [sp, #32]
 80015aa:	f852 c02e 	ldr.w	ip, [r2, lr, lsl #2]
 80015ae:	f8dd e018 	ldr.w	lr, [sp, #24]
 80015b2:	4061      	eors	r1, r4
 80015b4:	f852 4027 	ldr.w	r4, [r2, r7, lsl #2]
 80015b8:	ea4f 2734 	mov.w	r7, r4, ror #8
 80015bc:	f852 402e 	ldr.w	r4, [r2, lr, lsl #2]
 80015c0:	ea4f 6e34 	mov.w	lr, r4, ror #24
 80015c4:	f852 4029 	ldr.w	r4, [r2, r9, lsl #2]
 80015c8:	4067      	eors	r7, r4
 80015ca:	ea87 473c 	eor.w	r7, r7, ip, ror #16
 80015ce:	689c      	ldr	r4, [r3, #8]
 80015d0:	ea8e 0707 	eor.w	r7, lr, r7
 80015d4:	f8dd e010 	ldr.w	lr, [sp, #16]
 80015d8:	4067      	eors	r7, r4
 80015da:	f852 402e 	ldr.w	r4, [r2, lr, lsl #2]
 80015de:	ea4f 2e34 	mov.w	lr, r4, ror #8
 80015e2:	9c03      	ldr	r4, [sp, #12]
 80015e4:	f852 5024 	ldr.w	r5, [r2, r4, lsl #2]
 80015e8:	ea4f 4435 	mov.w	r4, r5, ror #16
 80015ec:	9d02      	ldr	r5, [sp, #8]
 80015ee:	f852 6025 	ldr.w	r6, [r2, r5, lsl #2]
 80015f2:	ea4f 6536 	mov.w	r5, r6, ror #24
 80015f6:	9e01      	ldr	r6, [sp, #4]
 80015f8:	f852 6026 	ldr.w	r6, [r2, r6, lsl #2]
 80015fc:	ea8e 0606 	eor.w	r6, lr, r6
 8001600:	4074      	eors	r4, r6
 8001602:	4065      	eors	r5, r4
 8001604:	68dc      	ldr	r4, [r3, #12]
 8001606:	ea84 0e05 	eor.w	lr, r4, r5
 800160a:	020d      	lsls	r5, r1, #8
 800160c:	fa5f f88e 	uxtb.w	r8, lr
 8001610:	0e2d      	lsrs	r5, r5, #24
 8001612:	f852 6025 	ldr.w	r6, [r2, r5, lsl #2]
 8001616:	043c      	lsls	r4, r7, #16
 8001618:	ea4f 6b10 	mov.w	fp, r0, lsr #24
 800161c:	ea4f 2936 	mov.w	r9, r6, ror #8
 8001620:	ea4f 6c14 	mov.w	ip, r4, lsr #24
 8001624:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
 8001628:	f852 602c 	ldr.w	r6, [r2, ip, lsl #2]
 800162c:	691d      	ldr	r5, [r3, #16]
 800162e:	ea4f 6834 	mov.w	r8, r4, ror #24
 8001632:	f852 402b 	ldr.w	r4, [r2, fp, lsl #2]
 8001636:	ea89 0404 	eor.w	r4, r9, r4
 800163a:	ea84 4436 	eor.w	r4, r4, r6, ror #16
 800163e:	ea88 0404 	eor.w	r4, r8, r4
 8001642:	406c      	eors	r4, r5
 8001644:	023d      	lsls	r5, r7, #8
 8001646:	ea4f 6815 	mov.w	r8, r5, lsr #24
 800164a:	ea4f 450e 	mov.w	r5, lr, lsl #16
 800164e:	ea4f 6c15 	mov.w	ip, r5, lsr #24
 8001652:	f852 a028 	ldr.w	sl, [r2, r8, lsl #2]
 8001656:	f852 502c 	ldr.w	r5, [r2, ip, lsl #2]
 800165a:	ea4f 4c35 	mov.w	ip, r5, ror #16
 800165e:	fa5f f880 	uxtb.w	r8, r0
 8001662:	f852 5028 	ldr.w	r5, [r2, r8, lsl #2]
 8001666:	ea4f 6835 	mov.w	r8, r5, ror #24
 800166a:	ea4f 6b11 	mov.w	fp, r1, lsr #24
 800166e:	f852 502b 	ldr.w	r5, [r2, fp, lsl #2]
 8001672:	695e      	ldr	r6, [r3, #20]
 8001674:	ea85 253a 	eor.w	r5, r5, sl, ror #8
 8001678:	ea8c 0505 	eor.w	r5, ip, r5
 800167c:	ea88 0505 	eor.w	r5, r8, r5
 8001680:	4075      	eors	r5, r6
 8001682:	ea4f 260e 	mov.w	r6, lr, lsl #8
 8001686:	ea4f 6816 	mov.w	r8, r6, lsr #24
 800168a:	f852 b028 	ldr.w	fp, [r2, r8, lsl #2]
 800168e:	0406      	lsls	r6, r0, #16
 8001690:	ea4f 6c16 	mov.w	ip, r6, lsr #24
 8001694:	f852 802c 	ldr.w	r8, [r2, ip, lsl #2]
 8001698:	ea4f 4838 	mov.w	r8, r8, ror #16
 800169c:	f8cd 8004 	str.w	r8, [sp, #4]
 80016a0:	fa5f fc81 	uxtb.w	ip, r1
 80016a4:	f852 602c 	ldr.w	r6, [r2, ip, lsl #2]
 80016a8:	ea4f 6c36 	mov.w	ip, r6, ror #24
 80016ac:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80016b0:	f852 6028 	ldr.w	r6, [r2, r8, lsl #2]
 80016b4:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80016b8:	ea86 263b 	eor.w	r6, r6, fp, ror #8
 80016bc:	ea88 0606 	eor.w	r6, r8, r6
 80016c0:	ea8c 0606 	eor.w	r6, ip, r6
 80016c4:	0409      	lsls	r1, r1, #16
 80016c6:	f8d3 c018 	ldr.w	ip, [r3, #24]
 80016ca:	0e09      	lsrs	r1, r1, #24
 80016cc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80016d0:	ea8c 0606 	eor.w	r6, ip, r6
 80016d4:	0200      	lsls	r0, r0, #8
 80016d6:	0e00      	lsrs	r0, r0, #24
 80016d8:	ea4f 4c31 	mov.w	ip, r1, ror #16
 80016dc:	ea4f 6e1e 	mov.w	lr, lr, lsr #24
 80016e0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80016e4:	f852 102e 	ldr.w	r1, [r2, lr, lsl #2]
 80016e8:	b2ff      	uxtb	r7, r7
 80016ea:	f852 7027 	ldr.w	r7, [r2, r7, lsl #2]
 80016ee:	ea91 2030 	eors.w	r0, r1, r0, ror #8
 80016f2:	ea8c 0100 	eor.w	r1, ip, r0
 80016f6:	69d8      	ldr	r0, [r3, #28]
 80016f8:	ea91 6137 	eors.w	r1, r1, r7, ror #24
 80016fc:	9f00      	ldr	r7, [sp, #0]
 80016fe:	4041      	eors	r1, r0
 8001700:	1e7f      	subs	r7, r7, #1
 8001702:	9700      	str	r7, [sp, #0]
 8001704:	0e08      	lsrs	r0, r1, #24
 8001706:	042f      	lsls	r7, r5, #16
 8001708:	9001      	str	r0, [sp, #4]
 800170a:	0e3f      	lsrs	r7, r7, #24
 800170c:	0220      	lsls	r0, r4, #8
 800170e:	9703      	str	r7, [sp, #12]
 8001710:	0e00      	lsrs	r0, r0, #24
 8001712:	9004      	str	r0, [sp, #16]
 8001714:	0e37      	lsrs	r7, r6, #24
 8001716:	0420      	lsls	r0, r4, #16
 8001718:	9705      	str	r7, [sp, #20]
 800171a:	0e00      	lsrs	r0, r0, #24
 800171c:	020f      	lsls	r7, r1, #8
 800171e:	9007      	str	r0, [sp, #28]
 8001720:	0e3f      	lsrs	r7, r7, #24
 8001722:	0408      	lsls	r0, r1, #16
 8001724:	ea4f 6e10 	mov.w	lr, r0, lsr #24
 8001728:	0230      	lsls	r0, r6, #8
 800172a:	0e00      	lsrs	r0, r0, #24
 800172c:	9708      	str	r7, [sp, #32]
 800172e:	9009      	str	r0, [sp, #36]	; 0x24
 8001730:	3320      	adds	r3, #32
 8001732:	0430      	lsls	r0, r6, #16
 8001734:	0e00      	lsrs	r0, r0, #24
 8001736:	900a      	str	r0, [sp, #40]	; 0x28
 8001738:	0e2f      	lsrs	r7, r5, #24
 800173a:	0228      	lsls	r0, r5, #8
 800173c:	0e00      	lsrs	r0, r0, #24
 800173e:	900b      	str	r0, [sp, #44]	; 0x2c
 8001740:	ea4f 6814 	mov.w	r8, r4, lsr #24
 8001744:	b2f0      	uxtb	r0, r6
 8001746:	9002      	str	r0, [sp, #8]
 8001748:	fa5f f984 	uxtb.w	r9, r4
 800174c:	b2e8      	uxtb	r0, r5
 800174e:	9006      	str	r0, [sp, #24]
 8001750:	b2c9      	uxtb	r1, r1
 8001752:	9800      	ldr	r0, [sp, #0]
 8001754:	2800      	cmp	r0, #0
 8001756:	f47f aefe 	bne.w	8001556 <cmox_aesFast_encrypt+0x32>
 800175a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800175c:	4c23      	ldr	r4, [pc, #140]	; (80017ec <cmox_aesFast_encrypt+0x2c8>)
 800175e:	5d66      	ldrb	r6, [r4, r5]
 8001760:	f814 0008 	ldrb.w	r0, [r4, r8]
 8001764:	5c61      	ldrb	r1, [r4, r1]
 8001766:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001768:	0436      	lsls	r6, r6, #16
 800176a:	ea46 6600 	orr.w	r6, r6, r0, lsl #24
 800176e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8001770:	5c25      	ldrb	r5, [r4, r0]
 8001772:	6818      	ldr	r0, [r3, #0]
 8001774:	ea46 2605 	orr.w	r6, r6, r5, lsl #8
 8001778:	430e      	orrs	r6, r1
 800177a:	4046      	eors	r6, r0
 800177c:	6016      	str	r6, [r2, #0]
 800177e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001780:	5c26      	ldrb	r6, [r4, r0]
 8001782:	5de5      	ldrb	r5, [r4, r7]
 8001784:	f814 1009 	ldrb.w	r1, [r4, r9]
 8001788:	6858      	ldr	r0, [r3, #4]
 800178a:	0436      	lsls	r6, r6, #16
 800178c:	ea46 6605 	orr.w	r6, r6, r5, lsl #24
 8001790:	f814 500e 	ldrb.w	r5, [r4, lr]
 8001794:	ea46 2605 	orr.w	r6, r6, r5, lsl #8
 8001798:	430e      	orrs	r6, r1
 800179a:	4046      	eors	r6, r0
 800179c:	6056      	str	r6, [r2, #4]
 800179e:	9905      	ldr	r1, [sp, #20]
 80017a0:	5c60      	ldrb	r0, [r4, r1]
 80017a2:	9908      	ldr	r1, [sp, #32]
 80017a4:	5c65      	ldrb	r5, [r4, r1]
 80017a6:	9e06      	ldr	r6, [sp, #24]
 80017a8:	042d      	lsls	r5, r5, #16
 80017aa:	ea45 6500 	orr.w	r5, r5, r0, lsl #24
 80017ae:	9807      	ldr	r0, [sp, #28]
 80017b0:	5c21      	ldrb	r1, [r4, r0]
 80017b2:	6898      	ldr	r0, [r3, #8]
 80017b4:	ea45 2501 	orr.w	r5, r5, r1, lsl #8
 80017b8:	5da1      	ldrb	r1, [r4, r6]
 80017ba:	430d      	orrs	r5, r1
 80017bc:	4045      	eors	r5, r0
 80017be:	6095      	str	r5, [r2, #8]
 80017c0:	9901      	ldr	r1, [sp, #4]
 80017c2:	5c60      	ldrb	r0, [r4, r1]
 80017c4:	9904      	ldr	r1, [sp, #16]
 80017c6:	5c65      	ldrb	r5, [r4, r1]
 80017c8:	9e02      	ldr	r6, [sp, #8]
 80017ca:	042d      	lsls	r5, r5, #16
 80017cc:	ea45 6500 	orr.w	r5, r5, r0, lsl #24
 80017d0:	9803      	ldr	r0, [sp, #12]
 80017d2:	5c21      	ldrb	r1, [r4, r0]
 80017d4:	5da0      	ldrb	r0, [r4, r6]
 80017d6:	ea45 2501 	orr.w	r5, r5, r1, lsl #8
 80017da:	68d9      	ldr	r1, [r3, #12]
 80017dc:	4305      	orrs	r5, r0
 80017de:	404d      	eors	r5, r1
 80017e0:	60d5      	str	r5, [r2, #12]
 80017e2:	b00d      	add	sp, #52	; 0x34
 80017e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80017e8:	0800f874 	.word	0x0800f874
 80017ec:	0800fc74 	.word	0x0800fc74

080017f0 <cmox_md_updateState_small>:
 80017f0:	2220      	movs	r2, #32
 80017f2:	305c      	adds	r0, #92	; 0x5c
 80017f4:	f00b bab3 	b.w	800cd5e <__aeabi_memcpy>

080017f8 <cmox_md_copyLastState_small>:
 80017f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017fa:	6884      	ldr	r4, [r0, #8]
 80017fc:	08a3      	lsrs	r3, r4, #2
 80017fe:	2200      	movs	r2, #0
 8001800:	f004 0403 	and.w	r4, r4, #3
 8001804:	e007      	b.n	8001816 <cmox_md_copyLastState_small+0x1e>
 8001806:	f100 055c 	add.w	r5, r0, #92	; 0x5c
 800180a:	f855 6022 	ldr.w	r6, [r5, r2, lsl #2]
 800180e:	ba35      	rev	r5, r6
 8001810:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
 8001814:	1c52      	adds	r2, r2, #1
 8001816:	429a      	cmp	r2, r3
 8001818:	d3f5      	bcc.n	8001806 <cmox_md_copyLastState_small+0xe>
 800181a:	2200      	movs	r2, #0
 800181c:	e00b      	b.n	8001836 <cmox_md_copyLastState_small+0x3e>
 800181e:	f100 055c 	add.w	r5, r0, #92	; 0x5c
 8001822:	eb02 0783 	add.w	r7, r2, r3, lsl #2
 8001826:	f855 6023 	ldr.w	r6, [r5, r3, lsl #2]
 800182a:	00d5      	lsls	r5, r2, #3
 800182c:	f1c5 0518 	rsb	r5, r5, #24
 8001830:	40ee      	lsrs	r6, r5
 8001832:	55ce      	strb	r6, [r1, r7]
 8001834:	1c52      	adds	r2, r2, #1
 8001836:	42a2      	cmp	r2, r4
 8001838:	d3f1      	bcc.n	800181e <cmox_md_copyLastState_small+0x26>
 800183a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800183c <cmox_md_padMsgLen_small>:
 800183c:	b530      	push	{r4, r5, lr}
 800183e:	68c4      	ldr	r4, [r0, #12]
 8001840:	6903      	ldr	r3, [r0, #16]
 8001842:	2200      	movs	r2, #0
 8001844:	1ae3      	subs	r3, r4, r3
 8001846:	18d5      	adds	r5, r2, r3
 8001848:	5c8c      	ldrb	r4, [r1, r2]
 800184a:	4405      	add	r5, r0
 800184c:	1c52      	adds	r2, r2, #1
 800184e:	2a08      	cmp	r2, #8
 8001850:	772c      	strb	r4, [r5, #28]
 8001852:	d3f8      	bcc.n	8001846 <cmox_md_padMsgLen_small+0xa>
 8001854:	bd30      	pop	{r4, r5, pc}

08001856 <cmox_md_construct>:
 8001856:	6003      	str	r3, [r0, #0]
 8001858:	60c1      	str	r1, [r0, #12]
 800185a:	6102      	str	r2, [r0, #16]
 800185c:	4770      	bx	lr

0800185e <cmox_md_init>:
 800185e:	b538      	push	{r3, r4, r5, lr}
 8001860:	4604      	mov	r4, r0
 8001862:	4615      	mov	r5, r2
 8001864:	2200      	movs	r2, #0
 8001866:	6062      	str	r2, [r4, #4]
 8001868:	6823      	ldr	r3, [r4, #0]
 800186a:	685a      	ldr	r2, [r3, #4]
 800186c:	4790      	blx	r2
 800186e:	2000      	movs	r0, #0
 8001870:	6160      	str	r0, [r4, #20]
 8001872:	61a0      	str	r0, [r4, #24]
 8001874:	60a5      	str	r5, [r4, #8]
 8001876:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 800187a:	bd32      	pop	{r1, r4, r5, pc}

0800187c <cmox_md_setTagSize>:
 800187c:	6081      	str	r1, [r0, #8]
 800187e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001882:	4770      	bx	lr

08001884 <cmox_md_append>:
 8001884:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001888:	4604      	mov	r4, r0
 800188a:	7920      	ldrb	r0, [r4, #4]
 800188c:	f8d4 800c 	ldr.w	r8, [r4, #12]
 8001890:	0745      	lsls	r5, r0, #29
 8001892:	bf48      	it	mi
 8001894:	4824      	ldrmi	r0, [pc, #144]	; (8001928 <cmox_md_append+0xa4>)
 8001896:	d445      	bmi.n	8001924 <cmox_md_append+0xa0>
 8001898:	6966      	ldr	r6, [r4, #20]
 800189a:	461d      	mov	r5, r3
 800189c:	f1a8 0001 	sub.w	r0, r8, #1
 80018a0:	ea00 03d6 	and.w	r3, r0, r6, lsr #3
 80018a4:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 80018a8:	ebb6 0fc5 	cmp.w	r6, r5, lsl #3
 80018ac:	6166      	str	r6, [r4, #20]
 80018ae:	d202      	bcs.n	80018b6 <cmox_md_append+0x32>
 80018b0:	69a6      	ldr	r6, [r4, #24]
 80018b2:	1c76      	adds	r6, r6, #1
 80018b4:	61a6      	str	r6, [r4, #24]
 80018b6:	4617      	mov	r7, r2
 80018b8:	69a6      	ldr	r6, [r4, #24]
 80018ba:	eb06 7655 	add.w	r6, r6, r5, lsr #29
 80018be:	61a6      	str	r6, [r4, #24]
 80018c0:	460e      	mov	r6, r1
 80018c2:	18e9      	adds	r1, r5, r3
 80018c4:	4288      	cmp	r0, r1
 80018c6:	d225      	bcs.n	8001914 <cmox_md_append+0x90>
 80018c8:	eba8 0903 	sub.w	r9, r8, r3
 80018cc:	464a      	mov	r2, r9
 80018ce:	4631      	mov	r1, r6
 80018d0:	18f8      	adds	r0, r7, r3
 80018d2:	f00b fa44 	bl	800cd5e <__aeabi_memcpy>
 80018d6:	6822      	ldr	r2, [r4, #0]
 80018d8:	6813      	ldr	r3, [r2, #0]
 80018da:	4639      	mov	r1, r7
 80018dc:	e00f      	b.n	80018fe <cmox_md_append+0x7a>
 80018de:	4642      	mov	r2, r8
 80018e0:	4638      	mov	r0, r7
 80018e2:	f00b fa3c 	bl	800cd5e <__aeabi_memcpy>
 80018e6:	6823      	ldr	r3, [r4, #0]
 80018e8:	681a      	ldr	r2, [r3, #0]
 80018ea:	4639      	mov	r1, r7
 80018ec:	4620      	mov	r0, r4
 80018ee:	4790      	blx	r2
 80018f0:	e007      	b.n	8001902 <cmox_md_append+0x7e>
 80018f2:	1831      	adds	r1, r6, r0
 80018f4:	f011 0003 	ands.w	r0, r1, #3
 80018f8:	d1f1      	bne.n	80018de <cmox_md_append+0x5a>
 80018fa:	6822      	ldr	r2, [r4, #0]
 80018fc:	6813      	ldr	r3, [r2, #0]
 80018fe:	4620      	mov	r0, r4
 8001900:	4798      	blx	r3
 8001902:	4648      	mov	r0, r9
 8001904:	eb00 0908 	add.w	r9, r0, r8
 8001908:	f1a9 0101 	sub.w	r1, r9, #1
 800190c:	42a9      	cmp	r1, r5
 800190e:	d3f0      	bcc.n	80018f2 <cmox_md_append+0x6e>
 8001910:	2300      	movs	r3, #0
 8001912:	e000      	b.n	8001916 <cmox_md_append+0x92>
 8001914:	2000      	movs	r0, #0
 8001916:	1a2a      	subs	r2, r5, r0
 8001918:	1831      	adds	r1, r6, r0
 800191a:	18f8      	adds	r0, r7, r3
 800191c:	f00b fa1f 	bl	800cd5e <__aeabi_memcpy>
 8001920:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001924:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}
 8001928:	00020004 	.word	0x00020004

0800192c <cmox_md_generateTag>:
 800192c:	e92d 4ffc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001930:	4602      	mov	r2, r0
 8001932:	b085      	sub	sp, #20
 8001934:	68d0      	ldr	r0, [r2, #12]
 8001936:	6913      	ldr	r3, [r2, #16]
 8001938:	f8df c16c 	ldr.w	ip, [pc, #364]	; 8001aa8 <cmox_md_generateTag+0x17c>
 800193c:	f8df 816c 	ldr.w	r8, [pc, #364]	; 8001aac <cmox_md_generateTag+0x180>
 8001940:	eba0 0a03 	sub.w	sl, r0, r3
 8001944:	6850      	ldr	r0, [r2, #4]
 8001946:	f040 0004 	orr.w	r0, r0, #4
 800194a:	6050      	str	r0, [r2, #4]
 800194c:	2700      	movs	r7, #0
 800194e:	a803      	add	r0, sp, #12
 8001950:	9002      	str	r0, [sp, #8]
 8001952:	f10d 0e0c 	add.w	lr, sp, #12
 8001956:	e9d8 3400 	ldrd	r3, r4, [r8]
 800195a:	a803      	add	r0, sp, #12
 800195c:	4d54      	ldr	r5, [pc, #336]	; (8001ab0 <cmox_md_generateTag+0x184>)
 800195e:	e9c0 3400 	strd	r3, r4, [r0]
 8001962:	7828      	ldrb	r0, [r5, #0]
 8001964:	4d53      	ldr	r5, [pc, #332]	; (8001ab4 <cmox_md_generateTag+0x188>)
 8001966:	2800      	cmp	r0, #0
 8001968:	bf0c      	ite	eq
 800196a:	2300      	moveq	r3, #0
 800196c:	2304      	movne	r3, #4
 800196e:	4699      	mov	r9, r3
 8001970:	f85c 3003 	ldr.w	r3, [ip, r3]
 8001974:	f85e 4009 	ldr.w	r4, [lr, r9]
 8001978:	4423      	add	r3, r4
 800197a:	2601      	movs	r6, #1
 800197c:	601d      	str	r5, [r3, #0]
 800197e:	681c      	ldr	r4, [r3, #0]
 8001980:	609e      	str	r6, [r3, #8]
 8001982:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8001986:	9d03      	ldr	r5, [sp, #12]
 8001988:	f8dc 9000 	ldr.w	r9, [ip]
 800198c:	f8de 6004 	ldr.w	r6, [lr, #4]
 8001990:	405d      	eors	r5, r3
 8001992:	4065      	eors	r5, r4
 8001994:	4c48      	ldr	r4, [pc, #288]	; (8001ab8 <cmox_md_generateTag+0x18c>)
 8001996:	4065      	eors	r5, r4
 8001998:	ea89 0606 	eor.w	r6, r9, r6
 800199c:	4c47      	ldr	r4, [pc, #284]	; (8001abc <cmox_md_generateTag+0x190>)
 800199e:	4066      	eors	r6, r4
 80019a0:	1975      	adds	r5, r6, r5
 80019a2:	4c47      	ldr	r4, [pc, #284]	; (8001ac0 <cmox_md_generateTag+0x194>)
 80019a4:	4065      	eors	r5, r4
 80019a6:	e9d8 6b00 	ldrd	r6, fp, [r8]
 80019aa:	ac03      	add	r4, sp, #12
 80019ac:	2800      	cmp	r0, #0
 80019ae:	e9c4 6b00 	strd	r6, fp, [r4]
 80019b2:	bf0e      	itee	eq
 80019b4:	2400      	moveq	r4, #0
 80019b6:	2004      	movne	r0, #4
 80019b8:	2404      	movne	r4, #4
 80019ba:	9e02      	ldr	r6, [sp, #8]
 80019bc:	f85c 0000 	ldr.w	r0, [ip, r0]
 80019c0:	5934      	ldr	r4, [r6, r4]
 80019c2:	1820      	adds	r0, r4, r0
 80019c4:	4c3f      	ldr	r4, [pc, #252]	; (8001ac4 <cmox_md_generateTag+0x198>)
 80019c6:	6004      	str	r4, [r0, #0]
 80019c8:	2601      	movs	r6, #1
 80019ca:	6804      	ldr	r4, [r0, #0]
 80019cc:	6086      	str	r6, [r0, #8]
 80019ce:	9803      	ldr	r0, [sp, #12]
 80019d0:	9e02      	ldr	r6, [sp, #8]
 80019d2:	4043      	eors	r3, r0
 80019d4:	4063      	eors	r3, r4
 80019d6:	4c38      	ldr	r4, [pc, #224]	; (8001ab8 <cmox_md_generateTag+0x18c>)
 80019d8:	6870      	ldr	r0, [r6, #4]
 80019da:	4063      	eors	r3, r4
 80019dc:	ea89 0000 	eor.w	r0, r9, r0
 80019e0:	4c36      	ldr	r4, [pc, #216]	; (8001abc <cmox_md_generateTag+0x190>)
 80019e2:	4060      	eors	r0, r4
 80019e4:	4403      	add	r3, r0
 80019e6:	4838      	ldr	r0, [pc, #224]	; (8001ac8 <cmox_md_generateTag+0x19c>)
 80019e8:	4043      	eors	r3, r0
 80019ea:	0028      	movs	r0, r5
 80019ec:	bf18      	it	ne
 80019ee:	2001      	movne	r0, #1
 80019f0:	1e5b      	subs	r3, r3, #1
 80019f2:	419b      	sbcs	r3, r3
 80019f4:	2f04      	cmp	r7, #4
 80019f6:	bf2c      	ite	cs
 80019f8:	b2c0      	uxtbcs	r0, r0
 80019fa:	0fd8      	lsrcc	r0, r3, #31
 80019fc:	f102 0314 	add.w	r3, r2, #20
 8001a00:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8001a04:	f007 0303 	and.w	r3, r7, #3
 8001a08:	f1c3 0303 	rsb	r3, r3, #3
 8001a0c:	00db      	lsls	r3, r3, #3
 8001a0e:	40d8      	lsrs	r0, r3
 8001a10:	f80d 0007 	strb.w	r0, [sp, r7]
 8001a14:	1c7f      	adds	r7, r7, #1
 8001a16:	2f08      	cmp	r7, #8
 8001a18:	d39d      	bcc.n	8001956 <cmox_md_generateTag+0x2a>
 8001a1a:	4615      	mov	r5, r2
 8001a1c:	460c      	mov	r4, r1
 8001a1e:	696a      	ldr	r2, [r5, #20]
 8001a20:	69ab      	ldr	r3, [r5, #24]
 8001a22:	68e8      	ldr	r0, [r5, #12]
 8001a24:	08d2      	lsrs	r2, r2, #3
 8001a26:	ea42 7243 	orr.w	r2, r2, r3, lsl #29
 8001a2a:	1e40      	subs	r0, r0, #1
 8001a2c:	ea00 0702 	and.w	r7, r0, r2
 8001a30:	2300      	movs	r3, #0
 8001a32:	4002      	ands	r2, r0
 8001a34:	429b      	cmp	r3, r3
 8001a36:	d80a      	bhi.n	8001a4e <cmox_md_generateTag+0x122>
 8001a38:	4552      	cmp	r2, sl
 8001a3a:	d208      	bcs.n	8001a4e <cmox_md_generateTag+0x122>
 8001a3c:	2080      	movs	r0, #128	; 0x80
 8001a3e:	55e0      	strb	r0, [r4, r7]
 8001a40:	1c7f      	adds	r7, r7, #1
 8001a42:	4557      	cmp	r7, sl
 8001a44:	d216      	bcs.n	8001a74 <cmox_md_generateTag+0x148>
 8001a46:	ebaa 0107 	sub.w	r1, sl, r7
 8001a4a:	19e0      	adds	r0, r4, r7
 8001a4c:	e010      	b.n	8001a70 <cmox_md_generateTag+0x144>
 8001a4e:	2080      	movs	r0, #128	; 0x80
 8001a50:	55e0      	strb	r0, [r4, r7]
 8001a52:	e000      	b.n	8001a56 <cmox_md_generateTag+0x12a>
 8001a54:	55e3      	strb	r3, [r4, r7]
 8001a56:	68e8      	ldr	r0, [r5, #12]
 8001a58:	1c7f      	adds	r7, r7, #1
 8001a5a:	4287      	cmp	r7, r0
 8001a5c:	d3fa      	bcc.n	8001a54 <cmox_md_generateTag+0x128>
 8001a5e:	682a      	ldr	r2, [r5, #0]
 8001a60:	6813      	ldr	r3, [r2, #0]
 8001a62:	4628      	mov	r0, r5
 8001a64:	4798      	blx	r3
 8001a66:	f1ba 0f00 	cmp.w	sl, #0
 8001a6a:	d003      	beq.n	8001a74 <cmox_md_generateTag+0x148>
 8001a6c:	4651      	mov	r1, sl
 8001a6e:	4620      	mov	r0, r4
 8001a70:	f00b f977 	bl	800cd62 <__aeabi_memclr>
 8001a74:	682a      	ldr	r2, [r5, #0]
 8001a76:	9e06      	ldr	r6, [sp, #24]
 8001a78:	9f05      	ldr	r7, [sp, #20]
 8001a7a:	6893      	ldr	r3, [r2, #8]
 8001a7c:	4669      	mov	r1, sp
 8001a7e:	4628      	mov	r0, r5
 8001a80:	4798      	blx	r3
 8001a82:	682a      	ldr	r2, [r5, #0]
 8001a84:	f8d2 9000 	ldr.w	r9, [r2]
 8001a88:	4621      	mov	r1, r4
 8001a8a:	4628      	mov	r0, r5
 8001a8c:	47c8      	blx	r9
 8001a8e:	682b      	ldr	r3, [r5, #0]
 8001a90:	68da      	ldr	r2, [r3, #12]
 8001a92:	4639      	mov	r1, r7
 8001a94:	4628      	mov	r0, r5
 8001a96:	4790      	blx	r2
 8001a98:	b10e      	cbz	r6, 8001a9e <cmox_md_generateTag+0x172>
 8001a9a:	68a8      	ldr	r0, [r5, #8]
 8001a9c:	6030      	str	r0, [r6, #0]
 8001a9e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001aa2:	b007      	add	sp, #28
 8001aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001aa8:	0800d9dc 	.word	0x0800d9dc
 8001aac:	08001acc 	.word	0x08001acc
 8001ab0:	20000188 	.word	0x20000188
 8001ab4:	9310c55f 	.word	0x9310c55f
 8001ab8:	12008504 	.word	0x12008504
 8001abc:	7a0168fc 	.word	0x7a0168fc
 8001ac0:	ff24f5c0 	.word	0xff24f5c0
 8001ac4:	d433af24 	.word	0xd433af24
 8001ac8:	8b69af26 	.word	0x8b69af26
 8001acc:	0101b004 	.word	0x0101b004
 8001ad0:	45011700 	.word	0x45011700

08001ad4 <cmox_aesSmall_keySchedule>:
 8001ad4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ad8:	f100 050c 	add.w	r5, r0, #12
 8001adc:	2400      	movs	r4, #0
 8001ade:	0892      	lsrs	r2, r2, #2
 8001ae0:	4b3d      	ldr	r3, [pc, #244]	; (8001bd8 <cmox_aesSmall_keySchedule+0x104>)
 8001ae2:	2000      	movs	r0, #0
 8001ae4:	e005      	b.n	8001af2 <cmox_aesSmall_keySchedule+0x1e>
 8001ae6:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8001aea:	ba36      	rev	r6, r6
 8001aec:	f845 6020 	str.w	r6, [r5, r0, lsl #2]
 8001af0:	1c40      	adds	r0, r0, #1
 8001af2:	4290      	cmp	r0, r2
 8001af4:	d3f7      	bcc.n	8001ae6 <cmox_aesSmall_keySchedule+0x12>
 8001af6:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8001afa:	4f38      	ldr	r7, [pc, #224]	; (8001bdc <cmox_aesSmall_keySchedule+0x108>)
 8001afc:	f858 0c04 	ldr.w	r0, [r8, #-4]
 8001b00:	f8d5 c000 	ldr.w	ip, [r5]
 8001b04:	0406      	lsls	r6, r0, #16
 8001b06:	0201      	lsls	r1, r0, #8
 8001b08:	0e36      	lsrs	r6, r6, #24
 8001b0a:	0e09      	lsrs	r1, r1, #24
 8001b0c:	5dbe      	ldrb	r6, [r7, r6]
 8001b0e:	5c79      	ldrb	r1, [r7, r1]
 8001b10:	0436      	lsls	r6, r6, #16
 8001b12:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
 8001b16:	b2c1      	uxtb	r1, r0
 8001b18:	0e00      	lsrs	r0, r0, #24
 8001b1a:	5c79      	ldrb	r1, [r7, r1]
 8001b1c:	ea46 2601 	orr.w	r6, r6, r1, lsl #8
 8001b20:	5c39      	ldrb	r1, [r7, r0]
 8001b22:	ea41 0006 	orr.w	r0, r1, r6
 8001b26:	4e2e      	ldr	r6, [pc, #184]	; (8001be0 <cmox_aesSmall_keySchedule+0x10c>)
 8001b28:	ea80 010c 	eor.w	r1, r0, ip
 8001b2c:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8001b30:	4048      	eors	r0, r1
 8001b32:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 8001b36:	1c64      	adds	r4, r4, #1
 8001b38:	2001      	movs	r0, #1
 8001b3a:	1f2e      	subs	r6, r5, #4
 8001b3c:	1881      	adds	r1, r0, r2
 8001b3e:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 8001b42:	f855 c020 	ldr.w	ip, [r5, r0, lsl #2]
 8001b46:	ea8c 0606 	eor.w	r6, ip, r6
 8001b4a:	1c40      	adds	r0, r0, #1
 8001b4c:	f845 6021 	str.w	r6, [r5, r1, lsl #2]
 8001b50:	2804      	cmp	r0, #4
 8001b52:	d3f2      	bcc.n	8001b3a <cmox_aesSmall_keySchedule+0x66>
 8001b54:	2a04      	cmp	r2, #4
 8001b56:	d004      	beq.n	8001b62 <cmox_aesSmall_keySchedule+0x8e>
 8001b58:	2a06      	cmp	r2, #6
 8001b5a:	d00b      	beq.n	8001b74 <cmox_aesSmall_keySchedule+0xa0>
 8001b5c:	2a08      	cmp	r2, #8
 8001b5e:	d014      	beq.n	8001b8a <cmox_aesSmall_keySchedule+0xb6>
 8001b60:	e037      	b.n	8001bd2 <cmox_aesSmall_keySchedule+0xfe>
 8001b62:	2c0a      	cmp	r4, #10
 8001b64:	d204      	bcs.n	8001b70 <cmox_aesSmall_keySchedule+0x9c>
 8001b66:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001b6a:	d001      	beq.n	8001b70 <cmox_aesSmall_keySchedule+0x9c>
 8001b6c:	4645      	mov	r5, r8
 8001b6e:	e7c2      	b.n	8001af6 <cmox_aesSmall_keySchedule+0x22>
 8001b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b74:	2c07      	cmp	r4, #7
 8001b76:	d8fb      	bhi.n	8001b70 <cmox_aesSmall_keySchedule+0x9c>
 8001b78:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8001b7a:	6928      	ldr	r0, [r5, #16]
 8001b7c:	4047      	eors	r7, r0
 8001b7e:	62af      	str	r7, [r5, #40]	; 0x28
 8001b80:	6968      	ldr	r0, [r5, #20]
 8001b82:	ea80 0107 	eor.w	r1, r0, r7
 8001b86:	62e9      	str	r1, [r5, #44]	; 0x2c
 8001b88:	e7ed      	b.n	8001b66 <cmox_aesSmall_keySchedule+0x92>
 8001b8a:	2c07      	cmp	r4, #7
 8001b8c:	d2f0      	bcs.n	8001b70 <cmox_aesSmall_keySchedule+0x9c>
 8001b8e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8001b90:	6929      	ldr	r1, [r5, #16]
 8001b92:	0e06      	lsrs	r6, r0, #24
 8001b94:	f817 e006 	ldrb.w	lr, [r7, r6]
 8001b98:	0206      	lsls	r6, r0, #8
 8001b9a:	0e36      	lsrs	r6, r6, #24
 8001b9c:	5dbe      	ldrb	r6, [r7, r6]
 8001b9e:	0436      	lsls	r6, r6, #16
 8001ba0:	ea46 6c0e 	orr.w	ip, r6, lr, lsl #24
 8001ba4:	0406      	lsls	r6, r0, #16
 8001ba6:	ea4f 6e16 	mov.w	lr, r6, lsr #24
 8001baa:	b2c0      	uxtb	r0, r0
 8001bac:	f817 600e 	ldrb.w	r6, [r7, lr]
 8001bb0:	5c38      	ldrb	r0, [r7, r0]
 8001bb2:	ea4c 2606 	orr.w	r6, ip, r6, lsl #8
 8001bb6:	4330      	orrs	r0, r6
 8001bb8:	4041      	eors	r1, r0
 8001bba:	6329      	str	r1, [r5, #48]	; 0x30
 8001bbc:	2005      	movs	r0, #5
 8001bbe:	eb05 0180 	add.w	r1, r5, r0, lsl #2
 8001bc2:	69cf      	ldr	r7, [r1, #28]
 8001bc4:	680e      	ldr	r6, [r1, #0]
 8001bc6:	1c40      	adds	r0, r0, #1
 8001bc8:	4077      	eors	r7, r6
 8001bca:	2807      	cmp	r0, #7
 8001bcc:	620f      	str	r7, [r1, #32]
 8001bce:	d9f6      	bls.n	8001bbe <cmox_aesSmall_keySchedule+0xea>
 8001bd0:	e7c9      	b.n	8001b66 <cmox_aesSmall_keySchedule+0x92>
 8001bd2:	f04f 1301 	mov.w	r3, #65537	; 0x10001
 8001bd6:	e7c9      	b.n	8001b6c <cmox_aesSmall_keySchedule+0x98>
 8001bd8:	00010004 	.word	0x00010004
 8001bdc:	0800fc74 	.word	0x0800fc74
 8001be0:	0800db14 	.word	0x0800db14

08001be4 <__aeabi_memset>:
 8001be4:	b470      	push	{r4, r5, r6}
 8001be6:	0784      	lsls	r4, r0, #30
 8001be8:	d046      	beq.n	8001c78 <__aeabi_memset+0x94>
 8001bea:	1e4c      	subs	r4, r1, #1
 8001bec:	2900      	cmp	r1, #0
 8001bee:	d041      	beq.n	8001c74 <__aeabi_memset+0x90>
 8001bf0:	b2d5      	uxtb	r5, r2
 8001bf2:	4603      	mov	r3, r0
 8001bf4:	e002      	b.n	8001bfc <__aeabi_memset+0x18>
 8001bf6:	1e61      	subs	r1, r4, #1
 8001bf8:	b3e4      	cbz	r4, 8001c74 <__aeabi_memset+0x90>
 8001bfa:	460c      	mov	r4, r1
 8001bfc:	f803 5b01 	strb.w	r5, [r3], #1
 8001c00:	0799      	lsls	r1, r3, #30
 8001c02:	d1f8      	bne.n	8001bf6 <__aeabi_memset+0x12>
 8001c04:	2c03      	cmp	r4, #3
 8001c06:	d92e      	bls.n	8001c66 <__aeabi_memset+0x82>
 8001c08:	b2d5      	uxtb	r5, r2
 8001c0a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8001c0e:	2c0f      	cmp	r4, #15
 8001c10:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8001c14:	d919      	bls.n	8001c4a <__aeabi_memset+0x66>
 8001c16:	4626      	mov	r6, r4
 8001c18:	f103 0110 	add.w	r1, r3, #16
 8001c1c:	3e10      	subs	r6, #16
 8001c1e:	2e0f      	cmp	r6, #15
 8001c20:	f841 5c10 	str.w	r5, [r1, #-16]
 8001c24:	f841 5c0c 	str.w	r5, [r1, #-12]
 8001c28:	f841 5c08 	str.w	r5, [r1, #-8]
 8001c2c:	f841 5c04 	str.w	r5, [r1, #-4]
 8001c30:	f101 0110 	add.w	r1, r1, #16
 8001c34:	d8f2      	bhi.n	8001c1c <__aeabi_memset+0x38>
 8001c36:	f1a4 0110 	sub.w	r1, r4, #16
 8001c3a:	f021 010f 	bic.w	r1, r1, #15
 8001c3e:	f004 040f 	and.w	r4, r4, #15
 8001c42:	3110      	adds	r1, #16
 8001c44:	2c03      	cmp	r4, #3
 8001c46:	440b      	add	r3, r1
 8001c48:	d90d      	bls.n	8001c66 <__aeabi_memset+0x82>
 8001c4a:	461e      	mov	r6, r3
 8001c4c:	4621      	mov	r1, r4
 8001c4e:	3904      	subs	r1, #4
 8001c50:	2903      	cmp	r1, #3
 8001c52:	f846 5b04 	str.w	r5, [r6], #4
 8001c56:	d8fa      	bhi.n	8001c4e <__aeabi_memset+0x6a>
 8001c58:	1f21      	subs	r1, r4, #4
 8001c5a:	f021 0103 	bic.w	r1, r1, #3
 8001c5e:	3104      	adds	r1, #4
 8001c60:	440b      	add	r3, r1
 8001c62:	f004 0403 	and.w	r4, r4, #3
 8001c66:	b12c      	cbz	r4, 8001c74 <__aeabi_memset+0x90>
 8001c68:	b2d2      	uxtb	r2, r2
 8001c6a:	441c      	add	r4, r3
 8001c6c:	f803 2b01 	strb.w	r2, [r3], #1
 8001c70:	42a3      	cmp	r3, r4
 8001c72:	d1fb      	bne.n	8001c6c <__aeabi_memset+0x88>
 8001c74:	bc70      	pop	{r4, r5, r6}
 8001c76:	4770      	bx	lr
 8001c78:	460c      	mov	r4, r1
 8001c7a:	4603      	mov	r3, r0
 8001c7c:	e7c2      	b.n	8001c04 <__aeabi_memset+0x20>
	...

08001c80 <memchr>:
 8001c80:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8001c84:	2a10      	cmp	r2, #16
 8001c86:	db2b      	blt.n	8001ce0 <memchr+0x60>
 8001c88:	f010 0f07 	tst.w	r0, #7
 8001c8c:	d008      	beq.n	8001ca0 <memchr+0x20>
 8001c8e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8001c92:	3a01      	subs	r2, #1
 8001c94:	428b      	cmp	r3, r1
 8001c96:	d02d      	beq.n	8001cf4 <memchr+0x74>
 8001c98:	f010 0f07 	tst.w	r0, #7
 8001c9c:	b342      	cbz	r2, 8001cf0 <memchr+0x70>
 8001c9e:	d1f6      	bne.n	8001c8e <memchr+0xe>
 8001ca0:	b4f0      	push	{r4, r5, r6, r7}
 8001ca2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8001ca6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8001caa:	f022 0407 	bic.w	r4, r2, #7
 8001cae:	f07f 0700 	mvns.w	r7, #0
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8001cb8:	3c08      	subs	r4, #8
 8001cba:	ea85 0501 	eor.w	r5, r5, r1
 8001cbe:	ea86 0601 	eor.w	r6, r6, r1
 8001cc2:	fa85 f547 	uadd8	r5, r5, r7
 8001cc6:	faa3 f587 	sel	r5, r3, r7
 8001cca:	fa86 f647 	uadd8	r6, r6, r7
 8001cce:	faa5 f687 	sel	r6, r5, r7
 8001cd2:	b98e      	cbnz	r6, 8001cf8 <memchr+0x78>
 8001cd4:	d1ee      	bne.n	8001cb4 <memchr+0x34>
 8001cd6:	bcf0      	pop	{r4, r5, r6, r7}
 8001cd8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8001cdc:	f002 0207 	and.w	r2, r2, #7
 8001ce0:	b132      	cbz	r2, 8001cf0 <memchr+0x70>
 8001ce2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8001ce6:	3a01      	subs	r2, #1
 8001ce8:	ea83 0301 	eor.w	r3, r3, r1
 8001cec:	b113      	cbz	r3, 8001cf4 <memchr+0x74>
 8001cee:	d1f8      	bne.n	8001ce2 <memchr+0x62>
 8001cf0:	2000      	movs	r0, #0
 8001cf2:	4770      	bx	lr
 8001cf4:	3801      	subs	r0, #1
 8001cf6:	4770      	bx	lr
 8001cf8:	2d00      	cmp	r5, #0
 8001cfa:	bf06      	itte	eq
 8001cfc:	4635      	moveq	r5, r6
 8001cfe:	3803      	subeq	r0, #3
 8001d00:	3807      	subne	r0, #7
 8001d02:	f015 0f01 	tst.w	r5, #1
 8001d06:	d107      	bne.n	8001d18 <memchr+0x98>
 8001d08:	3001      	adds	r0, #1
 8001d0a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8001d0e:	bf02      	ittt	eq
 8001d10:	3001      	addeq	r0, #1
 8001d12:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8001d16:	3001      	addeq	r0, #1
 8001d18:	bcf0      	pop	{r4, r5, r6, r7}
 8001d1a:	3801      	subs	r0, #1
 8001d1c:	4770      	bx	lr
 8001d1e:	bf00      	nop

08001d20 <__aeabi_uldivmod>:
 8001d20:	b953      	cbnz	r3, 8001d38 <__aeabi_uldivmod+0x18>
 8001d22:	b94a      	cbnz	r2, 8001d38 <__aeabi_uldivmod+0x18>
 8001d24:	2900      	cmp	r1, #0
 8001d26:	bf08      	it	eq
 8001d28:	2800      	cmpeq	r0, #0
 8001d2a:	bf1c      	itt	ne
 8001d2c:	f04f 31ff 	movne.w	r1, #4294967295
 8001d30:	f04f 30ff 	movne.w	r0, #4294967295
 8001d34:	f000 b970 	b.w	8002018 <__aeabi_idiv0>
 8001d38:	f1ad 0c08 	sub.w	ip, sp, #8
 8001d3c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8001d40:	f000 f806 	bl	8001d50 <__udivmoddi4>
 8001d44:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001d48:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001d4c:	b004      	add	sp, #16
 8001d4e:	4770      	bx	lr

08001d50 <__udivmoddi4>:
 8001d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d54:	9e08      	ldr	r6, [sp, #32]
 8001d56:	460d      	mov	r5, r1
 8001d58:	4604      	mov	r4, r0
 8001d5a:	460f      	mov	r7, r1
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d14a      	bne.n	8001df6 <__udivmoddi4+0xa6>
 8001d60:	428a      	cmp	r2, r1
 8001d62:	4694      	mov	ip, r2
 8001d64:	d965      	bls.n	8001e32 <__udivmoddi4+0xe2>
 8001d66:	fab2 f382 	clz	r3, r2
 8001d6a:	b143      	cbz	r3, 8001d7e <__udivmoddi4+0x2e>
 8001d6c:	fa02 fc03 	lsl.w	ip, r2, r3
 8001d70:	f1c3 0220 	rsb	r2, r3, #32
 8001d74:	409f      	lsls	r7, r3
 8001d76:	fa20 f202 	lsr.w	r2, r0, r2
 8001d7a:	4317      	orrs	r7, r2
 8001d7c:	409c      	lsls	r4, r3
 8001d7e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8001d82:	fa1f f58c 	uxth.w	r5, ip
 8001d86:	fbb7 f1fe 	udiv	r1, r7, lr
 8001d8a:	0c22      	lsrs	r2, r4, #16
 8001d8c:	fb0e 7711 	mls	r7, lr, r1, r7
 8001d90:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8001d94:	fb01 f005 	mul.w	r0, r1, r5
 8001d98:	4290      	cmp	r0, r2
 8001d9a:	d90a      	bls.n	8001db2 <__udivmoddi4+0x62>
 8001d9c:	eb1c 0202 	adds.w	r2, ip, r2
 8001da0:	f101 37ff 	add.w	r7, r1, #4294967295
 8001da4:	f080 811c 	bcs.w	8001fe0 <__udivmoddi4+0x290>
 8001da8:	4290      	cmp	r0, r2
 8001daa:	f240 8119 	bls.w	8001fe0 <__udivmoddi4+0x290>
 8001dae:	3902      	subs	r1, #2
 8001db0:	4462      	add	r2, ip
 8001db2:	1a12      	subs	r2, r2, r0
 8001db4:	b2a4      	uxth	r4, r4
 8001db6:	fbb2 f0fe 	udiv	r0, r2, lr
 8001dba:	fb0e 2210 	mls	r2, lr, r0, r2
 8001dbe:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8001dc2:	fb00 f505 	mul.w	r5, r0, r5
 8001dc6:	42a5      	cmp	r5, r4
 8001dc8:	d90a      	bls.n	8001de0 <__udivmoddi4+0x90>
 8001dca:	eb1c 0404 	adds.w	r4, ip, r4
 8001dce:	f100 32ff 	add.w	r2, r0, #4294967295
 8001dd2:	f080 8107 	bcs.w	8001fe4 <__udivmoddi4+0x294>
 8001dd6:	42a5      	cmp	r5, r4
 8001dd8:	f240 8104 	bls.w	8001fe4 <__udivmoddi4+0x294>
 8001ddc:	4464      	add	r4, ip
 8001dde:	3802      	subs	r0, #2
 8001de0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8001de4:	1b64      	subs	r4, r4, r5
 8001de6:	2100      	movs	r1, #0
 8001de8:	b11e      	cbz	r6, 8001df2 <__udivmoddi4+0xa2>
 8001dea:	40dc      	lsrs	r4, r3
 8001dec:	2300      	movs	r3, #0
 8001dee:	e9c6 4300 	strd	r4, r3, [r6]
 8001df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001df6:	428b      	cmp	r3, r1
 8001df8:	d908      	bls.n	8001e0c <__udivmoddi4+0xbc>
 8001dfa:	2e00      	cmp	r6, #0
 8001dfc:	f000 80ed 	beq.w	8001fda <__udivmoddi4+0x28a>
 8001e00:	2100      	movs	r1, #0
 8001e02:	e9c6 0500 	strd	r0, r5, [r6]
 8001e06:	4608      	mov	r0, r1
 8001e08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e0c:	fab3 f183 	clz	r1, r3
 8001e10:	2900      	cmp	r1, #0
 8001e12:	d149      	bne.n	8001ea8 <__udivmoddi4+0x158>
 8001e14:	42ab      	cmp	r3, r5
 8001e16:	d302      	bcc.n	8001e1e <__udivmoddi4+0xce>
 8001e18:	4282      	cmp	r2, r0
 8001e1a:	f200 80f8 	bhi.w	800200e <__udivmoddi4+0x2be>
 8001e1e:	1a84      	subs	r4, r0, r2
 8001e20:	eb65 0203 	sbc.w	r2, r5, r3
 8001e24:	2001      	movs	r0, #1
 8001e26:	4617      	mov	r7, r2
 8001e28:	2e00      	cmp	r6, #0
 8001e2a:	d0e2      	beq.n	8001df2 <__udivmoddi4+0xa2>
 8001e2c:	e9c6 4700 	strd	r4, r7, [r6]
 8001e30:	e7df      	b.n	8001df2 <__udivmoddi4+0xa2>
 8001e32:	b902      	cbnz	r2, 8001e36 <__udivmoddi4+0xe6>
 8001e34:	deff      	udf	#255	; 0xff
 8001e36:	fab2 f382 	clz	r3, r2
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	f040 8090 	bne.w	8001f60 <__udivmoddi4+0x210>
 8001e40:	1a8a      	subs	r2, r1, r2
 8001e42:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001e46:	fa1f fe8c 	uxth.w	lr, ip
 8001e4a:	2101      	movs	r1, #1
 8001e4c:	fbb2 f5f7 	udiv	r5, r2, r7
 8001e50:	fb07 2015 	mls	r0, r7, r5, r2
 8001e54:	0c22      	lsrs	r2, r4, #16
 8001e56:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8001e5a:	fb0e f005 	mul.w	r0, lr, r5
 8001e5e:	4290      	cmp	r0, r2
 8001e60:	d908      	bls.n	8001e74 <__udivmoddi4+0x124>
 8001e62:	eb1c 0202 	adds.w	r2, ip, r2
 8001e66:	f105 38ff 	add.w	r8, r5, #4294967295
 8001e6a:	d202      	bcs.n	8001e72 <__udivmoddi4+0x122>
 8001e6c:	4290      	cmp	r0, r2
 8001e6e:	f200 80cb 	bhi.w	8002008 <__udivmoddi4+0x2b8>
 8001e72:	4645      	mov	r5, r8
 8001e74:	1a12      	subs	r2, r2, r0
 8001e76:	b2a4      	uxth	r4, r4
 8001e78:	fbb2 f0f7 	udiv	r0, r2, r7
 8001e7c:	fb07 2210 	mls	r2, r7, r0, r2
 8001e80:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8001e84:	fb0e fe00 	mul.w	lr, lr, r0
 8001e88:	45a6      	cmp	lr, r4
 8001e8a:	d908      	bls.n	8001e9e <__udivmoddi4+0x14e>
 8001e8c:	eb1c 0404 	adds.w	r4, ip, r4
 8001e90:	f100 32ff 	add.w	r2, r0, #4294967295
 8001e94:	d202      	bcs.n	8001e9c <__udivmoddi4+0x14c>
 8001e96:	45a6      	cmp	lr, r4
 8001e98:	f200 80bb 	bhi.w	8002012 <__udivmoddi4+0x2c2>
 8001e9c:	4610      	mov	r0, r2
 8001e9e:	eba4 040e 	sub.w	r4, r4, lr
 8001ea2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8001ea6:	e79f      	b.n	8001de8 <__udivmoddi4+0x98>
 8001ea8:	f1c1 0720 	rsb	r7, r1, #32
 8001eac:	408b      	lsls	r3, r1
 8001eae:	fa22 fc07 	lsr.w	ip, r2, r7
 8001eb2:	ea4c 0c03 	orr.w	ip, ip, r3
 8001eb6:	fa05 f401 	lsl.w	r4, r5, r1
 8001eba:	fa20 f307 	lsr.w	r3, r0, r7
 8001ebe:	40fd      	lsrs	r5, r7
 8001ec0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8001ec4:	4323      	orrs	r3, r4
 8001ec6:	fbb5 f8f9 	udiv	r8, r5, r9
 8001eca:	fa1f fe8c 	uxth.w	lr, ip
 8001ece:	fb09 5518 	mls	r5, r9, r8, r5
 8001ed2:	0c1c      	lsrs	r4, r3, #16
 8001ed4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8001ed8:	fb08 f50e 	mul.w	r5, r8, lr
 8001edc:	42a5      	cmp	r5, r4
 8001ede:	fa02 f201 	lsl.w	r2, r2, r1
 8001ee2:	fa00 f001 	lsl.w	r0, r0, r1
 8001ee6:	d90b      	bls.n	8001f00 <__udivmoddi4+0x1b0>
 8001ee8:	eb1c 0404 	adds.w	r4, ip, r4
 8001eec:	f108 3aff 	add.w	sl, r8, #4294967295
 8001ef0:	f080 8088 	bcs.w	8002004 <__udivmoddi4+0x2b4>
 8001ef4:	42a5      	cmp	r5, r4
 8001ef6:	f240 8085 	bls.w	8002004 <__udivmoddi4+0x2b4>
 8001efa:	f1a8 0802 	sub.w	r8, r8, #2
 8001efe:	4464      	add	r4, ip
 8001f00:	1b64      	subs	r4, r4, r5
 8001f02:	b29d      	uxth	r5, r3
 8001f04:	fbb4 f3f9 	udiv	r3, r4, r9
 8001f08:	fb09 4413 	mls	r4, r9, r3, r4
 8001f0c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8001f10:	fb03 fe0e 	mul.w	lr, r3, lr
 8001f14:	45a6      	cmp	lr, r4
 8001f16:	d908      	bls.n	8001f2a <__udivmoddi4+0x1da>
 8001f18:	eb1c 0404 	adds.w	r4, ip, r4
 8001f1c:	f103 35ff 	add.w	r5, r3, #4294967295
 8001f20:	d26c      	bcs.n	8001ffc <__udivmoddi4+0x2ac>
 8001f22:	45a6      	cmp	lr, r4
 8001f24:	d96a      	bls.n	8001ffc <__udivmoddi4+0x2ac>
 8001f26:	3b02      	subs	r3, #2
 8001f28:	4464      	add	r4, ip
 8001f2a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8001f2e:	fba3 9502 	umull	r9, r5, r3, r2
 8001f32:	eba4 040e 	sub.w	r4, r4, lr
 8001f36:	42ac      	cmp	r4, r5
 8001f38:	46c8      	mov	r8, r9
 8001f3a:	46ae      	mov	lr, r5
 8001f3c:	d356      	bcc.n	8001fec <__udivmoddi4+0x29c>
 8001f3e:	d053      	beq.n	8001fe8 <__udivmoddi4+0x298>
 8001f40:	b156      	cbz	r6, 8001f58 <__udivmoddi4+0x208>
 8001f42:	ebb0 0208 	subs.w	r2, r0, r8
 8001f46:	eb64 040e 	sbc.w	r4, r4, lr
 8001f4a:	fa04 f707 	lsl.w	r7, r4, r7
 8001f4e:	40ca      	lsrs	r2, r1
 8001f50:	40cc      	lsrs	r4, r1
 8001f52:	4317      	orrs	r7, r2
 8001f54:	e9c6 7400 	strd	r7, r4, [r6]
 8001f58:	4618      	mov	r0, r3
 8001f5a:	2100      	movs	r1, #0
 8001f5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f60:	f1c3 0120 	rsb	r1, r3, #32
 8001f64:	fa02 fc03 	lsl.w	ip, r2, r3
 8001f68:	fa20 f201 	lsr.w	r2, r0, r1
 8001f6c:	fa25 f101 	lsr.w	r1, r5, r1
 8001f70:	409d      	lsls	r5, r3
 8001f72:	432a      	orrs	r2, r5
 8001f74:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001f78:	fa1f fe8c 	uxth.w	lr, ip
 8001f7c:	fbb1 f0f7 	udiv	r0, r1, r7
 8001f80:	fb07 1510 	mls	r5, r7, r0, r1
 8001f84:	0c11      	lsrs	r1, r2, #16
 8001f86:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8001f8a:	fb00 f50e 	mul.w	r5, r0, lr
 8001f8e:	428d      	cmp	r5, r1
 8001f90:	fa04 f403 	lsl.w	r4, r4, r3
 8001f94:	d908      	bls.n	8001fa8 <__udivmoddi4+0x258>
 8001f96:	eb1c 0101 	adds.w	r1, ip, r1
 8001f9a:	f100 38ff 	add.w	r8, r0, #4294967295
 8001f9e:	d22f      	bcs.n	8002000 <__udivmoddi4+0x2b0>
 8001fa0:	428d      	cmp	r5, r1
 8001fa2:	d92d      	bls.n	8002000 <__udivmoddi4+0x2b0>
 8001fa4:	3802      	subs	r0, #2
 8001fa6:	4461      	add	r1, ip
 8001fa8:	1b49      	subs	r1, r1, r5
 8001faa:	b292      	uxth	r2, r2
 8001fac:	fbb1 f5f7 	udiv	r5, r1, r7
 8001fb0:	fb07 1115 	mls	r1, r7, r5, r1
 8001fb4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001fb8:	fb05 f10e 	mul.w	r1, r5, lr
 8001fbc:	4291      	cmp	r1, r2
 8001fbe:	d908      	bls.n	8001fd2 <__udivmoddi4+0x282>
 8001fc0:	eb1c 0202 	adds.w	r2, ip, r2
 8001fc4:	f105 38ff 	add.w	r8, r5, #4294967295
 8001fc8:	d216      	bcs.n	8001ff8 <__udivmoddi4+0x2a8>
 8001fca:	4291      	cmp	r1, r2
 8001fcc:	d914      	bls.n	8001ff8 <__udivmoddi4+0x2a8>
 8001fce:	3d02      	subs	r5, #2
 8001fd0:	4462      	add	r2, ip
 8001fd2:	1a52      	subs	r2, r2, r1
 8001fd4:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8001fd8:	e738      	b.n	8001e4c <__udivmoddi4+0xfc>
 8001fda:	4631      	mov	r1, r6
 8001fdc:	4630      	mov	r0, r6
 8001fde:	e708      	b.n	8001df2 <__udivmoddi4+0xa2>
 8001fe0:	4639      	mov	r1, r7
 8001fe2:	e6e6      	b.n	8001db2 <__udivmoddi4+0x62>
 8001fe4:	4610      	mov	r0, r2
 8001fe6:	e6fb      	b.n	8001de0 <__udivmoddi4+0x90>
 8001fe8:	4548      	cmp	r0, r9
 8001fea:	d2a9      	bcs.n	8001f40 <__udivmoddi4+0x1f0>
 8001fec:	ebb9 0802 	subs.w	r8, r9, r2
 8001ff0:	eb65 0e0c 	sbc.w	lr, r5, ip
 8001ff4:	3b01      	subs	r3, #1
 8001ff6:	e7a3      	b.n	8001f40 <__udivmoddi4+0x1f0>
 8001ff8:	4645      	mov	r5, r8
 8001ffa:	e7ea      	b.n	8001fd2 <__udivmoddi4+0x282>
 8001ffc:	462b      	mov	r3, r5
 8001ffe:	e794      	b.n	8001f2a <__udivmoddi4+0x1da>
 8002000:	4640      	mov	r0, r8
 8002002:	e7d1      	b.n	8001fa8 <__udivmoddi4+0x258>
 8002004:	46d0      	mov	r8, sl
 8002006:	e77b      	b.n	8001f00 <__udivmoddi4+0x1b0>
 8002008:	3d02      	subs	r5, #2
 800200a:	4462      	add	r2, ip
 800200c:	e732      	b.n	8001e74 <__udivmoddi4+0x124>
 800200e:	4608      	mov	r0, r1
 8002010:	e70a      	b.n	8001e28 <__udivmoddi4+0xd8>
 8002012:	4464      	add	r4, ip
 8002014:	3802      	subs	r0, #2
 8002016:	e742      	b.n	8001e9e <__udivmoddi4+0x14e>

08002018 <__aeabi_idiv0>:
 8002018:	4770      	bx	lr
 800201a:	bf00      	nop

0800201c <MY_FLASH_EraseSector>:
static uint8_t MY_SectorNum;

//functions definitions
//1. Erase Sector
static void MY_FLASH_EraseSector(void)
{
 800201c:	b580      	push	{r7, lr}
 800201e:	af00      	add	r7, sp, #0
	HAL_FLASH_Unlock();
 8002020:	f002 fe12 	bl	8004c48 <HAL_FLASH_Unlock>
	//Erase the required Flash sector
	FLASH_Erase_Sector(MY_SectorNum, FLASH_VOLTAGE_RANGE_3);
 8002024:	4b04      	ldr	r3, [pc, #16]	; (8002038 <MY_FLASH_EraseSector+0x1c>)
 8002026:	781b      	ldrb	r3, [r3, #0]
 8002028:	2102      	movs	r1, #2
 800202a:	4618      	mov	r0, r3
 800202c:	f002 ff6e 	bl	8004f0c <FLASH_Erase_Sector>
	HAL_FLASH_Lock();
 8002030:	f002 fe2c 	bl	8004c8c <HAL_FLASH_Lock>
}
 8002034:	bf00      	nop
 8002036:	bd80      	pop	{r7, pc}
 8002038:	20000190 	.word	0x20000190

0800203c <MY_FLASH_SetSectorAddrs>:

//2. Set Sector Adress
void MY_FLASH_SetSectorAddrs(uint8_t sector, uint32_t addrs)
{
 800203c:	b480      	push	{r7}
 800203e:	b083      	sub	sp, #12
 8002040:	af00      	add	r7, sp, #0
 8002042:	4603      	mov	r3, r0
 8002044:	6039      	str	r1, [r7, #0]
 8002046:	71fb      	strb	r3, [r7, #7]
	MY_SectorNum = sector;
 8002048:	4a05      	ldr	r2, [pc, #20]	; (8002060 <MY_FLASH_SetSectorAddrs+0x24>)
 800204a:	79fb      	ldrb	r3, [r7, #7]
 800204c:	7013      	strb	r3, [r2, #0]
	MY_SectorAddrs = addrs;
 800204e:	4a05      	ldr	r2, [pc, #20]	; (8002064 <MY_FLASH_SetSectorAddrs+0x28>)
 8002050:	683b      	ldr	r3, [r7, #0]
 8002052:	6013      	str	r3, [r2, #0]
}
 8002054:	bf00      	nop
 8002056:	370c      	adds	r7, #12
 8002058:	46bd      	mov	sp, r7
 800205a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800205e:	4770      	bx	lr
 8002060:	20000190 	.word	0x20000190
 8002064:	2000018c 	.word	0x2000018c

08002068 <MY_FLASH_WriteN>:

//3. Write Flash
void MY_FLASH_WriteN(uint32_t idx, void *wrBuf, uint32_t Nsize, DataTypeDef dataType)
{
 8002068:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800206c:	b088      	sub	sp, #32
 800206e:	af00      	add	r7, sp, #0
 8002070:	60f8      	str	r0, [r7, #12]
 8002072:	60b9      	str	r1, [r7, #8]
 8002074:	607a      	str	r2, [r7, #4]
 8002076:	70fb      	strb	r3, [r7, #3]
	uint32_t flashAddress = MY_SectorAddrs + idx;
 8002078:	4b37      	ldr	r3, [pc, #220]	; (8002158 <MY_FLASH_WriteN+0xf0>)
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	68fa      	ldr	r2, [r7, #12]
 800207e:	4413      	add	r3, r2
 8002080:	61fb      	str	r3, [r7, #28]
	
	//Erase sector before write
	MY_FLASH_EraseSector();
 8002082:	f7ff ffcb 	bl	800201c <MY_FLASH_EraseSector>
	
	//Unlock Flash
	HAL_FLASH_Unlock();
 8002086:	f002 fddf 	bl	8004c48 <HAL_FLASH_Unlock>
	//Write to Flash
	switch(dataType)
 800208a:	78fb      	ldrb	r3, [r7, #3]
 800208c:	2b02      	cmp	r3, #2
 800208e:	d03f      	beq.n	8002110 <MY_FLASH_WriteN+0xa8>
 8002090:	2b02      	cmp	r3, #2
 8002092:	dc59      	bgt.n	8002148 <MY_FLASH_WriteN+0xe0>
 8002094:	2b00      	cmp	r3, #0
 8002096:	d002      	beq.n	800209e <MY_FLASH_WriteN+0x36>
 8002098:	2b01      	cmp	r3, #1
 800209a:	d01c      	beq.n	80020d6 <MY_FLASH_WriteN+0x6e>
 800209c:	e054      	b.n	8002148 <MY_FLASH_WriteN+0xe0>
	{
		case DATA_TYPE_8:
				for(uint32_t i=0; i<Nsize; i++)
 800209e:	2300      	movs	r3, #0
 80020a0:	61bb      	str	r3, [r7, #24]
 80020a2:	e013      	b.n	80020cc <MY_FLASH_WriteN+0x64>
				{
					HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, flashAddress , ((uint8_t *)wrBuf)[i]);
 80020a4:	68ba      	ldr	r2, [r7, #8]
 80020a6:	69bb      	ldr	r3, [r7, #24]
 80020a8:	4413      	add	r3, r2
 80020aa:	781b      	ldrb	r3, [r3, #0]
 80020ac:	b2db      	uxtb	r3, r3
 80020ae:	2200      	movs	r2, #0
 80020b0:	469a      	mov	sl, r3
 80020b2:	4693      	mov	fp, r2
 80020b4:	4652      	mov	r2, sl
 80020b6:	465b      	mov	r3, fp
 80020b8:	69f9      	ldr	r1, [r7, #28]
 80020ba:	2000      	movs	r0, #0
 80020bc:	f002 fd70 	bl	8004ba0 <HAL_FLASH_Program>
					flashAddress++;
 80020c0:	69fb      	ldr	r3, [r7, #28]
 80020c2:	3301      	adds	r3, #1
 80020c4:	61fb      	str	r3, [r7, #28]
				for(uint32_t i=0; i<Nsize; i++)
 80020c6:	69bb      	ldr	r3, [r7, #24]
 80020c8:	3301      	adds	r3, #1
 80020ca:	61bb      	str	r3, [r7, #24]
 80020cc:	69ba      	ldr	r2, [r7, #24]
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	429a      	cmp	r2, r3
 80020d2:	d3e7      	bcc.n	80020a4 <MY_FLASH_WriteN+0x3c>
				}
			break;
 80020d4:	e038      	b.n	8002148 <MY_FLASH_WriteN+0xe0>
		
		case DATA_TYPE_16:
				for(uint32_t i=0; i<Nsize; i++)
 80020d6:	2300      	movs	r3, #0
 80020d8:	617b      	str	r3, [r7, #20]
 80020da:	e014      	b.n	8002106 <MY_FLASH_WriteN+0x9e>
				{
					HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, flashAddress , ((uint16_t *)wrBuf)[i]);
 80020dc:	697b      	ldr	r3, [r7, #20]
 80020de:	005b      	lsls	r3, r3, #1
 80020e0:	68ba      	ldr	r2, [r7, #8]
 80020e2:	4413      	add	r3, r2
 80020e4:	881b      	ldrh	r3, [r3, #0]
 80020e6:	b29b      	uxth	r3, r3
 80020e8:	2200      	movs	r2, #0
 80020ea:	4698      	mov	r8, r3
 80020ec:	4691      	mov	r9, r2
 80020ee:	4642      	mov	r2, r8
 80020f0:	464b      	mov	r3, r9
 80020f2:	69f9      	ldr	r1, [r7, #28]
 80020f4:	2001      	movs	r0, #1
 80020f6:	f002 fd53 	bl	8004ba0 <HAL_FLASH_Program>
					flashAddress+=2;
 80020fa:	69fb      	ldr	r3, [r7, #28]
 80020fc:	3302      	adds	r3, #2
 80020fe:	61fb      	str	r3, [r7, #28]
				for(uint32_t i=0; i<Nsize; i++)
 8002100:	697b      	ldr	r3, [r7, #20]
 8002102:	3301      	adds	r3, #1
 8002104:	617b      	str	r3, [r7, #20]
 8002106:	697a      	ldr	r2, [r7, #20]
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	429a      	cmp	r2, r3
 800210c:	d3e6      	bcc.n	80020dc <MY_FLASH_WriteN+0x74>
				}
			break;
 800210e:	e01b      	b.n	8002148 <MY_FLASH_WriteN+0xe0>
		
		case DATA_TYPE_32:
				for(uint32_t i=0; i<Nsize; i++)
 8002110:	2300      	movs	r3, #0
 8002112:	613b      	str	r3, [r7, #16]
 8002114:	e013      	b.n	800213e <MY_FLASH_WriteN+0xd6>
				{
					HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, flashAddress , ((uint32_t *)wrBuf)[i]);
 8002116:	693b      	ldr	r3, [r7, #16]
 8002118:	009b      	lsls	r3, r3, #2
 800211a:	68ba      	ldr	r2, [r7, #8]
 800211c:	4413      	add	r3, r2
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	2200      	movs	r2, #0
 8002122:	461c      	mov	r4, r3
 8002124:	4615      	mov	r5, r2
 8002126:	4622      	mov	r2, r4
 8002128:	462b      	mov	r3, r5
 800212a:	69f9      	ldr	r1, [r7, #28]
 800212c:	2002      	movs	r0, #2
 800212e:	f002 fd37 	bl	8004ba0 <HAL_FLASH_Program>
					flashAddress+=4;
 8002132:	69fb      	ldr	r3, [r7, #28]
 8002134:	3304      	adds	r3, #4
 8002136:	61fb      	str	r3, [r7, #28]
				for(uint32_t i=0; i<Nsize; i++)
 8002138:	693b      	ldr	r3, [r7, #16]
 800213a:	3301      	adds	r3, #1
 800213c:	613b      	str	r3, [r7, #16]
 800213e:	693a      	ldr	r2, [r7, #16]
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	429a      	cmp	r2, r3
 8002144:	d3e7      	bcc.n	8002116 <MY_FLASH_WriteN+0xae>
				}
			break;
 8002146:	bf00      	nop
	}
	//Lock the Flash space
	HAL_FLASH_Lock();
 8002148:	f002 fda0 	bl	8004c8c <HAL_FLASH_Lock>
}
 800214c:	bf00      	nop
 800214e:	3720      	adds	r7, #32
 8002150:	46bd      	mov	sp, r7
 8002152:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002156:	bf00      	nop
 8002158:	2000018c 	.word	0x2000018c

0800215c <MY_FLASH_ReadN>:
//4. Read Flash
void MY_FLASH_ReadN(uint32_t idx, void *rdBuf, uint32_t Nsize, DataTypeDef dataType)
{
 800215c:	b480      	push	{r7}
 800215e:	b089      	sub	sp, #36	; 0x24
 8002160:	af00      	add	r7, sp, #0
 8002162:	60f8      	str	r0, [r7, #12]
 8002164:	60b9      	str	r1, [r7, #8]
 8002166:	607a      	str	r2, [r7, #4]
 8002168:	70fb      	strb	r3, [r7, #3]
	uint32_t flashAddress = MY_SectorAddrs + idx;
 800216a:	4b29      	ldr	r3, [pc, #164]	; (8002210 <MY_FLASH_ReadN+0xb4>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	68fa      	ldr	r2, [r7, #12]
 8002170:	4413      	add	r3, r2
 8002172:	61fb      	str	r3, [r7, #28]
	
	switch(dataType)
 8002174:	78fb      	ldrb	r3, [r7, #3]
 8002176:	2b02      	cmp	r3, #2
 8002178:	d02f      	beq.n	80021da <MY_FLASH_ReadN+0x7e>
 800217a:	2b02      	cmp	r3, #2
 800217c:	dc42      	bgt.n	8002204 <MY_FLASH_ReadN+0xa8>
 800217e:	2b00      	cmp	r3, #0
 8002180:	d002      	beq.n	8002188 <MY_FLASH_ReadN+0x2c>
 8002182:	2b01      	cmp	r3, #1
 8002184:	d014      	beq.n	80021b0 <MY_FLASH_ReadN+0x54>
					*((uint32_t *)rdBuf + i) = *(uint32_t *)flashAddress;
					flashAddress+=4;
				}
			break;
	}
}
 8002186:	e03d      	b.n	8002204 <MY_FLASH_ReadN+0xa8>
				for(uint32_t i=0; i<Nsize; i++)
 8002188:	2300      	movs	r3, #0
 800218a:	61bb      	str	r3, [r7, #24]
 800218c:	e00b      	b.n	80021a6 <MY_FLASH_ReadN+0x4a>
					*((uint8_t *)rdBuf + i) = *(uint8_t *)flashAddress;
 800218e:	69fa      	ldr	r2, [r7, #28]
 8002190:	68b9      	ldr	r1, [r7, #8]
 8002192:	69bb      	ldr	r3, [r7, #24]
 8002194:	440b      	add	r3, r1
 8002196:	7812      	ldrb	r2, [r2, #0]
 8002198:	701a      	strb	r2, [r3, #0]
					flashAddress++;
 800219a:	69fb      	ldr	r3, [r7, #28]
 800219c:	3301      	adds	r3, #1
 800219e:	61fb      	str	r3, [r7, #28]
				for(uint32_t i=0; i<Nsize; i++)
 80021a0:	69bb      	ldr	r3, [r7, #24]
 80021a2:	3301      	adds	r3, #1
 80021a4:	61bb      	str	r3, [r7, #24]
 80021a6:	69ba      	ldr	r2, [r7, #24]
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	429a      	cmp	r2, r3
 80021ac:	d3ef      	bcc.n	800218e <MY_FLASH_ReadN+0x32>
			break;
 80021ae:	e029      	b.n	8002204 <MY_FLASH_ReadN+0xa8>
				for(uint32_t i=0; i<Nsize; i++)
 80021b0:	2300      	movs	r3, #0
 80021b2:	617b      	str	r3, [r7, #20]
 80021b4:	e00c      	b.n	80021d0 <MY_FLASH_ReadN+0x74>
					*((uint16_t *)rdBuf + i) = *(uint16_t *)flashAddress;
 80021b6:	69fa      	ldr	r2, [r7, #28]
 80021b8:	697b      	ldr	r3, [r7, #20]
 80021ba:	005b      	lsls	r3, r3, #1
 80021bc:	68b9      	ldr	r1, [r7, #8]
 80021be:	440b      	add	r3, r1
 80021c0:	8812      	ldrh	r2, [r2, #0]
 80021c2:	801a      	strh	r2, [r3, #0]
					flashAddress+=2;
 80021c4:	69fb      	ldr	r3, [r7, #28]
 80021c6:	3302      	adds	r3, #2
 80021c8:	61fb      	str	r3, [r7, #28]
				for(uint32_t i=0; i<Nsize; i++)
 80021ca:	697b      	ldr	r3, [r7, #20]
 80021cc:	3301      	adds	r3, #1
 80021ce:	617b      	str	r3, [r7, #20]
 80021d0:	697a      	ldr	r2, [r7, #20]
 80021d2:	687b      	ldr	r3, [r7, #4]
 80021d4:	429a      	cmp	r2, r3
 80021d6:	d3ee      	bcc.n	80021b6 <MY_FLASH_ReadN+0x5a>
			break;
 80021d8:	e014      	b.n	8002204 <MY_FLASH_ReadN+0xa8>
				for(uint32_t i=0; i<Nsize; i++)
 80021da:	2300      	movs	r3, #0
 80021dc:	613b      	str	r3, [r7, #16]
 80021de:	e00c      	b.n	80021fa <MY_FLASH_ReadN+0x9e>
					*((uint32_t *)rdBuf + i) = *(uint32_t *)flashAddress;
 80021e0:	69fa      	ldr	r2, [r7, #28]
 80021e2:	693b      	ldr	r3, [r7, #16]
 80021e4:	009b      	lsls	r3, r3, #2
 80021e6:	68b9      	ldr	r1, [r7, #8]
 80021e8:	440b      	add	r3, r1
 80021ea:	6812      	ldr	r2, [r2, #0]
 80021ec:	601a      	str	r2, [r3, #0]
					flashAddress+=4;
 80021ee:	69fb      	ldr	r3, [r7, #28]
 80021f0:	3304      	adds	r3, #4
 80021f2:	61fb      	str	r3, [r7, #28]
				for(uint32_t i=0; i<Nsize; i++)
 80021f4:	693b      	ldr	r3, [r7, #16]
 80021f6:	3301      	adds	r3, #1
 80021f8:	613b      	str	r3, [r7, #16]
 80021fa:	693a      	ldr	r2, [r7, #16]
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	429a      	cmp	r2, r3
 8002200:	d3ee      	bcc.n	80021e0 <MY_FLASH_ReadN+0x84>
			break;
 8002202:	bf00      	nop
}
 8002204:	bf00      	nop
 8002206:	3724      	adds	r7, #36	; 0x24
 8002208:	46bd      	mov	sp, r7
 800220a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220e:	4770      	bx	lr
 8002210:	2000018c 	.word	0x2000018c

08002214 <write_flash>:
void write_flash(uint32_t idx, uint8_t *wrBuf, uint32_t Nsize){
 8002214:	b580      	push	{r7, lr}
 8002216:	f5ad 6d80 	sub.w	sp, sp, #1024	; 0x400
 800221a:	af00      	add	r7, sp, #0
 800221c:	f507 6380 	add.w	r3, r7, #1024	; 0x400
 8002220:	f5a3 737d 	sub.w	r3, r3, #1012	; 0x3f4
 8002224:	6018      	str	r0, [r3, #0]
 8002226:	f507 6380 	add.w	r3, r7, #1024	; 0x400
 800222a:	f5a3 737e 	sub.w	r3, r3, #1016	; 0x3f8
 800222e:	6019      	str	r1, [r3, #0]
 8002230:	f507 6380 	add.w	r3, r7, #1024	; 0x400
 8002234:	f5a3 737f 	sub.w	r3, r3, #1020	; 0x3fc
 8002238:	601a      	str	r2, [r3, #0]
	uint8_t temp_mem[1000];
	MY_FLASH_ReadN(0,temp_mem,500,DATA_TYPE_8);
 800223a:	f107 0114 	add.w	r1, r7, #20
 800223e:	2300      	movs	r3, #0
 8002240:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8002244:	2000      	movs	r0, #0
 8002246:	f7ff ff89 	bl	800215c <MY_FLASH_ReadN>
	for (int i=0;i<Nsize;i++){
 800224a:	2300      	movs	r3, #0
 800224c:	f8c7 33fc 	str.w	r3, [r7, #1020]	; 0x3fc
 8002250:	e01a      	b.n	8002288 <write_flash+0x74>
		temp_mem[idx+i] = wrBuf[i];
 8002252:	f8d7 33fc 	ldr.w	r3, [r7, #1020]	; 0x3fc
 8002256:	f507 6280 	add.w	r2, r7, #1024	; 0x400
 800225a:	f5a2 727e 	sub.w	r2, r2, #1016	; 0x3f8
 800225e:	6812      	ldr	r2, [r2, #0]
 8002260:	441a      	add	r2, r3
 8002262:	f8d7 13fc 	ldr.w	r1, [r7, #1020]	; 0x3fc
 8002266:	f507 6380 	add.w	r3, r7, #1024	; 0x400
 800226a:	f5a3 737d 	sub.w	r3, r3, #1012	; 0x3f4
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	440b      	add	r3, r1
 8002272:	7811      	ldrb	r1, [r2, #0]
 8002274:	f507 6280 	add.w	r2, r7, #1024	; 0x400
 8002278:	f5a2 727b 	sub.w	r2, r2, #1004	; 0x3ec
 800227c:	54d1      	strb	r1, [r2, r3]
	for (int i=0;i<Nsize;i++){
 800227e:	f8d7 33fc 	ldr.w	r3, [r7, #1020]	; 0x3fc
 8002282:	3301      	adds	r3, #1
 8002284:	f8c7 33fc 	str.w	r3, [r7, #1020]	; 0x3fc
 8002288:	f8d7 33fc 	ldr.w	r3, [r7, #1020]	; 0x3fc
 800228c:	f507 6280 	add.w	r2, r7, #1024	; 0x400
 8002290:	f5a2 727f 	sub.w	r2, r2, #1020	; 0x3fc
 8002294:	6812      	ldr	r2, [r2, #0]
 8002296:	429a      	cmp	r2, r3
 8002298:	d8db      	bhi.n	8002252 <write_flash+0x3e>
	}
	MY_FLASH_WriteN(0,temp_mem,500,DATA_TYPE_8);
 800229a:	f107 0114 	add.w	r1, r7, #20
 800229e:	2300      	movs	r3, #0
 80022a0:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80022a4:	2000      	movs	r0, #0
 80022a6:	f7ff fedf 	bl	8002068 <MY_FLASH_WriteN>
}
 80022aa:	bf00      	nop
 80022ac:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bd80      	pop	{r7, pc}

080022b4 <cmox_ll_init>:
 80022b4:	b480      	push	{r7}
 80022b6:	b085      	sub	sp, #20
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	6078      	str	r0, [r7, #4]
 80022bc:	4b0d      	ldr	r3, [pc, #52]	; (80022f4 <cmox_ll_init+0x40>)
 80022be:	691b      	ldr	r3, [r3, #16]
 80022c0:	4a0c      	ldr	r2, [pc, #48]	; (80022f4 <cmox_ll_init+0x40>)
 80022c2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80022c6:	6113      	str	r3, [r2, #16]
 80022c8:	2300      	movs	r3, #0
 80022ca:	60fb      	str	r3, [r7, #12]
 80022cc:	4b09      	ldr	r3, [pc, #36]	; (80022f4 <cmox_ll_init+0x40>)
 80022ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022d0:	4a08      	ldr	r2, [pc, #32]	; (80022f4 <cmox_ll_init+0x40>)
 80022d2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80022d6:	6313      	str	r3, [r2, #48]	; 0x30
 80022d8:	4b06      	ldr	r3, [pc, #24]	; (80022f4 <cmox_ll_init+0x40>)
 80022da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022dc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80022e0:	60fb      	str	r3, [r7, #12]
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	2300      	movs	r3, #0
 80022e6:	4618      	mov	r0, r3
 80022e8:	3714      	adds	r7, #20
 80022ea:	46bd      	mov	sp, r7
 80022ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022f0:	4770      	bx	lr
 80022f2:	bf00      	nop
 80022f4:	40023800 	.word	0x40023800

080022f8 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 80022f8:	b480      	push	{r7}
 80022fa:	b083      	sub	sp, #12
 80022fc:	af00      	add	r7, sp, #0
 80022fe:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8002300:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002304:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8002308:	f003 0301 	and.w	r3, r3, #1
 800230c:	2b00      	cmp	r3, #0
 800230e:	d013      	beq.n	8002338 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8002310:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002314:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8002318:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800231c:	2b00      	cmp	r3, #0
 800231e:	d00b      	beq.n	8002338 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8002320:	e000      	b.n	8002324 <ITM_SendChar+0x2c>
    {
      __NOP();
 8002322:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8002324:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	2b00      	cmp	r3, #0
 800232c:	d0f9      	beq.n	8002322 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800232e:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8002332:	687a      	ldr	r2, [r7, #4]
 8002334:	b2d2      	uxtb	r2, r2
 8002336:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8002338:	687b      	ldr	r3, [r7, #4]
}
 800233a:	4618      	mov	r0, r3
 800233c:	370c      	adds	r7, #12
 800233e:	46bd      	mov	sp, r7
 8002340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002344:	4770      	bx	lr
	...

08002348 <main>:
  * @brief  The application entry point.
  * @retval int
  */

int main(void)
{
 8002348:	b580      	push	{r7, lr}
 800234a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800234c:	f002 fa64 	bl	8004818 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002350:	f000 f848 	bl	80023e4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002354:	f000 f954 	bl	8002600 <MX_GPIO_Init>
  MX_I2C1_Init();
 8002358:	f000 f8c2 	bl	80024e0 <MX_I2C1_Init>
  MX_RNG_Init();
 800235c:	f000 f8ee 	bl	800253c <MX_RNG_Init>
  MX_USB_DEVICE_Init();
 8002360:	f009 fce6 	bl	800bd30 <MX_USB_DEVICE_Init>
  MX_TIM2_Init();
 8002364:	f000 f8fe 	bl	8002564 <MX_TIM2_Init>
  MX_CRC_Init();
 8002368:	f000 f8a6 	bl	80024b8 <MX_CRC_Init>
  /* USER CODE BEGIN 2 */
  MY_FLASH_SetSectorAddrs(sector_name, sector_base_address);
 800236c:	4919      	ldr	r1, [pc, #100]	; (80023d4 <main+0x8c>)
 800236e:	200b      	movs	r0, #11
 8002370:	f7ff fe64 	bl	800203c <MY_FLASH_SetSectorAddrs>
  SSD1306_Init();
 8002374:	f001 fc54 	bl	8003c20 <SSD1306_Init>
  HAL_TIM_Base_Start_IT(&htim2);
 8002378:	4817      	ldr	r0, [pc, #92]	; (80023d8 <main+0x90>)
 800237a:	f005 fda9 	bl	8007ed0 <HAL_TIM_Base_Start_IT>
  	/*
    write_flash(BrandNew_address, &Brand_new, 1);
    write_flash(Nusers_address, &user_num, 1);
    write_flash(WrongPassword_address, &WrongPassword, 1);
    */
	if (cmox_initialize(NULL) != CMOX_INIT_SUCCESS)
 800237e:	2000      	movs	r0, #0
 8002380:	f7fe fcde 	bl	8000d40 <cmox_initialize>
 8002384:	4603      	mov	r3, r0
 8002386:	2b00      	cmp	r3, #0
 8002388:	d002      	beq.n	8002390 <main+0x48>
	{
		  printf("Init is not done\n");
 800238a:	4814      	ldr	r0, [pc, #80]	; (80023dc <main+0x94>)
 800238c:	f00a fb7c 	bl	800ca88 <puts>
	}
	Startup();
 8002390:	f000 f9b2 	bl	80026f8 <Startup>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(state == Lock)LockDevice();
 8002394:	4b12      	ldr	r3, [pc, #72]	; (80023e0 <main+0x98>)
 8002396:	781b      	ldrb	r3, [r3, #0]
 8002398:	2b00      	cmp	r3, #0
 800239a:	d101      	bne.n	80023a0 <main+0x58>
 800239c:	f000 fd06 	bl	8002dac <LockDevice>
	  if(state == Reset)ResetFactory();
 80023a0:	4b0f      	ldr	r3, [pc, #60]	; (80023e0 <main+0x98>)
 80023a2:	781b      	ldrb	r3, [r3, #0]
 80023a4:	2b01      	cmp	r3, #1
 80023a6:	d101      	bne.n	80023ac <main+0x64>
 80023a8:	f000 ff12 	bl	80031d0 <ResetFactory>
	  if(state == Timeout)TimeoutMenu();
 80023ac:	4b0c      	ldr	r3, [pc, #48]	; (80023e0 <main+0x98>)
 80023ae:	781b      	ldrb	r3, [r3, #0]
 80023b0:	2b02      	cmp	r3, #2
 80023b2:	d101      	bne.n	80023b8 <main+0x70>
 80023b4:	f000 faf4 	bl	80029a0 <TimeoutMenu>
	  if(state == Enrollment)Enroll();
 80023b8:	4b09      	ldr	r3, [pc, #36]	; (80023e0 <main+0x98>)
 80023ba:	781b      	ldrb	r3, [r3, #0]
 80023bc:	2b03      	cmp	r3, #3
 80023be:	d101      	bne.n	80023c4 <main+0x7c>
 80023c0:	f000 fb24 	bl	8002a0c <Enroll>
	  if(state == Menu)MainMenu();
 80023c4:	4b06      	ldr	r3, [pc, #24]	; (80023e0 <main+0x98>)
 80023c6:	781b      	ldrb	r3, [r3, #0]
 80023c8:	2b04      	cmp	r3, #4
 80023ca:	d1e3      	bne.n	8002394 <main+0x4c>
 80023cc:	f000 f9f6 	bl	80027bc <MainMenu>
	  if(state == Lock)LockDevice();
 80023d0:	e7e0      	b.n	8002394 <main+0x4c>
 80023d2:	bf00      	nop
 80023d4:	080e0000 	.word	0x080e0000
 80023d8:	20000200 	.word	0x20000200
 80023dc:	0800d820 	.word	0x0800d820
 80023e0:	200002c1 	.word	0x200002c1

080023e4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80023e4:	b580      	push	{r7, lr}
 80023e6:	b094      	sub	sp, #80	; 0x50
 80023e8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80023ea:	f107 0320 	add.w	r3, r7, #32
 80023ee:	2230      	movs	r2, #48	; 0x30
 80023f0:	2100      	movs	r1, #0
 80023f2:	4618      	mov	r0, r3
 80023f4:	f00a fc38 	bl	800cc68 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80023f8:	f107 030c 	add.w	r3, r7, #12
 80023fc:	2200      	movs	r2, #0
 80023fe:	601a      	str	r2, [r3, #0]
 8002400:	605a      	str	r2, [r3, #4]
 8002402:	609a      	str	r2, [r3, #8]
 8002404:	60da      	str	r2, [r3, #12]
 8002406:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002408:	2300      	movs	r3, #0
 800240a:	60bb      	str	r3, [r7, #8]
 800240c:	4b28      	ldr	r3, [pc, #160]	; (80024b0 <SystemClock_Config+0xcc>)
 800240e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002410:	4a27      	ldr	r2, [pc, #156]	; (80024b0 <SystemClock_Config+0xcc>)
 8002412:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002416:	6413      	str	r3, [r2, #64]	; 0x40
 8002418:	4b25      	ldr	r3, [pc, #148]	; (80024b0 <SystemClock_Config+0xcc>)
 800241a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800241c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002420:	60bb      	str	r3, [r7, #8]
 8002422:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002424:	2300      	movs	r3, #0
 8002426:	607b      	str	r3, [r7, #4]
 8002428:	4b22      	ldr	r3, [pc, #136]	; (80024b4 <SystemClock_Config+0xd0>)
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	4a21      	ldr	r2, [pc, #132]	; (80024b4 <SystemClock_Config+0xd0>)
 800242e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002432:	6013      	str	r3, [r2, #0]
 8002434:	4b1f      	ldr	r3, [pc, #124]	; (80024b4 <SystemClock_Config+0xd0>)
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800243c:	607b      	str	r3, [r7, #4]
 800243e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002440:	2301      	movs	r3, #1
 8002442:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002444:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002448:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800244a:	2302      	movs	r3, #2
 800244c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800244e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002452:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8002454:	2308      	movs	r3, #8
 8002456:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8002458:	f44f 73a8 	mov.w	r3, #336	; 0x150
 800245c:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800245e:	2302      	movs	r3, #2
 8002460:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8002462:	2307      	movs	r3, #7
 8002464:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002466:	f107 0320 	add.w	r3, r7, #32
 800246a:	4618      	mov	r0, r3
 800246c:	f004 ff9a 	bl	80073a4 <HAL_RCC_OscConfig>
 8002470:	4603      	mov	r3, r0
 8002472:	2b00      	cmp	r3, #0
 8002474:	d001      	beq.n	800247a <SystemClock_Config+0x96>
  {
    Error_Handler();
 8002476:	f001 fb65 	bl	8003b44 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800247a:	230f      	movs	r3, #15
 800247c:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800247e:	2302      	movs	r3, #2
 8002480:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002482:	2300      	movs	r3, #0
 8002484:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8002486:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 800248a:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800248c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002490:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002492:	f107 030c 	add.w	r3, r7, #12
 8002496:	2105      	movs	r1, #5
 8002498:	4618      	mov	r0, r3
 800249a:	f005 f9fb 	bl	8007894 <HAL_RCC_ClockConfig>
 800249e:	4603      	mov	r3, r0
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d001      	beq.n	80024a8 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 80024a4:	f001 fb4e 	bl	8003b44 <Error_Handler>
  }
}
 80024a8:	bf00      	nop
 80024aa:	3750      	adds	r7, #80	; 0x50
 80024ac:	46bd      	mov	sp, r7
 80024ae:	bd80      	pop	{r7, pc}
 80024b0:	40023800 	.word	0x40023800
 80024b4:	40007000 	.word	0x40007000

080024b8 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80024b8:	b580      	push	{r7, lr}
 80024ba:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80024bc:	4b06      	ldr	r3, [pc, #24]	; (80024d8 <MX_CRC_Init+0x20>)
 80024be:	4a07      	ldr	r2, [pc, #28]	; (80024dc <MX_CRC_Init+0x24>)
 80024c0:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80024c2:	4805      	ldr	r0, [pc, #20]	; (80024d8 <MX_CRC_Init+0x20>)
 80024c4:	f002 fb4f 	bl	8004b66 <HAL_CRC_Init>
 80024c8:	4603      	mov	r3, r0
 80024ca:	2b00      	cmp	r3, #0
 80024cc:	d001      	beq.n	80024d2 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80024ce:	f001 fb39 	bl	8003b44 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80024d2:	bf00      	nop
 80024d4:	bd80      	pop	{r7, pc}
 80024d6:	bf00      	nop
 80024d8:	20000194 	.word	0x20000194
 80024dc:	40023000 	.word	0x40023000

080024e0 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80024e0:	b580      	push	{r7, lr}
 80024e2:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80024e4:	4b12      	ldr	r3, [pc, #72]	; (8002530 <MX_I2C1_Init+0x50>)
 80024e6:	4a13      	ldr	r2, [pc, #76]	; (8002534 <MX_I2C1_Init+0x54>)
 80024e8:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80024ea:	4b11      	ldr	r3, [pc, #68]	; (8002530 <MX_I2C1_Init+0x50>)
 80024ec:	4a12      	ldr	r2, [pc, #72]	; (8002538 <MX_I2C1_Init+0x58>)
 80024ee:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80024f0:	4b0f      	ldr	r3, [pc, #60]	; (8002530 <MX_I2C1_Init+0x50>)
 80024f2:	2200      	movs	r2, #0
 80024f4:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80024f6:	4b0e      	ldr	r3, [pc, #56]	; (8002530 <MX_I2C1_Init+0x50>)
 80024f8:	2200      	movs	r2, #0
 80024fa:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80024fc:	4b0c      	ldr	r3, [pc, #48]	; (8002530 <MX_I2C1_Init+0x50>)
 80024fe:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002502:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002504:	4b0a      	ldr	r3, [pc, #40]	; (8002530 <MX_I2C1_Init+0x50>)
 8002506:	2200      	movs	r2, #0
 8002508:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800250a:	4b09      	ldr	r3, [pc, #36]	; (8002530 <MX_I2C1_Init+0x50>)
 800250c:	2200      	movs	r2, #0
 800250e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002510:	4b07      	ldr	r3, [pc, #28]	; (8002530 <MX_I2C1_Init+0x50>)
 8002512:	2200      	movs	r2, #0
 8002514:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002516:	4b06      	ldr	r3, [pc, #24]	; (8002530 <MX_I2C1_Init+0x50>)
 8002518:	2200      	movs	r2, #0
 800251a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800251c:	4804      	ldr	r0, [pc, #16]	; (8002530 <MX_I2C1_Init+0x50>)
 800251e:	f002 ff25 	bl	800536c <HAL_I2C_Init>
 8002522:	4603      	mov	r3, r0
 8002524:	2b00      	cmp	r3, #0
 8002526:	d001      	beq.n	800252c <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8002528:	f001 fb0c 	bl	8003b44 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800252c:	bf00      	nop
 800252e:	bd80      	pop	{r7, pc}
 8002530:	2000019c 	.word	0x2000019c
 8002534:	40005400 	.word	0x40005400
 8002538:	00061a80 	.word	0x00061a80

0800253c <MX_RNG_Init>:
  * @brief RNG Initialization Function
  * @param None
  * @retval None
  */
static void MX_RNG_Init(void)
{
 800253c:	b580      	push	{r7, lr}
 800253e:	af00      	add	r7, sp, #0
  /* USER CODE END RNG_Init 0 */

  /* USER CODE BEGIN RNG_Init 1 */

  /* USER CODE END RNG_Init 1 */
  hrng.Instance = RNG;
 8002540:	4b06      	ldr	r3, [pc, #24]	; (800255c <MX_RNG_Init+0x20>)
 8002542:	4a07      	ldr	r2, [pc, #28]	; (8002560 <MX_RNG_Init+0x24>)
 8002544:	601a      	str	r2, [r3, #0]
  if (HAL_RNG_Init(&hrng) != HAL_OK)
 8002546:	4805      	ldr	r0, [pc, #20]	; (800255c <MX_RNG_Init+0x20>)
 8002548:	f005 fbb0 	bl	8007cac <HAL_RNG_Init>
 800254c:	4603      	mov	r3, r0
 800254e:	2b00      	cmp	r3, #0
 8002550:	d001      	beq.n	8002556 <MX_RNG_Init+0x1a>
  {
    Error_Handler();
 8002552:	f001 faf7 	bl	8003b44 <Error_Handler>
  }
  /* USER CODE BEGIN RNG_Init 2 */

  /* USER CODE END RNG_Init 2 */

}
 8002556:	bf00      	nop
 8002558:	bd80      	pop	{r7, pc}
 800255a:	bf00      	nop
 800255c:	200001f0 	.word	0x200001f0
 8002560:	50060800 	.word	0x50060800

08002564 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8002564:	b580      	push	{r7, lr}
 8002566:	b086      	sub	sp, #24
 8002568:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800256a:	f107 0308 	add.w	r3, r7, #8
 800256e:	2200      	movs	r2, #0
 8002570:	601a      	str	r2, [r3, #0]
 8002572:	605a      	str	r2, [r3, #4]
 8002574:	609a      	str	r2, [r3, #8]
 8002576:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002578:	463b      	mov	r3, r7
 800257a:	2200      	movs	r2, #0
 800257c:	601a      	str	r2, [r3, #0]
 800257e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002580:	4b1e      	ldr	r3, [pc, #120]	; (80025fc <MX_TIM2_Init+0x98>)
 8002582:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002586:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 42000;
 8002588:	4b1c      	ldr	r3, [pc, #112]	; (80025fc <MX_TIM2_Init+0x98>)
 800258a:	f24a 4210 	movw	r2, #42000	; 0xa410
 800258e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002590:	4b1a      	ldr	r3, [pc, #104]	; (80025fc <MX_TIM2_Init+0x98>)
 8002592:	2200      	movs	r2, #0
 8002594:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1000;
 8002596:	4b19      	ldr	r3, [pc, #100]	; (80025fc <MX_TIM2_Init+0x98>)
 8002598:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800259c:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800259e:	4b17      	ldr	r3, [pc, #92]	; (80025fc <MX_TIM2_Init+0x98>)
 80025a0:	2200      	movs	r2, #0
 80025a2:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80025a4:	4b15      	ldr	r3, [pc, #84]	; (80025fc <MX_TIM2_Init+0x98>)
 80025a6:	2200      	movs	r2, #0
 80025a8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80025aa:	4814      	ldr	r0, [pc, #80]	; (80025fc <MX_TIM2_Init+0x98>)
 80025ac:	f005 fc41 	bl	8007e32 <HAL_TIM_Base_Init>
 80025b0:	4603      	mov	r3, r0
 80025b2:	2b00      	cmp	r3, #0
 80025b4:	d001      	beq.n	80025ba <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 80025b6:	f001 fac5 	bl	8003b44 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80025ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80025be:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80025c0:	f107 0308 	add.w	r3, r7, #8
 80025c4:	4619      	mov	r1, r3
 80025c6:	480d      	ldr	r0, [pc, #52]	; (80025fc <MX_TIM2_Init+0x98>)
 80025c8:	f005 fde2 	bl	8008190 <HAL_TIM_ConfigClockSource>
 80025cc:	4603      	mov	r3, r0
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	d001      	beq.n	80025d6 <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 80025d2:	f001 fab7 	bl	8003b44 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80025d6:	2320      	movs	r3, #32
 80025d8:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80025da:	2300      	movs	r3, #0
 80025dc:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80025de:	463b      	mov	r3, r7
 80025e0:	4619      	mov	r1, r3
 80025e2:	4806      	ldr	r0, [pc, #24]	; (80025fc <MX_TIM2_Init+0x98>)
 80025e4:	f006 f80a 	bl	80085fc <HAL_TIMEx_MasterConfigSynchronization>
 80025e8:	4603      	mov	r3, r0
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d001      	beq.n	80025f2 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 80025ee:	f001 faa9 	bl	8003b44 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80025f2:	bf00      	nop
 80025f4:	3718      	adds	r7, #24
 80025f6:	46bd      	mov	sp, r7
 80025f8:	bd80      	pop	{r7, pc}
 80025fa:	bf00      	nop
 80025fc:	20000200 	.word	0x20000200

08002600 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002600:	b580      	push	{r7, lr}
 8002602:	b08a      	sub	sp, #40	; 0x28
 8002604:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002606:	f107 0314 	add.w	r3, r7, #20
 800260a:	2200      	movs	r2, #0
 800260c:	601a      	str	r2, [r3, #0]
 800260e:	605a      	str	r2, [r3, #4]
 8002610:	609a      	str	r2, [r3, #8]
 8002612:	60da      	str	r2, [r3, #12]
 8002614:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002616:	2300      	movs	r3, #0
 8002618:	613b      	str	r3, [r7, #16]
 800261a:	4b34      	ldr	r3, [pc, #208]	; (80026ec <MX_GPIO_Init+0xec>)
 800261c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800261e:	4a33      	ldr	r2, [pc, #204]	; (80026ec <MX_GPIO_Init+0xec>)
 8002620:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002624:	6313      	str	r3, [r2, #48]	; 0x30
 8002626:	4b31      	ldr	r3, [pc, #196]	; (80026ec <MX_GPIO_Init+0xec>)
 8002628:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800262a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800262e:	613b      	str	r3, [r7, #16]
 8002630:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002632:	2300      	movs	r3, #0
 8002634:	60fb      	str	r3, [r7, #12]
 8002636:	4b2d      	ldr	r3, [pc, #180]	; (80026ec <MX_GPIO_Init+0xec>)
 8002638:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800263a:	4a2c      	ldr	r2, [pc, #176]	; (80026ec <MX_GPIO_Init+0xec>)
 800263c:	f043 0308 	orr.w	r3, r3, #8
 8002640:	6313      	str	r3, [r2, #48]	; 0x30
 8002642:	4b2a      	ldr	r3, [pc, #168]	; (80026ec <MX_GPIO_Init+0xec>)
 8002644:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002646:	f003 0308 	and.w	r3, r3, #8
 800264a:	60fb      	str	r3, [r7, #12]
 800264c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800264e:	2300      	movs	r3, #0
 8002650:	60bb      	str	r3, [r7, #8]
 8002652:	4b26      	ldr	r3, [pc, #152]	; (80026ec <MX_GPIO_Init+0xec>)
 8002654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002656:	4a25      	ldr	r2, [pc, #148]	; (80026ec <MX_GPIO_Init+0xec>)
 8002658:	f043 0304 	orr.w	r3, r3, #4
 800265c:	6313      	str	r3, [r2, #48]	; 0x30
 800265e:	4b23      	ldr	r3, [pc, #140]	; (80026ec <MX_GPIO_Init+0xec>)
 8002660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002662:	f003 0304 	and.w	r3, r3, #4
 8002666:	60bb      	str	r3, [r7, #8]
 8002668:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800266a:	2300      	movs	r3, #0
 800266c:	607b      	str	r3, [r7, #4]
 800266e:	4b1f      	ldr	r3, [pc, #124]	; (80026ec <MX_GPIO_Init+0xec>)
 8002670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002672:	4a1e      	ldr	r2, [pc, #120]	; (80026ec <MX_GPIO_Init+0xec>)
 8002674:	f043 0301 	orr.w	r3, r3, #1
 8002678:	6313      	str	r3, [r2, #48]	; 0x30
 800267a:	4b1c      	ldr	r3, [pc, #112]	; (80026ec <MX_GPIO_Init+0xec>)
 800267c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800267e:	f003 0301 	and.w	r3, r3, #1
 8002682:	607b      	str	r3, [r7, #4]
 8002684:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002686:	2300      	movs	r3, #0
 8002688:	603b      	str	r3, [r7, #0]
 800268a:	4b18      	ldr	r3, [pc, #96]	; (80026ec <MX_GPIO_Init+0xec>)
 800268c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800268e:	4a17      	ldr	r2, [pc, #92]	; (80026ec <MX_GPIO_Init+0xec>)
 8002690:	f043 0302 	orr.w	r3, r3, #2
 8002694:	6313      	str	r3, [r2, #48]	; 0x30
 8002696:	4b15      	ldr	r3, [pc, #84]	; (80026ec <MX_GPIO_Init+0xec>)
 8002698:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800269a:	f003 0302 	and.w	r3, r3, #2
 800269e:	603b      	str	r3, [r7, #0]
 80026a0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, Green_Pin|Orange_Pin|Red_Pin|Blue_Pin, GPIO_PIN_RESET);
 80026a2:	2200      	movs	r2, #0
 80026a4:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 80026a8:	4811      	ldr	r0, [pc, #68]	; (80026f0 <MX_GPIO_Init+0xf0>)
 80026aa:	f002 fe2b 	bl	8005304 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : Green_Pin Orange_Pin Red_Pin Blue_Pin */
  GPIO_InitStruct.Pin = Green_Pin|Orange_Pin|Red_Pin|Blue_Pin;
 80026ae:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 80026b2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026b4:	2301      	movs	r3, #1
 80026b6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026b8:	2300      	movs	r3, #0
 80026ba:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026bc:	2300      	movs	r3, #0
 80026be:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026c0:	f107 0314 	add.w	r3, r7, #20
 80026c4:	4619      	mov	r1, r3
 80026c6:	480a      	ldr	r0, [pc, #40]	; (80026f0 <MX_GPIO_Init+0xf0>)
 80026c8:	f002 fc68 	bl	8004f9c <HAL_GPIO_Init>

  /*Configure GPIO pins : Bt1_Pin Bt2_Pin */
  GPIO_InitStruct.Pin = Bt1_Pin|Bt2_Pin;
 80026cc:	23c0      	movs	r3, #192	; 0xc0
 80026ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80026d0:	2300      	movs	r3, #0
 80026d2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026d4:	2300      	movs	r3, #0
 80026d6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026d8:	f107 0314 	add.w	r3, r7, #20
 80026dc:	4619      	mov	r1, r3
 80026de:	4805      	ldr	r0, [pc, #20]	; (80026f4 <MX_GPIO_Init+0xf4>)
 80026e0:	f002 fc5c 	bl	8004f9c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80026e4:	bf00      	nop
 80026e6:	3728      	adds	r7, #40	; 0x28
 80026e8:	46bd      	mov	sp, r7
 80026ea:	bd80      	pop	{r7, pc}
 80026ec:	40023800 	.word	0x40023800
 80026f0:	40020c00 	.word	0x40020c00
 80026f4:	40020800 	.word	0x40020800

080026f8 <Startup>:

/* USER CODE BEGIN 4 */
void Startup() {
 80026f8:	b580      	push	{r7, lr}
 80026fa:	b082      	sub	sp, #8
 80026fc:	af02      	add	r7, sp, #8
    // Read a single byte from the flash memory at BrandNew_address and store it in Brand_new.
    MY_FLASH_ReadN(BrandNew_address, &Brand_new, 1, DATA_TYPE_8);
 80026fe:	2300      	movs	r3, #0
 8002700:	2201      	movs	r2, #1
 8002702:	4927      	ldr	r1, [pc, #156]	; (80027a0 <Startup+0xa8>)
 8002704:	2000      	movs	r0, #0
 8002706:	f7ff fd29 	bl	800215c <MY_FLASH_ReadN>

    // Draw the logo on the SSD1306 display at position (0,0) with dimensions 128x64 and color 1 (white).
    SSD1306_DrawBitmap(0, 0, logo, 128, 64, 1);
 800270a:	2301      	movs	r3, #1
 800270c:	9301      	str	r3, [sp, #4]
 800270e:	2340      	movs	r3, #64	; 0x40
 8002710:	9300      	str	r3, [sp, #0]
 8002712:	2380      	movs	r3, #128	; 0x80
 8002714:	4a23      	ldr	r2, [pc, #140]	; (80027a4 <Startup+0xac>)
 8002716:	2100      	movs	r1, #0
 8002718:	2000      	movs	r0, #0
 800271a:	f001 fa18 	bl	8003b4e <SSD1306_DrawBitmap>

    // Update the SSD1306 display to show the drawn bitmap.
    SSD1306_UpdateScreen();
 800271e:	f001 fb43 	bl	8003da8 <SSD1306_UpdateScreen>

    // Delay for 1000 milliseconds (1 second).
    HAL_Delay(1000);
 8002722:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002726:	f002 f8e9 	bl	80048fc <HAL_Delay>

    // Clear the SSD1306 display.
    SSD1306_Clear();
 800272a:	f001 fde6 	bl	80042fa <SSD1306_Clear>

    // Read 8 bytes from the flash memory at GlobalSalt_address and store it in GlobalSalt.
    MY_FLASH_ReadN(GlobalSalt_address, GlobalSalt, 8, DATA_TYPE_8);
 800272e:	2300      	movs	r3, #0
 8002730:	2208      	movs	r2, #8
 8002732:	491d      	ldr	r1, [pc, #116]	; (80027a8 <Startup+0xb0>)
 8002734:	2003      	movs	r0, #3
 8002736:	f7ff fd11 	bl	800215c <MY_FLASH_ReadN>

    // Check if the device is brand new.
    if (Brand_new == 0) {
 800273a:	4b19      	ldr	r3, [pc, #100]	; (80027a0 <Startup+0xa8>)
 800273c:	781b      	ldrb	r3, [r3, #0]
 800273e:	2b00      	cmp	r3, #0
 8002740:	d125      	bne.n	800278e <Startup+0x96>
        // Print the Brand_new value for debugging purposes.
        printf("Brand new = %02x\n", Brand_new);
 8002742:	4b17      	ldr	r3, [pc, #92]	; (80027a0 <Startup+0xa8>)
 8002744:	781b      	ldrb	r3, [r3, #0]
 8002746:	4619      	mov	r1, r3
 8002748:	4818      	ldr	r0, [pc, #96]	; (80027ac <Startup+0xb4>)
 800274a:	f00a f92f 	bl	800c9ac <iprintf>

        // Clear the SSD1306 display.
        SSD1306_Clear();
 800274e:	f001 fdd4 	bl	80042fa <SSD1306_Clear>

        // Set the cursor position on the SSD1306 display.
        SSD1306_GotoXY(15, 25);
 8002752:	2119      	movs	r1, #25
 8002754:	200f      	movs	r0, #15
 8002756:	f001 fbcd 	bl	8003ef4 <SSD1306_GotoXY>

        // Display "Brand new" text on the SSD1306 display using Font_11x18.
        SSD1306_Puts("Brand new", &Font_11x18, 1);
 800275a:	2201      	movs	r2, #1
 800275c:	4914      	ldr	r1, [pc, #80]	; (80027b0 <Startup+0xb8>)
 800275e:	4815      	ldr	r0, [pc, #84]	; (80027b4 <Startup+0xbc>)
 8002760:	f001 fc5e 	bl	8004020 <SSD1306_Puts>

        // Update the SSD1306 display to show the text.
        SSD1306_UpdateScreen();
 8002764:	f001 fb20 	bl	8003da8 <SSD1306_UpdateScreen>

        // Delay for 2000 milliseconds (2 seconds).
        HAL_Delay(2000);
 8002768:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800276c:	f002 f8c6 	bl	80048fc <HAL_Delay>

        // Clear the SSD1306 display.
        SSD1306_Clear();
 8002770:	f001 fdc3 	bl	80042fa <SSD1306_Clear>

        // Generate a random number and store it in GlobalSalt.
        Get_rng(GlobalSalt, 2);
 8002774:	2102      	movs	r1, #2
 8002776:	480c      	ldr	r0, [pc, #48]	; (80027a8 <Startup+0xb0>)
 8002778:	f001 f962 	bl	8003a40 <Get_rng>

        // Save the generated GlobalSalt to the flash memory at GlobalSalt_address.
        write_flash(GlobalSalt_address, GlobalSalt, 8);
 800277c:	2208      	movs	r2, #8
 800277e:	490a      	ldr	r1, [pc, #40]	; (80027a8 <Startup+0xb0>)
 8002780:	2003      	movs	r0, #3
 8002782:	f7ff fd47 	bl	8002214 <write_flash>

        // Set the system state to Enrollment.
        state = Enrollment;
 8002786:	4b0c      	ldr	r3, [pc, #48]	; (80027b8 <Startup+0xc0>)
 8002788:	2203      	movs	r2, #3
 800278a:	701a      	strb	r2, [r3, #0]
        wrong_LEDs();

        // Set the system state to Lock.
        state = Lock;
    }
}
 800278c:	e004      	b.n	8002798 <Startup+0xa0>
        wrong_LEDs();
 800278e:	f000 fe6b 	bl	8003468 <wrong_LEDs>
        state = Lock;
 8002792:	4b09      	ldr	r3, [pc, #36]	; (80027b8 <Startup+0xc0>)
 8002794:	2200      	movs	r2, #0
 8002796:	701a      	strb	r2, [r3, #0]
}
 8002798:	bf00      	nop
 800279a:	46bd      	mov	sp, r7
 800279c:	bd80      	pop	{r7, pc}
 800279e:	bf00      	nop
 80027a0:	20000248 	.word	0x20000248
 80027a4:	0800f004 	.word	0x0800f004
 80027a8:	2000024c 	.word	0x2000024c
 80027ac:	0800d834 	.word	0x0800d834
 80027b0:	20000008 	.word	0x20000008
 80027b4:	0800d848 	.word	0x0800d848
 80027b8:	200002c1 	.word	0x200002c1

080027bc <MainMenu>:


void MainMenu() {
 80027bc:	b580      	push	{r7, lr}
 80027be:	b084      	sub	sp, #16
 80027c0:	af02      	add	r7, sp, #8
    // Clear the SSD1306 display.
    SSD1306_Clear();
 80027c2:	f001 fd9a 	bl	80042fa <SSD1306_Clear>

    // Display the menu options at specified coordinates using Font_7x10.
    SSD1306_GotoXY(50, 9);
 80027c6:	2109      	movs	r1, #9
 80027c8:	2032      	movs	r0, #50	; 0x32
 80027ca:	f001 fb93 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("lock", &Font_7x10, 1);
 80027ce:	2201      	movs	r2, #1
 80027d0:	496b      	ldr	r1, [pc, #428]	; (8002980 <MainMenu+0x1c4>)
 80027d2:	486c      	ldr	r0, [pc, #432]	; (8002984 <MainMenu+0x1c8>)
 80027d4:	f001 fc24 	bl	8004020 <SSD1306_Puts>

    SSD1306_GotoXY(46, 21);
 80027d8:	2115      	movs	r1, #21
 80027da:	202e      	movs	r0, #46	; 0x2e
 80027dc:	f001 fb8a 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Reset", &Font_7x10, 1);
 80027e0:	2201      	movs	r2, #1
 80027e2:	4967      	ldr	r1, [pc, #412]	; (8002980 <MainMenu+0x1c4>)
 80027e4:	4868      	ldr	r0, [pc, #416]	; (8002988 <MainMenu+0x1cc>)
 80027e6:	f001 fc1b 	bl	8004020 <SSD1306_Puts>

    SSD1306_GotoXY(39, 33);
 80027ea:	2121      	movs	r1, #33	; 0x21
 80027ec:	2027      	movs	r0, #39	; 0x27
 80027ee:	f001 fb81 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Timeout", &Font_7x10, 1);
 80027f2:	2201      	movs	r2, #1
 80027f4:	4962      	ldr	r1, [pc, #392]	; (8002980 <MainMenu+0x1c4>)
 80027f6:	4865      	ldr	r0, [pc, #404]	; (800298c <MainMenu+0x1d0>)
 80027f8:	f001 fc12 	bl	8004020 <SSD1306_Puts>

    SSD1306_GotoXY(29, 45);
 80027fc:	212d      	movs	r1, #45	; 0x2d
 80027fe:	201d      	movs	r0, #29
 8002800:	f001 fb78 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Enrollment", &Font_7x10, 1);
 8002804:	2201      	movs	r2, #1
 8002806:	495e      	ldr	r1, [pc, #376]	; (8002980 <MainMenu+0x1c4>)
 8002808:	4861      	ldr	r0, [pc, #388]	; (8002990 <MainMenu+0x1d4>)
 800280a:	f001 fc09 	bl	8004020 <SSD1306_Puts>

    // Highlight the current menu option based on MenuState.
    if (MenuState == Lock) {
 800280e:	4b61      	ldr	r3, [pc, #388]	; (8002994 <MainMenu+0x1d8>)
 8002810:	781b      	ldrb	r3, [r3, #0]
 8002812:	2b00      	cmp	r3, #0
 8002814:	d110      	bne.n	8002838 <MainMenu+0x7c>
        SSD1306_DrawFilledRectangle(27, 7, 78, 12, 1);
 8002816:	2301      	movs	r3, #1
 8002818:	9300      	str	r3, [sp, #0]
 800281a:	230c      	movs	r3, #12
 800281c:	224e      	movs	r2, #78	; 0x4e
 800281e:	2107      	movs	r1, #7
 8002820:	201b      	movs	r0, #27
 8002822:	f001 fd1d 	bl	8004260 <SSD1306_DrawFilledRectangle>
        SSD1306_GotoXY(50, 9);
 8002826:	2109      	movs	r1, #9
 8002828:	2032      	movs	r0, #50	; 0x32
 800282a:	f001 fb63 	bl	8003ef4 <SSD1306_GotoXY>
        SSD1306_Puts("lock", &Font_7x10, 0);
 800282e:	2200      	movs	r2, #0
 8002830:	4953      	ldr	r1, [pc, #332]	; (8002980 <MainMenu+0x1c4>)
 8002832:	4854      	ldr	r0, [pc, #336]	; (8002984 <MainMenu+0x1c8>)
 8002834:	f001 fbf4 	bl	8004020 <SSD1306_Puts>
    }
    if (MenuState == Reset) {
 8002838:	4b56      	ldr	r3, [pc, #344]	; (8002994 <MainMenu+0x1d8>)
 800283a:	781b      	ldrb	r3, [r3, #0]
 800283c:	2b01      	cmp	r3, #1
 800283e:	d110      	bne.n	8002862 <MainMenu+0xa6>
        SSD1306_DrawFilledRectangle(27, 19, 78, 12, 1);
 8002840:	2301      	movs	r3, #1
 8002842:	9300      	str	r3, [sp, #0]
 8002844:	230c      	movs	r3, #12
 8002846:	224e      	movs	r2, #78	; 0x4e
 8002848:	2113      	movs	r1, #19
 800284a:	201b      	movs	r0, #27
 800284c:	f001 fd08 	bl	8004260 <SSD1306_DrawFilledRectangle>
        SSD1306_GotoXY(46, 21);
 8002850:	2115      	movs	r1, #21
 8002852:	202e      	movs	r0, #46	; 0x2e
 8002854:	f001 fb4e 	bl	8003ef4 <SSD1306_GotoXY>
        SSD1306_Puts("Reset", &Font_7x10, 0);
 8002858:	2200      	movs	r2, #0
 800285a:	4949      	ldr	r1, [pc, #292]	; (8002980 <MainMenu+0x1c4>)
 800285c:	484a      	ldr	r0, [pc, #296]	; (8002988 <MainMenu+0x1cc>)
 800285e:	f001 fbdf 	bl	8004020 <SSD1306_Puts>
    }
    if (MenuState == Timeout) {
 8002862:	4b4c      	ldr	r3, [pc, #304]	; (8002994 <MainMenu+0x1d8>)
 8002864:	781b      	ldrb	r3, [r3, #0]
 8002866:	2b02      	cmp	r3, #2
 8002868:	d110      	bne.n	800288c <MainMenu+0xd0>
        SSD1306_DrawFilledRectangle(27, 31, 78, 12, 1);
 800286a:	2301      	movs	r3, #1
 800286c:	9300      	str	r3, [sp, #0]
 800286e:	230c      	movs	r3, #12
 8002870:	224e      	movs	r2, #78	; 0x4e
 8002872:	211f      	movs	r1, #31
 8002874:	201b      	movs	r0, #27
 8002876:	f001 fcf3 	bl	8004260 <SSD1306_DrawFilledRectangle>
        SSD1306_GotoXY(36, 33);
 800287a:	2121      	movs	r1, #33	; 0x21
 800287c:	2024      	movs	r0, #36	; 0x24
 800287e:	f001 fb39 	bl	8003ef4 <SSD1306_GotoXY>
        SSD1306_Puts("Timeout", &Font_7x10, 0);
 8002882:	2200      	movs	r2, #0
 8002884:	493e      	ldr	r1, [pc, #248]	; (8002980 <MainMenu+0x1c4>)
 8002886:	4841      	ldr	r0, [pc, #260]	; (800298c <MainMenu+0x1d0>)
 8002888:	f001 fbca 	bl	8004020 <SSD1306_Puts>
    }
    if (MenuState == Enrollment) {
 800288c:	4b41      	ldr	r3, [pc, #260]	; (8002994 <MainMenu+0x1d8>)
 800288e:	781b      	ldrb	r3, [r3, #0]
 8002890:	2b03      	cmp	r3, #3
 8002892:	d110      	bne.n	80028b6 <MainMenu+0xfa>
        SSD1306_DrawFilledRectangle(27, 43, 78, 12, 1);
 8002894:	2301      	movs	r3, #1
 8002896:	9300      	str	r3, [sp, #0]
 8002898:	230c      	movs	r3, #12
 800289a:	224e      	movs	r2, #78	; 0x4e
 800289c:	212b      	movs	r1, #43	; 0x2b
 800289e:	201b      	movs	r0, #27
 80028a0:	f001 fcde 	bl	8004260 <SSD1306_DrawFilledRectangle>
        SSD1306_GotoXY(29, 45);
 80028a4:	212d      	movs	r1, #45	; 0x2d
 80028a6:	201d      	movs	r0, #29
 80028a8:	f001 fb24 	bl	8003ef4 <SSD1306_GotoXY>
        SSD1306_Puts("Enrollment", &Font_7x10, 0);
 80028ac:	2200      	movs	r2, #0
 80028ae:	4934      	ldr	r1, [pc, #208]	; (8002980 <MainMenu+0x1c4>)
 80028b0:	4837      	ldr	r0, [pc, #220]	; (8002990 <MainMenu+0x1d4>)
 80028b2:	f001 fbb5 	bl	8004020 <SSD1306_Puts>
    }

    // Update the SSD1306 display to show the menu.
    SSD1306_UpdateScreen();
 80028b6:	f001 fa77 	bl	8003da8 <SSD1306_UpdateScreen>

    while (1) {
        // If the device state is inactive, set the state to Lock and exit the loop.
        if (!DeviceState) {
 80028ba:	4b37      	ldr	r3, [pc, #220]	; (8002998 <MainMenu+0x1dc>)
 80028bc:	781b      	ldrb	r3, [r3, #0]
 80028be:	f083 0301 	eor.w	r3, r3, #1
 80028c2:	b2db      	uxtb	r3, r3
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	d003      	beq.n	80028d0 <MainMenu+0x114>
            state = Lock;
 80028c8:	4b34      	ldr	r3, [pc, #208]	; (800299c <MainMenu+0x1e0>)
 80028ca:	2200      	movs	r2, #0
 80028cc:	701a      	strb	r2, [r3, #0]
            break;
 80028ce:	e052      	b.n	8002976 <MainMenu+0x1ba>
        }

        // Check the button state.
        uint8_t btn_state = checkButtons();
 80028d0:	f000 ffe2 	bl	8003898 <checkButtons>
 80028d4:	4603      	mov	r3, r0
 80028d6:	71fb      	strb	r3, [r7, #7]

        // If the 'up' button is pressed, decrement the menu state.
        if (btn_state == 0) { // up
 80028d8:	79fb      	ldrb	r3, [r7, #7]
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d110      	bne.n	8002900 <MainMenu+0x144>
            MenuState--;
 80028de:	4b2d      	ldr	r3, [pc, #180]	; (8002994 <MainMenu+0x1d8>)
 80028e0:	781b      	ldrb	r3, [r3, #0]
 80028e2:	3b01      	subs	r3, #1
 80028e4:	b2da      	uxtb	r2, r3
 80028e6:	4b2b      	ldr	r3, [pc, #172]	; (8002994 <MainMenu+0x1d8>)
 80028e8:	701a      	strb	r2, [r3, #0]
            // If MenuState underflows, set it to the last menu option.
            if (MenuState == 255) MenuState = 3;
 80028ea:	4b2a      	ldr	r3, [pc, #168]	; (8002994 <MainMenu+0x1d8>)
 80028ec:	781b      	ldrb	r3, [r3, #0]
 80028ee:	2bff      	cmp	r3, #255	; 0xff
 80028f0:	d102      	bne.n	80028f8 <MainMenu+0x13c>
 80028f2:	4b28      	ldr	r3, [pc, #160]	; (8002994 <MainMenu+0x1d8>)
 80028f4:	2203      	movs	r2, #3
 80028f6:	701a      	strb	r2, [r3, #0]
            state = Menu;
 80028f8:	4b28      	ldr	r3, [pc, #160]	; (800299c <MainMenu+0x1e0>)
 80028fa:	2204      	movs	r2, #4
 80028fc:	701a      	strb	r2, [r3, #0]
            break;
 80028fe:	e03a      	b.n	8002976 <MainMenu+0x1ba>
        }
        // If the 'down' button is pressed, increment the menu state.
        else if (btn_state == 1) { // down
 8002900:	79fb      	ldrb	r3, [r7, #7]
 8002902:	2b01      	cmp	r3, #1
 8002904:	d110      	bne.n	8002928 <MainMenu+0x16c>
            MenuState++;
 8002906:	4b23      	ldr	r3, [pc, #140]	; (8002994 <MainMenu+0x1d8>)
 8002908:	781b      	ldrb	r3, [r3, #0]
 800290a:	3301      	adds	r3, #1
 800290c:	b2da      	uxtb	r2, r3
 800290e:	4b21      	ldr	r3, [pc, #132]	; (8002994 <MainMenu+0x1d8>)
 8002910:	701a      	strb	r2, [r3, #0]
            // If MenuState overflows, set it to the first menu option.
            if (MenuState == 4) MenuState = 0;
 8002912:	4b20      	ldr	r3, [pc, #128]	; (8002994 <MainMenu+0x1d8>)
 8002914:	781b      	ldrb	r3, [r3, #0]
 8002916:	2b04      	cmp	r3, #4
 8002918:	d102      	bne.n	8002920 <MainMenu+0x164>
 800291a:	4b1e      	ldr	r3, [pc, #120]	; (8002994 <MainMenu+0x1d8>)
 800291c:	2200      	movs	r2, #0
 800291e:	701a      	strb	r2, [r3, #0]
            state = Menu;
 8002920:	4b1e      	ldr	r3, [pc, #120]	; (800299c <MainMenu+0x1e0>)
 8002922:	2204      	movs	r2, #4
 8002924:	701a      	strb	r2, [r3, #0]
            break;
 8002926:	e026      	b.n	8002976 <MainMenu+0x1ba>
        }
        // If both buttons are pressed, set the state based on the current menu option.
        else if (btn_state == 2) { // both
 8002928:	79fb      	ldrb	r3, [r7, #7]
 800292a:	2b02      	cmp	r3, #2
 800292c:	d1c5      	bne.n	80028ba <MainMenu+0xfe>
            if (MenuState == 0) state = Lock;
 800292e:	4b19      	ldr	r3, [pc, #100]	; (8002994 <MainMenu+0x1d8>)
 8002930:	781b      	ldrb	r3, [r3, #0]
 8002932:	2b00      	cmp	r3, #0
 8002934:	d102      	bne.n	800293c <MainMenu+0x180>
 8002936:	4b19      	ldr	r3, [pc, #100]	; (800299c <MainMenu+0x1e0>)
 8002938:	2200      	movs	r2, #0
 800293a:	701a      	strb	r2, [r3, #0]
            if (MenuState == 1) state = Reset;
 800293c:	4b15      	ldr	r3, [pc, #84]	; (8002994 <MainMenu+0x1d8>)
 800293e:	781b      	ldrb	r3, [r3, #0]
 8002940:	2b01      	cmp	r3, #1
 8002942:	d102      	bne.n	800294a <MainMenu+0x18e>
 8002944:	4b15      	ldr	r3, [pc, #84]	; (800299c <MainMenu+0x1e0>)
 8002946:	2201      	movs	r2, #1
 8002948:	701a      	strb	r2, [r3, #0]
            if (MenuState == 2) state = Timeout;
 800294a:	4b12      	ldr	r3, [pc, #72]	; (8002994 <MainMenu+0x1d8>)
 800294c:	781b      	ldrb	r3, [r3, #0]
 800294e:	2b02      	cmp	r3, #2
 8002950:	d102      	bne.n	8002958 <MainMenu+0x19c>
 8002952:	4b12      	ldr	r3, [pc, #72]	; (800299c <MainMenu+0x1e0>)
 8002954:	2202      	movs	r2, #2
 8002956:	701a      	strb	r2, [r3, #0]
            if (MenuState == 3) state = Enrollment;
 8002958:	4b0e      	ldr	r3, [pc, #56]	; (8002994 <MainMenu+0x1d8>)
 800295a:	781b      	ldrb	r3, [r3, #0]
 800295c:	2b03      	cmp	r3, #3
 800295e:	d102      	bne.n	8002966 <MainMenu+0x1aa>
 8002960:	4b0e      	ldr	r3, [pc, #56]	; (800299c <MainMenu+0x1e0>)
 8002962:	2203      	movs	r2, #3
 8002964:	701a      	strb	r2, [r3, #0]
            if (MenuState == 4) state = Menu;
 8002966:	4b0b      	ldr	r3, [pc, #44]	; (8002994 <MainMenu+0x1d8>)
 8002968:	781b      	ldrb	r3, [r3, #0]
 800296a:	2b04      	cmp	r3, #4
 800296c:	d102      	bne.n	8002974 <MainMenu+0x1b8>
 800296e:	4b0b      	ldr	r3, [pc, #44]	; (800299c <MainMenu+0x1e0>)
 8002970:	2204      	movs	r2, #4
 8002972:	701a      	strb	r2, [r3, #0]
            break;
 8002974:	bf00      	nop
        }
    }
}
 8002976:	bf00      	nop
 8002978:	3708      	adds	r7, #8
 800297a:	46bd      	mov	sp, r7
 800297c:	bd80      	pop	{r7, pc}
 800297e:	bf00      	nop
 8002980:	20000000 	.word	0x20000000
 8002984:	0800d854 	.word	0x0800d854
 8002988:	0800d85c 	.word	0x0800d85c
 800298c:	0800d864 	.word	0x0800d864
 8002990:	0800d86c 	.word	0x0800d86c
 8002994:	200002c2 	.word	0x200002c2
 8002998:	200002c4 	.word	0x200002c4
 800299c:	200002c1 	.word	0x200002c1

080029a0 <TimeoutMenu>:


void TimeoutMenu() {
 80029a0:	b580      	push	{r7, lr}
 80029a2:	b084      	sub	sp, #16
 80029a4:	af00      	add	r7, sp, #0
    // Static variable to store the previous reverse timer value. Initialized to the maximum 32-bit unsigned integer value.
    static uint32_t previousRevTimer = 0xFFFFFFFF;

    // Calculate the remaining timeout value by subtracting the current timer value from the timeout value.
    uint32_t RevTimer = TimeoutValue - Timer;
 80029a6:	4b15      	ldr	r3, [pc, #84]	; (80029fc <TimeoutMenu+0x5c>)
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	f1c3 0378 	rsb	r3, r3, #120	; 0x78
 80029ae:	60fb      	str	r3, [r7, #12]

    // If the current reverse timer value is different from the previous value, update the display.
    if (RevTimer != previousRevTimer) {
 80029b0:	4b13      	ldr	r3, [pc, #76]	; (8002a00 <TimeoutMenu+0x60>)
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	68fa      	ldr	r2, [r7, #12]
 80029b6:	429a      	cmp	r2, r3
 80029b8:	d01b      	beq.n	80029f2 <TimeoutMenu+0x52>
        // Update the previous reverse timer value with the current value.
        previousRevTimer = RevTimer;
 80029ba:	4a11      	ldr	r2, [pc, #68]	; (8002a00 <TimeoutMenu+0x60>)
 80029bc:	68fb      	ldr	r3, [r7, #12]
 80029be:	6013      	str	r3, [r2, #0]

        // Clear the SSD1306 display.
        SSD1306_Clear();
 80029c0:	f001 fc9b 	bl	80042fa <SSD1306_Clear>

        // Set the cursor position on the SSD1306 display.
        SSD1306_GotoXY(15, 27);
 80029c4:	211b      	movs	r1, #27
 80029c6:	200f      	movs	r0, #15
 80029c8:	f001 fa94 	bl	8003ef4 <SSD1306_GotoXY>

        // Display the "Timeout in " text on the SSD1306 display using Font_7x10.
        SSD1306_Puts("Timeout in ", &Font_7x10, 1);
 80029cc:	2201      	movs	r2, #1
 80029ce:	490d      	ldr	r1, [pc, #52]	; (8002a04 <TimeoutMenu+0x64>)
 80029d0:	480d      	ldr	r0, [pc, #52]	; (8002a08 <TimeoutMenu+0x68>)
 80029d2:	f001 fb25 	bl	8004020 <SSD1306_Puts>

        // Convert the reverse timer value to a string.
        char str[12];
        itoa(RevTimer, str, 10);
 80029d6:	68fb      	ldr	r3, [r7, #12]
 80029d8:	4639      	mov	r1, r7
 80029da:	220a      	movs	r2, #10
 80029dc:	4618      	mov	r0, r3
 80029de:	f009 fedf 	bl	800c7a0 <itoa>

        // Display the reverse timer value on the SSD1306 display using Font_7x10.
        SSD1306_Puts(str, &Font_7x10, 1);
 80029e2:	463b      	mov	r3, r7
 80029e4:	2201      	movs	r2, #1
 80029e6:	4907      	ldr	r1, [pc, #28]	; (8002a04 <TimeoutMenu+0x64>)
 80029e8:	4618      	mov	r0, r3
 80029ea:	f001 fb19 	bl	8004020 <SSD1306_Puts>

        // Update the SSD1306 display to show the new content.
        SSD1306_UpdateScreen();
 80029ee:	f001 f9db 	bl	8003da8 <SSD1306_UpdateScreen>
    }
}
 80029f2:	bf00      	nop
 80029f4:	3710      	adds	r7, #16
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bd80      	pop	{r7, pc}
 80029fa:	bf00      	nop
 80029fc:	200002c8 	.word	0x200002c8
 8002a00:	20000010 	.word	0x20000010
 8002a04:	20000000 	.word	0x20000000
 8002a08:	0800d878 	.word	0x0800d878

08002a0c <Enroll>:


void Enroll() {
 8002a0c:	b590      	push	{r4, r7, lr}
 8002a0e:	b099      	sub	sp, #100	; 0x64
 8002a10:	af04      	add	r7, sp, #16
    // Print "Enroll" for debugging purposes.
    printf("Enroll\n");
 8002a12:	48b8      	ldr	r0, [pc, #736]	; (8002cf4 <Enroll+0x2e8>)
 8002a14:	f00a f838 	bl	800ca88 <puts>

    // Clear the SSD1306 display.
    SSD1306_Clear();
 8002a18:	f001 fc6f 	bl	80042fa <SSD1306_Clear>

    // Display "Enter new pin" at the specified coordinates using Font_7x10.
    SSD1306_GotoXY(20, 5);
 8002a1c:	2105      	movs	r1, #5
 8002a1e:	2014      	movs	r0, #20
 8002a20:	f001 fa68 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Enter new pin", &Font_7x10, 1);
 8002a24:	2201      	movs	r2, #1
 8002a26:	49b4      	ldr	r1, [pc, #720]	; (8002cf8 <Enroll+0x2ec>)
 8002a28:	48b4      	ldr	r0, [pc, #720]	; (8002cfc <Enroll+0x2f0>)
 8002a2a:	f001 faf9 	bl	8004020 <SSD1306_Puts>

    // Draw a filled rectangle to create a box for the PIN input.
    SSD1306_DrawFilledRectangle(3, 20, 122, 30, 1);
 8002a2e:	2301      	movs	r3, #1
 8002a30:	9300      	str	r3, [sp, #0]
 8002a32:	231e      	movs	r3, #30
 8002a34:	227a      	movs	r2, #122	; 0x7a
 8002a36:	2114      	movs	r1, #20
 8002a38:	2003      	movs	r0, #3
 8002a3a:	f001 fc11 	bl	8004260 <SSD1306_DrawFilledRectangle>

    // Draw lines to separate individual PIN input positions.
    for (int i = 0; i < 12; i++) {
 8002a3e:	2300      	movs	r3, #0
 8002a40:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002a42:	e01a      	b.n	8002a7a <Enroll+0x6e>
        SSD1306_DrawLine(6 + i*10, 40, 12 + i*10, 40, 0);
 8002a44:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002a46:	b29b      	uxth	r3, r3
 8002a48:	461a      	mov	r2, r3
 8002a4a:	0092      	lsls	r2, r2, #2
 8002a4c:	4413      	add	r3, r2
 8002a4e:	005b      	lsls	r3, r3, #1
 8002a50:	b29b      	uxth	r3, r3
 8002a52:	3306      	adds	r3, #6
 8002a54:	b298      	uxth	r0, r3
 8002a56:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002a58:	b29b      	uxth	r3, r3
 8002a5a:	461a      	mov	r2, r3
 8002a5c:	0092      	lsls	r2, r2, #2
 8002a5e:	4413      	add	r3, r2
 8002a60:	005b      	lsls	r3, r3, #1
 8002a62:	b29b      	uxth	r3, r3
 8002a64:	330c      	adds	r3, #12
 8002a66:	b29a      	uxth	r2, r3
 8002a68:	2300      	movs	r3, #0
 8002a6a:	9300      	str	r3, [sp, #0]
 8002a6c:	2328      	movs	r3, #40	; 0x28
 8002a6e:	2128      	movs	r1, #40	; 0x28
 8002a70:	f001 fafb 	bl	800406a <SSD1306_DrawLine>
    for (int i = 0; i < 12; i++) {
 8002a74:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002a76:	3301      	adds	r3, #1
 8002a78:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002a7a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002a7c:	2b0b      	cmp	r3, #11
 8002a7e:	dde1      	ble.n	8002a44 <Enroll+0x38>
    }

    // Set the cursor to the first PIN input position and display '!' as a starting character.
    SSD1306_GotoXY(6, 33);
 8002a80:	2121      	movs	r1, #33	; 0x21
 8002a82:	2006      	movs	r0, #6
 8002a84:	f001 fa36 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Putc('!', &Font_7x10, 0);
 8002a88:	2200      	movs	r2, #0
 8002a8a:	499b      	ldr	r1, [pc, #620]	; (8002cf8 <Enroll+0x2ec>)
 8002a8c:	2021      	movs	r0, #33	; 0x21
 8002a8e:	f001 fa47 	bl	8003f20 <SSD1306_Putc>

    // Update the SSD1306 display to show the initial PIN entry screen.
    SSD1306_UpdateScreen();
 8002a92:	f001 f989 	bl	8003da8 <SSD1306_UpdateScreen>

    // Initialize the flag to true to start the while loop, index to 0, and temp_num to 33 (ASCII '!')
    bool flag = true;
 8002a96:	2301      	movs	r3, #1
 8002a98:	f887 304b 	strb.w	r3, [r7, #75]	; 0x4b
    uint8_t index = 0;
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	f887 304a 	strb.w	r3, [r7, #74]	; 0x4a
    uint8_t temp_num = 33;
 8002aa2:	2321      	movs	r3, #33	; 0x21
 8002aa4:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49

    // Loop to handle PIN entry until the flag is set to false.
    while (flag) {
 8002aa8:	e172      	b.n	8002d90 <Enroll+0x384>
        // Check the state of the buttons.
        uint8_t temp = checkButtons();
 8002aaa:	f000 fef5 	bl	8003898 <checkButtons>
 8002aae:	4603      	mov	r3, r0
 8002ab0:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48

        // If the 'up' button is pressed, increment temp_num and wrap around if it exceeds 126.
        if (temp == 0) {
 8002ab4:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d122      	bne.n	8002b02 <Enroll+0xf6>
            temp_num++;
 8002abc:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 8002ac0:	3301      	adds	r3, #1
 8002ac2:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49
            if (temp_num == 127) temp_num = 33;
 8002ac6:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 8002aca:	2b7f      	cmp	r3, #127	; 0x7f
 8002acc:	d102      	bne.n	8002ad4 <Enroll+0xc8>
 8002ace:	2321      	movs	r3, #33	; 0x21
 8002ad0:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49
            SSD1306_GotoXY(6 + index*10, 33);
 8002ad4:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002ad8:	b29b      	uxth	r3, r3
 8002ada:	461a      	mov	r2, r3
 8002adc:	0092      	lsls	r2, r2, #2
 8002ade:	4413      	add	r3, r2
 8002ae0:	005b      	lsls	r3, r3, #1
 8002ae2:	b29b      	uxth	r3, r3
 8002ae4:	3306      	adds	r3, #6
 8002ae6:	b29b      	uxth	r3, r3
 8002ae8:	2121      	movs	r1, #33	; 0x21
 8002aea:	4618      	mov	r0, r3
 8002aec:	f001 fa02 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Putc((char)temp_num, &Font_7x10, 0);
 8002af0:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 8002af4:	2200      	movs	r2, #0
 8002af6:	4980      	ldr	r1, [pc, #512]	; (8002cf8 <Enroll+0x2ec>)
 8002af8:	4618      	mov	r0, r3
 8002afa:	f001 fa11 	bl	8003f20 <SSD1306_Putc>
            SSD1306_UpdateScreen();
 8002afe:	f001 f953 	bl	8003da8 <SSD1306_UpdateScreen>
        }

        // If the 'down' button is pressed, decrement temp_num and wrap around if it goes below 33.
        if (temp == 1) {
 8002b02:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8002b06:	2b01      	cmp	r3, #1
 8002b08:	d122      	bne.n	8002b50 <Enroll+0x144>
            temp_num--;
 8002b0a:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 8002b0e:	3b01      	subs	r3, #1
 8002b10:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49
            if (temp_num < 33) temp_num = 126;
 8002b14:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 8002b18:	2b20      	cmp	r3, #32
 8002b1a:	d802      	bhi.n	8002b22 <Enroll+0x116>
 8002b1c:	237e      	movs	r3, #126	; 0x7e
 8002b1e:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49
            SSD1306_GotoXY(6 + index*10, 33);
 8002b22:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002b26:	b29b      	uxth	r3, r3
 8002b28:	461a      	mov	r2, r3
 8002b2a:	0092      	lsls	r2, r2, #2
 8002b2c:	4413      	add	r3, r2
 8002b2e:	005b      	lsls	r3, r3, #1
 8002b30:	b29b      	uxth	r3, r3
 8002b32:	3306      	adds	r3, #6
 8002b34:	b29b      	uxth	r3, r3
 8002b36:	2121      	movs	r1, #33	; 0x21
 8002b38:	4618      	mov	r0, r3
 8002b3a:	f001 f9db 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Putc((char)temp_num, &Font_7x10, 0);
 8002b3e:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 8002b42:	2200      	movs	r2, #0
 8002b44:	496c      	ldr	r1, [pc, #432]	; (8002cf8 <Enroll+0x2ec>)
 8002b46:	4618      	mov	r0, r3
 8002b48:	f001 f9ea 	bl	8003f20 <SSD1306_Putc>
            SSD1306_UpdateScreen();
 8002b4c:	f001 f92c 	bl	8003da8 <SSD1306_UpdateScreen>
        }

        // If both buttons are pressed, handle the PIN entry.
        if (temp == 2) {
 8002b50:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8002b54:	2b02      	cmp	r3, #2
 8002b56:	f040 811b 	bne.w	8002d90 <Enroll+0x384>
            // If the index is 11 (last position), save the entered PIN and exit the loop.
            if (index == 11) {
 8002b5a:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002b5e:	2b0b      	cmp	r3, #11
 8002b60:	f040 80dc 	bne.w	8002d1c <Enroll+0x310>
                password[index] = temp_num;
 8002b64:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002b68:	4965      	ldr	r1, [pc, #404]	; (8002d00 <Enroll+0x2f4>)
 8002b6a:	f897 2049 	ldrb.w	r2, [r7, #73]	; 0x49
 8002b6e:	54ca      	strb	r2, [r1, r3]
                flag = false;
 8002b70:	2300      	movs	r3, #0
 8002b72:	f887 304b 	strb.w	r3, [r7, #75]	; 0x4b
                SSD1306_GotoXY(6 + index*10, 33);
 8002b76:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002b7a:	b29b      	uxth	r3, r3
 8002b7c:	461a      	mov	r2, r3
 8002b7e:	0092      	lsls	r2, r2, #2
 8002b80:	4413      	add	r3, r2
 8002b82:	005b      	lsls	r3, r3, #1
 8002b84:	b29b      	uxth	r3, r3
 8002b86:	3306      	adds	r3, #6
 8002b88:	b29b      	uxth	r3, r3
 8002b8a:	2121      	movs	r1, #33	; 0x21
 8002b8c:	4618      	mov	r0, r3
 8002b8e:	f001 f9b1 	bl	8003ef4 <SSD1306_GotoXY>
                SSD1306_Putc('*', &Font_7x10, 0);
 8002b92:	2200      	movs	r2, #0
 8002b94:	4958      	ldr	r1, [pc, #352]	; (8002cf8 <Enroll+0x2ec>)
 8002b96:	202a      	movs	r0, #42	; 0x2a
 8002b98:	f001 f9c2 	bl	8003f20 <SSD1306_Putc>
                SSD1306_UpdateScreen();
 8002b9c:	f001 f904 	bl	8003da8 <SSD1306_UpdateScreen>

                // Read the number of users from flash memory.
                MY_FLASH_ReadN(Nusers_address, &user_num, 1, DATA_TYPE_8);
 8002ba0:	2300      	movs	r3, #0
 8002ba2:	2201      	movs	r2, #1
 8002ba4:	4957      	ldr	r1, [pc, #348]	; (8002d04 <Enroll+0x2f8>)
 8002ba6:	2001      	movs	r0, #1
 8002ba8:	f7ff fad8 	bl	800215c <MY_FLASH_ReadN>

                // Generate and save a local salt.
                Get_rng(LocalSalt, 2);
 8002bac:	2102      	movs	r1, #2
 8002bae:	4856      	ldr	r0, [pc, #344]	; (8002d08 <Enroll+0x2fc>)
 8002bb0:	f000 ff46 	bl	8003a40 <Get_rng>
                write_flash(MemDatastartpoint + (user_num * 72), LocalSalt, 8);
 8002bb4:	4b53      	ldr	r3, [pc, #332]	; (8002d04 <Enroll+0x2f8>)
 8002bb6:	781b      	ldrb	r3, [r3, #0]
 8002bb8:	461a      	mov	r2, r3
 8002bba:	4613      	mov	r3, r2
 8002bbc:	00db      	lsls	r3, r3, #3
 8002bbe:	4413      	add	r3, r2
 8002bc0:	00db      	lsls	r3, r3, #3
 8002bc2:	330b      	adds	r3, #11
 8002bc4:	2208      	movs	r2, #8
 8002bc6:	4950      	ldr	r1, [pc, #320]	; (8002d08 <Enroll+0x2fc>)
 8002bc8:	4618      	mov	r0, r3
 8002bca:	f7ff fb23 	bl	8002214 <write_flash>

                // Generate and save an initialization vector (IV).
                Get_rng(IV, 4);
 8002bce:	2104      	movs	r1, #4
 8002bd0:	484e      	ldr	r0, [pc, #312]	; (8002d0c <Enroll+0x300>)
 8002bd2:	f000 ff35 	bl	8003a40 <Get_rng>
                write_flash(MemDatastartpoint + 8 + (user_num * 72), IV, 16);
 8002bd6:	4b4b      	ldr	r3, [pc, #300]	; (8002d04 <Enroll+0x2f8>)
 8002bd8:	781b      	ldrb	r3, [r3, #0]
 8002bda:	461a      	mov	r2, r3
 8002bdc:	4613      	mov	r3, r2
 8002bde:	00db      	lsls	r3, r3, #3
 8002be0:	4413      	add	r3, r2
 8002be2:	00db      	lsls	r3, r3, #3
 8002be4:	3313      	adds	r3, #19
 8002be6:	2210      	movs	r2, #16
 8002be8:	4948      	ldr	r1, [pc, #288]	; (8002d0c <Enroll+0x300>)
 8002bea:	4618      	mov	r0, r3
 8002bec:	f7ff fb12 	bl	8002214 <write_flash>

                // Read the global salt from flash memory.
                MY_FLASH_ReadN(GlobalSalt_address, GlobalSalt, 8, DATA_TYPE_8);
 8002bf0:	2300      	movs	r3, #0
 8002bf2:	2208      	movs	r2, #8
 8002bf4:	4946      	ldr	r1, [pc, #280]	; (8002d10 <Enroll+0x304>)
 8002bf6:	2003      	movs	r0, #3
 8002bf8:	f7ff fab0 	bl	800215c <MY_FLASH_ReadN>

                // Concatenate the global salt and password, and compute the SHA-256 hash.
                uint8_t temp[20];
                memcpy(temp, GlobalSalt, sizeof(GlobalSalt));
 8002bfc:	4a44      	ldr	r2, [pc, #272]	; (8002d10 <Enroll+0x304>)
 8002bfe:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002c02:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002c06:	e883 0003 	stmia.w	r3, {r0, r1}
                memcpy(temp + sizeof(GlobalSalt), password, sizeof(password));
 8002c0a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002c0e:	3308      	adds	r3, #8
 8002c10:	4a3b      	ldr	r2, [pc, #236]	; (8002d00 <Enroll+0x2f4>)
 8002c12:	461c      	mov	r4, r3
 8002c14:	4613      	mov	r3, r2
 8002c16:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002c18:	6020      	str	r0, [r4, #0]
 8002c1a:	6061      	str	r1, [r4, #4]
 8002c1c:	60a2      	str	r2, [r4, #8]
                uint8_t computedSha256[32];
                sha256(temp, computedSha256, sizeof(temp));
 8002c1e:	4639      	mov	r1, r7
 8002c20:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002c24:	2214      	movs	r2, #20
 8002c26:	4618      	mov	r0, r3
 8002c28:	f000 fdd4 	bl	80037d4 <sha256>

                // Save the computed SHA-256 hash of the password.
                write_flash(MemDatastartpoint + 8 + 16 + (user_num * 72), computedSha256, 32);
 8002c2c:	4b35      	ldr	r3, [pc, #212]	; (8002d04 <Enroll+0x2f8>)
 8002c2e:	781b      	ldrb	r3, [r3, #0]
 8002c30:	461a      	mov	r2, r3
 8002c32:	4613      	mov	r3, r2
 8002c34:	00db      	lsls	r3, r3, #3
 8002c36:	4413      	add	r3, r2
 8002c38:	00db      	lsls	r3, r3, #3
 8002c3a:	3323      	adds	r3, #35	; 0x23
 8002c3c:	4618      	mov	r0, r3
 8002c3e:	463b      	mov	r3, r7
 8002c40:	2220      	movs	r2, #32
 8002c42:	4619      	mov	r1, r3
 8002c44:	f7ff fae6 	bl	8002214 <write_flash>

                // Generate a master key.
                Get_rng(MasterKey, 4);
 8002c48:	2104      	movs	r1, #4
 8002c4a:	4832      	ldr	r0, [pc, #200]	; (8002d14 <Enroll+0x308>)
 8002c4c:	f000 fef8 	bl	8003a40 <Get_rng>

                // Concatenate the local salt and password, and compute the SHA-256 hash.
                memcpy(temp, LocalSalt, sizeof(LocalSalt));
 8002c50:	4a2d      	ldr	r2, [pc, #180]	; (8002d08 <Enroll+0x2fc>)
 8002c52:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002c56:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002c5a:	e883 0003 	stmia.w	r3, {r0, r1}
                memcpy(temp + sizeof(LocalSalt), password, sizeof(password));
 8002c5e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002c62:	3308      	adds	r3, #8
 8002c64:	4a26      	ldr	r2, [pc, #152]	; (8002d00 <Enroll+0x2f4>)
 8002c66:	461c      	mov	r4, r3
 8002c68:	4613      	mov	r3, r2
 8002c6a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002c6c:	6020      	str	r0, [r4, #0]
 8002c6e:	6061      	str	r1, [r4, #4]
 8002c70:	60a2      	str	r2, [r4, #8]
                sha256(temp, computedSha256, sizeof(temp));
 8002c72:	4639      	mov	r1, r7
 8002c74:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002c78:	2214      	movs	r2, #20
 8002c7a:	4618      	mov	r0, r3
 8002c7c:	f000 fdaa 	bl	80037d4 <sha256>

                // Encrypt the master key using AES-CBC.
                uint8_t computedAES[16];
                AESCBC(MasterKey, sizeof(MasterKey), computedSha256, sizeof(computedSha256), IV, sizeof(IV), computedAES);
 8002c80:	463a      	mov	r2, r7
 8002c82:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002c86:	9302      	str	r3, [sp, #8]
 8002c88:	2310      	movs	r3, #16
 8002c8a:	9301      	str	r3, [sp, #4]
 8002c8c:	4b1f      	ldr	r3, [pc, #124]	; (8002d0c <Enroll+0x300>)
 8002c8e:	9300      	str	r3, [sp, #0]
 8002c90:	2320      	movs	r3, #32
 8002c92:	2110      	movs	r1, #16
 8002c94:	481f      	ldr	r0, [pc, #124]	; (8002d14 <Enroll+0x308>)
 8002c96:	f000 fdb7 	bl	8003808 <AESCBC>

                // Save the encrypted master key.
                write_flash(MemDatastartpoint + 8 + 16 + 32 + (user_num * 72), computedAES, 16);
 8002c9a:	4b1a      	ldr	r3, [pc, #104]	; (8002d04 <Enroll+0x2f8>)
 8002c9c:	781b      	ldrb	r3, [r3, #0]
 8002c9e:	461a      	mov	r2, r3
 8002ca0:	4613      	mov	r3, r2
 8002ca2:	00db      	lsls	r3, r3, #3
 8002ca4:	4413      	add	r3, r2
 8002ca6:	00db      	lsls	r3, r3, #3
 8002ca8:	3343      	adds	r3, #67	; 0x43
 8002caa:	4618      	mov	r0, r3
 8002cac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002cb0:	2210      	movs	r2, #16
 8002cb2:	4619      	mov	r1, r3
 8002cb4:	f7ff faae 	bl	8002214 <write_flash>

                // Update the "brand new" status in flash memory.
                uint8_t value = 1;
 8002cb8:	2301      	movs	r3, #1
 8002cba:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
                write_flash(BrandNew_address, &value, 1);
 8002cbe:	f107 0323 	add.w	r3, r7, #35	; 0x23
 8002cc2:	2201      	movs	r2, #1
 8002cc4:	4619      	mov	r1, r3
 8002cc6:	2000      	movs	r0, #0
 8002cc8:	f7ff faa4 	bl	8002214 <write_flash>

                // Increment and save the number of users.
                user_num++;
 8002ccc:	4b0d      	ldr	r3, [pc, #52]	; (8002d04 <Enroll+0x2f8>)
 8002cce:	781b      	ldrb	r3, [r3, #0]
 8002cd0:	3301      	adds	r3, #1
 8002cd2:	b2da      	uxtb	r2, r3
 8002cd4:	4b0b      	ldr	r3, [pc, #44]	; (8002d04 <Enroll+0x2f8>)
 8002cd6:	701a      	strb	r2, [r3, #0]
                write_flash(Nusers_address, &user_num, 1);
 8002cd8:	2201      	movs	r2, #1
 8002cda:	490a      	ldr	r1, [pc, #40]	; (8002d04 <Enroll+0x2f8>)
 8002cdc:	2001      	movs	r0, #1
 8002cde:	f7ff fa99 	bl	8002214 <write_flash>

                // Blink to indicate successful enrollment and clear the display.
                blink();
 8002ce2:	f000 fc01 	bl	80034e8 <blink>
                SSD1306_Clear();
 8002ce6:	f001 fb08 	bl	80042fa <SSD1306_Clear>

                // Set the system state to Lock.
                state = Lock;
 8002cea:	4b0b      	ldr	r3, [pc, #44]	; (8002d18 <Enroll+0x30c>)
 8002cec:	2200      	movs	r2, #0
 8002cee:	701a      	strb	r2, [r3, #0]
 8002cf0:	e04e      	b.n	8002d90 <Enroll+0x384>
 8002cf2:	bf00      	nop
 8002cf4:	0800d884 	.word	0x0800d884
 8002cf8:	20000000 	.word	0x20000000
 8002cfc:	0800d88c 	.word	0x0800d88c
 8002d00:	2000026c 	.word	0x2000026c
 8002d04:	20000288 	.word	0x20000288
 8002d08:	20000254 	.word	0x20000254
 8002d0c:	2000025c 	.word	0x2000025c
 8002d10:	2000024c 	.word	0x2000024c
 8002d14:	20000278 	.word	0x20000278
 8002d18:	200002c1 	.word	0x200002c1
            } else {
                // Save the entered character in the password array and move to the next position.
                password[index] = temp_num;
 8002d1c:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002d20:	4920      	ldr	r1, [pc, #128]	; (8002da4 <Enroll+0x398>)
 8002d22:	f897 2049 	ldrb.w	r2, [r7, #73]	; 0x49
 8002d26:	54ca      	strb	r2, [r1, r3]
                temp_num = 33;
 8002d28:	2321      	movs	r3, #33	; 0x21
 8002d2a:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49
                SSD1306_GotoXY(6 + index*10, 33);
 8002d2e:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002d32:	b29b      	uxth	r3, r3
 8002d34:	461a      	mov	r2, r3
 8002d36:	0092      	lsls	r2, r2, #2
 8002d38:	4413      	add	r3, r2
 8002d3a:	005b      	lsls	r3, r3, #1
 8002d3c:	b29b      	uxth	r3, r3
 8002d3e:	3306      	adds	r3, #6
 8002d40:	b29b      	uxth	r3, r3
 8002d42:	2121      	movs	r1, #33	; 0x21
 8002d44:	4618      	mov	r0, r3
 8002d46:	f001 f8d5 	bl	8003ef4 <SSD1306_GotoXY>
                SSD1306_Putc('*', &Font_7x10, 0);
 8002d4a:	2200      	movs	r2, #0
 8002d4c:	4916      	ldr	r1, [pc, #88]	; (8002da8 <Enroll+0x39c>)
 8002d4e:	202a      	movs	r0, #42	; 0x2a
 8002d50:	f001 f8e6 	bl	8003f20 <SSD1306_Putc>
                SSD1306_UpdateScreen();
 8002d54:	f001 f828 	bl	8003da8 <SSD1306_UpdateScreen>
                index++;
 8002d58:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002d5c:	3301      	adds	r3, #1
 8002d5e:	f887 304a 	strb.w	r3, [r7, #74]	; 0x4a
                SSD1306_GotoXY(6 + index*10, 33);
 8002d62:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 8002d66:	b29b      	uxth	r3, r3
 8002d68:	461a      	mov	r2, r3
 8002d6a:	0092      	lsls	r2, r2, #2
 8002d6c:	4413      	add	r3, r2
 8002d6e:	005b      	lsls	r3, r3, #1
 8002d70:	b29b      	uxth	r3, r3
 8002d72:	3306      	adds	r3, #6
 8002d74:	b29b      	uxth	r3, r3
 8002d76:	2121      	movs	r1, #33	; 0x21
 8002d78:	4618      	mov	r0, r3
 8002d7a:	f001 f8bb 	bl	8003ef4 <SSD1306_GotoXY>
                SSD1306_Putc((char)temp_num, &Font_7x10, 0);
 8002d7e:	f897 3049 	ldrb.w	r3, [r7, #73]	; 0x49
 8002d82:	2200      	movs	r2, #0
 8002d84:	4908      	ldr	r1, [pc, #32]	; (8002da8 <Enroll+0x39c>)
 8002d86:	4618      	mov	r0, r3
 8002d88:	f001 f8ca 	bl	8003f20 <SSD1306_Putc>
                SSD1306_UpdateScreen();
 8002d8c:	f001 f80c 	bl	8003da8 <SSD1306_UpdateScreen>
    while (flag) {
 8002d90:	f897 304b 	ldrb.w	r3, [r7, #75]	; 0x4b
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	f47f ae88 	bne.w	8002aaa <Enroll+0x9e>
            }
        }
    }
}
 8002d9a:	bf00      	nop
 8002d9c:	bf00      	nop
 8002d9e:	3754      	adds	r7, #84	; 0x54
 8002da0:	46bd      	mov	sp, r7
 8002da2:	bd90      	pop	{r4, r7, pc}
 8002da4:	2000026c 	.word	0x2000026c
 8002da8:	20000000 	.word	0x20000000

08002dac <LockDevice>:


void LockDevice() {
 8002dac:	b590      	push	{r4, r7, lr}
 8002dae:	b097      	sub	sp, #92	; 0x5c
 8002db0:	af04      	add	r7, sp, #16
    // Set the device and timer states to false, indicating the device is locked and the timer is inactive.
    DeviceState = false;
 8002db2:	4bc0      	ldr	r3, [pc, #768]	; (80030b4 <LockDevice+0x308>)
 8002db4:	2200      	movs	r2, #0
 8002db6:	701a      	strb	r2, [r3, #0]
    TimerState = false;
 8002db8:	4bbf      	ldr	r3, [pc, #764]	; (80030b8 <LockDevice+0x30c>)
 8002dba:	2200      	movs	r2, #0
 8002dbc:	701a      	strb	r2, [r3, #0]

    // Clear the SSD1306 display.
    SSD1306_Clear();
 8002dbe:	f001 fa9c 	bl	80042fa <SSD1306_Clear>

    // Display "Enter pin" at the specified coordinates using Font_7x10.
    SSD1306_GotoXY(32, 5);
 8002dc2:	2105      	movs	r1, #5
 8002dc4:	2020      	movs	r0, #32
 8002dc6:	f001 f895 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Enter pin", &Font_7x10, 1);
 8002dca:	2201      	movs	r2, #1
 8002dcc:	49bb      	ldr	r1, [pc, #748]	; (80030bc <LockDevice+0x310>)
 8002dce:	48bc      	ldr	r0, [pc, #752]	; (80030c0 <LockDevice+0x314>)
 8002dd0:	f001 f926 	bl	8004020 <SSD1306_Puts>

    // Draw a filled rectangle to create a box for the PIN input.
    SSD1306_DrawFilledRectangle(3, 20, 122, 30, 1);
 8002dd4:	2301      	movs	r3, #1
 8002dd6:	9300      	str	r3, [sp, #0]
 8002dd8:	231e      	movs	r3, #30
 8002dda:	227a      	movs	r2, #122	; 0x7a
 8002ddc:	2114      	movs	r1, #20
 8002dde:	2003      	movs	r0, #3
 8002de0:	f001 fa3e 	bl	8004260 <SSD1306_DrawFilledRectangle>

    // Draw lines to separate individual PIN input positions.
    for (int i = 0; i < 12; i++) {
 8002de4:	2300      	movs	r3, #0
 8002de6:	647b      	str	r3, [r7, #68]	; 0x44
 8002de8:	e01a      	b.n	8002e20 <LockDevice+0x74>
        SSD1306_DrawLine(6 + i*10, 40, 12 + i*10, 40, 0);
 8002dea:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002dec:	b29b      	uxth	r3, r3
 8002dee:	461a      	mov	r2, r3
 8002df0:	0092      	lsls	r2, r2, #2
 8002df2:	4413      	add	r3, r2
 8002df4:	005b      	lsls	r3, r3, #1
 8002df6:	b29b      	uxth	r3, r3
 8002df8:	3306      	adds	r3, #6
 8002dfa:	b298      	uxth	r0, r3
 8002dfc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002dfe:	b29b      	uxth	r3, r3
 8002e00:	461a      	mov	r2, r3
 8002e02:	0092      	lsls	r2, r2, #2
 8002e04:	4413      	add	r3, r2
 8002e06:	005b      	lsls	r3, r3, #1
 8002e08:	b29b      	uxth	r3, r3
 8002e0a:	330c      	adds	r3, #12
 8002e0c:	b29a      	uxth	r2, r3
 8002e0e:	2300      	movs	r3, #0
 8002e10:	9300      	str	r3, [sp, #0]
 8002e12:	2328      	movs	r3, #40	; 0x28
 8002e14:	2128      	movs	r1, #40	; 0x28
 8002e16:	f001 f928 	bl	800406a <SSD1306_DrawLine>
    for (int i = 0; i < 12; i++) {
 8002e1a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002e1c:	3301      	adds	r3, #1
 8002e1e:	647b      	str	r3, [r7, #68]	; 0x44
 8002e20:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002e22:	2b0b      	cmp	r3, #11
 8002e24:	dde1      	ble.n	8002dea <LockDevice+0x3e>
    }

    // Set the cursor to the first PIN input position and display '!' as a starting character.
    SSD1306_GotoXY(6, 33);
 8002e26:	2121      	movs	r1, #33	; 0x21
 8002e28:	2006      	movs	r0, #6
 8002e2a:	f001 f863 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Putc('!', &Font_7x10, 0);
 8002e2e:	2200      	movs	r2, #0
 8002e30:	49a2      	ldr	r1, [pc, #648]	; (80030bc <LockDevice+0x310>)
 8002e32:	2021      	movs	r0, #33	; 0x21
 8002e34:	f001 f874 	bl	8003f20 <SSD1306_Putc>

    // Update the SSD1306 display to show the initial PIN entry screen.
    SSD1306_UpdateScreen();
 8002e38:	f000 ffb6 	bl	8003da8 <SSD1306_UpdateScreen>

    // Initialize the flag to true to start the while loop, index to 0, and temp_num to 33 (ASCII '!').
    bool flag = true;
 8002e3c:	2301      	movs	r3, #1
 8002e3e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
    uint8_t index = 0;
 8002e42:	2300      	movs	r3, #0
 8002e44:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
    uint8_t temp_num = 33;
 8002e48:	2321      	movs	r3, #33	; 0x21
 8002e4a:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41

    // Loop to handle PIN entry until the flag is set to false.
    while (flag) {
 8002e4e:	e1ad      	b.n	80031ac <LockDevice+0x400>
        // Check the state of the buttons.
        uint8_t temp = checkButtons();
 8002e50:	f000 fd22 	bl	8003898 <checkButtons>
 8002e54:	4603      	mov	r3, r0
 8002e56:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b

        // If the 'up' button is pressed, increment temp_num and wrap around if it exceeds 126.
        if (temp == 0) {
 8002e5a:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d122      	bne.n	8002ea8 <LockDevice+0xfc>
            temp_num++;
 8002e62:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8002e66:	3301      	adds	r3, #1
 8002e68:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
            if (temp_num == 127) temp_num = 33;
 8002e6c:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8002e70:	2b7f      	cmp	r3, #127	; 0x7f
 8002e72:	d102      	bne.n	8002e7a <LockDevice+0xce>
 8002e74:	2321      	movs	r3, #33	; 0x21
 8002e76:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
            SSD1306_GotoXY(6 + index*10, 33);
 8002e7a:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8002e7e:	b29b      	uxth	r3, r3
 8002e80:	461a      	mov	r2, r3
 8002e82:	0092      	lsls	r2, r2, #2
 8002e84:	4413      	add	r3, r2
 8002e86:	005b      	lsls	r3, r3, #1
 8002e88:	b29b      	uxth	r3, r3
 8002e8a:	3306      	adds	r3, #6
 8002e8c:	b29b      	uxth	r3, r3
 8002e8e:	2121      	movs	r1, #33	; 0x21
 8002e90:	4618      	mov	r0, r3
 8002e92:	f001 f82f 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Putc((char)temp_num, &Font_7x10, 0);
 8002e96:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8002e9a:	2200      	movs	r2, #0
 8002e9c:	4987      	ldr	r1, [pc, #540]	; (80030bc <LockDevice+0x310>)
 8002e9e:	4618      	mov	r0, r3
 8002ea0:	f001 f83e 	bl	8003f20 <SSD1306_Putc>
            SSD1306_UpdateScreen();
 8002ea4:	f000 ff80 	bl	8003da8 <SSD1306_UpdateScreen>
        }

        // If the 'down' button is pressed, decrement temp_num and wrap around if it goes below 33.
        if (temp == 1) {
 8002ea8:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8002eac:	2b01      	cmp	r3, #1
 8002eae:	d122      	bne.n	8002ef6 <LockDevice+0x14a>
            temp_num--;
 8002eb0:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8002eb4:	3b01      	subs	r3, #1
 8002eb6:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
            if (temp_num < 33) temp_num = 126;
 8002eba:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8002ebe:	2b20      	cmp	r3, #32
 8002ec0:	d802      	bhi.n	8002ec8 <LockDevice+0x11c>
 8002ec2:	237e      	movs	r3, #126	; 0x7e
 8002ec4:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
            SSD1306_GotoXY(6 + index*10, 33);
 8002ec8:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8002ecc:	b29b      	uxth	r3, r3
 8002ece:	461a      	mov	r2, r3
 8002ed0:	0092      	lsls	r2, r2, #2
 8002ed2:	4413      	add	r3, r2
 8002ed4:	005b      	lsls	r3, r3, #1
 8002ed6:	b29b      	uxth	r3, r3
 8002ed8:	3306      	adds	r3, #6
 8002eda:	b29b      	uxth	r3, r3
 8002edc:	2121      	movs	r1, #33	; 0x21
 8002ede:	4618      	mov	r0, r3
 8002ee0:	f001 f808 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Putc((char)temp_num, &Font_7x10, 0);
 8002ee4:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8002ee8:	2200      	movs	r2, #0
 8002eea:	4974      	ldr	r1, [pc, #464]	; (80030bc <LockDevice+0x310>)
 8002eec:	4618      	mov	r0, r3
 8002eee:	f001 f817 	bl	8003f20 <SSD1306_Putc>
            SSD1306_UpdateScreen();
 8002ef2:	f000 ff59 	bl	8003da8 <SSD1306_UpdateScreen>
        }

        // If both buttons are pressed, handle the PIN entry.
        if (temp == 2) {
 8002ef6:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8002efa:	2b02      	cmp	r3, #2
 8002efc:	f040 8156 	bne.w	80031ac <LockDevice+0x400>
            // If the index is 11 (last position), save the entered PIN and exit the loop.
            if (index == 11) {
 8002f00:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8002f04:	2b0b      	cmp	r3, #11
 8002f06:	f040 8117 	bne.w	8003138 <LockDevice+0x38c>
                password[index] = temp_num;
 8002f0a:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8002f0e:	496d      	ldr	r1, [pc, #436]	; (80030c4 <LockDevice+0x318>)
 8002f10:	f897 2041 	ldrb.w	r2, [r7, #65]	; 0x41
 8002f14:	54ca      	strb	r2, [r1, r3]
                flag = false;
 8002f16:	2300      	movs	r3, #0
 8002f18:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
                SSD1306_GotoXY(6 + index*10, 33);
 8002f1c:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8002f20:	b29b      	uxth	r3, r3
 8002f22:	461a      	mov	r2, r3
 8002f24:	0092      	lsls	r2, r2, #2
 8002f26:	4413      	add	r3, r2
 8002f28:	005b      	lsls	r3, r3, #1
 8002f2a:	b29b      	uxth	r3, r3
 8002f2c:	3306      	adds	r3, #6
 8002f2e:	b29b      	uxth	r3, r3
 8002f30:	2121      	movs	r1, #33	; 0x21
 8002f32:	4618      	mov	r0, r3
 8002f34:	f000 ffde 	bl	8003ef4 <SSD1306_GotoXY>
                SSD1306_Putc('*', &Font_7x10, 0);
 8002f38:	2200      	movs	r2, #0
 8002f3a:	4960      	ldr	r1, [pc, #384]	; (80030bc <LockDevice+0x310>)
 8002f3c:	202a      	movs	r0, #42	; 0x2a
 8002f3e:	f000 ffef 	bl	8003f20 <SSD1306_Putc>
                SSD1306_UpdateScreen();
 8002f42:	f000 ff31 	bl	8003da8 <SSD1306_UpdateScreen>

                // Check if the entered password is correct.
                if (CheckPassword()) {
 8002f46:	f000 fb13 	bl	8003570 <CheckPassword>
 8002f4a:	4603      	mov	r3, r0
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d06d      	beq.n	800302c <LockDevice+0x280>
                    // If the password is correct, load the user's salt, IV, and encrypted master key.
                    MY_FLASH_ReadN(MemDatastartpoint + (CurrentUser*72), CurrentLocalSalt, 8, DATA_TYPE_8);
 8002f50:	4b5d      	ldr	r3, [pc, #372]	; (80030c8 <LockDevice+0x31c>)
 8002f52:	781b      	ldrb	r3, [r3, #0]
 8002f54:	461a      	mov	r2, r3
 8002f56:	4613      	mov	r3, r2
 8002f58:	00db      	lsls	r3, r3, #3
 8002f5a:	4413      	add	r3, r2
 8002f5c:	00db      	lsls	r3, r3, #3
 8002f5e:	330b      	adds	r3, #11
 8002f60:	4618      	mov	r0, r3
 8002f62:	2300      	movs	r3, #0
 8002f64:	2208      	movs	r2, #8
 8002f66:	4959      	ldr	r1, [pc, #356]	; (80030cc <LockDevice+0x320>)
 8002f68:	f7ff f8f8 	bl	800215c <MY_FLASH_ReadN>
                    MY_FLASH_ReadN(MemDatastartpoint + 8 + (CurrentUser*72), CurrentIV, 16, DATA_TYPE_8);
 8002f6c:	4b56      	ldr	r3, [pc, #344]	; (80030c8 <LockDevice+0x31c>)
 8002f6e:	781b      	ldrb	r3, [r3, #0]
 8002f70:	461a      	mov	r2, r3
 8002f72:	4613      	mov	r3, r2
 8002f74:	00db      	lsls	r3, r3, #3
 8002f76:	4413      	add	r3, r2
 8002f78:	00db      	lsls	r3, r3, #3
 8002f7a:	3313      	adds	r3, #19
 8002f7c:	4618      	mov	r0, r3
 8002f7e:	2300      	movs	r3, #0
 8002f80:	2210      	movs	r2, #16
 8002f82:	4953      	ldr	r1, [pc, #332]	; (80030d0 <LockDevice+0x324>)
 8002f84:	f7ff f8ea 	bl	800215c <MY_FLASH_ReadN>
                    MY_FLASH_ReadN(MemDatastartpoint + 8 + 16 + 32 + (CurrentUser*72), CurrentMasterKey, 16, DATA_TYPE_8);
 8002f88:	4b4f      	ldr	r3, [pc, #316]	; (80030c8 <LockDevice+0x31c>)
 8002f8a:	781b      	ldrb	r3, [r3, #0]
 8002f8c:	461a      	mov	r2, r3
 8002f8e:	4613      	mov	r3, r2
 8002f90:	00db      	lsls	r3, r3, #3
 8002f92:	4413      	add	r3, r2
 8002f94:	00db      	lsls	r3, r3, #3
 8002f96:	3343      	adds	r3, #67	; 0x43
 8002f98:	4618      	mov	r0, r3
 8002f9a:	2300      	movs	r3, #0
 8002f9c:	2210      	movs	r2, #16
 8002f9e:	494d      	ldr	r1, [pc, #308]	; (80030d4 <LockDevice+0x328>)
 8002fa0:	f7ff f8dc 	bl	800215c <MY_FLASH_ReadN>

                    // Compute the SHA-256 hash of the concatenation of the local salt and password.
                    uint8_t temp[20];
                    memcpy(temp, CurrentLocalSalt, sizeof(CurrentLocalSalt));
 8002fa4:	4a49      	ldr	r2, [pc, #292]	; (80030cc <LockDevice+0x320>)
 8002fa6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002faa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002fae:	e883 0003 	stmia.w	r3, {r0, r1}
                    memcpy(temp + sizeof(CurrentLocalSalt), CurrentPassword, sizeof(CurrentPassword));
 8002fb2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002fb6:	3308      	adds	r3, #8
 8002fb8:	4a47      	ldr	r2, [pc, #284]	; (80030d8 <LockDevice+0x32c>)
 8002fba:	461c      	mov	r4, r3
 8002fbc:	4613      	mov	r3, r2
 8002fbe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002fc0:	6020      	str	r0, [r4, #0]
 8002fc2:	6061      	str	r1, [r4, #4]
 8002fc4:	60a2      	str	r2, [r4, #8]
                    uint8_t computedSha256[32];
                    sha256(temp, computedSha256, sizeof(temp));
 8002fc6:	1d39      	adds	r1, r7, #4
 8002fc8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002fcc:	2214      	movs	r2, #20
 8002fce:	4618      	mov	r0, r3
 8002fd0:	f000 fc00 	bl	80037d4 <sha256>

                    // Decrypt the master key using AES with the computed SHA-256 hash as the key.
                    DecryptAES(CurrentMasterKey, sizeof(CurrentMasterKey), computedSha256, sizeof(computedSha256), CurrentIV, sizeof(CurrentIV), CurrentMasterKey);
 8002fd4:	1d3a      	adds	r2, r7, #4
 8002fd6:	4b3f      	ldr	r3, [pc, #252]	; (80030d4 <LockDevice+0x328>)
 8002fd8:	9302      	str	r3, [sp, #8]
 8002fda:	2310      	movs	r3, #16
 8002fdc:	9301      	str	r3, [sp, #4]
 8002fde:	4b3c      	ldr	r3, [pc, #240]	; (80030d0 <LockDevice+0x324>)
 8002fe0:	9300      	str	r3, [sp, #0]
 8002fe2:	2320      	movs	r3, #32
 8002fe4:	2110      	movs	r1, #16
 8002fe6:	483b      	ldr	r0, [pc, #236]	; (80030d4 <LockDevice+0x328>)
 8002fe8:	f000 fc32 	bl	8003850 <DecryptAES>

                    // Print the decrypted master key for debugging purposes.
                    printf("DECKey: \n");
 8002fec:	483b      	ldr	r0, [pc, #236]	; (80030dc <LockDevice+0x330>)
 8002fee:	f009 fd4b 	bl	800ca88 <puts>
                    for (int i = 0; i < 16; i++) printf("%02x ", CurrentMasterKey[i]);
 8002ff2:	2300      	movs	r3, #0
 8002ff4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002ff6:	e00a      	b.n	800300e <LockDevice+0x262>
 8002ff8:	4a36      	ldr	r2, [pc, #216]	; (80030d4 <LockDevice+0x328>)
 8002ffa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002ffc:	4413      	add	r3, r2
 8002ffe:	781b      	ldrb	r3, [r3, #0]
 8003000:	4619      	mov	r1, r3
 8003002:	4837      	ldr	r0, [pc, #220]	; (80030e0 <LockDevice+0x334>)
 8003004:	f009 fcd2 	bl	800c9ac <iprintf>
 8003008:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800300a:	3301      	adds	r3, #1
 800300c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800300e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003010:	2b0f      	cmp	r3, #15
 8003012:	ddf1      	ble.n	8002ff8 <LockDevice+0x24c>
                    printf("\n");
 8003014:	200a      	movs	r0, #10
 8003016:	f009 fcdb 	bl	800c9d0 <putchar>

                    // Blink to indicate successful decryption, set the device state to true, and change the state to Menu.
                    blink();
 800301a:	f000 fa65 	bl	80034e8 <blink>
                    DeviceState = true;
 800301e:	4b25      	ldr	r3, [pc, #148]	; (80030b4 <LockDevice+0x308>)
 8003020:	2201      	movs	r2, #1
 8003022:	701a      	strb	r2, [r3, #0]
                    state = Menu;
 8003024:	4b2f      	ldr	r3, [pc, #188]	; (80030e4 <LockDevice+0x338>)
 8003026:	2204      	movs	r2, #4
 8003028:	701a      	strb	r2, [r3, #0]
 800302a:	e082      	b.n	8003132 <LockDevice+0x386>
                } else {
                    // If the password is incorrect, increment the wrong password counter.
                    MY_FLASH_ReadN(WrongPassword_address, &WrongPassword, 1, DATA_TYPE_8);
 800302c:	2300      	movs	r3, #0
 800302e:	2201      	movs	r2, #1
 8003030:	492d      	ldr	r1, [pc, #180]	; (80030e8 <LockDevice+0x33c>)
 8003032:	2002      	movs	r0, #2
 8003034:	f7ff f892 	bl	800215c <MY_FLASH_ReadN>
                    WrongPassword++;
 8003038:	4b2b      	ldr	r3, [pc, #172]	; (80030e8 <LockDevice+0x33c>)
 800303a:	781b      	ldrb	r3, [r3, #0]
 800303c:	3301      	adds	r3, #1
 800303e:	b2da      	uxtb	r2, r3
 8003040:	4b29      	ldr	r3, [pc, #164]	; (80030e8 <LockDevice+0x33c>)
 8003042:	701a      	strb	r2, [r3, #0]

                    // If the wrong password counter is less than 5, update the corresponding LED and flash memory.
                    if (WrongPassword < 5) {
 8003044:	4b28      	ldr	r3, [pc, #160]	; (80030e8 <LockDevice+0x33c>)
 8003046:	781b      	ldrb	r3, [r3, #0]
 8003048:	2b04      	cmp	r3, #4
 800304a:	d851      	bhi.n	80030f0 <LockDevice+0x344>
                        if (WrongPassword == 1) HAL_GPIO_WritePin(Blue_GPIO_Port, Blue_Pin, GPIO_PIN_SET);
 800304c:	4b26      	ldr	r3, [pc, #152]	; (80030e8 <LockDevice+0x33c>)
 800304e:	781b      	ldrb	r3, [r3, #0]
 8003050:	2b01      	cmp	r3, #1
 8003052:	d105      	bne.n	8003060 <LockDevice+0x2b4>
 8003054:	2201      	movs	r2, #1
 8003056:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800305a:	4824      	ldr	r0, [pc, #144]	; (80030ec <LockDevice+0x340>)
 800305c:	f002 f952 	bl	8005304 <HAL_GPIO_WritePin>
                        if (WrongPassword == 2) HAL_GPIO_WritePin(Green_GPIO_Port, Green_Pin, GPIO_PIN_SET);
 8003060:	4b21      	ldr	r3, [pc, #132]	; (80030e8 <LockDevice+0x33c>)
 8003062:	781b      	ldrb	r3, [r3, #0]
 8003064:	2b02      	cmp	r3, #2
 8003066:	d105      	bne.n	8003074 <LockDevice+0x2c8>
 8003068:	2201      	movs	r2, #1
 800306a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800306e:	481f      	ldr	r0, [pc, #124]	; (80030ec <LockDevice+0x340>)
 8003070:	f002 f948 	bl	8005304 <HAL_GPIO_WritePin>
                        if (WrongPassword == 3) HAL_GPIO_WritePin(Orange_GPIO_Port, Orange_Pin, GPIO_PIN_SET);
 8003074:	4b1c      	ldr	r3, [pc, #112]	; (80030e8 <LockDevice+0x33c>)
 8003076:	781b      	ldrb	r3, [r3, #0]
 8003078:	2b03      	cmp	r3, #3
 800307a:	d105      	bne.n	8003088 <LockDevice+0x2dc>
 800307c:	2201      	movs	r2, #1
 800307e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003082:	481a      	ldr	r0, [pc, #104]	; (80030ec <LockDevice+0x340>)
 8003084:	f002 f93e 	bl	8005304 <HAL_GPIO_WritePin>
                        if (WrongPassword == 4) HAL_GPIO_WritePin(Red_GPIO_Port, Red_Pin, GPIO_PIN_SET);
 8003088:	4b17      	ldr	r3, [pc, #92]	; (80030e8 <LockDevice+0x33c>)
 800308a:	781b      	ldrb	r3, [r3, #0]
 800308c:	2b04      	cmp	r3, #4
 800308e:	d105      	bne.n	800309c <LockDevice+0x2f0>
 8003090:	2201      	movs	r2, #1
 8003092:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003096:	4815      	ldr	r0, [pc, #84]	; (80030ec <LockDevice+0x340>)
 8003098:	f002 f934 	bl	8005304 <HAL_GPIO_WritePin>
                        write_flash(WrongPassword_address, &WrongPassword, 1);
 800309c:	2201      	movs	r2, #1
 800309e:	4912      	ldr	r1, [pc, #72]	; (80030e8 <LockDevice+0x33c>)
 80030a0:	2002      	movs	r0, #2
 80030a2:	f7ff f8b7 	bl	8002214 <write_flash>

                        // Trigger an alarm on the OLED and reset the state to Lock.
                        OledAlarm();
 80030a6:	f000 f96b 	bl	8003380 <OledAlarm>
                        state = Lock;
 80030aa:	4b0e      	ldr	r3, [pc, #56]	; (80030e4 <LockDevice+0x338>)
 80030ac:	2200      	movs	r2, #0
 80030ae:	701a      	strb	r2, [r3, #0]
 80030b0:	e03f      	b.n	8003132 <LockDevice+0x386>
 80030b2:	bf00      	nop
 80030b4:	200002c4 	.word	0x200002c4
 80030b8:	200002c3 	.word	0x200002c3
 80030bc:	20000000 	.word	0x20000000
 80030c0:	0800d89c 	.word	0x0800d89c
 80030c4:	2000026c 	.word	0x2000026c
 80030c8:	2000028a 	.word	0x2000028a
 80030cc:	200002a8 	.word	0x200002a8
 80030d0:	200002b0 	.word	0x200002b0
 80030d4:	20000298 	.word	0x20000298
 80030d8:	2000028c 	.word	0x2000028c
 80030dc:	0800d8a8 	.word	0x0800d8a8
 80030e0:	0800d8b4 	.word	0x0800d8b4
 80030e4:	200002c1 	.word	0x200002c1
 80030e8:	200002c0 	.word	0x200002c0
 80030ec:	40020c00 	.word	0x40020c00
                    } else {
                        // If the wrong password counter reaches 5, erase memory and reset the LEDs.
                        EraseAlaram();
 80030f0:	f000 f978 	bl	80033e4 <EraseAlaram>
                        EraseMem();
 80030f4:	f000 f99a 	bl	800342c <EraseMem>
                        blink();
 80030f8:	f000 f9f6 	bl	80034e8 <blink>
                        HAL_GPIO_WritePin(Blue_GPIO_Port, Blue_Pin, GPIO_PIN_RESET);
 80030fc:	2200      	movs	r2, #0
 80030fe:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003102:	482f      	ldr	r0, [pc, #188]	; (80031c0 <LockDevice+0x414>)
 8003104:	f002 f8fe 	bl	8005304 <HAL_GPIO_WritePin>
                        HAL_GPIO_WritePin(Green_GPIO_Port, Green_Pin, GPIO_PIN_RESET);
 8003108:	2200      	movs	r2, #0
 800310a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800310e:	482c      	ldr	r0, [pc, #176]	; (80031c0 <LockDevice+0x414>)
 8003110:	f002 f8f8 	bl	8005304 <HAL_GPIO_WritePin>
                        HAL_GPIO_WritePin(Orange_GPIO_Port, Orange_Pin, GPIO_PIN_RESET);
 8003114:	2200      	movs	r2, #0
 8003116:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800311a:	4829      	ldr	r0, [pc, #164]	; (80031c0 <LockDevice+0x414>)
 800311c:	f002 f8f2 	bl	8005304 <HAL_GPIO_WritePin>
                        HAL_GPIO_WritePin(Red_GPIO_Port, Red_Pin, GPIO_PIN_RESET);
 8003120:	2200      	movs	r2, #0
 8003122:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003126:	4826      	ldr	r0, [pc, #152]	; (80031c0 <LockDevice+0x414>)
 8003128:	f002 f8ec 	bl	8005304 <HAL_GPIO_WritePin>

                        // Set the state to Enrollment for re-enrollment.
                        state = Enrollment;
 800312c:	4b25      	ldr	r3, [pc, #148]	; (80031c4 <LockDevice+0x418>)
 800312e:	2203      	movs	r2, #3
 8003130:	701a      	strb	r2, [r3, #0]
                    }
                }

                // Clear the SSD1306 display.
                SSD1306_Clear();
 8003132:	f001 f8e2 	bl	80042fa <SSD1306_Clear>
 8003136:	e039      	b.n	80031ac <LockDevice+0x400>
            } else {
                // Save the entered character in the password array and move to the next position.
                password[index] = temp_num;
 8003138:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 800313c:	4922      	ldr	r1, [pc, #136]	; (80031c8 <LockDevice+0x41c>)
 800313e:	f897 2041 	ldrb.w	r2, [r7, #65]	; 0x41
 8003142:	54ca      	strb	r2, [r1, r3]
                temp_num = 33;
 8003144:	2321      	movs	r3, #33	; 0x21
 8003146:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
                SSD1306_GotoXY(6 + index*10, 33);
 800314a:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 800314e:	b29b      	uxth	r3, r3
 8003150:	461a      	mov	r2, r3
 8003152:	0092      	lsls	r2, r2, #2
 8003154:	4413      	add	r3, r2
 8003156:	005b      	lsls	r3, r3, #1
 8003158:	b29b      	uxth	r3, r3
 800315a:	3306      	adds	r3, #6
 800315c:	b29b      	uxth	r3, r3
 800315e:	2121      	movs	r1, #33	; 0x21
 8003160:	4618      	mov	r0, r3
 8003162:	f000 fec7 	bl	8003ef4 <SSD1306_GotoXY>
                SSD1306_Putc('*', &Font_7x10, 0);
 8003166:	2200      	movs	r2, #0
 8003168:	4918      	ldr	r1, [pc, #96]	; (80031cc <LockDevice+0x420>)
 800316a:	202a      	movs	r0, #42	; 0x2a
 800316c:	f000 fed8 	bl	8003f20 <SSD1306_Putc>
                SSD1306_UpdateScreen();
 8003170:	f000 fe1a 	bl	8003da8 <SSD1306_UpdateScreen>
                index++;
 8003174:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8003178:	3301      	adds	r3, #1
 800317a:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
                SSD1306_GotoXY(6 + index*10, 33);
 800317e:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 8003182:	b29b      	uxth	r3, r3
 8003184:	461a      	mov	r2, r3
 8003186:	0092      	lsls	r2, r2, #2
 8003188:	4413      	add	r3, r2
 800318a:	005b      	lsls	r3, r3, #1
 800318c:	b29b      	uxth	r3, r3
 800318e:	3306      	adds	r3, #6
 8003190:	b29b      	uxth	r3, r3
 8003192:	2121      	movs	r1, #33	; 0x21
 8003194:	4618      	mov	r0, r3
 8003196:	f000 fead 	bl	8003ef4 <SSD1306_GotoXY>
                SSD1306_Putc((char)temp_num, &Font_7x10, 0);
 800319a:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 800319e:	2200      	movs	r2, #0
 80031a0:	490a      	ldr	r1, [pc, #40]	; (80031cc <LockDevice+0x420>)
 80031a2:	4618      	mov	r0, r3
 80031a4:	f000 febc 	bl	8003f20 <SSD1306_Putc>
                SSD1306_UpdateScreen();
 80031a8:	f000 fdfe 	bl	8003da8 <SSD1306_UpdateScreen>
    while (flag) {
 80031ac:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	f47f ae4d 	bne.w	8002e50 <LockDevice+0xa4>
            }
        }
    }
}
 80031b6:	bf00      	nop
 80031b8:	bf00      	nop
 80031ba:	374c      	adds	r7, #76	; 0x4c
 80031bc:	46bd      	mov	sp, r7
 80031be:	bd90      	pop	{r4, r7, pc}
 80031c0:	40020c00 	.word	0x40020c00
 80031c4:	200002c1 	.word	0x200002c1
 80031c8:	2000026c 	.word	0x2000026c
 80031cc:	20000000 	.word	0x20000000

080031d0 <ResetFactory>:


void ResetFactory() {
 80031d0:	b580      	push	{r7, lr}
 80031d2:	b084      	sub	sp, #16
 80031d4:	af02      	add	r7, sp, #8
    // Clear the SSD1306 display.
    SSD1306_Clear();
 80031d6:	f001 f890 	bl	80042fa <SSD1306_Clear>

    // Draw a filled rectangle around the "No" option.
    SSD1306_DrawFilledRectangle(71, 35, 25, 12, 1);
 80031da:	2301      	movs	r3, #1
 80031dc:	9300      	str	r3, [sp, #0]
 80031de:	230c      	movs	r3, #12
 80031e0:	2219      	movs	r2, #25
 80031e2:	2123      	movs	r1, #35	; 0x23
 80031e4:	2047      	movs	r0, #71	; 0x47
 80031e6:	f001 f83b 	bl	8004260 <SSD1306_DrawFilledRectangle>

    // Display "Reset factory" at the specified coordinates using Font_7x10.
    SSD1306_GotoXY(18, 17);
 80031ea:	2111      	movs	r1, #17
 80031ec:	2012      	movs	r0, #18
 80031ee:	f000 fe81 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Reset factory", &Font_7x10, 1);
 80031f2:	2201      	movs	r2, #1
 80031f4:	495b      	ldr	r1, [pc, #364]	; (8003364 <ResetFactory+0x194>)
 80031f6:	485c      	ldr	r0, [pc, #368]	; (8003368 <ResetFactory+0x198>)
 80031f8:	f000 ff12 	bl	8004020 <SSD1306_Puts>

    // Display "Yes" and "No" options at the specified coordinates.
    SSD1306_GotoXY(38, 37);
 80031fc:	2125      	movs	r1, #37	; 0x25
 80031fe:	2026      	movs	r0, #38	; 0x26
 8003200:	f000 fe78 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Yes", &Font_7x10, 1);
 8003204:	2201      	movs	r2, #1
 8003206:	4957      	ldr	r1, [pc, #348]	; (8003364 <ResetFactory+0x194>)
 8003208:	4858      	ldr	r0, [pc, #352]	; (800336c <ResetFactory+0x19c>)
 800320a:	f000 ff09 	bl	8004020 <SSD1306_Puts>
    SSD1306_GotoXY(78, 37);
 800320e:	2125      	movs	r1, #37	; 0x25
 8003210:	204e      	movs	r0, #78	; 0x4e
 8003212:	f000 fe6f 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("No", &Font_7x10, 0);
 8003216:	2200      	movs	r2, #0
 8003218:	4952      	ldr	r1, [pc, #328]	; (8003364 <ResetFactory+0x194>)
 800321a:	4855      	ldr	r0, [pc, #340]	; (8003370 <ResetFactory+0x1a0>)
 800321c:	f000 ff00 	bl	8004020 <SSD1306_Puts>

    // Update the SSD1306 display to show the initial reset factory screen.
    SSD1306_UpdateScreen();
 8003220:	f000 fdc2 	bl	8003da8 <SSD1306_UpdateScreen>

    // Initialize the YesNo flag to false, indicating "No" is currently selected.
    bool YesNo = false;
 8003224:	2300      	movs	r3, #0
 8003226:	71fb      	strb	r3, [r7, #7]

    // Loop to handle user input until the device state changes or the user makes a selection.
    while (1) {
        // If the device is locked, change the state to Lock and break the loop.
        if (!DeviceState) {
 8003228:	4b52      	ldr	r3, [pc, #328]	; (8003374 <ResetFactory+0x1a4>)
 800322a:	781b      	ldrb	r3, [r3, #0]
 800322c:	f083 0301 	eor.w	r3, r3, #1
 8003230:	b2db      	uxtb	r3, r3
 8003232:	2b00      	cmp	r3, #0
 8003234:	d003      	beq.n	800323e <ResetFactory+0x6e>
            state = Lock;
 8003236:	4b50      	ldr	r3, [pc, #320]	; (8003378 <ResetFactory+0x1a8>)
 8003238:	2200      	movs	r2, #0
 800323a:	701a      	strb	r2, [r3, #0]
            break;
 800323c:	e08e      	b.n	800335c <ResetFactory+0x18c>
        }

        // Check the state of the buttons.
        uint8_t btn_state = checkButtons();
 800323e:	f000 fb2b 	bl	8003898 <checkButtons>
 8003242:	4603      	mov	r3, r0
 8003244:	71bb      	strb	r3, [r7, #6]

        // If the 'up' button is pressed, select "Yes" and update the display.
        if (btn_state == 0) { // up
 8003246:	79bb      	ldrb	r3, [r7, #6]
 8003248:	2b00      	cmp	r3, #0
 800324a:	d129      	bne.n	80032a0 <ResetFactory+0xd0>
            SSD1306_Clear();
 800324c:	f001 f855 	bl	80042fa <SSD1306_Clear>
            SSD1306_DrawFilledRectangle(36, 35, 25, 12, 1);
 8003250:	2301      	movs	r3, #1
 8003252:	9300      	str	r3, [sp, #0]
 8003254:	230c      	movs	r3, #12
 8003256:	2219      	movs	r2, #25
 8003258:	2123      	movs	r1, #35	; 0x23
 800325a:	2024      	movs	r0, #36	; 0x24
 800325c:	f001 f800 	bl	8004260 <SSD1306_DrawFilledRectangle>
            SSD1306_GotoXY(18, 17);
 8003260:	2111      	movs	r1, #17
 8003262:	2012      	movs	r0, #18
 8003264:	f000 fe46 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Puts("Reset factory", &Font_7x10, 1);
 8003268:	2201      	movs	r2, #1
 800326a:	493e      	ldr	r1, [pc, #248]	; (8003364 <ResetFactory+0x194>)
 800326c:	483e      	ldr	r0, [pc, #248]	; (8003368 <ResetFactory+0x198>)
 800326e:	f000 fed7 	bl	8004020 <SSD1306_Puts>
            SSD1306_GotoXY(38, 37);
 8003272:	2125      	movs	r1, #37	; 0x25
 8003274:	2026      	movs	r0, #38	; 0x26
 8003276:	f000 fe3d 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Puts("Yes", &Font_7x10, 0);
 800327a:	2200      	movs	r2, #0
 800327c:	4939      	ldr	r1, [pc, #228]	; (8003364 <ResetFactory+0x194>)
 800327e:	483b      	ldr	r0, [pc, #236]	; (800336c <ResetFactory+0x19c>)
 8003280:	f000 fece 	bl	8004020 <SSD1306_Puts>
            SSD1306_GotoXY(78, 37);
 8003284:	2125      	movs	r1, #37	; 0x25
 8003286:	204e      	movs	r0, #78	; 0x4e
 8003288:	f000 fe34 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Puts("No", &Font_7x10, 1);
 800328c:	2201      	movs	r2, #1
 800328e:	4935      	ldr	r1, [pc, #212]	; (8003364 <ResetFactory+0x194>)
 8003290:	4837      	ldr	r0, [pc, #220]	; (8003370 <ResetFactory+0x1a0>)
 8003292:	f000 fec5 	bl	8004020 <SSD1306_Puts>
            SSD1306_UpdateScreen();
 8003296:	f000 fd87 	bl	8003da8 <SSD1306_UpdateScreen>
            YesNo = true;
 800329a:	2301      	movs	r3, #1
 800329c:	71fb      	strb	r3, [r7, #7]
 800329e:	e7c3      	b.n	8003228 <ResetFactory+0x58>
        }

        // If the 'down' button is pressed, select "No" and update the display.
        else if (btn_state == 1) { // down
 80032a0:	79bb      	ldrb	r3, [r7, #6]
 80032a2:	2b01      	cmp	r3, #1
 80032a4:	d129      	bne.n	80032fa <ResetFactory+0x12a>
            SSD1306_Clear();
 80032a6:	f001 f828 	bl	80042fa <SSD1306_Clear>
            SSD1306_DrawFilledRectangle(71, 35, 25, 12, 1);
 80032aa:	2301      	movs	r3, #1
 80032ac:	9300      	str	r3, [sp, #0]
 80032ae:	230c      	movs	r3, #12
 80032b0:	2219      	movs	r2, #25
 80032b2:	2123      	movs	r1, #35	; 0x23
 80032b4:	2047      	movs	r0, #71	; 0x47
 80032b6:	f000 ffd3 	bl	8004260 <SSD1306_DrawFilledRectangle>
            SSD1306_GotoXY(18, 17);
 80032ba:	2111      	movs	r1, #17
 80032bc:	2012      	movs	r0, #18
 80032be:	f000 fe19 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Puts("Reset factory", &Font_7x10, 1);
 80032c2:	2201      	movs	r2, #1
 80032c4:	4927      	ldr	r1, [pc, #156]	; (8003364 <ResetFactory+0x194>)
 80032c6:	4828      	ldr	r0, [pc, #160]	; (8003368 <ResetFactory+0x198>)
 80032c8:	f000 feaa 	bl	8004020 <SSD1306_Puts>
            SSD1306_GotoXY(38, 37);
 80032cc:	2125      	movs	r1, #37	; 0x25
 80032ce:	2026      	movs	r0, #38	; 0x26
 80032d0:	f000 fe10 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Puts("Yes", &Font_7x10, 1);
 80032d4:	2201      	movs	r2, #1
 80032d6:	4923      	ldr	r1, [pc, #140]	; (8003364 <ResetFactory+0x194>)
 80032d8:	4824      	ldr	r0, [pc, #144]	; (800336c <ResetFactory+0x19c>)
 80032da:	f000 fea1 	bl	8004020 <SSD1306_Puts>
            SSD1306_GotoXY(78, 37);
 80032de:	2125      	movs	r1, #37	; 0x25
 80032e0:	204e      	movs	r0, #78	; 0x4e
 80032e2:	f000 fe07 	bl	8003ef4 <SSD1306_GotoXY>
            SSD1306_Puts("No", &Font_7x10, 0);
 80032e6:	2200      	movs	r2, #0
 80032e8:	491e      	ldr	r1, [pc, #120]	; (8003364 <ResetFactory+0x194>)
 80032ea:	4821      	ldr	r0, [pc, #132]	; (8003370 <ResetFactory+0x1a0>)
 80032ec:	f000 fe98 	bl	8004020 <SSD1306_Puts>
            SSD1306_UpdateScreen();
 80032f0:	f000 fd5a 	bl	8003da8 <SSD1306_UpdateScreen>
            YesNo = false;
 80032f4:	2300      	movs	r3, #0
 80032f6:	71fb      	strb	r3, [r7, #7]
 80032f8:	e796      	b.n	8003228 <ResetFactory+0x58>
        }

        // If both buttons are pressed, perform the action based on the selected option.
        else if (btn_state == 2) { // both
 80032fa:	79bb      	ldrb	r3, [r7, #6]
 80032fc:	2b02      	cmp	r3, #2
 80032fe:	d193      	bne.n	8003228 <ResetFactory+0x58>
            // If "Yes" is selected, erase alarms and memory, reset LEDs, and change state to Enrollment.
            if (YesNo) {
 8003300:	79fb      	ldrb	r3, [r7, #7]
 8003302:	2b00      	cmp	r3, #0
 8003304:	d020      	beq.n	8003348 <ResetFactory+0x178>
                EraseAlaram();
 8003306:	f000 f86d 	bl	80033e4 <EraseAlaram>
                EraseMem();
 800330a:	f000 f88f 	bl	800342c <EraseMem>
                blink();
 800330e:	f000 f8eb 	bl	80034e8 <blink>
                HAL_GPIO_WritePin(Blue_GPIO_Port, Blue_Pin, GPIO_PIN_RESET);
 8003312:	2200      	movs	r2, #0
 8003314:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003318:	4818      	ldr	r0, [pc, #96]	; (800337c <ResetFactory+0x1ac>)
 800331a:	f001 fff3 	bl	8005304 <HAL_GPIO_WritePin>
                HAL_GPIO_WritePin(Green_GPIO_Port, Green_Pin, GPIO_PIN_RESET);
 800331e:	2200      	movs	r2, #0
 8003320:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003324:	4815      	ldr	r0, [pc, #84]	; (800337c <ResetFactory+0x1ac>)
 8003326:	f001 ffed 	bl	8005304 <HAL_GPIO_WritePin>
                HAL_GPIO_WritePin(Orange_GPIO_Port, Orange_Pin, GPIO_PIN_RESET);
 800332a:	2200      	movs	r2, #0
 800332c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003330:	4812      	ldr	r0, [pc, #72]	; (800337c <ResetFactory+0x1ac>)
 8003332:	f001 ffe7 	bl	8005304 <HAL_GPIO_WritePin>
                HAL_GPIO_WritePin(Red_GPIO_Port, Red_Pin, GPIO_PIN_RESET);
 8003336:	2200      	movs	r2, #0
 8003338:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800333c:	480f      	ldr	r0, [pc, #60]	; (800337c <ResetFactory+0x1ac>)
 800333e:	f001 ffe1 	bl	8005304 <HAL_GPIO_WritePin>
                state = Enrollment;
 8003342:	4b0d      	ldr	r3, [pc, #52]	; (8003378 <ResetFactory+0x1a8>)
 8003344:	2203      	movs	r2, #3
 8003346:	701a      	strb	r2, [r3, #0]
            }

            // If "No" is selected, change the state back to Menu.
            if (!YesNo) {
 8003348:	79fb      	ldrb	r3, [r7, #7]
 800334a:	f083 0301 	eor.w	r3, r3, #1
 800334e:	b2db      	uxtb	r3, r3
 8003350:	2b00      	cmp	r3, #0
 8003352:	d002      	beq.n	800335a <ResetFactory+0x18a>
                // printf("resetCanceled\n");
                state = Menu;
 8003354:	4b08      	ldr	r3, [pc, #32]	; (8003378 <ResetFactory+0x1a8>)
 8003356:	2204      	movs	r2, #4
 8003358:	701a      	strb	r2, [r3, #0]
            }

            // Break the loop after making a selection.
            break;
 800335a:	bf00      	nop
        }
    }
}
 800335c:	bf00      	nop
 800335e:	3708      	adds	r7, #8
 8003360:	46bd      	mov	sp, r7
 8003362:	bd80      	pop	{r7, pc}
 8003364:	20000000 	.word	0x20000000
 8003368:	0800d8bc 	.word	0x0800d8bc
 800336c:	0800d8cc 	.word	0x0800d8cc
 8003370:	0800d8d0 	.word	0x0800d8d0
 8003374:	200002c4 	.word	0x200002c4
 8003378:	200002c1 	.word	0x200002c1
 800337c:	40020c00 	.word	0x40020c00

08003380 <OledAlarm>:


void OledAlarm() {
 8003380:	b580      	push	{r7, lr}
 8003382:	af00      	add	r7, sp, #0
    // Clear the SSD1306 display.
    SSD1306_Clear();
 8003384:	f000 ffb9 	bl	80042fa <SSD1306_Clear>

    // Display "Warning" message at the specified coordinates using Font_11x18.
    SSD1306_GotoXY(25, 0);
 8003388:	2100      	movs	r1, #0
 800338a:	2019      	movs	r0, #25
 800338c:	f000 fdb2 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Warning", &Font_11x18, 1);
 8003390:	2201      	movs	r2, #1
 8003392:	490f      	ldr	r1, [pc, #60]	; (80033d0 <OledAlarm+0x50>)
 8003394:	480f      	ldr	r0, [pc, #60]	; (80033d4 <OledAlarm+0x54>)
 8003396:	f000 fe43 	bl	8004020 <SSD1306_Puts>

    // Calculate the remaining attempts and display it.
    SSD1306_GotoXY(11, 36);
 800339a:	2124      	movs	r1, #36	; 0x24
 800339c:	200b      	movs	r0, #11
 800339e:	f000 fda9 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Putc(4 - WrongPassword + '0', &Font_7x10, 1);  // Display the number of remaining attempts.
 80033a2:	4b0d      	ldr	r3, [pc, #52]	; (80033d8 <OledAlarm+0x58>)
 80033a4:	781b      	ldrb	r3, [r3, #0]
 80033a6:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 80033aa:	b2db      	uxtb	r3, r3
 80033ac:	2201      	movs	r2, #1
 80033ae:	490b      	ldr	r1, [pc, #44]	; (80033dc <OledAlarm+0x5c>)
 80033b0:	4618      	mov	r0, r3
 80033b2:	f000 fdb5 	bl	8003f20 <SSD1306_Putc>

    // Display " more attempts" message at the specified coordinates using Font_7x10.
    SSD1306_Puts(" more attempts", &Font_7x10, 1);
 80033b6:	2201      	movs	r2, #1
 80033b8:	4908      	ldr	r1, [pc, #32]	; (80033dc <OledAlarm+0x5c>)
 80033ba:	4809      	ldr	r0, [pc, #36]	; (80033e0 <OledAlarm+0x60>)
 80033bc:	f000 fe30 	bl	8004020 <SSD1306_Puts>

    // Update the SSD1306 display to show the warning message and remaining attempts.
    SSD1306_UpdateScreen();
 80033c0:	f000 fcf2 	bl	8003da8 <SSD1306_UpdateScreen>

    // Delay for 3000 milliseconds (3 seconds) to allow the user to read the warning message.
    HAL_Delay(3000);
 80033c4:	f640 30b8 	movw	r0, #3000	; 0xbb8
 80033c8:	f001 fa98 	bl	80048fc <HAL_Delay>
}
 80033cc:	bf00      	nop
 80033ce:	bd80      	pop	{r7, pc}
 80033d0:	20000008 	.word	0x20000008
 80033d4:	0800d8d4 	.word	0x0800d8d4
 80033d8:	200002c0 	.word	0x200002c0
 80033dc:	20000000 	.word	0x20000000
 80033e0:	0800d8dc 	.word	0x0800d8dc

080033e4 <EraseAlaram>:


void EraseAlaram() {
 80033e4:	b580      	push	{r7, lr}
 80033e6:	af00      	add	r7, sp, #0
    // Clear the SSD1306 display.
    SSD1306_Clear();
 80033e8:	f000 ff87 	bl	80042fa <SSD1306_Clear>

    // Display "Memory" message at the specified coordinates using Font_11x18.
    SSD1306_GotoXY(31, 14);
 80033ec:	210e      	movs	r1, #14
 80033ee:	201f      	movs	r0, #31
 80033f0:	f000 fd80 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("Memory", &Font_11x18, 1);
 80033f4:	2201      	movs	r2, #1
 80033f6:	490a      	ldr	r1, [pc, #40]	; (8003420 <EraseAlaram+0x3c>)
 80033f8:	480a      	ldr	r0, [pc, #40]	; (8003424 <EraseAlaram+0x40>)
 80033fa:	f000 fe11 	bl	8004020 <SSD1306_Puts>

    // Display "erasing:(" message at the specified coordinates using Font_11x18.
    SSD1306_GotoXY(14, 32);
 80033fe:	2120      	movs	r1, #32
 8003400:	200e      	movs	r0, #14
 8003402:	f000 fd77 	bl	8003ef4 <SSD1306_GotoXY>
    SSD1306_Puts("erasing:(", &Font_11x18, 1);
 8003406:	2201      	movs	r2, #1
 8003408:	4905      	ldr	r1, [pc, #20]	; (8003420 <EraseAlaram+0x3c>)
 800340a:	4807      	ldr	r0, [pc, #28]	; (8003428 <EraseAlaram+0x44>)
 800340c:	f000 fe08 	bl	8004020 <SSD1306_Puts>

    // Update the SSD1306 display to show the memory erasing message.
    SSD1306_UpdateScreen();
 8003410:	f000 fcca 	bl	8003da8 <SSD1306_UpdateScreen>

    // Delay for 3000 milliseconds (3 seconds) to allow the user to read the memory erasing message.
    HAL_Delay(3000);
 8003414:	f640 30b8 	movw	r0, #3000	; 0xbb8
 8003418:	f001 fa70 	bl	80048fc <HAL_Delay>
}
 800341c:	bf00      	nop
 800341e:	bd80      	pop	{r7, pc}
 8003420:	20000008 	.word	0x20000008
 8003424:	0800d8ec 	.word	0x0800d8ec
 8003428:	0800d8f4 	.word	0x0800d8f4

0800342c <EraseMem>:


void EraseMem(){
 800342c:	b580      	push	{r7, lr}
 800342e:	f5ad 7d7a 	sub.w	sp, sp, #1000	; 0x3e8
 8003432:	af00      	add	r7, sp, #0
	uint8_t All_0[1000] = {0};
 8003434:	f507 737a 	add.w	r3, r7, #1000	; 0x3e8
 8003438:	f5a3 737a 	sub.w	r3, r3, #1000	; 0x3e8
 800343c:	2200      	movs	r2, #0
 800343e:	601a      	str	r2, [r3, #0]
 8003440:	3304      	adds	r3, #4
 8003442:	f44f 7279 	mov.w	r2, #996	; 0x3e4
 8003446:	2100      	movs	r1, #0
 8003448:	4618      	mov	r0, r3
 800344a:	f009 fc0d 	bl	800cc68 <memset>
	write_flash(0, All_0, 1000);
 800344e:	463b      	mov	r3, r7
 8003450:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003454:	4619      	mov	r1, r3
 8003456:	2000      	movs	r0, #0
 8003458:	f7fe fedc 	bl	8002214 <write_flash>
}
 800345c:	bf00      	nop
 800345e:	f507 777a 	add.w	r7, r7, #1000	; 0x3e8
 8003462:	46bd      	mov	sp, r7
 8003464:	bd80      	pop	{r7, pc}
	...

08003468 <wrong_LEDs>:


void wrong_LEDs() {
 8003468:	b580      	push	{r7, lr}
 800346a:	b082      	sub	sp, #8
 800346c:	af00      	add	r7, sp, #0
    // Read the number of wrong password attempts from flash memory.
    MY_FLASH_ReadN(WrongPassword_address, &WrongPassword, 1, DATA_TYPE_8);
 800346e:	2300      	movs	r3, #0
 8003470:	2201      	movs	r2, #1
 8003472:	491b      	ldr	r1, [pc, #108]	; (80034e0 <wrong_LEDs+0x78>)
 8003474:	2002      	movs	r0, #2
 8003476:	f7fe fe71 	bl	800215c <MY_FLASH_ReadN>

    // Iterate through the number of wrong password attempts and set the corresponding LEDs.
    for(int i = WrongPassword; i >= 0; i--) {
 800347a:	4b19      	ldr	r3, [pc, #100]	; (80034e0 <wrong_LEDs+0x78>)
 800347c:	781b      	ldrb	r3, [r3, #0]
 800347e:	607b      	str	r3, [r7, #4]
 8003480:	e026      	b.n	80034d0 <wrong_LEDs+0x68>
        if (i == 1) {
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	2b01      	cmp	r3, #1
 8003486:	d105      	bne.n	8003494 <wrong_LEDs+0x2c>
            // Set the blue LED.
            HAL_GPIO_WritePin(Blue_GPIO_Port, Blue_Pin, GPIO_PIN_SET);
 8003488:	2201      	movs	r2, #1
 800348a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800348e:	4815      	ldr	r0, [pc, #84]	; (80034e4 <wrong_LEDs+0x7c>)
 8003490:	f001 ff38 	bl	8005304 <HAL_GPIO_WritePin>
        }
        if (i == 2) {
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	2b02      	cmp	r3, #2
 8003498:	d105      	bne.n	80034a6 <wrong_LEDs+0x3e>
            // Set the green LED.
            HAL_GPIO_WritePin(Green_GPIO_Port, Green_Pin, GPIO_PIN_SET);
 800349a:	2201      	movs	r2, #1
 800349c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80034a0:	4810      	ldr	r0, [pc, #64]	; (80034e4 <wrong_LEDs+0x7c>)
 80034a2:	f001 ff2f 	bl	8005304 <HAL_GPIO_WritePin>
        }
        if (i == 3) {
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	2b03      	cmp	r3, #3
 80034aa:	d105      	bne.n	80034b8 <wrong_LEDs+0x50>
            // Set the orange LED.
            HAL_GPIO_WritePin(Orange_GPIO_Port, Orange_Pin, GPIO_PIN_SET);
 80034ac:	2201      	movs	r2, #1
 80034ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80034b2:	480c      	ldr	r0, [pc, #48]	; (80034e4 <wrong_LEDs+0x7c>)
 80034b4:	f001 ff26 	bl	8005304 <HAL_GPIO_WritePin>
        }
        if (i == 4) {
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	2b04      	cmp	r3, #4
 80034bc:	d105      	bne.n	80034ca <wrong_LEDs+0x62>
            // Set the red LED.
            HAL_GPIO_WritePin(Red_GPIO_Port, Red_Pin, GPIO_PIN_SET);
 80034be:	2201      	movs	r2, #1
 80034c0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80034c4:	4807      	ldr	r0, [pc, #28]	; (80034e4 <wrong_LEDs+0x7c>)
 80034c6:	f001 ff1d 	bl	8005304 <HAL_GPIO_WritePin>
    for(int i = WrongPassword; i >= 0; i--) {
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	3b01      	subs	r3, #1
 80034ce:	607b      	str	r3, [r7, #4]
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	2b00      	cmp	r3, #0
 80034d4:	dad5      	bge.n	8003482 <wrong_LEDs+0x1a>
        }
    }
}
 80034d6:	bf00      	nop
 80034d8:	bf00      	nop
 80034da:	3708      	adds	r7, #8
 80034dc:	46bd      	mov	sp, r7
 80034de:	bd80      	pop	{r7, pc}
 80034e0:	200002c0 	.word	0x200002c0
 80034e4:	40020c00 	.word	0x40020c00

080034e8 <blink>:


void blink() {
 80034e8:	b580      	push	{r7, lr}
 80034ea:	b082      	sub	sp, #8
 80034ec:	af00      	add	r7, sp, #0
    // Reset all LEDs to off state.
    HAL_GPIO_WritePin(Blue_GPIO_Port, Blue_Pin, GPIO_PIN_RESET);
 80034ee:	2200      	movs	r2, #0
 80034f0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80034f4:	481d      	ldr	r0, [pc, #116]	; (800356c <blink+0x84>)
 80034f6:	f001 ff05 	bl	8005304 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(Green_GPIO_Port, Green_Pin, GPIO_PIN_RESET);
 80034fa:	2200      	movs	r2, #0
 80034fc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003500:	481a      	ldr	r0, [pc, #104]	; (800356c <blink+0x84>)
 8003502:	f001 feff 	bl	8005304 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(Orange_GPIO_Port, Orange_Pin, GPIO_PIN_RESET);
 8003506:	2200      	movs	r2, #0
 8003508:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800350c:	4817      	ldr	r0, [pc, #92]	; (800356c <blink+0x84>)
 800350e:	f001 fef9 	bl	8005304 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(Red_GPIO_Port, Red_Pin, GPIO_PIN_RESET);
 8003512:	2200      	movs	r2, #0
 8003514:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003518:	4814      	ldr	r0, [pc, #80]	; (800356c <blink+0x84>)
 800351a:	f001 fef3 	bl	8005304 <HAL_GPIO_WritePin>

    // Toggle LEDs in sequence for visual blinking effect.
    for (int i = 0; i < 6; i++) {
 800351e:	2300      	movs	r3, #0
 8003520:	607b      	str	r3, [r7, #4]
 8003522:	e01a      	b.n	800355a <blink+0x72>
        HAL_GPIO_TogglePin(Green_GPIO_Port, Green_Pin);
 8003524:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003528:	4810      	ldr	r0, [pc, #64]	; (800356c <blink+0x84>)
 800352a:	f001 ff04 	bl	8005336 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(Orange_GPIO_Port, Orange_Pin);
 800352e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003532:	480e      	ldr	r0, [pc, #56]	; (800356c <blink+0x84>)
 8003534:	f001 feff 	bl	8005336 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(Red_GPIO_Port, Red_Pin);
 8003538:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800353c:	480b      	ldr	r0, [pc, #44]	; (800356c <blink+0x84>)
 800353e:	f001 fefa 	bl	8005336 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(Blue_GPIO_Port, Blue_Pin);
 8003542:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003546:	4809      	ldr	r0, [pc, #36]	; (800356c <blink+0x84>)
 8003548:	f001 fef5 	bl	8005336 <HAL_GPIO_TogglePin>
        HAL_Delay(300); // Delay to control blink speed
 800354c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8003550:	f001 f9d4 	bl	80048fc <HAL_Delay>
    for (int i = 0; i < 6; i++) {
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	3301      	adds	r3, #1
 8003558:	607b      	str	r3, [r7, #4]
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	2b05      	cmp	r3, #5
 800355e:	dde1      	ble.n	8003524 <blink+0x3c>
    }

    // After blinking, update LEDs according to the number of wrong password attempts.
    wrong_LEDs();
 8003560:	f7ff ff82 	bl	8003468 <wrong_LEDs>
}
 8003564:	bf00      	nop
 8003566:	3708      	adds	r7, #8
 8003568:	46bd      	mov	sp, r7
 800356a:	bd80      	pop	{r7, pc}
 800356c:	40020c00 	.word	0x40020c00

08003570 <CheckPassword>:


bool CheckPassword() {
 8003570:	b590      	push	{r4, r7, lr}
 8003572:	b097      	sub	sp, #92	; 0x5c
 8003574:	af00      	add	r7, sp, #0
    uint8_t tempPassword[32]; // Buffer to hold a hashed password read from memory

    // Read the number of users stored in flash memory
    MY_FLASH_ReadN(Nusers_address, &user_num, 1, DATA_TYPE_8);
 8003576:	2300      	movs	r3, #0
 8003578:	2201      	movs	r2, #1
 800357a:	4927      	ldr	r1, [pc, #156]	; (8003618 <CheckPassword+0xa8>)
 800357c:	2001      	movs	r0, #1
 800357e:	f7fe fded 	bl	800215c <MY_FLASH_ReadN>

    // Iterate through each user's stored password to check against the provided password
    for (int i = 0; i < user_num; i++) {
 8003582:	2300      	movs	r3, #0
 8003584:	657b      	str	r3, [r7, #84]	; 0x54
 8003586:	e03c      	b.n	8003602 <CheckPassword+0x92>
        // Construct the hash of the provided password combined with the global salt
        uint8_t temp[20];
        memcpy(temp, GlobalSalt, sizeof(GlobalSalt)); // Copy global salt into temp buffer
 8003588:	4a24      	ldr	r2, [pc, #144]	; (800361c <CheckPassword+0xac>)
 800358a:	f107 0320 	add.w	r3, r7, #32
 800358e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003592:	e883 0003 	stmia.w	r3, {r0, r1}
        memcpy(temp + sizeof(GlobalSalt), password, sizeof(password)); // Append password to temp buffer
 8003596:	f107 0320 	add.w	r3, r7, #32
 800359a:	3308      	adds	r3, #8
 800359c:	4a20      	ldr	r2, [pc, #128]	; (8003620 <CheckPassword+0xb0>)
 800359e:	461c      	mov	r4, r3
 80035a0:	4613      	mov	r3, r2
 80035a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80035a4:	6020      	str	r0, [r4, #0]
 80035a6:	6061      	str	r1, [r4, #4]
 80035a8:	60a2      	str	r2, [r4, #8]
        uint8_t computedSha256[32];
        sha256(temp, computedSha256, sizeof(temp)); // Compute SHA-256 hash of temp buffer
 80035aa:	4639      	mov	r1, r7
 80035ac:	f107 0320 	add.w	r3, r7, #32
 80035b0:	2214      	movs	r2, #20
 80035b2:	4618      	mov	r0, r3
 80035b4:	f000 f90e 	bl	80037d4 <sha256>

        // Read the stored hashed password from flash memory
        MY_FLASH_ReadN(MemDatastartpoint + 8 + 16 + (i * 72), tempPassword, 32, DATA_TYPE_8);
 80035b8:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80035ba:	4613      	mov	r3, r2
 80035bc:	00db      	lsls	r3, r3, #3
 80035be:	4413      	add	r3, r2
 80035c0:	00db      	lsls	r3, r3, #3
 80035c2:	3323      	adds	r3, #35	; 0x23
 80035c4:	4618      	mov	r0, r3
 80035c6:	f107 0134 	add.w	r1, r7, #52	; 0x34
 80035ca:	2300      	movs	r3, #0
 80035cc:	2220      	movs	r2, #32
 80035ce:	f7fe fdc5 	bl	800215c <MY_FLASH_ReadN>

        // Compare computed hash with stored hashed password
        if (memcmp(tempPassword, computedSha256, 32) == 0) {
 80035d2:	4639      	mov	r1, r7
 80035d4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80035d8:	2220      	movs	r2, #32
 80035da:	4618      	mov	r0, r3
 80035dc:	f009 fb34 	bl	800cc48 <memcmp>
 80035e0:	4603      	mov	r3, r0
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	d10a      	bne.n	80035fc <CheckPassword+0x8c>
            // If passwords match, store the current user and password for future reference
            CurrentUser = i;
 80035e6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80035e8:	b2da      	uxtb	r2, r3
 80035ea:	4b0e      	ldr	r3, [pc, #56]	; (8003624 <CheckPassword+0xb4>)
 80035ec:	701a      	strb	r2, [r3, #0]
            memcpy(CurrentPassword, password, sizeof(password));
 80035ee:	4b0e      	ldr	r3, [pc, #56]	; (8003628 <CheckPassword+0xb8>)
 80035f0:	4a0b      	ldr	r2, [pc, #44]	; (8003620 <CheckPassword+0xb0>)
 80035f2:	ca07      	ldmia	r2, {r0, r1, r2}
 80035f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
            return true; // Password match found, return true
 80035f8:	2301      	movs	r3, #1
 80035fa:	e009      	b.n	8003610 <CheckPassword+0xa0>
    for (int i = 0; i < user_num; i++) {
 80035fc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80035fe:	3301      	adds	r3, #1
 8003600:	657b      	str	r3, [r7, #84]	; 0x54
 8003602:	4b05      	ldr	r3, [pc, #20]	; (8003618 <CheckPassword+0xa8>)
 8003604:	781b      	ldrb	r3, [r3, #0]
 8003606:	461a      	mov	r2, r3
 8003608:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800360a:	4293      	cmp	r3, r2
 800360c:	dbbc      	blt.n	8003588 <CheckPassword+0x18>
        }
    }

    return false; // No matching password found among stored hashes, return false
 800360e:	2300      	movs	r3, #0
}
 8003610:	4618      	mov	r0, r3
 8003612:	375c      	adds	r7, #92	; 0x5c
 8003614:	46bd      	mov	sp, r7
 8003616:	bd90      	pop	{r4, r7, pc}
 8003618:	20000288 	.word	0x20000288
 800361c:	2000024c 	.word	0x2000024c
 8003620:	2000026c 	.word	0x2000026c
 8003624:	2000028a 	.word	0x2000028a
 8003628:	2000028c 	.word	0x2000028c

0800362c <CDC_recieveCALLBACK>:


void CDC_recieveCALLBACK(uint8_t *buf, uint32_t len) {
 800362c:	b5b0      	push	{r4, r5, r7, lr}
 800362e:	b09e      	sub	sp, #120	; 0x78
 8003630:	af00      	add	r7, sp, #0
 8003632:	6078      	str	r0, [r7, #4]
 8003634:	6039      	str	r1, [r7, #0]
    uint8_t hwinfo[33] = {
 8003636:	4b62      	ldr	r3, [pc, #392]	; (80037c0 <CDC_recieveCALLBACK+0x194>)
 8003638:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800363c:	461d      	mov	r5, r3
 800363e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003640:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003642:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003644:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003646:	682b      	ldr	r3, [r5, #0]
 8003648:	7023      	strb	r3, [r4, #0]
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    };

    if (buf[0] == 0) {
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	781b      	ldrb	r3, [r3, #0]
 800364e:	2b00      	cmp	r3, #0
 8003650:	d12b      	bne.n	80036aa <CDC_recieveCALLBACK+0x7e>
        // Command 0: Check device status
        MY_FLASH_ReadN(BrandNew_address, &Brand_new, 1, DATA_TYPE_8);
 8003652:	2300      	movs	r3, #0
 8003654:	2201      	movs	r2, #1
 8003656:	495b      	ldr	r1, [pc, #364]	; (80037c4 <CDC_recieveCALLBACK+0x198>)
 8003658:	2000      	movs	r0, #0
 800365a:	f7fe fd7f 	bl	800215c <MY_FLASH_ReadN>
        if (Brand_new == 0) {
 800365e:	4b59      	ldr	r3, [pc, #356]	; (80037c4 <CDC_recieveCALLBACK+0x198>)
 8003660:	781b      	ldrb	r3, [r3, #0]
 8003662:	2b00      	cmp	r3, #0
 8003664:	d109      	bne.n	800367a <CDC_recieveCALLBACK+0x4e>
            hwinfo[0] = 2; // Brand new device status
 8003666:	2302      	movs	r3, #2
 8003668:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
            CDC_Transmit_FS(hwinfo, 33); // Transmit status information
 800366c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003670:	2121      	movs	r1, #33	; 0x21
 8003672:	4618      	mov	r0, r3
 8003674:	f008 fc20 	bl	800beb8 <CDC_Transmit_FS>

            // Transmit the computed hash
            CDC_Transmit_FS(computed_hash, 32);
        }
    }
}
 8003678:	e09e      	b.n	80037b8 <CDC_recieveCALLBACK+0x18c>
        } else if (DeviceState) {
 800367a:	4b53      	ldr	r3, [pc, #332]	; (80037c8 <CDC_recieveCALLBACK+0x19c>)
 800367c:	781b      	ldrb	r3, [r3, #0]
 800367e:	2b00      	cmp	r3, #0
 8003680:	d009      	beq.n	8003696 <CDC_recieveCALLBACK+0x6a>
            hwinfo[0] = 1; // Device unlocked status
 8003682:	2301      	movs	r3, #1
 8003684:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
            CDC_Transmit_FS(hwinfo, 33); // Transmit status information
 8003688:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800368c:	2121      	movs	r1, #33	; 0x21
 800368e:	4618      	mov	r0, r3
 8003690:	f008 fc12 	bl	800beb8 <CDC_Transmit_FS>
}
 8003694:	e090      	b.n	80037b8 <CDC_recieveCALLBACK+0x18c>
            hwinfo[0] = 0; // Device locked status
 8003696:	2300      	movs	r3, #0
 8003698:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
            CDC_Transmit_FS(hwinfo, 33); // Transmit status information
 800369c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80036a0:	2121      	movs	r1, #33	; 0x21
 80036a2:	4618      	mov	r0, r3
 80036a4:	f008 fc08 	bl	800beb8 <CDC_Transmit_FS>
}
 80036a8:	e086      	b.n	80037b8 <CDC_recieveCALLBACK+0x18c>
    } else if (buf[0] == 1) {
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	781b      	ldrb	r3, [r3, #0]
 80036ae:	2b01      	cmp	r3, #1
 80036b0:	d11d      	bne.n	80036ee <CDC_recieveCALLBACK+0xc2>
        if (DeviceState) {
 80036b2:	4b45      	ldr	r3, [pc, #276]	; (80037c8 <CDC_recieveCALLBACK+0x19c>)
 80036b4:	781b      	ldrb	r3, [r3, #0]
 80036b6:	2b00      	cmp	r3, #0
 80036b8:	d00f      	beq.n	80036da <CDC_recieveCALLBACK+0xae>
            hwinfo[0] = 0; // Lock device
 80036ba:	2300      	movs	r3, #0
 80036bc:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
            CDC_Transmit_FS(hwinfo, 33); // Transmit status information
 80036c0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80036c4:	2121      	movs	r1, #33	; 0x21
 80036c6:	4618      	mov	r0, r3
 80036c8:	f008 fbf6 	bl	800beb8 <CDC_Transmit_FS>
            DeviceState = 0; // Set device state to locked
 80036cc:	4b3e      	ldr	r3, [pc, #248]	; (80037c8 <CDC_recieveCALLBACK+0x19c>)
 80036ce:	2200      	movs	r2, #0
 80036d0:	701a      	strb	r2, [r3, #0]
            TimerState = 1; // Start timer
 80036d2:	4b3e      	ldr	r3, [pc, #248]	; (80037cc <CDC_recieveCALLBACK+0x1a0>)
 80036d4:	2201      	movs	r2, #1
 80036d6:	701a      	strb	r2, [r3, #0]
}
 80036d8:	e06e      	b.n	80037b8 <CDC_recieveCALLBACK+0x18c>
            hwinfo[0] = 1; // device is a lock
 80036da:	2301      	movs	r3, #1
 80036dc:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
            CDC_Transmit_FS(hwinfo, 33); // Transmit status information
 80036e0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80036e4:	2121      	movs	r1, #33	; 0x21
 80036e6:	4618      	mov	r0, r3
 80036e8:	f008 fbe6 	bl	800beb8 <CDC_Transmit_FS>
}
 80036ec:	e064      	b.n	80037b8 <CDC_recieveCALLBACK+0x18c>
    } else if (buf[0] == 2) {
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	781b      	ldrb	r3, [r3, #0]
 80036f2:	2b02      	cmp	r3, #2
 80036f4:	d160      	bne.n	80037b8 <CDC_recieveCALLBACK+0x18c>
        if (DeviceState) {
 80036f6:	4b34      	ldr	r3, [pc, #208]	; (80037c8 <CDC_recieveCALLBACK+0x19c>)
 80036f8:	781b      	ldrb	r3, [r3, #0]
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d05c      	beq.n	80037b8 <CDC_recieveCALLBACK+0x18c>
            uint8_t Key[9] = { buf[1], buf[2], buf[3], buf[4], buf[5], buf[6], buf[7], buf[8], buf[9] };
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	785b      	ldrb	r3, [r3, #1]
 8003702:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	789b      	ldrb	r3, [r3, #2]
 800370a:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	78db      	ldrb	r3, [r3, #3]
 8003712:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	791b      	ldrb	r3, [r3, #4]
 800371a:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	795b      	ldrb	r3, [r3, #5]
 8003722:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	799b      	ldrb	r3, [r3, #6]
 800372a:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	79db      	ldrb	r3, [r3, #7]
 8003732:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	7a1b      	ldrb	r3, [r3, #8]
 800373a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	7a5b      	ldrb	r3, [r3, #9]
 8003742:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
            uint32_t carry = 0;
 8003746:	2300      	movs	r3, #0
 8003748:	677b      	str	r3, [r7, #116]	; 0x74
            for (int i = 0; i < 16; i++) {
 800374a:	2300      	movs	r3, #0
 800374c:	673b      	str	r3, [r7, #112]	; 0x70
 800374e:	e022      	b.n	8003796 <CDC_recieveCALLBACK+0x16a>
                uint32_t sum = CurrentMasterKey[i] + (i < 9 ? Key[i] : 0) + carry;
 8003750:	4a1f      	ldr	r2, [pc, #124]	; (80037d0 <CDC_recieveCALLBACK+0x1a4>)
 8003752:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003754:	4413      	add	r3, r2
 8003756:	781b      	ldrb	r3, [r3, #0]
 8003758:	4619      	mov	r1, r3
 800375a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800375c:	2b08      	cmp	r3, #8
 800375e:	dc05      	bgt.n	800376c <CDC_recieveCALLBACK+0x140>
 8003760:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8003764:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003766:	4413      	add	r3, r2
 8003768:	781b      	ldrb	r3, [r3, #0]
 800376a:	e000      	b.n	800376e <CDC_recieveCALLBACK+0x142>
 800376c:	2300      	movs	r3, #0
 800376e:	440b      	add	r3, r1
 8003770:	461a      	mov	r2, r3
 8003772:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003774:	4413      	add	r3, r2
 8003776:	66fb      	str	r3, [r7, #108]	; 0x6c
                result[i] = sum & 0xFF;
 8003778:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800377a:	b2d9      	uxtb	r1, r3
 800377c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8003780:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003782:	4413      	add	r3, r2
 8003784:	460a      	mov	r2, r1
 8003786:	701a      	strb	r2, [r3, #0]
                carry = (sum >> 8) & 0xFF;
 8003788:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800378a:	0a1b      	lsrs	r3, r3, #8
 800378c:	b2db      	uxtb	r3, r3
 800378e:	677b      	str	r3, [r7, #116]	; 0x74
            for (int i = 0; i < 16; i++) {
 8003790:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003792:	3301      	adds	r3, #1
 8003794:	673b      	str	r3, [r7, #112]	; 0x70
 8003796:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003798:	2b0f      	cmp	r3, #15
 800379a:	ddd9      	ble.n	8003750 <CDC_recieveCALLBACK+0x124>
            sha256(result, computed_hash, sizeof(result));
 800379c:	f107 010c 	add.w	r1, r7, #12
 80037a0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80037a4:	2210      	movs	r2, #16
 80037a6:	4618      	mov	r0, r3
 80037a8:	f000 f814 	bl	80037d4 <sha256>
            CDC_Transmit_FS(computed_hash, 32);
 80037ac:	f107 030c 	add.w	r3, r7, #12
 80037b0:	2120      	movs	r1, #32
 80037b2:	4618      	mov	r0, r3
 80037b4:	f008 fb80 	bl	800beb8 <CDC_Transmit_FS>
}
 80037b8:	bf00      	nop
 80037ba:	3778      	adds	r7, #120	; 0x78
 80037bc:	46bd      	mov	sp, r7
 80037be:	bdb0      	pop	{r4, r5, r7, pc}
 80037c0:	0800d900 	.word	0x0800d900
 80037c4:	20000248 	.word	0x20000248
 80037c8:	200002c4 	.word	0x200002c4
 80037cc:	200002c3 	.word	0x200002c3
 80037d0:	20000298 	.word	0x20000298

080037d4 <sha256>:


void sha256(uint8_t *data,uint8_t *result,uint8_t DataSize){
 80037d4:	b580      	push	{r7, lr}
 80037d6:	b088      	sub	sp, #32
 80037d8:	af02      	add	r7, sp, #8
 80037da:	60f8      	str	r0, [r7, #12]
 80037dc:	60b9      	str	r1, [r7, #8]
 80037de:	4613      	mov	r3, r2
 80037e0:	71fb      	strb	r3, [r7, #7]
	size_t computed_size;
    cmox_hash_compute(CMOX_SHA256_ALGO,                /* Use SHA256 algorithm */
 80037e2:	4b08      	ldr	r3, [pc, #32]	; (8003804 <sha256+0x30>)
 80037e4:	6818      	ldr	r0, [r3, #0]
 80037e6:	79fa      	ldrb	r2, [r7, #7]
 80037e8:	f107 0314 	add.w	r3, r7, #20
 80037ec:	9301      	str	r3, [sp, #4]
 80037ee:	2320      	movs	r3, #32
 80037f0:	9300      	str	r3, [sp, #0]
 80037f2:	68bb      	ldr	r3, [r7, #8]
 80037f4:	68f9      	ldr	r1, [r7, #12]
 80037f6:	f7fd fa5b 	bl	8000cb0 <cmox_hash_compute>
    						 data, DataSize,           /* Message to digest */
							 result,                   /* Data buffer to receive digest data */
							 CMOX_SHA256_SIZE,         /* Expected digest size */
							 &computed_size);          /* Size of computed digest */
}
 80037fa:	bf00      	nop
 80037fc:	3718      	adds	r7, #24
 80037fe:	46bd      	mov	sp, r7
 8003800:	bd80      	pop	{r7, pc}
 8003802:	bf00      	nop
 8003804:	0800d9e8 	.word	0x0800d9e8

08003808 <AESCBC>:

void AESCBC(uint8_t *Data, uint8_t DataSize, uint8_t *Key, uint8_t KeySize, uint8_t *IVF,uint8_t IVFSize, uint8_t *result){
 8003808:	b590      	push	{r4, r7, lr}
 800380a:	b08d      	sub	sp, #52	; 0x34
 800380c:	af06      	add	r7, sp, #24
 800380e:	60f8      	str	r0, [r7, #12]
 8003810:	607a      	str	r2, [r7, #4]
 8003812:	461a      	mov	r2, r3
 8003814:	460b      	mov	r3, r1
 8003816:	72fb      	strb	r3, [r7, #11]
 8003818:	4613      	mov	r3, r2
 800381a:	72bb      	strb	r3, [r7, #10]
	size_t computed_size;
	cmox_cipher_encrypt(CMOX_AES_CBC_ENC_ALGO,                      /* Use AES CBC algorithm */
 800381c:	4b0b      	ldr	r3, [pc, #44]	; (800384c <AESCBC+0x44>)
 800381e:	6818      	ldr	r0, [r3, #0]
 8003820:	7afc      	ldrb	r4, [r7, #11]
 8003822:	7abb      	ldrb	r3, [r7, #10]
 8003824:	f897 202c 	ldrb.w	r2, [r7, #44]	; 0x2c
 8003828:	f107 0114 	add.w	r1, r7, #20
 800382c:	9104      	str	r1, [sp, #16]
 800382e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003830:	9103      	str	r1, [sp, #12]
 8003832:	9202      	str	r2, [sp, #8]
 8003834:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003836:	9201      	str	r2, [sp, #4]
 8003838:	9300      	str	r3, [sp, #0]
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	4622      	mov	r2, r4
 800383e:	68f9      	ldr	r1, [r7, #12]
 8003840:	f7fc ff4a 	bl	80006d8 <cmox_cipher_encrypt>
										 Data, DataSize,            /* Plaintext to encrypt */
										 Key, KeySize,              /* AES key to use */
										 IVF, IVFSize,              /* Initialization vector */
										 result, &computed_size);   /* Data buffer to receive generated ciphertext */
}
 8003844:	bf00      	nop
 8003846:	371c      	adds	r7, #28
 8003848:	46bd      	mov	sp, r7
 800384a:	bd90      	pop	{r4, r7, pc}
 800384c:	0800d980 	.word	0x0800d980

08003850 <DecryptAES>:

void DecryptAES(uint8_t *Data, uint8_t DataSize, uint8_t *Key, uint8_t KeySize, uint8_t *IVF,uint8_t IVFSize, uint8_t *result){
 8003850:	b590      	push	{r4, r7, lr}
 8003852:	b08d      	sub	sp, #52	; 0x34
 8003854:	af06      	add	r7, sp, #24
 8003856:	60f8      	str	r0, [r7, #12]
 8003858:	607a      	str	r2, [r7, #4]
 800385a:	461a      	mov	r2, r3
 800385c:	460b      	mov	r3, r1
 800385e:	72fb      	strb	r3, [r7, #11]
 8003860:	4613      	mov	r3, r2
 8003862:	72bb      	strb	r3, [r7, #10]
	size_t computed_size;
	cmox_cipher_decrypt(CMOX_AES_CBC_DEC_ALGO,                 /* Use AES CBC algorithm */
 8003864:	4b0b      	ldr	r3, [pc, #44]	; (8003894 <DecryptAES+0x44>)
 8003866:	6818      	ldr	r0, [r3, #0]
 8003868:	7afc      	ldrb	r4, [r7, #11]
 800386a:	7abb      	ldrb	r3, [r7, #10]
 800386c:	f897 202c 	ldrb.w	r2, [r7, #44]	; 0x2c
 8003870:	f107 0114 	add.w	r1, r7, #20
 8003874:	9104      	str	r1, [sp, #16]
 8003876:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003878:	9103      	str	r1, [sp, #12]
 800387a:	9202      	str	r2, [sp, #8]
 800387c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800387e:	9201      	str	r2, [sp, #4]
 8003880:	9300      	str	r3, [sp, #0]
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	4622      	mov	r2, r4
 8003886:	68f9      	ldr	r1, [r7, #12]
 8003888:	f7fc ff52 	bl	8000730 <cmox_cipher_decrypt>
								   Data, DataSize,             /* Ciphertext to decrypt */
	                               Key, KeySize,               /* AES key to use */
								   IVF, IVFSize,               /* Initialization vector */
								   result, &computed_size);    /* Data buffer to receive generated plaintext */
}
 800388c:	bf00      	nop
 800388e:	371c      	adds	r7, #28
 8003890:	46bd      	mov	sp, r7
 8003892:	bd90      	pop	{r4, r7, pc}
 8003894:	0800d974 	.word	0x0800d974

08003898 <checkButtons>:

int checkButtons(){
 8003898:	b580      	push	{r7, lr}
 800389a:	b082      	sub	sp, #8
 800389c:	af00      	add	r7, sp, #0
	bool flag_bt1  = true;
 800389e:	2301      	movs	r3, #1
 80038a0:	71fb      	strb	r3, [r7, #7]
	bool flag_bt2  = true;
 80038a2:	2301      	movs	r3, #1
 80038a4:	71bb      	strb	r3, [r7, #6]
	bool flag_both = true;
 80038a6:	2301      	movs	r3, #1
 80038a8:	717b      	strb	r3, [r7, #5]
	while(1){
		if(!DeviceState && TimerState){state=Lock;break;}
 80038aa:	4b40      	ldr	r3, [pc, #256]	; (80039ac <checkButtons+0x114>)
 80038ac:	781b      	ldrb	r3, [r3, #0]
 80038ae:	f083 0301 	eor.w	r3, r3, #1
 80038b2:	b2db      	uxtb	r3, r3
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d009      	beq.n	80038cc <checkButtons+0x34>
 80038b8:	4b3d      	ldr	r3, [pc, #244]	; (80039b0 <checkButtons+0x118>)
 80038ba:	781b      	ldrb	r3, [r3, #0]
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d005      	beq.n	80038cc <checkButtons+0x34>
 80038c0:	4b3c      	ldr	r3, [pc, #240]	; (80039b4 <checkButtons+0x11c>)
 80038c2:	2200      	movs	r2, #0
 80038c4:	701a      	strb	r2, [r3, #0]
 80038c6:	bf00      	nop
		}else if(!read_Bt2() && !flag_bt2 && flag_both){
			flag_bt2  = true;
			return 1;
		}
	}
	return 3;//nothing
 80038c8:	2303      	movs	r3, #3
 80038ca:	e06a      	b.n	80039a2 <checkButtons+0x10a>
		if(read_Bt1() && read_Bt2() && flag_both){
 80038cc:	f000 f874 	bl	80039b8 <read_Bt1>
 80038d0:	4603      	mov	r3, r0
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	d00a      	beq.n	80038ec <checkButtons+0x54>
 80038d6:	f000 f883 	bl	80039e0 <read_Bt2>
 80038da:	4603      	mov	r3, r0
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d005      	beq.n	80038ec <checkButtons+0x54>
 80038e0:	797b      	ldrb	r3, [r7, #5]
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d002      	beq.n	80038ec <checkButtons+0x54>
			flag_both = false;
 80038e6:	2300      	movs	r3, #0
 80038e8:	717b      	strb	r3, [r7, #5]
 80038ea:	e059      	b.n	80039a0 <checkButtons+0x108>
		}else if(read_Bt1() && flag_bt1){
 80038ec:	f000 f864 	bl	80039b8 <read_Bt1>
 80038f0:	4603      	mov	r3, r0
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d005      	beq.n	8003902 <checkButtons+0x6a>
 80038f6:	79fb      	ldrb	r3, [r7, #7]
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d002      	beq.n	8003902 <checkButtons+0x6a>
			flag_bt1 = false;
 80038fc:	2300      	movs	r3, #0
 80038fe:	71fb      	strb	r3, [r7, #7]
 8003900:	e04e      	b.n	80039a0 <checkButtons+0x108>
		}else if(read_Bt2() && flag_bt2){
 8003902:	f000 f86d 	bl	80039e0 <read_Bt2>
 8003906:	4603      	mov	r3, r0
 8003908:	2b00      	cmp	r3, #0
 800390a:	d005      	beq.n	8003918 <checkButtons+0x80>
 800390c:	79bb      	ldrb	r3, [r7, #6]
 800390e:	2b00      	cmp	r3, #0
 8003910:	d002      	beq.n	8003918 <checkButtons+0x80>
			flag_bt2 = false;
 8003912:	2300      	movs	r3, #0
 8003914:	71bb      	strb	r3, [r7, #6]
 8003916:	e043      	b.n	80039a0 <checkButtons+0x108>
		}else if(!read_Bt1() && !read_Bt2() && !flag_both){
 8003918:	f000 f84e 	bl	80039b8 <read_Bt1>
 800391c:	4603      	mov	r3, r0
 800391e:	f083 0301 	eor.w	r3, r3, #1
 8003922:	b2db      	uxtb	r3, r3
 8003924:	2b00      	cmp	r3, #0
 8003926:	d011      	beq.n	800394c <checkButtons+0xb4>
 8003928:	f000 f85a 	bl	80039e0 <read_Bt2>
 800392c:	4603      	mov	r3, r0
 800392e:	f083 0301 	eor.w	r3, r3, #1
 8003932:	b2db      	uxtb	r3, r3
 8003934:	2b00      	cmp	r3, #0
 8003936:	d009      	beq.n	800394c <checkButtons+0xb4>
 8003938:	797b      	ldrb	r3, [r7, #5]
 800393a:	f083 0301 	eor.w	r3, r3, #1
 800393e:	b2db      	uxtb	r3, r3
 8003940:	2b00      	cmp	r3, #0
 8003942:	d003      	beq.n	800394c <checkButtons+0xb4>
			flag_both = true;
 8003944:	2301      	movs	r3, #1
 8003946:	717b      	strb	r3, [r7, #5]
			return 2;
 8003948:	2302      	movs	r3, #2
 800394a:	e02a      	b.n	80039a2 <checkButtons+0x10a>
		}else if(!read_Bt1() && !flag_bt1 && flag_both){
 800394c:	f000 f834 	bl	80039b8 <read_Bt1>
 8003950:	4603      	mov	r3, r0
 8003952:	f083 0301 	eor.w	r3, r3, #1
 8003956:	b2db      	uxtb	r3, r3
 8003958:	2b00      	cmp	r3, #0
 800395a:	d00c      	beq.n	8003976 <checkButtons+0xde>
 800395c:	79fb      	ldrb	r3, [r7, #7]
 800395e:	f083 0301 	eor.w	r3, r3, #1
 8003962:	b2db      	uxtb	r3, r3
 8003964:	2b00      	cmp	r3, #0
 8003966:	d006      	beq.n	8003976 <checkButtons+0xde>
 8003968:	797b      	ldrb	r3, [r7, #5]
 800396a:	2b00      	cmp	r3, #0
 800396c:	d003      	beq.n	8003976 <checkButtons+0xde>
			flag_bt1  = true;
 800396e:	2301      	movs	r3, #1
 8003970:	71fb      	strb	r3, [r7, #7]
			return 0;
 8003972:	2300      	movs	r3, #0
 8003974:	e015      	b.n	80039a2 <checkButtons+0x10a>
		}else if(!read_Bt2() && !flag_bt2 && flag_both){
 8003976:	f000 f833 	bl	80039e0 <read_Bt2>
 800397a:	4603      	mov	r3, r0
 800397c:	f083 0301 	eor.w	r3, r3, #1
 8003980:	b2db      	uxtb	r3, r3
 8003982:	2b00      	cmp	r3, #0
 8003984:	d091      	beq.n	80038aa <checkButtons+0x12>
 8003986:	79bb      	ldrb	r3, [r7, #6]
 8003988:	f083 0301 	eor.w	r3, r3, #1
 800398c:	b2db      	uxtb	r3, r3
 800398e:	2b00      	cmp	r3, #0
 8003990:	d08b      	beq.n	80038aa <checkButtons+0x12>
 8003992:	797b      	ldrb	r3, [r7, #5]
 8003994:	2b00      	cmp	r3, #0
 8003996:	d088      	beq.n	80038aa <checkButtons+0x12>
			flag_bt2  = true;
 8003998:	2301      	movs	r3, #1
 800399a:	71bb      	strb	r3, [r7, #6]
			return 1;
 800399c:	2301      	movs	r3, #1
 800399e:	e000      	b.n	80039a2 <checkButtons+0x10a>
		if(!DeviceState && TimerState){state=Lock;break;}
 80039a0:	e783      	b.n	80038aa <checkButtons+0x12>
}
 80039a2:	4618      	mov	r0, r3
 80039a4:	3708      	adds	r7, #8
 80039a6:	46bd      	mov	sp, r7
 80039a8:	bd80      	pop	{r7, pc}
 80039aa:	bf00      	nop
 80039ac:	200002c4 	.word	0x200002c4
 80039b0:	200002c3 	.word	0x200002c3
 80039b4:	200002c1 	.word	0x200002c1

080039b8 <read_Bt1>:

bool read_Bt1(){
 80039b8:	b580      	push	{r7, lr}
 80039ba:	af00      	add	r7, sp, #0
	HAL_Delay(5);
 80039bc:	2005      	movs	r0, #5
 80039be:	f000 ff9d 	bl	80048fc <HAL_Delay>
	return HAL_GPIO_ReadPin(Bt1_GPIO_Port, Bt1_Pin);
 80039c2:	2140      	movs	r1, #64	; 0x40
 80039c4:	4805      	ldr	r0, [pc, #20]	; (80039dc <read_Bt1+0x24>)
 80039c6:	f001 fc85 	bl	80052d4 <HAL_GPIO_ReadPin>
 80039ca:	4603      	mov	r3, r0
 80039cc:	2b00      	cmp	r3, #0
 80039ce:	bf14      	ite	ne
 80039d0:	2301      	movne	r3, #1
 80039d2:	2300      	moveq	r3, #0
 80039d4:	b2db      	uxtb	r3, r3
}
 80039d6:	4618      	mov	r0, r3
 80039d8:	bd80      	pop	{r7, pc}
 80039da:	bf00      	nop
 80039dc:	40020800 	.word	0x40020800

080039e0 <read_Bt2>:

bool read_Bt2(){
 80039e0:	b580      	push	{r7, lr}
 80039e2:	af00      	add	r7, sp, #0
	HAL_Delay(5);
 80039e4:	2005      	movs	r0, #5
 80039e6:	f000 ff89 	bl	80048fc <HAL_Delay>
	return HAL_GPIO_ReadPin(Bt2_GPIO_Port, Bt2_Pin);
 80039ea:	2180      	movs	r1, #128	; 0x80
 80039ec:	4805      	ldr	r0, [pc, #20]	; (8003a04 <read_Bt2+0x24>)
 80039ee:	f001 fc71 	bl	80052d4 <HAL_GPIO_ReadPin>
 80039f2:	4603      	mov	r3, r0
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	bf14      	ite	ne
 80039f8:	2301      	movne	r3, #1
 80039fa:	2300      	moveq	r3, #0
 80039fc:	b2db      	uxtb	r3, r3
}
 80039fe:	4618      	mov	r0, r3
 8003a00:	bd80      	pop	{r7, pc}
 8003a02:	bf00      	nop
 8003a04:	40020800 	.word	0x40020800

08003a08 <_write>:

int _write(int file, char *ptr, int len){
 8003a08:	b580      	push	{r7, lr}
 8003a0a:	b086      	sub	sp, #24
 8003a0c:	af00      	add	r7, sp, #0
 8003a0e:	60f8      	str	r0, [r7, #12]
 8003a10:	60b9      	str	r1, [r7, #8]
 8003a12:	607a      	str	r2, [r7, #4]
 int DataIdx;
 for (DataIdx = 0; DataIdx < len; DataIdx++){
 8003a14:	2300      	movs	r3, #0
 8003a16:	617b      	str	r3, [r7, #20]
 8003a18:	e009      	b.n	8003a2e <_write+0x26>
	 ITM_SendChar(*ptr++);
 8003a1a:	68bb      	ldr	r3, [r7, #8]
 8003a1c:	1c5a      	adds	r2, r3, #1
 8003a1e:	60ba      	str	r2, [r7, #8]
 8003a20:	781b      	ldrb	r3, [r3, #0]
 8003a22:	4618      	mov	r0, r3
 8003a24:	f7fe fc68 	bl	80022f8 <ITM_SendChar>
 for (DataIdx = 0; DataIdx < len; DataIdx++){
 8003a28:	697b      	ldr	r3, [r7, #20]
 8003a2a:	3301      	adds	r3, #1
 8003a2c:	617b      	str	r3, [r7, #20]
 8003a2e:	697a      	ldr	r2, [r7, #20]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	429a      	cmp	r2, r3
 8003a34:	dbf1      	blt.n	8003a1a <_write+0x12>
 }
 return len;
 8003a36:	687b      	ldr	r3, [r7, #4]
}
 8003a38:	4618      	mov	r0, r3
 8003a3a:	3718      	adds	r7, #24
 8003a3c:	46bd      	mov	sp, r7
 8003a3e:	bd80      	pop	{r7, pc}

08003a40 <Get_rng>:

void Get_rng(uint8_t *rng,uint8_t NumRNG){
 8003a40:	b580      	push	{r7, lr}
 8003a42:	b086      	sub	sp, #24
 8003a44:	af00      	add	r7, sp, #0
 8003a46:	6078      	str	r0, [r7, #4]
 8003a48:	460b      	mov	r3, r1
 8003a4a:	70fb      	strb	r3, [r7, #3]
	for(int i=0;i<NumRNG;i++){
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	617b      	str	r3, [r7, #20]
 8003a50:	e02b      	b.n	8003aaa <Get_rng+0x6a>
		HAL_RNG_GenerateRandomNumber_IT(&hrng);
 8003a52:	481a      	ldr	r0, [pc, #104]	; (8003abc <Get_rng+0x7c>)
 8003a54:	f004 f954 	bl	8007d00 <HAL_RNG_GenerateRandomNumber_IT>
		while(!rngflag);
 8003a58:	bf00      	nop
 8003a5a:	4b19      	ldr	r3, [pc, #100]	; (8003ac0 <Get_rng+0x80>)
 8003a5c:	781b      	ldrb	r3, [r3, #0]
 8003a5e:	f083 0301 	eor.w	r3, r3, #1
 8003a62:	b2db      	uxtb	r3, r3
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d1f8      	bne.n	8003a5a <Get_rng+0x1a>
		rngflag =0;
 8003a68:	4b15      	ldr	r3, [pc, #84]	; (8003ac0 <Get_rng+0x80>)
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	701a      	strb	r2, [r3, #0]
		uint32_t temp_rng = HAL_RNG_ReadLastRandomNumber(&hrng);
 8003a6e:	4813      	ldr	r0, [pc, #76]	; (8003abc <Get_rng+0x7c>)
 8003a70:	f004 f9c9 	bl	8007e06 <HAL_RNG_ReadLastRandomNumber>
 8003a74:	60f8      	str	r0, [r7, #12]
		for(int j=0;j<4;j++){
 8003a76:	2300      	movs	r3, #0
 8003a78:	613b      	str	r3, [r7, #16]
 8003a7a:	e010      	b.n	8003a9e <Get_rng+0x5e>
			rng[j+i*4] = (uint8_t)(temp_rng >> (j*8));
 8003a7c:	693b      	ldr	r3, [r7, #16]
 8003a7e:	00db      	lsls	r3, r3, #3
 8003a80:	68fa      	ldr	r2, [r7, #12]
 8003a82:	fa22 f103 	lsr.w	r1, r2, r3
 8003a86:	697b      	ldr	r3, [r7, #20]
 8003a88:	009a      	lsls	r2, r3, #2
 8003a8a:	693b      	ldr	r3, [r7, #16]
 8003a8c:	4413      	add	r3, r2
 8003a8e:	461a      	mov	r2, r3
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	4413      	add	r3, r2
 8003a94:	b2ca      	uxtb	r2, r1
 8003a96:	701a      	strb	r2, [r3, #0]
		for(int j=0;j<4;j++){
 8003a98:	693b      	ldr	r3, [r7, #16]
 8003a9a:	3301      	adds	r3, #1
 8003a9c:	613b      	str	r3, [r7, #16]
 8003a9e:	693b      	ldr	r3, [r7, #16]
 8003aa0:	2b03      	cmp	r3, #3
 8003aa2:	ddeb      	ble.n	8003a7c <Get_rng+0x3c>
	for(int i=0;i<NumRNG;i++){
 8003aa4:	697b      	ldr	r3, [r7, #20]
 8003aa6:	3301      	adds	r3, #1
 8003aa8:	617b      	str	r3, [r7, #20]
 8003aaa:	78fb      	ldrb	r3, [r7, #3]
 8003aac:	697a      	ldr	r2, [r7, #20]
 8003aae:	429a      	cmp	r2, r3
 8003ab0:	dbcf      	blt.n	8003a52 <Get_rng+0x12>
		}
	}
}
 8003ab2:	bf00      	nop
 8003ab4:	bf00      	nop
 8003ab6:	3718      	adds	r7, #24
 8003ab8:	46bd      	mov	sp, r7
 8003aba:	bd80      	pop	{r7, pc}
 8003abc:	200001f0 	.word	0x200001f0
 8003ac0:	20000289 	.word	0x20000289

08003ac4 <HAL_RNG_ReadyDataCallback>:

void HAL_RNG_ReadyDataCallback(RNG_HandleTypeDef *hrng, uint32_t random32bit){
 8003ac4:	b480      	push	{r7}
 8003ac6:	b083      	sub	sp, #12
 8003ac8:	af00      	add	r7, sp, #0
 8003aca:	6078      	str	r0, [r7, #4]
 8003acc:	6039      	str	r1, [r7, #0]
  UNUSED(hrng);
  UNUSED(random32bit);
  /* NOTE : This function should not be modified. When the callback is needed,
            function HAL_RNG_ReadyDataCallback must be implemented in the user file.
   */
  rngflag =1;
 8003ace:	4b04      	ldr	r3, [pc, #16]	; (8003ae0 <HAL_RNG_ReadyDataCallback+0x1c>)
 8003ad0:	2201      	movs	r2, #1
 8003ad2:	701a      	strb	r2, [r3, #0]
}
 8003ad4:	bf00      	nop
 8003ad6:	370c      	adds	r7, #12
 8003ad8:	46bd      	mov	sp, r7
 8003ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ade:	4770      	bx	lr
 8003ae0:	20000289 	.word	0x20000289

08003ae4 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003ae4:	b480      	push	{r7}
 8003ae6:	b083      	sub	sp, #12
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
   */
  if(DeviceState){
 8003aec:	4b11      	ldr	r3, [pc, #68]	; (8003b34 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8003aee:	781b      	ldrb	r3, [r3, #0]
 8003af0:	2b00      	cmp	r3, #0
 8003af2:	d015      	beq.n	8003b20 <HAL_TIM_PeriodElapsedCallback+0x3c>
	  Timer++;
 8003af4:	4b10      	ldr	r3, [pc, #64]	; (8003b38 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	3301      	adds	r3, #1
 8003afa:	4a0f      	ldr	r2, [pc, #60]	; (8003b38 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003afc:	6013      	str	r3, [r2, #0]
	  if(Timer == TimeoutValue){
 8003afe:	4b0e      	ldr	r3, [pc, #56]	; (8003b38 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	2b78      	cmp	r3, #120	; 0x78
 8003b04:	d10f      	bne.n	8003b26 <HAL_TIM_PeriodElapsedCallback+0x42>
		  DeviceState=false;
 8003b06:	4b0b      	ldr	r3, [pc, #44]	; (8003b34 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8003b08:	2200      	movs	r2, #0
 8003b0a:	701a      	strb	r2, [r3, #0]
		  TimerState=true;		//false is lock, true unlock
 8003b0c:	4b0b      	ldr	r3, [pc, #44]	; (8003b3c <HAL_TIM_PeriodElapsedCallback+0x58>)
 8003b0e:	2201      	movs	r2, #1
 8003b10:	701a      	strb	r2, [r3, #0]
		  state=Lock;
 8003b12:	4b0b      	ldr	r3, [pc, #44]	; (8003b40 <HAL_TIM_PeriodElapsedCallback+0x5c>)
 8003b14:	2200      	movs	r2, #0
 8003b16:	701a      	strb	r2, [r3, #0]
		  Timer=0;
 8003b18:	4b07      	ldr	r3, [pc, #28]	; (8003b38 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003b1a:	2200      	movs	r2, #0
 8003b1c:	601a      	str	r2, [r3, #0]
	  }
  }else{
	  Timer=0;
  }
}
 8003b1e:	e002      	b.n	8003b26 <HAL_TIM_PeriodElapsedCallback+0x42>
	  Timer=0;
 8003b20:	4b05      	ldr	r3, [pc, #20]	; (8003b38 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003b22:	2200      	movs	r2, #0
 8003b24:	601a      	str	r2, [r3, #0]
}
 8003b26:	bf00      	nop
 8003b28:	370c      	adds	r7, #12
 8003b2a:	46bd      	mov	sp, r7
 8003b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b30:	4770      	bx	lr
 8003b32:	bf00      	nop
 8003b34:	200002c4 	.word	0x200002c4
 8003b38:	200002c8 	.word	0x200002c8
 8003b3c:	200002c3 	.word	0x200002c3
 8003b40:	200002c1 	.word	0x200002c1

08003b44 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003b44:	b480      	push	{r7}
 8003b46:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003b48:	b672      	cpsid	i
}
 8003b4a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003b4c:	e7fe      	b.n	8003b4c <Error_Handler+0x8>

08003b4e <SSD1306_DrawBitmap>:
 8003b4e:	b580      	push	{r7, lr}
 8003b50:	b086      	sub	sp, #24
 8003b52:	af00      	add	r7, sp, #0
 8003b54:	60ba      	str	r2, [r7, #8]
 8003b56:	461a      	mov	r2, r3
 8003b58:	4603      	mov	r3, r0
 8003b5a:	81fb      	strh	r3, [r7, #14]
 8003b5c:	460b      	mov	r3, r1
 8003b5e:	81bb      	strh	r3, [r7, #12]
 8003b60:	4613      	mov	r3, r2
 8003b62:	80fb      	strh	r3, [r7, #6]
 8003b64:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003b68:	3307      	adds	r3, #7
 8003b6a:	2b00      	cmp	r3, #0
 8003b6c:	da00      	bge.n	8003b70 <SSD1306_DrawBitmap+0x22>
 8003b6e:	3307      	adds	r3, #7
 8003b70:	10db      	asrs	r3, r3, #3
 8003b72:	823b      	strh	r3, [r7, #16]
 8003b74:	2300      	movs	r3, #0
 8003b76:	75fb      	strb	r3, [r7, #23]
 8003b78:	2300      	movs	r3, #0
 8003b7a:	82bb      	strh	r3, [r7, #20]
 8003b7c:	e044      	b.n	8003c08 <SSD1306_DrawBitmap+0xba>
 8003b7e:	2300      	movs	r3, #0
 8003b80:	827b      	strh	r3, [r7, #18]
 8003b82:	e02f      	b.n	8003be4 <SSD1306_DrawBitmap+0x96>
 8003b84:	8a7b      	ldrh	r3, [r7, #18]
 8003b86:	f003 0307 	and.w	r3, r3, #7
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d003      	beq.n	8003b96 <SSD1306_DrawBitmap+0x48>
 8003b8e:	7dfb      	ldrb	r3, [r7, #23]
 8003b90:	005b      	lsls	r3, r3, #1
 8003b92:	75fb      	strb	r3, [r7, #23]
 8003b94:	e012      	b.n	8003bbc <SSD1306_DrawBitmap+0x6e>
 8003b96:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8003b9a:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8003b9e:	fb03 f202 	mul.w	r2, r3, r2
 8003ba2:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8003ba6:	2b00      	cmp	r3, #0
 8003ba8:	da00      	bge.n	8003bac <SSD1306_DrawBitmap+0x5e>
 8003baa:	3307      	adds	r3, #7
 8003bac:	10db      	asrs	r3, r3, #3
 8003bae:	b21b      	sxth	r3, r3
 8003bb0:	4413      	add	r3, r2
 8003bb2:	461a      	mov	r2, r3
 8003bb4:	68bb      	ldr	r3, [r7, #8]
 8003bb6:	4413      	add	r3, r2
 8003bb8:	781b      	ldrb	r3, [r3, #0]
 8003bba:	75fb      	strb	r3, [r7, #23]
 8003bbc:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	da09      	bge.n	8003bd8 <SSD1306_DrawBitmap+0x8a>
 8003bc4:	89fa      	ldrh	r2, [r7, #14]
 8003bc6:	8a7b      	ldrh	r3, [r7, #18]
 8003bc8:	4413      	add	r3, r2
 8003bca:	b29b      	uxth	r3, r3
 8003bcc:	89b9      	ldrh	r1, [r7, #12]
 8003bce:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003bd0:	b2d2      	uxtb	r2, r2
 8003bd2:	4618      	mov	r0, r3
 8003bd4:	f000 f92e 	bl	8003e34 <SSD1306_DrawPixel>
 8003bd8:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8003bdc:	b29b      	uxth	r3, r3
 8003bde:	3301      	adds	r3, #1
 8003be0:	b29b      	uxth	r3, r3
 8003be2:	827b      	strh	r3, [r7, #18]
 8003be4:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8003be8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003bec:	429a      	cmp	r2, r3
 8003bee:	dbc9      	blt.n	8003b84 <SSD1306_DrawBitmap+0x36>
 8003bf0:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8003bf4:	b29b      	uxth	r3, r3
 8003bf6:	3301      	adds	r3, #1
 8003bf8:	b29b      	uxth	r3, r3
 8003bfa:	82bb      	strh	r3, [r7, #20]
 8003bfc:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003c00:	b29b      	uxth	r3, r3
 8003c02:	3301      	adds	r3, #1
 8003c04:	b29b      	uxth	r3, r3
 8003c06:	81bb      	strh	r3, [r7, #12]
 8003c08:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003c0c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 8003c10:	429a      	cmp	r2, r3
 8003c12:	dbb4      	blt.n	8003b7e <SSD1306_DrawBitmap+0x30>
 8003c14:	bf00      	nop
 8003c16:	bf00      	nop
 8003c18:	3718      	adds	r7, #24
 8003c1a:	46bd      	mov	sp, r7
 8003c1c:	bd80      	pop	{r7, pc}
	...

08003c20 <SSD1306_Init>:
 8003c20:	b580      	push	{r7, lr}
 8003c22:	b082      	sub	sp, #8
 8003c24:	af00      	add	r7, sp, #0
 8003c26:	f000 fb71 	bl	800430c <ssd1306_I2C_Init>
 8003c2a:	f644 6320 	movw	r3, #20000	; 0x4e20
 8003c2e:	2201      	movs	r2, #1
 8003c30:	2178      	movs	r1, #120	; 0x78
 8003c32:	485b      	ldr	r0, [pc, #364]	; (8003da0 <SSD1306_Init+0x180>)
 8003c34:	f001 fddc 	bl	80057f0 <HAL_I2C_IsDeviceReady>
 8003c38:	4603      	mov	r3, r0
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d001      	beq.n	8003c42 <SSD1306_Init+0x22>
 8003c3e:	2300      	movs	r3, #0
 8003c40:	e0a9      	b.n	8003d96 <SSD1306_Init+0x176>
 8003c42:	f640 13c4 	movw	r3, #2500	; 0x9c4
 8003c46:	607b      	str	r3, [r7, #4]
 8003c48:	e002      	b.n	8003c50 <SSD1306_Init+0x30>
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	3b01      	subs	r3, #1
 8003c4e:	607b      	str	r3, [r7, #4]
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d1f9      	bne.n	8003c4a <SSD1306_Init+0x2a>
 8003c56:	22ae      	movs	r2, #174	; 0xae
 8003c58:	2100      	movs	r1, #0
 8003c5a:	2078      	movs	r0, #120	; 0x78
 8003c5c:	f000 fbd2 	bl	8004404 <ssd1306_I2C_Write>
 8003c60:	2220      	movs	r2, #32
 8003c62:	2100      	movs	r1, #0
 8003c64:	2078      	movs	r0, #120	; 0x78
 8003c66:	f000 fbcd 	bl	8004404 <ssd1306_I2C_Write>
 8003c6a:	2210      	movs	r2, #16
 8003c6c:	2100      	movs	r1, #0
 8003c6e:	2078      	movs	r0, #120	; 0x78
 8003c70:	f000 fbc8 	bl	8004404 <ssd1306_I2C_Write>
 8003c74:	22b0      	movs	r2, #176	; 0xb0
 8003c76:	2100      	movs	r1, #0
 8003c78:	2078      	movs	r0, #120	; 0x78
 8003c7a:	f000 fbc3 	bl	8004404 <ssd1306_I2C_Write>
 8003c7e:	22c8      	movs	r2, #200	; 0xc8
 8003c80:	2100      	movs	r1, #0
 8003c82:	2078      	movs	r0, #120	; 0x78
 8003c84:	f000 fbbe 	bl	8004404 <ssd1306_I2C_Write>
 8003c88:	2200      	movs	r2, #0
 8003c8a:	2100      	movs	r1, #0
 8003c8c:	2078      	movs	r0, #120	; 0x78
 8003c8e:	f000 fbb9 	bl	8004404 <ssd1306_I2C_Write>
 8003c92:	2210      	movs	r2, #16
 8003c94:	2100      	movs	r1, #0
 8003c96:	2078      	movs	r0, #120	; 0x78
 8003c98:	f000 fbb4 	bl	8004404 <ssd1306_I2C_Write>
 8003c9c:	2240      	movs	r2, #64	; 0x40
 8003c9e:	2100      	movs	r1, #0
 8003ca0:	2078      	movs	r0, #120	; 0x78
 8003ca2:	f000 fbaf 	bl	8004404 <ssd1306_I2C_Write>
 8003ca6:	2281      	movs	r2, #129	; 0x81
 8003ca8:	2100      	movs	r1, #0
 8003caa:	2078      	movs	r0, #120	; 0x78
 8003cac:	f000 fbaa 	bl	8004404 <ssd1306_I2C_Write>
 8003cb0:	22ff      	movs	r2, #255	; 0xff
 8003cb2:	2100      	movs	r1, #0
 8003cb4:	2078      	movs	r0, #120	; 0x78
 8003cb6:	f000 fba5 	bl	8004404 <ssd1306_I2C_Write>
 8003cba:	22a1      	movs	r2, #161	; 0xa1
 8003cbc:	2100      	movs	r1, #0
 8003cbe:	2078      	movs	r0, #120	; 0x78
 8003cc0:	f000 fba0 	bl	8004404 <ssd1306_I2C_Write>
 8003cc4:	22a6      	movs	r2, #166	; 0xa6
 8003cc6:	2100      	movs	r1, #0
 8003cc8:	2078      	movs	r0, #120	; 0x78
 8003cca:	f000 fb9b 	bl	8004404 <ssd1306_I2C_Write>
 8003cce:	22a8      	movs	r2, #168	; 0xa8
 8003cd0:	2100      	movs	r1, #0
 8003cd2:	2078      	movs	r0, #120	; 0x78
 8003cd4:	f000 fb96 	bl	8004404 <ssd1306_I2C_Write>
 8003cd8:	223f      	movs	r2, #63	; 0x3f
 8003cda:	2100      	movs	r1, #0
 8003cdc:	2078      	movs	r0, #120	; 0x78
 8003cde:	f000 fb91 	bl	8004404 <ssd1306_I2C_Write>
 8003ce2:	22a4      	movs	r2, #164	; 0xa4
 8003ce4:	2100      	movs	r1, #0
 8003ce6:	2078      	movs	r0, #120	; 0x78
 8003ce8:	f000 fb8c 	bl	8004404 <ssd1306_I2C_Write>
 8003cec:	22d3      	movs	r2, #211	; 0xd3
 8003cee:	2100      	movs	r1, #0
 8003cf0:	2078      	movs	r0, #120	; 0x78
 8003cf2:	f000 fb87 	bl	8004404 <ssd1306_I2C_Write>
 8003cf6:	2200      	movs	r2, #0
 8003cf8:	2100      	movs	r1, #0
 8003cfa:	2078      	movs	r0, #120	; 0x78
 8003cfc:	f000 fb82 	bl	8004404 <ssd1306_I2C_Write>
 8003d00:	22d5      	movs	r2, #213	; 0xd5
 8003d02:	2100      	movs	r1, #0
 8003d04:	2078      	movs	r0, #120	; 0x78
 8003d06:	f000 fb7d 	bl	8004404 <ssd1306_I2C_Write>
 8003d0a:	22f0      	movs	r2, #240	; 0xf0
 8003d0c:	2100      	movs	r1, #0
 8003d0e:	2078      	movs	r0, #120	; 0x78
 8003d10:	f000 fb78 	bl	8004404 <ssd1306_I2C_Write>
 8003d14:	22d9      	movs	r2, #217	; 0xd9
 8003d16:	2100      	movs	r1, #0
 8003d18:	2078      	movs	r0, #120	; 0x78
 8003d1a:	f000 fb73 	bl	8004404 <ssd1306_I2C_Write>
 8003d1e:	2222      	movs	r2, #34	; 0x22
 8003d20:	2100      	movs	r1, #0
 8003d22:	2078      	movs	r0, #120	; 0x78
 8003d24:	f000 fb6e 	bl	8004404 <ssd1306_I2C_Write>
 8003d28:	22da      	movs	r2, #218	; 0xda
 8003d2a:	2100      	movs	r1, #0
 8003d2c:	2078      	movs	r0, #120	; 0x78
 8003d2e:	f000 fb69 	bl	8004404 <ssd1306_I2C_Write>
 8003d32:	2212      	movs	r2, #18
 8003d34:	2100      	movs	r1, #0
 8003d36:	2078      	movs	r0, #120	; 0x78
 8003d38:	f000 fb64 	bl	8004404 <ssd1306_I2C_Write>
 8003d3c:	22db      	movs	r2, #219	; 0xdb
 8003d3e:	2100      	movs	r1, #0
 8003d40:	2078      	movs	r0, #120	; 0x78
 8003d42:	f000 fb5f 	bl	8004404 <ssd1306_I2C_Write>
 8003d46:	2220      	movs	r2, #32
 8003d48:	2100      	movs	r1, #0
 8003d4a:	2078      	movs	r0, #120	; 0x78
 8003d4c:	f000 fb5a 	bl	8004404 <ssd1306_I2C_Write>
 8003d50:	228d      	movs	r2, #141	; 0x8d
 8003d52:	2100      	movs	r1, #0
 8003d54:	2078      	movs	r0, #120	; 0x78
 8003d56:	f000 fb55 	bl	8004404 <ssd1306_I2C_Write>
 8003d5a:	2214      	movs	r2, #20
 8003d5c:	2100      	movs	r1, #0
 8003d5e:	2078      	movs	r0, #120	; 0x78
 8003d60:	f000 fb50 	bl	8004404 <ssd1306_I2C_Write>
 8003d64:	22af      	movs	r2, #175	; 0xaf
 8003d66:	2100      	movs	r1, #0
 8003d68:	2078      	movs	r0, #120	; 0x78
 8003d6a:	f000 fb4b 	bl	8004404 <ssd1306_I2C_Write>
 8003d6e:	222e      	movs	r2, #46	; 0x2e
 8003d70:	2100      	movs	r1, #0
 8003d72:	2078      	movs	r0, #120	; 0x78
 8003d74:	f000 fb46 	bl	8004404 <ssd1306_I2C_Write>
 8003d78:	2000      	movs	r0, #0
 8003d7a:	f000 f843 	bl	8003e04 <SSD1306_Fill>
 8003d7e:	f000 f813 	bl	8003da8 <SSD1306_UpdateScreen>
 8003d82:	4b08      	ldr	r3, [pc, #32]	; (8003da4 <SSD1306_Init+0x184>)
 8003d84:	2200      	movs	r2, #0
 8003d86:	801a      	strh	r2, [r3, #0]
 8003d88:	4b06      	ldr	r3, [pc, #24]	; (8003da4 <SSD1306_Init+0x184>)
 8003d8a:	2200      	movs	r2, #0
 8003d8c:	805a      	strh	r2, [r3, #2]
 8003d8e:	4b05      	ldr	r3, [pc, #20]	; (8003da4 <SSD1306_Init+0x184>)
 8003d90:	2201      	movs	r2, #1
 8003d92:	715a      	strb	r2, [r3, #5]
 8003d94:	2301      	movs	r3, #1
 8003d96:	4618      	mov	r0, r3
 8003d98:	3708      	adds	r7, #8
 8003d9a:	46bd      	mov	sp, r7
 8003d9c:	bd80      	pop	{r7, pc}
 8003d9e:	bf00      	nop
 8003da0:	2000019c 	.word	0x2000019c
 8003da4:	200006cc 	.word	0x200006cc

08003da8 <SSD1306_UpdateScreen>:
 8003da8:	b580      	push	{r7, lr}
 8003daa:	b082      	sub	sp, #8
 8003dac:	af00      	add	r7, sp, #0
 8003dae:	2300      	movs	r3, #0
 8003db0:	71fb      	strb	r3, [r7, #7]
 8003db2:	e01d      	b.n	8003df0 <SSD1306_UpdateScreen+0x48>
 8003db4:	79fb      	ldrb	r3, [r7, #7]
 8003db6:	3b50      	subs	r3, #80	; 0x50
 8003db8:	b2db      	uxtb	r3, r3
 8003dba:	461a      	mov	r2, r3
 8003dbc:	2100      	movs	r1, #0
 8003dbe:	2078      	movs	r0, #120	; 0x78
 8003dc0:	f000 fb20 	bl	8004404 <ssd1306_I2C_Write>
 8003dc4:	2200      	movs	r2, #0
 8003dc6:	2100      	movs	r1, #0
 8003dc8:	2078      	movs	r0, #120	; 0x78
 8003dca:	f000 fb1b 	bl	8004404 <ssd1306_I2C_Write>
 8003dce:	2210      	movs	r2, #16
 8003dd0:	2100      	movs	r1, #0
 8003dd2:	2078      	movs	r0, #120	; 0x78
 8003dd4:	f000 fb16 	bl	8004404 <ssd1306_I2C_Write>
 8003dd8:	79fb      	ldrb	r3, [r7, #7]
 8003dda:	01db      	lsls	r3, r3, #7
 8003ddc:	4a08      	ldr	r2, [pc, #32]	; (8003e00 <SSD1306_UpdateScreen+0x58>)
 8003dde:	441a      	add	r2, r3
 8003de0:	2380      	movs	r3, #128	; 0x80
 8003de2:	2140      	movs	r1, #64	; 0x40
 8003de4:	2078      	movs	r0, #120	; 0x78
 8003de6:	f000 faa7 	bl	8004338 <ssd1306_I2C_WriteMulti>
 8003dea:	79fb      	ldrb	r3, [r7, #7]
 8003dec:	3301      	adds	r3, #1
 8003dee:	71fb      	strb	r3, [r7, #7]
 8003df0:	79fb      	ldrb	r3, [r7, #7]
 8003df2:	2b07      	cmp	r3, #7
 8003df4:	d9de      	bls.n	8003db4 <SSD1306_UpdateScreen+0xc>
 8003df6:	bf00      	nop
 8003df8:	bf00      	nop
 8003dfa:	3708      	adds	r7, #8
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	bd80      	pop	{r7, pc}
 8003e00:	200002cc 	.word	0x200002cc

08003e04 <SSD1306_Fill>:
 8003e04:	b580      	push	{r7, lr}
 8003e06:	b082      	sub	sp, #8
 8003e08:	af00      	add	r7, sp, #0
 8003e0a:	4603      	mov	r3, r0
 8003e0c:	71fb      	strb	r3, [r7, #7]
 8003e0e:	79fb      	ldrb	r3, [r7, #7]
 8003e10:	2b00      	cmp	r3, #0
 8003e12:	d101      	bne.n	8003e18 <SSD1306_Fill+0x14>
 8003e14:	2300      	movs	r3, #0
 8003e16:	e000      	b.n	8003e1a <SSD1306_Fill+0x16>
 8003e18:	23ff      	movs	r3, #255	; 0xff
 8003e1a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003e1e:	4619      	mov	r1, r3
 8003e20:	4803      	ldr	r0, [pc, #12]	; (8003e30 <SSD1306_Fill+0x2c>)
 8003e22:	f008 ff21 	bl	800cc68 <memset>
 8003e26:	bf00      	nop
 8003e28:	3708      	adds	r7, #8
 8003e2a:	46bd      	mov	sp, r7
 8003e2c:	bd80      	pop	{r7, pc}
 8003e2e:	bf00      	nop
 8003e30:	200002cc 	.word	0x200002cc

08003e34 <SSD1306_DrawPixel>:
 8003e34:	b480      	push	{r7}
 8003e36:	b083      	sub	sp, #12
 8003e38:	af00      	add	r7, sp, #0
 8003e3a:	4603      	mov	r3, r0
 8003e3c:	80fb      	strh	r3, [r7, #6]
 8003e3e:	460b      	mov	r3, r1
 8003e40:	80bb      	strh	r3, [r7, #4]
 8003e42:	4613      	mov	r3, r2
 8003e44:	70fb      	strb	r3, [r7, #3]
 8003e46:	88fb      	ldrh	r3, [r7, #6]
 8003e48:	2b7f      	cmp	r3, #127	; 0x7f
 8003e4a:	d848      	bhi.n	8003ede <SSD1306_DrawPixel+0xaa>
 8003e4c:	88bb      	ldrh	r3, [r7, #4]
 8003e4e:	2b3f      	cmp	r3, #63	; 0x3f
 8003e50:	d845      	bhi.n	8003ede <SSD1306_DrawPixel+0xaa>
 8003e52:	4b26      	ldr	r3, [pc, #152]	; (8003eec <SSD1306_DrawPixel+0xb8>)
 8003e54:	791b      	ldrb	r3, [r3, #4]
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d006      	beq.n	8003e68 <SSD1306_DrawPixel+0x34>
 8003e5a:	78fb      	ldrb	r3, [r7, #3]
 8003e5c:	2b00      	cmp	r3, #0
 8003e5e:	bf0c      	ite	eq
 8003e60:	2301      	moveq	r3, #1
 8003e62:	2300      	movne	r3, #0
 8003e64:	b2db      	uxtb	r3, r3
 8003e66:	70fb      	strb	r3, [r7, #3]
 8003e68:	78fb      	ldrb	r3, [r7, #3]
 8003e6a:	2b01      	cmp	r3, #1
 8003e6c:	d11a      	bne.n	8003ea4 <SSD1306_DrawPixel+0x70>
 8003e6e:	88fa      	ldrh	r2, [r7, #6]
 8003e70:	88bb      	ldrh	r3, [r7, #4]
 8003e72:	08db      	lsrs	r3, r3, #3
 8003e74:	b298      	uxth	r0, r3
 8003e76:	4603      	mov	r3, r0
 8003e78:	01db      	lsls	r3, r3, #7
 8003e7a:	4413      	add	r3, r2
 8003e7c:	4a1c      	ldr	r2, [pc, #112]	; (8003ef0 <SSD1306_DrawPixel+0xbc>)
 8003e7e:	5cd3      	ldrb	r3, [r2, r3]
 8003e80:	b25a      	sxtb	r2, r3
 8003e82:	88bb      	ldrh	r3, [r7, #4]
 8003e84:	f003 0307 	and.w	r3, r3, #7
 8003e88:	2101      	movs	r1, #1
 8003e8a:	fa01 f303 	lsl.w	r3, r1, r3
 8003e8e:	b25b      	sxtb	r3, r3
 8003e90:	4313      	orrs	r3, r2
 8003e92:	b259      	sxtb	r1, r3
 8003e94:	88fa      	ldrh	r2, [r7, #6]
 8003e96:	4603      	mov	r3, r0
 8003e98:	01db      	lsls	r3, r3, #7
 8003e9a:	4413      	add	r3, r2
 8003e9c:	b2c9      	uxtb	r1, r1
 8003e9e:	4a14      	ldr	r2, [pc, #80]	; (8003ef0 <SSD1306_DrawPixel+0xbc>)
 8003ea0:	54d1      	strb	r1, [r2, r3]
 8003ea2:	e01d      	b.n	8003ee0 <SSD1306_DrawPixel+0xac>
 8003ea4:	88fa      	ldrh	r2, [r7, #6]
 8003ea6:	88bb      	ldrh	r3, [r7, #4]
 8003ea8:	08db      	lsrs	r3, r3, #3
 8003eaa:	b298      	uxth	r0, r3
 8003eac:	4603      	mov	r3, r0
 8003eae:	01db      	lsls	r3, r3, #7
 8003eb0:	4413      	add	r3, r2
 8003eb2:	4a0f      	ldr	r2, [pc, #60]	; (8003ef0 <SSD1306_DrawPixel+0xbc>)
 8003eb4:	5cd3      	ldrb	r3, [r2, r3]
 8003eb6:	b25a      	sxtb	r2, r3
 8003eb8:	88bb      	ldrh	r3, [r7, #4]
 8003eba:	f003 0307 	and.w	r3, r3, #7
 8003ebe:	2101      	movs	r1, #1
 8003ec0:	fa01 f303 	lsl.w	r3, r1, r3
 8003ec4:	b25b      	sxtb	r3, r3
 8003ec6:	43db      	mvns	r3, r3
 8003ec8:	b25b      	sxtb	r3, r3
 8003eca:	4013      	ands	r3, r2
 8003ecc:	b259      	sxtb	r1, r3
 8003ece:	88fa      	ldrh	r2, [r7, #6]
 8003ed0:	4603      	mov	r3, r0
 8003ed2:	01db      	lsls	r3, r3, #7
 8003ed4:	4413      	add	r3, r2
 8003ed6:	b2c9      	uxtb	r1, r1
 8003ed8:	4a05      	ldr	r2, [pc, #20]	; (8003ef0 <SSD1306_DrawPixel+0xbc>)
 8003eda:	54d1      	strb	r1, [r2, r3]
 8003edc:	e000      	b.n	8003ee0 <SSD1306_DrawPixel+0xac>
 8003ede:	bf00      	nop
 8003ee0:	370c      	adds	r7, #12
 8003ee2:	46bd      	mov	sp, r7
 8003ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ee8:	4770      	bx	lr
 8003eea:	bf00      	nop
 8003eec:	200006cc 	.word	0x200006cc
 8003ef0:	200002cc 	.word	0x200002cc

08003ef4 <SSD1306_GotoXY>:
 8003ef4:	b480      	push	{r7}
 8003ef6:	b083      	sub	sp, #12
 8003ef8:	af00      	add	r7, sp, #0
 8003efa:	4603      	mov	r3, r0
 8003efc:	460a      	mov	r2, r1
 8003efe:	80fb      	strh	r3, [r7, #6]
 8003f00:	4613      	mov	r3, r2
 8003f02:	80bb      	strh	r3, [r7, #4]
 8003f04:	4a05      	ldr	r2, [pc, #20]	; (8003f1c <SSD1306_GotoXY+0x28>)
 8003f06:	88fb      	ldrh	r3, [r7, #6]
 8003f08:	8013      	strh	r3, [r2, #0]
 8003f0a:	4a04      	ldr	r2, [pc, #16]	; (8003f1c <SSD1306_GotoXY+0x28>)
 8003f0c:	88bb      	ldrh	r3, [r7, #4]
 8003f0e:	8053      	strh	r3, [r2, #2]
 8003f10:	bf00      	nop
 8003f12:	370c      	adds	r7, #12
 8003f14:	46bd      	mov	sp, r7
 8003f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f1a:	4770      	bx	lr
 8003f1c:	200006cc 	.word	0x200006cc

08003f20 <SSD1306_Putc>:
 8003f20:	b580      	push	{r7, lr}
 8003f22:	b086      	sub	sp, #24
 8003f24:	af00      	add	r7, sp, #0
 8003f26:	4603      	mov	r3, r0
 8003f28:	6039      	str	r1, [r7, #0]
 8003f2a:	71fb      	strb	r3, [r7, #7]
 8003f2c:	4613      	mov	r3, r2
 8003f2e:	71bb      	strb	r3, [r7, #6]
 8003f30:	4b3a      	ldr	r3, [pc, #232]	; (800401c <SSD1306_Putc+0xfc>)
 8003f32:	881b      	ldrh	r3, [r3, #0]
 8003f34:	461a      	mov	r2, r3
 8003f36:	683b      	ldr	r3, [r7, #0]
 8003f38:	781b      	ldrb	r3, [r3, #0]
 8003f3a:	4413      	add	r3, r2
 8003f3c:	2b7f      	cmp	r3, #127	; 0x7f
 8003f3e:	dc07      	bgt.n	8003f50 <SSD1306_Putc+0x30>
 8003f40:	4b36      	ldr	r3, [pc, #216]	; (800401c <SSD1306_Putc+0xfc>)
 8003f42:	885b      	ldrh	r3, [r3, #2]
 8003f44:	461a      	mov	r2, r3
 8003f46:	683b      	ldr	r3, [r7, #0]
 8003f48:	785b      	ldrb	r3, [r3, #1]
 8003f4a:	4413      	add	r3, r2
 8003f4c:	2b3f      	cmp	r3, #63	; 0x3f
 8003f4e:	dd01      	ble.n	8003f54 <SSD1306_Putc+0x34>
 8003f50:	2300      	movs	r3, #0
 8003f52:	e05e      	b.n	8004012 <SSD1306_Putc+0xf2>
 8003f54:	2300      	movs	r3, #0
 8003f56:	617b      	str	r3, [r7, #20]
 8003f58:	e04b      	b.n	8003ff2 <SSD1306_Putc+0xd2>
 8003f5a:	683b      	ldr	r3, [r7, #0]
 8003f5c:	685a      	ldr	r2, [r3, #4]
 8003f5e:	79fb      	ldrb	r3, [r7, #7]
 8003f60:	3b20      	subs	r3, #32
 8003f62:	6839      	ldr	r1, [r7, #0]
 8003f64:	7849      	ldrb	r1, [r1, #1]
 8003f66:	fb01 f303 	mul.w	r3, r1, r3
 8003f6a:	4619      	mov	r1, r3
 8003f6c:	697b      	ldr	r3, [r7, #20]
 8003f6e:	440b      	add	r3, r1
 8003f70:	005b      	lsls	r3, r3, #1
 8003f72:	4413      	add	r3, r2
 8003f74:	881b      	ldrh	r3, [r3, #0]
 8003f76:	60fb      	str	r3, [r7, #12]
 8003f78:	2300      	movs	r3, #0
 8003f7a:	613b      	str	r3, [r7, #16]
 8003f7c:	e030      	b.n	8003fe0 <SSD1306_Putc+0xc0>
 8003f7e:	68fa      	ldr	r2, [r7, #12]
 8003f80:	693b      	ldr	r3, [r7, #16]
 8003f82:	fa02 f303 	lsl.w	r3, r2, r3
 8003f86:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003f8a:	2b00      	cmp	r3, #0
 8003f8c:	d010      	beq.n	8003fb0 <SSD1306_Putc+0x90>
 8003f8e:	4b23      	ldr	r3, [pc, #140]	; (800401c <SSD1306_Putc+0xfc>)
 8003f90:	881a      	ldrh	r2, [r3, #0]
 8003f92:	693b      	ldr	r3, [r7, #16]
 8003f94:	b29b      	uxth	r3, r3
 8003f96:	4413      	add	r3, r2
 8003f98:	b298      	uxth	r0, r3
 8003f9a:	4b20      	ldr	r3, [pc, #128]	; (800401c <SSD1306_Putc+0xfc>)
 8003f9c:	885a      	ldrh	r2, [r3, #2]
 8003f9e:	697b      	ldr	r3, [r7, #20]
 8003fa0:	b29b      	uxth	r3, r3
 8003fa2:	4413      	add	r3, r2
 8003fa4:	b29b      	uxth	r3, r3
 8003fa6:	79ba      	ldrb	r2, [r7, #6]
 8003fa8:	4619      	mov	r1, r3
 8003faa:	f7ff ff43 	bl	8003e34 <SSD1306_DrawPixel>
 8003fae:	e014      	b.n	8003fda <SSD1306_Putc+0xba>
 8003fb0:	4b1a      	ldr	r3, [pc, #104]	; (800401c <SSD1306_Putc+0xfc>)
 8003fb2:	881a      	ldrh	r2, [r3, #0]
 8003fb4:	693b      	ldr	r3, [r7, #16]
 8003fb6:	b29b      	uxth	r3, r3
 8003fb8:	4413      	add	r3, r2
 8003fba:	b298      	uxth	r0, r3
 8003fbc:	4b17      	ldr	r3, [pc, #92]	; (800401c <SSD1306_Putc+0xfc>)
 8003fbe:	885a      	ldrh	r2, [r3, #2]
 8003fc0:	697b      	ldr	r3, [r7, #20]
 8003fc2:	b29b      	uxth	r3, r3
 8003fc4:	4413      	add	r3, r2
 8003fc6:	b299      	uxth	r1, r3
 8003fc8:	79bb      	ldrb	r3, [r7, #6]
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	bf0c      	ite	eq
 8003fce:	2301      	moveq	r3, #1
 8003fd0:	2300      	movne	r3, #0
 8003fd2:	b2db      	uxtb	r3, r3
 8003fd4:	461a      	mov	r2, r3
 8003fd6:	f7ff ff2d 	bl	8003e34 <SSD1306_DrawPixel>
 8003fda:	693b      	ldr	r3, [r7, #16]
 8003fdc:	3301      	adds	r3, #1
 8003fde:	613b      	str	r3, [r7, #16]
 8003fe0:	683b      	ldr	r3, [r7, #0]
 8003fe2:	781b      	ldrb	r3, [r3, #0]
 8003fe4:	461a      	mov	r2, r3
 8003fe6:	693b      	ldr	r3, [r7, #16]
 8003fe8:	4293      	cmp	r3, r2
 8003fea:	d3c8      	bcc.n	8003f7e <SSD1306_Putc+0x5e>
 8003fec:	697b      	ldr	r3, [r7, #20]
 8003fee:	3301      	adds	r3, #1
 8003ff0:	617b      	str	r3, [r7, #20]
 8003ff2:	683b      	ldr	r3, [r7, #0]
 8003ff4:	785b      	ldrb	r3, [r3, #1]
 8003ff6:	461a      	mov	r2, r3
 8003ff8:	697b      	ldr	r3, [r7, #20]
 8003ffa:	4293      	cmp	r3, r2
 8003ffc:	d3ad      	bcc.n	8003f5a <SSD1306_Putc+0x3a>
 8003ffe:	4b07      	ldr	r3, [pc, #28]	; (800401c <SSD1306_Putc+0xfc>)
 8004000:	881a      	ldrh	r2, [r3, #0]
 8004002:	683b      	ldr	r3, [r7, #0]
 8004004:	781b      	ldrb	r3, [r3, #0]
 8004006:	b29b      	uxth	r3, r3
 8004008:	4413      	add	r3, r2
 800400a:	b29a      	uxth	r2, r3
 800400c:	4b03      	ldr	r3, [pc, #12]	; (800401c <SSD1306_Putc+0xfc>)
 800400e:	801a      	strh	r2, [r3, #0]
 8004010:	79fb      	ldrb	r3, [r7, #7]
 8004012:	4618      	mov	r0, r3
 8004014:	3718      	adds	r7, #24
 8004016:	46bd      	mov	sp, r7
 8004018:	bd80      	pop	{r7, pc}
 800401a:	bf00      	nop
 800401c:	200006cc 	.word	0x200006cc

08004020 <SSD1306_Puts>:
 8004020:	b580      	push	{r7, lr}
 8004022:	b084      	sub	sp, #16
 8004024:	af00      	add	r7, sp, #0
 8004026:	60f8      	str	r0, [r7, #12]
 8004028:	60b9      	str	r1, [r7, #8]
 800402a:	4613      	mov	r3, r2
 800402c:	71fb      	strb	r3, [r7, #7]
 800402e:	e012      	b.n	8004056 <SSD1306_Puts+0x36>
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	781b      	ldrb	r3, [r3, #0]
 8004034:	79fa      	ldrb	r2, [r7, #7]
 8004036:	68b9      	ldr	r1, [r7, #8]
 8004038:	4618      	mov	r0, r3
 800403a:	f7ff ff71 	bl	8003f20 <SSD1306_Putc>
 800403e:	4603      	mov	r3, r0
 8004040:	461a      	mov	r2, r3
 8004042:	68fb      	ldr	r3, [r7, #12]
 8004044:	781b      	ldrb	r3, [r3, #0]
 8004046:	429a      	cmp	r2, r3
 8004048:	d002      	beq.n	8004050 <SSD1306_Puts+0x30>
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	781b      	ldrb	r3, [r3, #0]
 800404e:	e008      	b.n	8004062 <SSD1306_Puts+0x42>
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	3301      	adds	r3, #1
 8004054:	60fb      	str	r3, [r7, #12]
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	781b      	ldrb	r3, [r3, #0]
 800405a:	2b00      	cmp	r3, #0
 800405c:	d1e8      	bne.n	8004030 <SSD1306_Puts+0x10>
 800405e:	68fb      	ldr	r3, [r7, #12]
 8004060:	781b      	ldrb	r3, [r3, #0]
 8004062:	4618      	mov	r0, r3
 8004064:	3710      	adds	r7, #16
 8004066:	46bd      	mov	sp, r7
 8004068:	bd80      	pop	{r7, pc}

0800406a <SSD1306_DrawLine>:
 800406a:	b590      	push	{r4, r7, lr}
 800406c:	b087      	sub	sp, #28
 800406e:	af00      	add	r7, sp, #0
 8004070:	4604      	mov	r4, r0
 8004072:	4608      	mov	r0, r1
 8004074:	4611      	mov	r1, r2
 8004076:	461a      	mov	r2, r3
 8004078:	4623      	mov	r3, r4
 800407a:	80fb      	strh	r3, [r7, #6]
 800407c:	4603      	mov	r3, r0
 800407e:	80bb      	strh	r3, [r7, #4]
 8004080:	460b      	mov	r3, r1
 8004082:	807b      	strh	r3, [r7, #2]
 8004084:	4613      	mov	r3, r2
 8004086:	803b      	strh	r3, [r7, #0]
 8004088:	88fb      	ldrh	r3, [r7, #6]
 800408a:	2b7f      	cmp	r3, #127	; 0x7f
 800408c:	d901      	bls.n	8004092 <SSD1306_DrawLine+0x28>
 800408e:	237f      	movs	r3, #127	; 0x7f
 8004090:	80fb      	strh	r3, [r7, #6]
 8004092:	887b      	ldrh	r3, [r7, #2]
 8004094:	2b7f      	cmp	r3, #127	; 0x7f
 8004096:	d901      	bls.n	800409c <SSD1306_DrawLine+0x32>
 8004098:	237f      	movs	r3, #127	; 0x7f
 800409a:	807b      	strh	r3, [r7, #2]
 800409c:	88bb      	ldrh	r3, [r7, #4]
 800409e:	2b3f      	cmp	r3, #63	; 0x3f
 80040a0:	d901      	bls.n	80040a6 <SSD1306_DrawLine+0x3c>
 80040a2:	233f      	movs	r3, #63	; 0x3f
 80040a4:	80bb      	strh	r3, [r7, #4]
 80040a6:	883b      	ldrh	r3, [r7, #0]
 80040a8:	2b3f      	cmp	r3, #63	; 0x3f
 80040aa:	d901      	bls.n	80040b0 <SSD1306_DrawLine+0x46>
 80040ac:	233f      	movs	r3, #63	; 0x3f
 80040ae:	803b      	strh	r3, [r7, #0]
 80040b0:	88fa      	ldrh	r2, [r7, #6]
 80040b2:	887b      	ldrh	r3, [r7, #2]
 80040b4:	429a      	cmp	r2, r3
 80040b6:	d205      	bcs.n	80040c4 <SSD1306_DrawLine+0x5a>
 80040b8:	887a      	ldrh	r2, [r7, #2]
 80040ba:	88fb      	ldrh	r3, [r7, #6]
 80040bc:	1ad3      	subs	r3, r2, r3
 80040be:	b29b      	uxth	r3, r3
 80040c0:	b21b      	sxth	r3, r3
 80040c2:	e004      	b.n	80040ce <SSD1306_DrawLine+0x64>
 80040c4:	88fa      	ldrh	r2, [r7, #6]
 80040c6:	887b      	ldrh	r3, [r7, #2]
 80040c8:	1ad3      	subs	r3, r2, r3
 80040ca:	b29b      	uxth	r3, r3
 80040cc:	b21b      	sxth	r3, r3
 80040ce:	827b      	strh	r3, [r7, #18]
 80040d0:	88ba      	ldrh	r2, [r7, #4]
 80040d2:	883b      	ldrh	r3, [r7, #0]
 80040d4:	429a      	cmp	r2, r3
 80040d6:	d205      	bcs.n	80040e4 <SSD1306_DrawLine+0x7a>
 80040d8:	883a      	ldrh	r2, [r7, #0]
 80040da:	88bb      	ldrh	r3, [r7, #4]
 80040dc:	1ad3      	subs	r3, r2, r3
 80040de:	b29b      	uxth	r3, r3
 80040e0:	b21b      	sxth	r3, r3
 80040e2:	e004      	b.n	80040ee <SSD1306_DrawLine+0x84>
 80040e4:	88ba      	ldrh	r2, [r7, #4]
 80040e6:	883b      	ldrh	r3, [r7, #0]
 80040e8:	1ad3      	subs	r3, r2, r3
 80040ea:	b29b      	uxth	r3, r3
 80040ec:	b21b      	sxth	r3, r3
 80040ee:	823b      	strh	r3, [r7, #16]
 80040f0:	88fa      	ldrh	r2, [r7, #6]
 80040f2:	887b      	ldrh	r3, [r7, #2]
 80040f4:	429a      	cmp	r2, r3
 80040f6:	d201      	bcs.n	80040fc <SSD1306_DrawLine+0x92>
 80040f8:	2301      	movs	r3, #1
 80040fa:	e001      	b.n	8004100 <SSD1306_DrawLine+0x96>
 80040fc:	f04f 33ff 	mov.w	r3, #4294967295
 8004100:	81fb      	strh	r3, [r7, #14]
 8004102:	88ba      	ldrh	r2, [r7, #4]
 8004104:	883b      	ldrh	r3, [r7, #0]
 8004106:	429a      	cmp	r2, r3
 8004108:	d201      	bcs.n	800410e <SSD1306_DrawLine+0xa4>
 800410a:	2301      	movs	r3, #1
 800410c:	e001      	b.n	8004112 <SSD1306_DrawLine+0xa8>
 800410e:	f04f 33ff 	mov.w	r3, #4294967295
 8004112:	81bb      	strh	r3, [r7, #12]
 8004114:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004118:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800411c:	429a      	cmp	r2, r3
 800411e:	dd06      	ble.n	800412e <SSD1306_DrawLine+0xc4>
 8004120:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004124:	0fda      	lsrs	r2, r3, #31
 8004126:	4413      	add	r3, r2
 8004128:	105b      	asrs	r3, r3, #1
 800412a:	b21b      	sxth	r3, r3
 800412c:	e006      	b.n	800413c <SSD1306_DrawLine+0xd2>
 800412e:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8004132:	0fda      	lsrs	r2, r3, #31
 8004134:	4413      	add	r3, r2
 8004136:	105b      	asrs	r3, r3, #1
 8004138:	425b      	negs	r3, r3
 800413a:	b21b      	sxth	r3, r3
 800413c:	82fb      	strh	r3, [r7, #22]
 800413e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004142:	2b00      	cmp	r3, #0
 8004144:	d129      	bne.n	800419a <SSD1306_DrawLine+0x130>
 8004146:	883a      	ldrh	r2, [r7, #0]
 8004148:	88bb      	ldrh	r3, [r7, #4]
 800414a:	429a      	cmp	r2, r3
 800414c:	d205      	bcs.n	800415a <SSD1306_DrawLine+0xf0>
 800414e:	883b      	ldrh	r3, [r7, #0]
 8004150:	813b      	strh	r3, [r7, #8]
 8004152:	88bb      	ldrh	r3, [r7, #4]
 8004154:	803b      	strh	r3, [r7, #0]
 8004156:	893b      	ldrh	r3, [r7, #8]
 8004158:	80bb      	strh	r3, [r7, #4]
 800415a:	887a      	ldrh	r2, [r7, #2]
 800415c:	88fb      	ldrh	r3, [r7, #6]
 800415e:	429a      	cmp	r2, r3
 8004160:	d205      	bcs.n	800416e <SSD1306_DrawLine+0x104>
 8004162:	887b      	ldrh	r3, [r7, #2]
 8004164:	813b      	strh	r3, [r7, #8]
 8004166:	88fb      	ldrh	r3, [r7, #6]
 8004168:	807b      	strh	r3, [r7, #2]
 800416a:	893b      	ldrh	r3, [r7, #8]
 800416c:	80fb      	strh	r3, [r7, #6]
 800416e:	88bb      	ldrh	r3, [r7, #4]
 8004170:	82bb      	strh	r3, [r7, #20]
 8004172:	e00c      	b.n	800418e <SSD1306_DrawLine+0x124>
 8004174:	8ab9      	ldrh	r1, [r7, #20]
 8004176:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 800417a:	88fb      	ldrh	r3, [r7, #6]
 800417c:	4618      	mov	r0, r3
 800417e:	f7ff fe59 	bl	8003e34 <SSD1306_DrawPixel>
 8004182:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8004186:	b29b      	uxth	r3, r3
 8004188:	3301      	adds	r3, #1
 800418a:	b29b      	uxth	r3, r3
 800418c:	82bb      	strh	r3, [r7, #20]
 800418e:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8004192:	883b      	ldrh	r3, [r7, #0]
 8004194:	429a      	cmp	r2, r3
 8004196:	dded      	ble.n	8004174 <SSD1306_DrawLine+0x10a>
 8004198:	e05f      	b.n	800425a <SSD1306_DrawLine+0x1f0>
 800419a:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d129      	bne.n	80041f6 <SSD1306_DrawLine+0x18c>
 80041a2:	883a      	ldrh	r2, [r7, #0]
 80041a4:	88bb      	ldrh	r3, [r7, #4]
 80041a6:	429a      	cmp	r2, r3
 80041a8:	d205      	bcs.n	80041b6 <SSD1306_DrawLine+0x14c>
 80041aa:	883b      	ldrh	r3, [r7, #0]
 80041ac:	813b      	strh	r3, [r7, #8]
 80041ae:	88bb      	ldrh	r3, [r7, #4]
 80041b0:	803b      	strh	r3, [r7, #0]
 80041b2:	893b      	ldrh	r3, [r7, #8]
 80041b4:	80bb      	strh	r3, [r7, #4]
 80041b6:	887a      	ldrh	r2, [r7, #2]
 80041b8:	88fb      	ldrh	r3, [r7, #6]
 80041ba:	429a      	cmp	r2, r3
 80041bc:	d205      	bcs.n	80041ca <SSD1306_DrawLine+0x160>
 80041be:	887b      	ldrh	r3, [r7, #2]
 80041c0:	813b      	strh	r3, [r7, #8]
 80041c2:	88fb      	ldrh	r3, [r7, #6]
 80041c4:	807b      	strh	r3, [r7, #2]
 80041c6:	893b      	ldrh	r3, [r7, #8]
 80041c8:	80fb      	strh	r3, [r7, #6]
 80041ca:	88fb      	ldrh	r3, [r7, #6]
 80041cc:	82bb      	strh	r3, [r7, #20]
 80041ce:	e00c      	b.n	80041ea <SSD1306_DrawLine+0x180>
 80041d0:	8abb      	ldrh	r3, [r7, #20]
 80041d2:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 80041d6:	88b9      	ldrh	r1, [r7, #4]
 80041d8:	4618      	mov	r0, r3
 80041da:	f7ff fe2b 	bl	8003e34 <SSD1306_DrawPixel>
 80041de:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80041e2:	b29b      	uxth	r3, r3
 80041e4:	3301      	adds	r3, #1
 80041e6:	b29b      	uxth	r3, r3
 80041e8:	82bb      	strh	r3, [r7, #20]
 80041ea:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80041ee:	887b      	ldrh	r3, [r7, #2]
 80041f0:	429a      	cmp	r2, r3
 80041f2:	dded      	ble.n	80041d0 <SSD1306_DrawLine+0x166>
 80041f4:	e031      	b.n	800425a <SSD1306_DrawLine+0x1f0>
 80041f6:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 80041fa:	88b9      	ldrh	r1, [r7, #4]
 80041fc:	88fb      	ldrh	r3, [r7, #6]
 80041fe:	4618      	mov	r0, r3
 8004200:	f7ff fe18 	bl	8003e34 <SSD1306_DrawPixel>
 8004204:	88fa      	ldrh	r2, [r7, #6]
 8004206:	887b      	ldrh	r3, [r7, #2]
 8004208:	429a      	cmp	r2, r3
 800420a:	d103      	bne.n	8004214 <SSD1306_DrawLine+0x1aa>
 800420c:	88ba      	ldrh	r2, [r7, #4]
 800420e:	883b      	ldrh	r3, [r7, #0]
 8004210:	429a      	cmp	r2, r3
 8004212:	d021      	beq.n	8004258 <SSD1306_DrawLine+0x1ee>
 8004214:	8afb      	ldrh	r3, [r7, #22]
 8004216:	817b      	strh	r3, [r7, #10]
 8004218:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 800421c:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004220:	425b      	negs	r3, r3
 8004222:	429a      	cmp	r2, r3
 8004224:	dd08      	ble.n	8004238 <SSD1306_DrawLine+0x1ce>
 8004226:	8afa      	ldrh	r2, [r7, #22]
 8004228:	8a3b      	ldrh	r3, [r7, #16]
 800422a:	1ad3      	subs	r3, r2, r3
 800422c:	b29b      	uxth	r3, r3
 800422e:	82fb      	strh	r3, [r7, #22]
 8004230:	89fa      	ldrh	r2, [r7, #14]
 8004232:	88fb      	ldrh	r3, [r7, #6]
 8004234:	4413      	add	r3, r2
 8004236:	80fb      	strh	r3, [r7, #6]
 8004238:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 800423c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8004240:	429a      	cmp	r2, r3
 8004242:	dad8      	bge.n	80041f6 <SSD1306_DrawLine+0x18c>
 8004244:	8afa      	ldrh	r2, [r7, #22]
 8004246:	8a7b      	ldrh	r3, [r7, #18]
 8004248:	4413      	add	r3, r2
 800424a:	b29b      	uxth	r3, r3
 800424c:	82fb      	strh	r3, [r7, #22]
 800424e:	89ba      	ldrh	r2, [r7, #12]
 8004250:	88bb      	ldrh	r3, [r7, #4]
 8004252:	4413      	add	r3, r2
 8004254:	80bb      	strh	r3, [r7, #4]
 8004256:	e7ce      	b.n	80041f6 <SSD1306_DrawLine+0x18c>
 8004258:	bf00      	nop
 800425a:	371c      	adds	r7, #28
 800425c:	46bd      	mov	sp, r7
 800425e:	bd90      	pop	{r4, r7, pc}

08004260 <SSD1306_DrawFilledRectangle>:
 8004260:	b590      	push	{r4, r7, lr}
 8004262:	b087      	sub	sp, #28
 8004264:	af02      	add	r7, sp, #8
 8004266:	4604      	mov	r4, r0
 8004268:	4608      	mov	r0, r1
 800426a:	4611      	mov	r1, r2
 800426c:	461a      	mov	r2, r3
 800426e:	4623      	mov	r3, r4
 8004270:	80fb      	strh	r3, [r7, #6]
 8004272:	4603      	mov	r3, r0
 8004274:	80bb      	strh	r3, [r7, #4]
 8004276:	460b      	mov	r3, r1
 8004278:	807b      	strh	r3, [r7, #2]
 800427a:	4613      	mov	r3, r2
 800427c:	803b      	strh	r3, [r7, #0]
 800427e:	88fb      	ldrh	r3, [r7, #6]
 8004280:	2b7f      	cmp	r3, #127	; 0x7f
 8004282:	d836      	bhi.n	80042f2 <SSD1306_DrawFilledRectangle+0x92>
 8004284:	88bb      	ldrh	r3, [r7, #4]
 8004286:	2b3f      	cmp	r3, #63	; 0x3f
 8004288:	d833      	bhi.n	80042f2 <SSD1306_DrawFilledRectangle+0x92>
 800428a:	88fa      	ldrh	r2, [r7, #6]
 800428c:	887b      	ldrh	r3, [r7, #2]
 800428e:	4413      	add	r3, r2
 8004290:	2b7f      	cmp	r3, #127	; 0x7f
 8004292:	dd03      	ble.n	800429c <SSD1306_DrawFilledRectangle+0x3c>
 8004294:	88fb      	ldrh	r3, [r7, #6]
 8004296:	f1c3 0380 	rsb	r3, r3, #128	; 0x80
 800429a:	807b      	strh	r3, [r7, #2]
 800429c:	88ba      	ldrh	r2, [r7, #4]
 800429e:	883b      	ldrh	r3, [r7, #0]
 80042a0:	4413      	add	r3, r2
 80042a2:	2b3f      	cmp	r3, #63	; 0x3f
 80042a4:	dd03      	ble.n	80042ae <SSD1306_DrawFilledRectangle+0x4e>
 80042a6:	88bb      	ldrh	r3, [r7, #4]
 80042a8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 80042ac:	803b      	strh	r3, [r7, #0]
 80042ae:	2300      	movs	r3, #0
 80042b0:	73fb      	strb	r3, [r7, #15]
 80042b2:	e018      	b.n	80042e6 <SSD1306_DrawFilledRectangle+0x86>
 80042b4:	7bfb      	ldrb	r3, [r7, #15]
 80042b6:	b29a      	uxth	r2, r3
 80042b8:	88bb      	ldrh	r3, [r7, #4]
 80042ba:	4413      	add	r3, r2
 80042bc:	b299      	uxth	r1, r3
 80042be:	88fa      	ldrh	r2, [r7, #6]
 80042c0:	887b      	ldrh	r3, [r7, #2]
 80042c2:	4413      	add	r3, r2
 80042c4:	b29c      	uxth	r4, r3
 80042c6:	7bfb      	ldrb	r3, [r7, #15]
 80042c8:	b29a      	uxth	r2, r3
 80042ca:	88bb      	ldrh	r3, [r7, #4]
 80042cc:	4413      	add	r3, r2
 80042ce:	b29a      	uxth	r2, r3
 80042d0:	88f8      	ldrh	r0, [r7, #6]
 80042d2:	f897 3020 	ldrb.w	r3, [r7, #32]
 80042d6:	9300      	str	r3, [sp, #0]
 80042d8:	4613      	mov	r3, r2
 80042da:	4622      	mov	r2, r4
 80042dc:	f7ff fec5 	bl	800406a <SSD1306_DrawLine>
 80042e0:	7bfb      	ldrb	r3, [r7, #15]
 80042e2:	3301      	adds	r3, #1
 80042e4:	73fb      	strb	r3, [r7, #15]
 80042e6:	7bfb      	ldrb	r3, [r7, #15]
 80042e8:	b29b      	uxth	r3, r3
 80042ea:	883a      	ldrh	r2, [r7, #0]
 80042ec:	429a      	cmp	r2, r3
 80042ee:	d2e1      	bcs.n	80042b4 <SSD1306_DrawFilledRectangle+0x54>
 80042f0:	e000      	b.n	80042f4 <SSD1306_DrawFilledRectangle+0x94>
 80042f2:	bf00      	nop
 80042f4:	3714      	adds	r7, #20
 80042f6:	46bd      	mov	sp, r7
 80042f8:	bd90      	pop	{r4, r7, pc}

080042fa <SSD1306_Clear>:
 80042fa:	b580      	push	{r7, lr}
 80042fc:	af00      	add	r7, sp, #0
 80042fe:	2000      	movs	r0, #0
 8004300:	f7ff fd80 	bl	8003e04 <SSD1306_Fill>
 8004304:	f7ff fd50 	bl	8003da8 <SSD1306_UpdateScreen>
 8004308:	bf00      	nop
 800430a:	bd80      	pop	{r7, pc}

0800430c <ssd1306_I2C_Init>:
 800430c:	b480      	push	{r7}
 800430e:	b083      	sub	sp, #12
 8004310:	af00      	add	r7, sp, #0
 8004312:	4b08      	ldr	r3, [pc, #32]	; (8004334 <ssd1306_I2C_Init+0x28>)
 8004314:	607b      	str	r3, [r7, #4]
 8004316:	e002      	b.n	800431e <ssd1306_I2C_Init+0x12>
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	3b01      	subs	r3, #1
 800431c:	607b      	str	r3, [r7, #4]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	2b00      	cmp	r3, #0
 8004322:	d1f9      	bne.n	8004318 <ssd1306_I2C_Init+0xc>
 8004324:	bf00      	nop
 8004326:	bf00      	nop
 8004328:	370c      	adds	r7, #12
 800432a:	46bd      	mov	sp, r7
 800432c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004330:	4770      	bx	lr
 8004332:	bf00      	nop
 8004334:	0003d090 	.word	0x0003d090

08004338 <ssd1306_I2C_WriteMulti>:
 8004338:	b590      	push	{r4, r7, lr}
 800433a:	b0c7      	sub	sp, #284	; 0x11c
 800433c:	af02      	add	r7, sp, #8
 800433e:	4604      	mov	r4, r0
 8004340:	4608      	mov	r0, r1
 8004342:	f507 7188 	add.w	r1, r7, #272	; 0x110
 8004346:	f5a1 7188 	sub.w	r1, r1, #272	; 0x110
 800434a:	600a      	str	r2, [r1, #0]
 800434c:	4619      	mov	r1, r3
 800434e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8004352:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 8004356:	4622      	mov	r2, r4
 8004358:	701a      	strb	r2, [r3, #0]
 800435a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800435e:	f5a3 7385 	sub.w	r3, r3, #266	; 0x10a
 8004362:	4602      	mov	r2, r0
 8004364:	701a      	strb	r2, [r3, #0]
 8004366:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800436a:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800436e:	460a      	mov	r2, r1
 8004370:	801a      	strh	r2, [r3, #0]
 8004372:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8004376:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800437a:	f507 7288 	add.w	r2, r7, #272	; 0x110
 800437e:	f5a2 7285 	sub.w	r2, r2, #266	; 0x10a
 8004382:	7812      	ldrb	r2, [r2, #0]
 8004384:	701a      	strb	r2, [r3, #0]
 8004386:	2300      	movs	r3, #0
 8004388:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
 800438c:	e015      	b.n	80043ba <ssd1306_I2C_WriteMulti+0x82>
 800438e:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 8004392:	f507 7288 	add.w	r2, r7, #272	; 0x110
 8004396:	f5a2 7288 	sub.w	r2, r2, #272	; 0x110
 800439a:	6812      	ldr	r2, [r2, #0]
 800439c:	441a      	add	r2, r3
 800439e:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 80043a2:	3301      	adds	r3, #1
 80043a4:	7811      	ldrb	r1, [r2, #0]
 80043a6:	f507 7288 	add.w	r2, r7, #272	; 0x110
 80043aa:	f5a2 7282 	sub.w	r2, r2, #260	; 0x104
 80043ae:	54d1      	strb	r1, [r2, r3]
 80043b0:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 80043b4:	3301      	adds	r3, #1
 80043b6:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
 80043ba:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 80043be:	b29b      	uxth	r3, r3
 80043c0:	f507 7288 	add.w	r2, r7, #272	; 0x110
 80043c4:	f5a2 7286 	sub.w	r2, r2, #268	; 0x10c
 80043c8:	8812      	ldrh	r2, [r2, #0]
 80043ca:	429a      	cmp	r2, r3
 80043cc:	d8df      	bhi.n	800438e <ssd1306_I2C_WriteMulti+0x56>
 80043ce:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80043d2:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 80043d6:	781b      	ldrb	r3, [r3, #0]
 80043d8:	b299      	uxth	r1, r3
 80043da:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80043de:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 80043e2:	881b      	ldrh	r3, [r3, #0]
 80043e4:	3301      	adds	r3, #1
 80043e6:	b29b      	uxth	r3, r3
 80043e8:	f107 020c 	add.w	r2, r7, #12
 80043ec:	200a      	movs	r0, #10
 80043ee:	9000      	str	r0, [sp, #0]
 80043f0:	4803      	ldr	r0, [pc, #12]	; (8004400 <ssd1306_I2C_WriteMulti+0xc8>)
 80043f2:	f001 f8ff 	bl	80055f4 <HAL_I2C_Master_Transmit>
 80043f6:	bf00      	nop
 80043f8:	f507 778a 	add.w	r7, r7, #276	; 0x114
 80043fc:	46bd      	mov	sp, r7
 80043fe:	bd90      	pop	{r4, r7, pc}
 8004400:	2000019c 	.word	0x2000019c

08004404 <ssd1306_I2C_Write>:
 8004404:	b580      	push	{r7, lr}
 8004406:	b086      	sub	sp, #24
 8004408:	af02      	add	r7, sp, #8
 800440a:	4603      	mov	r3, r0
 800440c:	71fb      	strb	r3, [r7, #7]
 800440e:	460b      	mov	r3, r1
 8004410:	71bb      	strb	r3, [r7, #6]
 8004412:	4613      	mov	r3, r2
 8004414:	717b      	strb	r3, [r7, #5]
 8004416:	79bb      	ldrb	r3, [r7, #6]
 8004418:	733b      	strb	r3, [r7, #12]
 800441a:	797b      	ldrb	r3, [r7, #5]
 800441c:	737b      	strb	r3, [r7, #13]
 800441e:	79fb      	ldrb	r3, [r7, #7]
 8004420:	b299      	uxth	r1, r3
 8004422:	f107 020c 	add.w	r2, r7, #12
 8004426:	230a      	movs	r3, #10
 8004428:	9300      	str	r3, [sp, #0]
 800442a:	2302      	movs	r3, #2
 800442c:	4803      	ldr	r0, [pc, #12]	; (800443c <ssd1306_I2C_Write+0x38>)
 800442e:	f001 f8e1 	bl	80055f4 <HAL_I2C_Master_Transmit>
 8004432:	bf00      	nop
 8004434:	3710      	adds	r7, #16
 8004436:	46bd      	mov	sp, r7
 8004438:	bd80      	pop	{r7, pc}
 800443a:	bf00      	nop
 800443c:	2000019c 	.word	0x2000019c

08004440 <HAL_MspInit>:
 8004440:	b580      	push	{r7, lr}
 8004442:	b082      	sub	sp, #8
 8004444:	af00      	add	r7, sp, #0
 8004446:	2300      	movs	r3, #0
 8004448:	607b      	str	r3, [r7, #4]
 800444a:	4b10      	ldr	r3, [pc, #64]	; (800448c <HAL_MspInit+0x4c>)
 800444c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800444e:	4a0f      	ldr	r2, [pc, #60]	; (800448c <HAL_MspInit+0x4c>)
 8004450:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004454:	6453      	str	r3, [r2, #68]	; 0x44
 8004456:	4b0d      	ldr	r3, [pc, #52]	; (800448c <HAL_MspInit+0x4c>)
 8004458:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800445a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800445e:	607b      	str	r3, [r7, #4]
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	2300      	movs	r3, #0
 8004464:	603b      	str	r3, [r7, #0]
 8004466:	4b09      	ldr	r3, [pc, #36]	; (800448c <HAL_MspInit+0x4c>)
 8004468:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800446a:	4a08      	ldr	r2, [pc, #32]	; (800448c <HAL_MspInit+0x4c>)
 800446c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004470:	6413      	str	r3, [r2, #64]	; 0x40
 8004472:	4b06      	ldr	r3, [pc, #24]	; (800448c <HAL_MspInit+0x4c>)
 8004474:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004476:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800447a:	603b      	str	r3, [r7, #0]
 800447c:	683b      	ldr	r3, [r7, #0]
 800447e:	2007      	movs	r0, #7
 8004480:	f000 fb30 	bl	8004ae4 <HAL_NVIC_SetPriorityGrouping>
 8004484:	bf00      	nop
 8004486:	3708      	adds	r7, #8
 8004488:	46bd      	mov	sp, r7
 800448a:	bd80      	pop	{r7, pc}
 800448c:	40023800 	.word	0x40023800

08004490 <HAL_CRC_MspInit>:
 8004490:	b480      	push	{r7}
 8004492:	b085      	sub	sp, #20
 8004494:	af00      	add	r7, sp, #0
 8004496:	6078      	str	r0, [r7, #4]
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	681b      	ldr	r3, [r3, #0]
 800449c:	4a0b      	ldr	r2, [pc, #44]	; (80044cc <HAL_CRC_MspInit+0x3c>)
 800449e:	4293      	cmp	r3, r2
 80044a0:	d10d      	bne.n	80044be <HAL_CRC_MspInit+0x2e>
 80044a2:	2300      	movs	r3, #0
 80044a4:	60fb      	str	r3, [r7, #12]
 80044a6:	4b0a      	ldr	r3, [pc, #40]	; (80044d0 <HAL_CRC_MspInit+0x40>)
 80044a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044aa:	4a09      	ldr	r2, [pc, #36]	; (80044d0 <HAL_CRC_MspInit+0x40>)
 80044ac:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80044b0:	6313      	str	r3, [r2, #48]	; 0x30
 80044b2:	4b07      	ldr	r3, [pc, #28]	; (80044d0 <HAL_CRC_MspInit+0x40>)
 80044b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044b6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80044ba:	60fb      	str	r3, [r7, #12]
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	bf00      	nop
 80044c0:	3714      	adds	r7, #20
 80044c2:	46bd      	mov	sp, r7
 80044c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044c8:	4770      	bx	lr
 80044ca:	bf00      	nop
 80044cc:	40023000 	.word	0x40023000
 80044d0:	40023800 	.word	0x40023800

080044d4 <HAL_I2C_MspInit>:
 80044d4:	b580      	push	{r7, lr}
 80044d6:	b08a      	sub	sp, #40	; 0x28
 80044d8:	af00      	add	r7, sp, #0
 80044da:	6078      	str	r0, [r7, #4]
 80044dc:	f107 0314 	add.w	r3, r7, #20
 80044e0:	2200      	movs	r2, #0
 80044e2:	601a      	str	r2, [r3, #0]
 80044e4:	605a      	str	r2, [r3, #4]
 80044e6:	609a      	str	r2, [r3, #8]
 80044e8:	60da      	str	r2, [r3, #12]
 80044ea:	611a      	str	r2, [r3, #16]
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	681b      	ldr	r3, [r3, #0]
 80044f0:	4a19      	ldr	r2, [pc, #100]	; (8004558 <HAL_I2C_MspInit+0x84>)
 80044f2:	4293      	cmp	r3, r2
 80044f4:	d12b      	bne.n	800454e <HAL_I2C_MspInit+0x7a>
 80044f6:	2300      	movs	r3, #0
 80044f8:	613b      	str	r3, [r7, #16]
 80044fa:	4b18      	ldr	r3, [pc, #96]	; (800455c <HAL_I2C_MspInit+0x88>)
 80044fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044fe:	4a17      	ldr	r2, [pc, #92]	; (800455c <HAL_I2C_MspInit+0x88>)
 8004500:	f043 0302 	orr.w	r3, r3, #2
 8004504:	6313      	str	r3, [r2, #48]	; 0x30
 8004506:	4b15      	ldr	r3, [pc, #84]	; (800455c <HAL_I2C_MspInit+0x88>)
 8004508:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800450a:	f003 0302 	and.w	r3, r3, #2
 800450e:	613b      	str	r3, [r7, #16]
 8004510:	693b      	ldr	r3, [r7, #16]
 8004512:	23c0      	movs	r3, #192	; 0xc0
 8004514:	617b      	str	r3, [r7, #20]
 8004516:	2312      	movs	r3, #18
 8004518:	61bb      	str	r3, [r7, #24]
 800451a:	2300      	movs	r3, #0
 800451c:	61fb      	str	r3, [r7, #28]
 800451e:	2303      	movs	r3, #3
 8004520:	623b      	str	r3, [r7, #32]
 8004522:	2304      	movs	r3, #4
 8004524:	627b      	str	r3, [r7, #36]	; 0x24
 8004526:	f107 0314 	add.w	r3, r7, #20
 800452a:	4619      	mov	r1, r3
 800452c:	480c      	ldr	r0, [pc, #48]	; (8004560 <HAL_I2C_MspInit+0x8c>)
 800452e:	f000 fd35 	bl	8004f9c <HAL_GPIO_Init>
 8004532:	2300      	movs	r3, #0
 8004534:	60fb      	str	r3, [r7, #12]
 8004536:	4b09      	ldr	r3, [pc, #36]	; (800455c <HAL_I2C_MspInit+0x88>)
 8004538:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800453a:	4a08      	ldr	r2, [pc, #32]	; (800455c <HAL_I2C_MspInit+0x88>)
 800453c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004540:	6413      	str	r3, [r2, #64]	; 0x40
 8004542:	4b06      	ldr	r3, [pc, #24]	; (800455c <HAL_I2C_MspInit+0x88>)
 8004544:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004546:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800454a:	60fb      	str	r3, [r7, #12]
 800454c:	68fb      	ldr	r3, [r7, #12]
 800454e:	bf00      	nop
 8004550:	3728      	adds	r7, #40	; 0x28
 8004552:	46bd      	mov	sp, r7
 8004554:	bd80      	pop	{r7, pc}
 8004556:	bf00      	nop
 8004558:	40005400 	.word	0x40005400
 800455c:	40023800 	.word	0x40023800
 8004560:	40020400 	.word	0x40020400

08004564 <HAL_RNG_MspInit>:
 8004564:	b580      	push	{r7, lr}
 8004566:	b084      	sub	sp, #16
 8004568:	af00      	add	r7, sp, #0
 800456a:	6078      	str	r0, [r7, #4]
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	4a0e      	ldr	r2, [pc, #56]	; (80045ac <HAL_RNG_MspInit+0x48>)
 8004572:	4293      	cmp	r3, r2
 8004574:	d115      	bne.n	80045a2 <HAL_RNG_MspInit+0x3e>
 8004576:	2300      	movs	r3, #0
 8004578:	60fb      	str	r3, [r7, #12]
 800457a:	4b0d      	ldr	r3, [pc, #52]	; (80045b0 <HAL_RNG_MspInit+0x4c>)
 800457c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800457e:	4a0c      	ldr	r2, [pc, #48]	; (80045b0 <HAL_RNG_MspInit+0x4c>)
 8004580:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004584:	6353      	str	r3, [r2, #52]	; 0x34
 8004586:	4b0a      	ldr	r3, [pc, #40]	; (80045b0 <HAL_RNG_MspInit+0x4c>)
 8004588:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800458a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800458e:	60fb      	str	r3, [r7, #12]
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	2200      	movs	r2, #0
 8004594:	2100      	movs	r1, #0
 8004596:	2050      	movs	r0, #80	; 0x50
 8004598:	f000 faaf 	bl	8004afa <HAL_NVIC_SetPriority>
 800459c:	2050      	movs	r0, #80	; 0x50
 800459e:	f000 fac8 	bl	8004b32 <HAL_NVIC_EnableIRQ>
 80045a2:	bf00      	nop
 80045a4:	3710      	adds	r7, #16
 80045a6:	46bd      	mov	sp, r7
 80045a8:	bd80      	pop	{r7, pc}
 80045aa:	bf00      	nop
 80045ac:	50060800 	.word	0x50060800
 80045b0:	40023800 	.word	0x40023800

080045b4 <HAL_TIM_Base_MspInit>:
 80045b4:	b580      	push	{r7, lr}
 80045b6:	b084      	sub	sp, #16
 80045b8:	af00      	add	r7, sp, #0
 80045ba:	6078      	str	r0, [r7, #4]
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80045c4:	d115      	bne.n	80045f2 <HAL_TIM_Base_MspInit+0x3e>
 80045c6:	2300      	movs	r3, #0
 80045c8:	60fb      	str	r3, [r7, #12]
 80045ca:	4b0c      	ldr	r3, [pc, #48]	; (80045fc <HAL_TIM_Base_MspInit+0x48>)
 80045cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045ce:	4a0b      	ldr	r2, [pc, #44]	; (80045fc <HAL_TIM_Base_MspInit+0x48>)
 80045d0:	f043 0301 	orr.w	r3, r3, #1
 80045d4:	6413      	str	r3, [r2, #64]	; 0x40
 80045d6:	4b09      	ldr	r3, [pc, #36]	; (80045fc <HAL_TIM_Base_MspInit+0x48>)
 80045d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045da:	f003 0301 	and.w	r3, r3, #1
 80045de:	60fb      	str	r3, [r7, #12]
 80045e0:	68fb      	ldr	r3, [r7, #12]
 80045e2:	2200      	movs	r2, #0
 80045e4:	2100      	movs	r1, #0
 80045e6:	201c      	movs	r0, #28
 80045e8:	f000 fa87 	bl	8004afa <HAL_NVIC_SetPriority>
 80045ec:	201c      	movs	r0, #28
 80045ee:	f000 faa0 	bl	8004b32 <HAL_NVIC_EnableIRQ>
 80045f2:	bf00      	nop
 80045f4:	3710      	adds	r7, #16
 80045f6:	46bd      	mov	sp, r7
 80045f8:	bd80      	pop	{r7, pc}
 80045fa:	bf00      	nop
 80045fc:	40023800 	.word	0x40023800

08004600 <NMI_Handler>:
 8004600:	b480      	push	{r7}
 8004602:	af00      	add	r7, sp, #0
 8004604:	e7fe      	b.n	8004604 <NMI_Handler+0x4>

08004606 <HardFault_Handler>:
 8004606:	b480      	push	{r7}
 8004608:	af00      	add	r7, sp, #0
 800460a:	e7fe      	b.n	800460a <HardFault_Handler+0x4>

0800460c <MemManage_Handler>:
 800460c:	b480      	push	{r7}
 800460e:	af00      	add	r7, sp, #0
 8004610:	e7fe      	b.n	8004610 <MemManage_Handler+0x4>

08004612 <BusFault_Handler>:
 8004612:	b480      	push	{r7}
 8004614:	af00      	add	r7, sp, #0
 8004616:	e7fe      	b.n	8004616 <BusFault_Handler+0x4>

08004618 <UsageFault_Handler>:
 8004618:	b480      	push	{r7}
 800461a:	af00      	add	r7, sp, #0
 800461c:	e7fe      	b.n	800461c <UsageFault_Handler+0x4>

0800461e <SVC_Handler>:
 800461e:	b480      	push	{r7}
 8004620:	af00      	add	r7, sp, #0
 8004622:	bf00      	nop
 8004624:	46bd      	mov	sp, r7
 8004626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800462a:	4770      	bx	lr

0800462c <DebugMon_Handler>:
 800462c:	b480      	push	{r7}
 800462e:	af00      	add	r7, sp, #0
 8004630:	bf00      	nop
 8004632:	46bd      	mov	sp, r7
 8004634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004638:	4770      	bx	lr

0800463a <PendSV_Handler>:
 800463a:	b480      	push	{r7}
 800463c:	af00      	add	r7, sp, #0
 800463e:	bf00      	nop
 8004640:	46bd      	mov	sp, r7
 8004642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004646:	4770      	bx	lr

08004648 <SysTick_Handler>:
 8004648:	b580      	push	{r7, lr}
 800464a:	af00      	add	r7, sp, #0
 800464c:	f000 f936 	bl	80048bc <HAL_IncTick>
 8004650:	bf00      	nop
 8004652:	bd80      	pop	{r7, pc}

08004654 <TIM2_IRQHandler>:
 8004654:	b580      	push	{r7, lr}
 8004656:	af00      	add	r7, sp, #0
 8004658:	4802      	ldr	r0, [pc, #8]	; (8004664 <TIM2_IRQHandler+0x10>)
 800465a:	f003 fca9 	bl	8007fb0 <HAL_TIM_IRQHandler>
 800465e:	bf00      	nop
 8004660:	bd80      	pop	{r7, pc}
 8004662:	bf00      	nop
 8004664:	20000200 	.word	0x20000200

08004668 <OTG_FS_IRQHandler>:
 8004668:	b580      	push	{r7, lr}
 800466a:	af00      	add	r7, sp, #0
 800466c:	4802      	ldr	r0, [pc, #8]	; (8004678 <OTG_FS_IRQHandler+0x10>)
 800466e:	f001 fd8c 	bl	800618a <HAL_PCD_IRQHandler>
 8004672:	bf00      	nop
 8004674:	bd80      	pop	{r7, pc}
 8004676:	bf00      	nop
 8004678:	20001bdc 	.word	0x20001bdc

0800467c <HASH_RNG_IRQHandler>:
 800467c:	b580      	push	{r7, lr}
 800467e:	af00      	add	r7, sp, #0
 8004680:	4802      	ldr	r0, [pc, #8]	; (800468c <HASH_RNG_IRQHandler+0x10>)
 8004682:	f003 fb6c 	bl	8007d5e <HAL_RNG_IRQHandler>
 8004686:	bf00      	nop
 8004688:	bd80      	pop	{r7, pc}
 800468a:	bf00      	nop
 800468c:	200001f0 	.word	0x200001f0

08004690 <_read>:
 8004690:	b580      	push	{r7, lr}
 8004692:	b086      	sub	sp, #24
 8004694:	af00      	add	r7, sp, #0
 8004696:	60f8      	str	r0, [r7, #12]
 8004698:	60b9      	str	r1, [r7, #8]
 800469a:	607a      	str	r2, [r7, #4]
 800469c:	2300      	movs	r3, #0
 800469e:	617b      	str	r3, [r7, #20]
 80046a0:	e00a      	b.n	80046b8 <_read+0x28>
 80046a2:	f3af 8000 	nop.w
 80046a6:	4601      	mov	r1, r0
 80046a8:	68bb      	ldr	r3, [r7, #8]
 80046aa:	1c5a      	adds	r2, r3, #1
 80046ac:	60ba      	str	r2, [r7, #8]
 80046ae:	b2ca      	uxtb	r2, r1
 80046b0:	701a      	strb	r2, [r3, #0]
 80046b2:	697b      	ldr	r3, [r7, #20]
 80046b4:	3301      	adds	r3, #1
 80046b6:	617b      	str	r3, [r7, #20]
 80046b8:	697a      	ldr	r2, [r7, #20]
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	429a      	cmp	r2, r3
 80046be:	dbf0      	blt.n	80046a2 <_read+0x12>
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	4618      	mov	r0, r3
 80046c4:	3718      	adds	r7, #24
 80046c6:	46bd      	mov	sp, r7
 80046c8:	bd80      	pop	{r7, pc}

080046ca <_close>:
 80046ca:	b480      	push	{r7}
 80046cc:	b083      	sub	sp, #12
 80046ce:	af00      	add	r7, sp, #0
 80046d0:	6078      	str	r0, [r7, #4]
 80046d2:	f04f 33ff 	mov.w	r3, #4294967295
 80046d6:	4618      	mov	r0, r3
 80046d8:	370c      	adds	r7, #12
 80046da:	46bd      	mov	sp, r7
 80046dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046e0:	4770      	bx	lr

080046e2 <_fstat>:
 80046e2:	b480      	push	{r7}
 80046e4:	b083      	sub	sp, #12
 80046e6:	af00      	add	r7, sp, #0
 80046e8:	6078      	str	r0, [r7, #4]
 80046ea:	6039      	str	r1, [r7, #0]
 80046ec:	683b      	ldr	r3, [r7, #0]
 80046ee:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80046f2:	605a      	str	r2, [r3, #4]
 80046f4:	2300      	movs	r3, #0
 80046f6:	4618      	mov	r0, r3
 80046f8:	370c      	adds	r7, #12
 80046fa:	46bd      	mov	sp, r7
 80046fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004700:	4770      	bx	lr

08004702 <_isatty>:
 8004702:	b480      	push	{r7}
 8004704:	b083      	sub	sp, #12
 8004706:	af00      	add	r7, sp, #0
 8004708:	6078      	str	r0, [r7, #4]
 800470a:	2301      	movs	r3, #1
 800470c:	4618      	mov	r0, r3
 800470e:	370c      	adds	r7, #12
 8004710:	46bd      	mov	sp, r7
 8004712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004716:	4770      	bx	lr

08004718 <_lseek>:
 8004718:	b480      	push	{r7}
 800471a:	b085      	sub	sp, #20
 800471c:	af00      	add	r7, sp, #0
 800471e:	60f8      	str	r0, [r7, #12]
 8004720:	60b9      	str	r1, [r7, #8]
 8004722:	607a      	str	r2, [r7, #4]
 8004724:	2300      	movs	r3, #0
 8004726:	4618      	mov	r0, r3
 8004728:	3714      	adds	r7, #20
 800472a:	46bd      	mov	sp, r7
 800472c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004730:	4770      	bx	lr
	...

08004734 <_sbrk>:
 8004734:	b580      	push	{r7, lr}
 8004736:	b086      	sub	sp, #24
 8004738:	af00      	add	r7, sp, #0
 800473a:	6078      	str	r0, [r7, #4]
 800473c:	4a14      	ldr	r2, [pc, #80]	; (8004790 <_sbrk+0x5c>)
 800473e:	4b15      	ldr	r3, [pc, #84]	; (8004794 <_sbrk+0x60>)
 8004740:	1ad3      	subs	r3, r2, r3
 8004742:	617b      	str	r3, [r7, #20]
 8004744:	697b      	ldr	r3, [r7, #20]
 8004746:	613b      	str	r3, [r7, #16]
 8004748:	4b13      	ldr	r3, [pc, #76]	; (8004798 <_sbrk+0x64>)
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	2b00      	cmp	r3, #0
 800474e:	d102      	bne.n	8004756 <_sbrk+0x22>
 8004750:	4b11      	ldr	r3, [pc, #68]	; (8004798 <_sbrk+0x64>)
 8004752:	4a12      	ldr	r2, [pc, #72]	; (800479c <_sbrk+0x68>)
 8004754:	601a      	str	r2, [r3, #0]
 8004756:	4b10      	ldr	r3, [pc, #64]	; (8004798 <_sbrk+0x64>)
 8004758:	681a      	ldr	r2, [r3, #0]
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	4413      	add	r3, r2
 800475e:	693a      	ldr	r2, [r7, #16]
 8004760:	429a      	cmp	r2, r3
 8004762:	d207      	bcs.n	8004774 <_sbrk+0x40>
 8004764:	f008 face 	bl	800cd04 <__errno>
 8004768:	4603      	mov	r3, r0
 800476a:	220c      	movs	r2, #12
 800476c:	601a      	str	r2, [r3, #0]
 800476e:	f04f 33ff 	mov.w	r3, #4294967295
 8004772:	e009      	b.n	8004788 <_sbrk+0x54>
 8004774:	4b08      	ldr	r3, [pc, #32]	; (8004798 <_sbrk+0x64>)
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	60fb      	str	r3, [r7, #12]
 800477a:	4b07      	ldr	r3, [pc, #28]	; (8004798 <_sbrk+0x64>)
 800477c:	681a      	ldr	r2, [r3, #0]
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	4413      	add	r3, r2
 8004782:	4a05      	ldr	r2, [pc, #20]	; (8004798 <_sbrk+0x64>)
 8004784:	6013      	str	r3, [r2, #0]
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	4618      	mov	r0, r3
 800478a:	3718      	adds	r7, #24
 800478c:	46bd      	mov	sp, r7
 800478e:	bd80      	pop	{r7, pc}
 8004790:	20020000 	.word	0x20020000
 8004794:	00000400 	.word	0x00000400
 8004798:	200006d4 	.word	0x200006d4
 800479c:	20002430 	.word	0x20002430

080047a0 <SystemInit>:
 80047a0:	b480      	push	{r7}
 80047a2:	af00      	add	r7, sp, #0
 80047a4:	4b06      	ldr	r3, [pc, #24]	; (80047c0 <SystemInit+0x20>)
 80047a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80047aa:	4a05      	ldr	r2, [pc, #20]	; (80047c0 <SystemInit+0x20>)
 80047ac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80047b0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80047b4:	bf00      	nop
 80047b6:	46bd      	mov	sp, r7
 80047b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047bc:	4770      	bx	lr
 80047be:	bf00      	nop
 80047c0:	e000ed00 	.word	0xe000ed00

080047c4 <Reset_Handler>:
 80047c4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80047fc <LoopFillZerobss+0xe>
 80047c8:	f7ff ffea 	bl	80047a0 <SystemInit>
 80047cc:	480c      	ldr	r0, [pc, #48]	; (8004800 <LoopFillZerobss+0x12>)
 80047ce:	490d      	ldr	r1, [pc, #52]	; (8004804 <LoopFillZerobss+0x16>)
 80047d0:	4a0d      	ldr	r2, [pc, #52]	; (8004808 <LoopFillZerobss+0x1a>)
 80047d2:	2300      	movs	r3, #0
 80047d4:	e002      	b.n	80047dc <LoopCopyDataInit>

080047d6 <CopyDataInit>:
 80047d6:	58d4      	ldr	r4, [r2, r3]
 80047d8:	50c4      	str	r4, [r0, r3]
 80047da:	3304      	adds	r3, #4

080047dc <LoopCopyDataInit>:
 80047dc:	18c4      	adds	r4, r0, r3
 80047de:	428c      	cmp	r4, r1
 80047e0:	d3f9      	bcc.n	80047d6 <CopyDataInit>
 80047e2:	4a0a      	ldr	r2, [pc, #40]	; (800480c <LoopFillZerobss+0x1e>)
 80047e4:	4c0a      	ldr	r4, [pc, #40]	; (8004810 <LoopFillZerobss+0x22>)
 80047e6:	2300      	movs	r3, #0
 80047e8:	e001      	b.n	80047ee <LoopFillZerobss>

080047ea <FillZerobss>:
 80047ea:	6013      	str	r3, [r2, #0]
 80047ec:	3204      	adds	r2, #4

080047ee <LoopFillZerobss>:
 80047ee:	42a2      	cmp	r2, r4
 80047f0:	d3fb      	bcc.n	80047ea <FillZerobss>
 80047f2:	f008 fa8d 	bl	800cd10 <__libc_init_array>
 80047f6:	f7fd fda7 	bl	8002348 <main>
 80047fa:	4770      	bx	lr
 80047fc:	20020000 	.word	0x20020000
 8004800:	20000000 	.word	0x20000000
 8004804:	2000016c 	.word	0x2000016c
 8004808:	0800fe84 	.word	0x0800fe84
 800480c:	2000016c 	.word	0x2000016c
 8004810:	2000242c 	.word	0x2000242c

08004814 <ADC_IRQHandler>:
 8004814:	e7fe      	b.n	8004814 <ADC_IRQHandler>
	...

08004818 <HAL_Init>:
 8004818:	b580      	push	{r7, lr}
 800481a:	af00      	add	r7, sp, #0
 800481c:	4b0e      	ldr	r3, [pc, #56]	; (8004858 <HAL_Init+0x40>)
 800481e:	681b      	ldr	r3, [r3, #0]
 8004820:	4a0d      	ldr	r2, [pc, #52]	; (8004858 <HAL_Init+0x40>)
 8004822:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004826:	6013      	str	r3, [r2, #0]
 8004828:	4b0b      	ldr	r3, [pc, #44]	; (8004858 <HAL_Init+0x40>)
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	4a0a      	ldr	r2, [pc, #40]	; (8004858 <HAL_Init+0x40>)
 800482e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004832:	6013      	str	r3, [r2, #0]
 8004834:	4b08      	ldr	r3, [pc, #32]	; (8004858 <HAL_Init+0x40>)
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	4a07      	ldr	r2, [pc, #28]	; (8004858 <HAL_Init+0x40>)
 800483a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800483e:	6013      	str	r3, [r2, #0]
 8004840:	2003      	movs	r0, #3
 8004842:	f000 f94f 	bl	8004ae4 <HAL_NVIC_SetPriorityGrouping>
 8004846:	2000      	movs	r0, #0
 8004848:	f000 f808 	bl	800485c <HAL_InitTick>
 800484c:	f7ff fdf8 	bl	8004440 <HAL_MspInit>
 8004850:	2300      	movs	r3, #0
 8004852:	4618      	mov	r0, r3
 8004854:	bd80      	pop	{r7, pc}
 8004856:	bf00      	nop
 8004858:	40023c00 	.word	0x40023c00

0800485c <HAL_InitTick>:
 800485c:	b580      	push	{r7, lr}
 800485e:	b082      	sub	sp, #8
 8004860:	af00      	add	r7, sp, #0
 8004862:	6078      	str	r0, [r7, #4]
 8004864:	4b12      	ldr	r3, [pc, #72]	; (80048b0 <HAL_InitTick+0x54>)
 8004866:	681a      	ldr	r2, [r3, #0]
 8004868:	4b12      	ldr	r3, [pc, #72]	; (80048b4 <HAL_InitTick+0x58>)
 800486a:	781b      	ldrb	r3, [r3, #0]
 800486c:	4619      	mov	r1, r3
 800486e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004872:	fbb3 f3f1 	udiv	r3, r3, r1
 8004876:	fbb2 f3f3 	udiv	r3, r2, r3
 800487a:	4618      	mov	r0, r3
 800487c:	f000 f967 	bl	8004b4e <HAL_SYSTICK_Config>
 8004880:	4603      	mov	r3, r0
 8004882:	2b00      	cmp	r3, #0
 8004884:	d001      	beq.n	800488a <HAL_InitTick+0x2e>
 8004886:	2301      	movs	r3, #1
 8004888:	e00e      	b.n	80048a8 <HAL_InitTick+0x4c>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	2b0f      	cmp	r3, #15
 800488e:	d80a      	bhi.n	80048a6 <HAL_InitTick+0x4a>
 8004890:	2200      	movs	r2, #0
 8004892:	6879      	ldr	r1, [r7, #4]
 8004894:	f04f 30ff 	mov.w	r0, #4294967295
 8004898:	f000 f92f 	bl	8004afa <HAL_NVIC_SetPriority>
 800489c:	4a06      	ldr	r2, [pc, #24]	; (80048b8 <HAL_InitTick+0x5c>)
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	6013      	str	r3, [r2, #0]
 80048a2:	2300      	movs	r3, #0
 80048a4:	e000      	b.n	80048a8 <HAL_InitTick+0x4c>
 80048a6:	2301      	movs	r3, #1
 80048a8:	4618      	mov	r0, r3
 80048aa:	3708      	adds	r7, #8
 80048ac:	46bd      	mov	sp, r7
 80048ae:	bd80      	pop	{r7, pc}
 80048b0:	20000014 	.word	0x20000014
 80048b4:	2000001c 	.word	0x2000001c
 80048b8:	20000018 	.word	0x20000018

080048bc <HAL_IncTick>:
 80048bc:	b480      	push	{r7}
 80048be:	af00      	add	r7, sp, #0
 80048c0:	4b06      	ldr	r3, [pc, #24]	; (80048dc <HAL_IncTick+0x20>)
 80048c2:	781b      	ldrb	r3, [r3, #0]
 80048c4:	461a      	mov	r2, r3
 80048c6:	4b06      	ldr	r3, [pc, #24]	; (80048e0 <HAL_IncTick+0x24>)
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	4413      	add	r3, r2
 80048cc:	4a04      	ldr	r2, [pc, #16]	; (80048e0 <HAL_IncTick+0x24>)
 80048ce:	6013      	str	r3, [r2, #0]
 80048d0:	bf00      	nop
 80048d2:	46bd      	mov	sp, r7
 80048d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048d8:	4770      	bx	lr
 80048da:	bf00      	nop
 80048dc:	2000001c 	.word	0x2000001c
 80048e0:	200006d8 	.word	0x200006d8

080048e4 <HAL_GetTick>:
 80048e4:	b480      	push	{r7}
 80048e6:	af00      	add	r7, sp, #0
 80048e8:	4b03      	ldr	r3, [pc, #12]	; (80048f8 <HAL_GetTick+0x14>)
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	4618      	mov	r0, r3
 80048ee:	46bd      	mov	sp, r7
 80048f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048f4:	4770      	bx	lr
 80048f6:	bf00      	nop
 80048f8:	200006d8 	.word	0x200006d8

080048fc <HAL_Delay>:
 80048fc:	b580      	push	{r7, lr}
 80048fe:	b084      	sub	sp, #16
 8004900:	af00      	add	r7, sp, #0
 8004902:	6078      	str	r0, [r7, #4]
 8004904:	f7ff ffee 	bl	80048e4 <HAL_GetTick>
 8004908:	60b8      	str	r0, [r7, #8]
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	60fb      	str	r3, [r7, #12]
 800490e:	68fb      	ldr	r3, [r7, #12]
 8004910:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004914:	d005      	beq.n	8004922 <HAL_Delay+0x26>
 8004916:	4b0a      	ldr	r3, [pc, #40]	; (8004940 <HAL_Delay+0x44>)
 8004918:	781b      	ldrb	r3, [r3, #0]
 800491a:	461a      	mov	r2, r3
 800491c:	68fb      	ldr	r3, [r7, #12]
 800491e:	4413      	add	r3, r2
 8004920:	60fb      	str	r3, [r7, #12]
 8004922:	bf00      	nop
 8004924:	f7ff ffde 	bl	80048e4 <HAL_GetTick>
 8004928:	4602      	mov	r2, r0
 800492a:	68bb      	ldr	r3, [r7, #8]
 800492c:	1ad3      	subs	r3, r2, r3
 800492e:	68fa      	ldr	r2, [r7, #12]
 8004930:	429a      	cmp	r2, r3
 8004932:	d8f7      	bhi.n	8004924 <HAL_Delay+0x28>
 8004934:	bf00      	nop
 8004936:	bf00      	nop
 8004938:	3710      	adds	r7, #16
 800493a:	46bd      	mov	sp, r7
 800493c:	bd80      	pop	{r7, pc}
 800493e:	bf00      	nop
 8004940:	2000001c 	.word	0x2000001c

08004944 <__NVIC_SetPriorityGrouping>:
 8004944:	b480      	push	{r7}
 8004946:	b085      	sub	sp, #20
 8004948:	af00      	add	r7, sp, #0
 800494a:	6078      	str	r0, [r7, #4]
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	f003 0307 	and.w	r3, r3, #7
 8004952:	60fb      	str	r3, [r7, #12]
 8004954:	4b0c      	ldr	r3, [pc, #48]	; (8004988 <__NVIC_SetPriorityGrouping+0x44>)
 8004956:	68db      	ldr	r3, [r3, #12]
 8004958:	60bb      	str	r3, [r7, #8]
 800495a:	68ba      	ldr	r2, [r7, #8]
 800495c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004960:	4013      	ands	r3, r2
 8004962:	60bb      	str	r3, [r7, #8]
 8004964:	68fb      	ldr	r3, [r7, #12]
 8004966:	021a      	lsls	r2, r3, #8
 8004968:	68bb      	ldr	r3, [r7, #8]
 800496a:	4313      	orrs	r3, r2
 800496c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004970:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004974:	60bb      	str	r3, [r7, #8]
 8004976:	4a04      	ldr	r2, [pc, #16]	; (8004988 <__NVIC_SetPriorityGrouping+0x44>)
 8004978:	68bb      	ldr	r3, [r7, #8]
 800497a:	60d3      	str	r3, [r2, #12]
 800497c:	bf00      	nop
 800497e:	3714      	adds	r7, #20
 8004980:	46bd      	mov	sp, r7
 8004982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004986:	4770      	bx	lr
 8004988:	e000ed00 	.word	0xe000ed00

0800498c <__NVIC_GetPriorityGrouping>:
 800498c:	b480      	push	{r7}
 800498e:	af00      	add	r7, sp, #0
 8004990:	4b04      	ldr	r3, [pc, #16]	; (80049a4 <__NVIC_GetPriorityGrouping+0x18>)
 8004992:	68db      	ldr	r3, [r3, #12]
 8004994:	0a1b      	lsrs	r3, r3, #8
 8004996:	f003 0307 	and.w	r3, r3, #7
 800499a:	4618      	mov	r0, r3
 800499c:	46bd      	mov	sp, r7
 800499e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049a2:	4770      	bx	lr
 80049a4:	e000ed00 	.word	0xe000ed00

080049a8 <__NVIC_EnableIRQ>:
 80049a8:	b480      	push	{r7}
 80049aa:	b083      	sub	sp, #12
 80049ac:	af00      	add	r7, sp, #0
 80049ae:	4603      	mov	r3, r0
 80049b0:	71fb      	strb	r3, [r7, #7]
 80049b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80049b6:	2b00      	cmp	r3, #0
 80049b8:	db0b      	blt.n	80049d2 <__NVIC_EnableIRQ+0x2a>
 80049ba:	79fb      	ldrb	r3, [r7, #7]
 80049bc:	f003 021f 	and.w	r2, r3, #31
 80049c0:	4907      	ldr	r1, [pc, #28]	; (80049e0 <__NVIC_EnableIRQ+0x38>)
 80049c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80049c6:	095b      	lsrs	r3, r3, #5
 80049c8:	2001      	movs	r0, #1
 80049ca:	fa00 f202 	lsl.w	r2, r0, r2
 80049ce:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80049d2:	bf00      	nop
 80049d4:	370c      	adds	r7, #12
 80049d6:	46bd      	mov	sp, r7
 80049d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049dc:	4770      	bx	lr
 80049de:	bf00      	nop
 80049e0:	e000e100 	.word	0xe000e100

080049e4 <__NVIC_SetPriority>:
 80049e4:	b480      	push	{r7}
 80049e6:	b083      	sub	sp, #12
 80049e8:	af00      	add	r7, sp, #0
 80049ea:	4603      	mov	r3, r0
 80049ec:	6039      	str	r1, [r7, #0]
 80049ee:	71fb      	strb	r3, [r7, #7]
 80049f0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80049f4:	2b00      	cmp	r3, #0
 80049f6:	db0a      	blt.n	8004a0e <__NVIC_SetPriority+0x2a>
 80049f8:	683b      	ldr	r3, [r7, #0]
 80049fa:	b2da      	uxtb	r2, r3
 80049fc:	490c      	ldr	r1, [pc, #48]	; (8004a30 <__NVIC_SetPriority+0x4c>)
 80049fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004a02:	0112      	lsls	r2, r2, #4
 8004a04:	b2d2      	uxtb	r2, r2
 8004a06:	440b      	add	r3, r1
 8004a08:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004a0c:	e00a      	b.n	8004a24 <__NVIC_SetPriority+0x40>
 8004a0e:	683b      	ldr	r3, [r7, #0]
 8004a10:	b2da      	uxtb	r2, r3
 8004a12:	4908      	ldr	r1, [pc, #32]	; (8004a34 <__NVIC_SetPriority+0x50>)
 8004a14:	79fb      	ldrb	r3, [r7, #7]
 8004a16:	f003 030f 	and.w	r3, r3, #15
 8004a1a:	3b04      	subs	r3, #4
 8004a1c:	0112      	lsls	r2, r2, #4
 8004a1e:	b2d2      	uxtb	r2, r2
 8004a20:	440b      	add	r3, r1
 8004a22:	761a      	strb	r2, [r3, #24]
 8004a24:	bf00      	nop
 8004a26:	370c      	adds	r7, #12
 8004a28:	46bd      	mov	sp, r7
 8004a2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a2e:	4770      	bx	lr
 8004a30:	e000e100 	.word	0xe000e100
 8004a34:	e000ed00 	.word	0xe000ed00

08004a38 <NVIC_EncodePriority>:
 8004a38:	b480      	push	{r7}
 8004a3a:	b089      	sub	sp, #36	; 0x24
 8004a3c:	af00      	add	r7, sp, #0
 8004a3e:	60f8      	str	r0, [r7, #12]
 8004a40:	60b9      	str	r1, [r7, #8]
 8004a42:	607a      	str	r2, [r7, #4]
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	f003 0307 	and.w	r3, r3, #7
 8004a4a:	61fb      	str	r3, [r7, #28]
 8004a4c:	69fb      	ldr	r3, [r7, #28]
 8004a4e:	f1c3 0307 	rsb	r3, r3, #7
 8004a52:	2b04      	cmp	r3, #4
 8004a54:	bf28      	it	cs
 8004a56:	2304      	movcs	r3, #4
 8004a58:	61bb      	str	r3, [r7, #24]
 8004a5a:	69fb      	ldr	r3, [r7, #28]
 8004a5c:	3304      	adds	r3, #4
 8004a5e:	2b06      	cmp	r3, #6
 8004a60:	d902      	bls.n	8004a68 <NVIC_EncodePriority+0x30>
 8004a62:	69fb      	ldr	r3, [r7, #28]
 8004a64:	3b03      	subs	r3, #3
 8004a66:	e000      	b.n	8004a6a <NVIC_EncodePriority+0x32>
 8004a68:	2300      	movs	r3, #0
 8004a6a:	617b      	str	r3, [r7, #20]
 8004a6c:	f04f 32ff 	mov.w	r2, #4294967295
 8004a70:	69bb      	ldr	r3, [r7, #24]
 8004a72:	fa02 f303 	lsl.w	r3, r2, r3
 8004a76:	43da      	mvns	r2, r3
 8004a78:	68bb      	ldr	r3, [r7, #8]
 8004a7a:	401a      	ands	r2, r3
 8004a7c:	697b      	ldr	r3, [r7, #20]
 8004a7e:	409a      	lsls	r2, r3
 8004a80:	f04f 31ff 	mov.w	r1, #4294967295
 8004a84:	697b      	ldr	r3, [r7, #20]
 8004a86:	fa01 f303 	lsl.w	r3, r1, r3
 8004a8a:	43d9      	mvns	r1, r3
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	400b      	ands	r3, r1
 8004a90:	4313      	orrs	r3, r2
 8004a92:	4618      	mov	r0, r3
 8004a94:	3724      	adds	r7, #36	; 0x24
 8004a96:	46bd      	mov	sp, r7
 8004a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a9c:	4770      	bx	lr
	...

08004aa0 <SysTick_Config>:
 8004aa0:	b580      	push	{r7, lr}
 8004aa2:	b082      	sub	sp, #8
 8004aa4:	af00      	add	r7, sp, #0
 8004aa6:	6078      	str	r0, [r7, #4]
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	3b01      	subs	r3, #1
 8004aac:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004ab0:	d301      	bcc.n	8004ab6 <SysTick_Config+0x16>
 8004ab2:	2301      	movs	r3, #1
 8004ab4:	e00f      	b.n	8004ad6 <SysTick_Config+0x36>
 8004ab6:	4a0a      	ldr	r2, [pc, #40]	; (8004ae0 <SysTick_Config+0x40>)
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	3b01      	subs	r3, #1
 8004abc:	6053      	str	r3, [r2, #4]
 8004abe:	210f      	movs	r1, #15
 8004ac0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ac4:	f7ff ff8e 	bl	80049e4 <__NVIC_SetPriority>
 8004ac8:	4b05      	ldr	r3, [pc, #20]	; (8004ae0 <SysTick_Config+0x40>)
 8004aca:	2200      	movs	r2, #0
 8004acc:	609a      	str	r2, [r3, #8]
 8004ace:	4b04      	ldr	r3, [pc, #16]	; (8004ae0 <SysTick_Config+0x40>)
 8004ad0:	2207      	movs	r2, #7
 8004ad2:	601a      	str	r2, [r3, #0]
 8004ad4:	2300      	movs	r3, #0
 8004ad6:	4618      	mov	r0, r3
 8004ad8:	3708      	adds	r7, #8
 8004ada:	46bd      	mov	sp, r7
 8004adc:	bd80      	pop	{r7, pc}
 8004ade:	bf00      	nop
 8004ae0:	e000e010 	.word	0xe000e010

08004ae4 <HAL_NVIC_SetPriorityGrouping>:
 8004ae4:	b580      	push	{r7, lr}
 8004ae6:	b082      	sub	sp, #8
 8004ae8:	af00      	add	r7, sp, #0
 8004aea:	6078      	str	r0, [r7, #4]
 8004aec:	6878      	ldr	r0, [r7, #4]
 8004aee:	f7ff ff29 	bl	8004944 <__NVIC_SetPriorityGrouping>
 8004af2:	bf00      	nop
 8004af4:	3708      	adds	r7, #8
 8004af6:	46bd      	mov	sp, r7
 8004af8:	bd80      	pop	{r7, pc}

08004afa <HAL_NVIC_SetPriority>:
 8004afa:	b580      	push	{r7, lr}
 8004afc:	b086      	sub	sp, #24
 8004afe:	af00      	add	r7, sp, #0
 8004b00:	4603      	mov	r3, r0
 8004b02:	60b9      	str	r1, [r7, #8]
 8004b04:	607a      	str	r2, [r7, #4]
 8004b06:	73fb      	strb	r3, [r7, #15]
 8004b08:	2300      	movs	r3, #0
 8004b0a:	617b      	str	r3, [r7, #20]
 8004b0c:	f7ff ff3e 	bl	800498c <__NVIC_GetPriorityGrouping>
 8004b10:	6178      	str	r0, [r7, #20]
 8004b12:	687a      	ldr	r2, [r7, #4]
 8004b14:	68b9      	ldr	r1, [r7, #8]
 8004b16:	6978      	ldr	r0, [r7, #20]
 8004b18:	f7ff ff8e 	bl	8004a38 <NVIC_EncodePriority>
 8004b1c:	4602      	mov	r2, r0
 8004b1e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004b22:	4611      	mov	r1, r2
 8004b24:	4618      	mov	r0, r3
 8004b26:	f7ff ff5d 	bl	80049e4 <__NVIC_SetPriority>
 8004b2a:	bf00      	nop
 8004b2c:	3718      	adds	r7, #24
 8004b2e:	46bd      	mov	sp, r7
 8004b30:	bd80      	pop	{r7, pc}

08004b32 <HAL_NVIC_EnableIRQ>:
 8004b32:	b580      	push	{r7, lr}
 8004b34:	b082      	sub	sp, #8
 8004b36:	af00      	add	r7, sp, #0
 8004b38:	4603      	mov	r3, r0
 8004b3a:	71fb      	strb	r3, [r7, #7]
 8004b3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b40:	4618      	mov	r0, r3
 8004b42:	f7ff ff31 	bl	80049a8 <__NVIC_EnableIRQ>
 8004b46:	bf00      	nop
 8004b48:	3708      	adds	r7, #8
 8004b4a:	46bd      	mov	sp, r7
 8004b4c:	bd80      	pop	{r7, pc}

08004b4e <HAL_SYSTICK_Config>:
 8004b4e:	b580      	push	{r7, lr}
 8004b50:	b082      	sub	sp, #8
 8004b52:	af00      	add	r7, sp, #0
 8004b54:	6078      	str	r0, [r7, #4]
 8004b56:	6878      	ldr	r0, [r7, #4]
 8004b58:	f7ff ffa2 	bl	8004aa0 <SysTick_Config>
 8004b5c:	4603      	mov	r3, r0
 8004b5e:	4618      	mov	r0, r3
 8004b60:	3708      	adds	r7, #8
 8004b62:	46bd      	mov	sp, r7
 8004b64:	bd80      	pop	{r7, pc}

08004b66 <HAL_CRC_Init>:
 8004b66:	b580      	push	{r7, lr}
 8004b68:	b082      	sub	sp, #8
 8004b6a:	af00      	add	r7, sp, #0
 8004b6c:	6078      	str	r0, [r7, #4]
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d101      	bne.n	8004b78 <HAL_CRC_Init+0x12>
 8004b74:	2301      	movs	r3, #1
 8004b76:	e00e      	b.n	8004b96 <HAL_CRC_Init+0x30>
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	795b      	ldrb	r3, [r3, #5]
 8004b7c:	b2db      	uxtb	r3, r3
 8004b7e:	2b00      	cmp	r3, #0
 8004b80:	d105      	bne.n	8004b8e <HAL_CRC_Init+0x28>
 8004b82:	687b      	ldr	r3, [r7, #4]
 8004b84:	2200      	movs	r2, #0
 8004b86:	711a      	strb	r2, [r3, #4]
 8004b88:	6878      	ldr	r0, [r7, #4]
 8004b8a:	f7ff fc81 	bl	8004490 <HAL_CRC_MspInit>
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	2201      	movs	r2, #1
 8004b92:	715a      	strb	r2, [r3, #5]
 8004b94:	2300      	movs	r3, #0
 8004b96:	4618      	mov	r0, r3
 8004b98:	3708      	adds	r7, #8
 8004b9a:	46bd      	mov	sp, r7
 8004b9c:	bd80      	pop	{r7, pc}
	...

08004ba0 <HAL_FLASH_Program>:
 8004ba0:	b580      	push	{r7, lr}
 8004ba2:	b086      	sub	sp, #24
 8004ba4:	af00      	add	r7, sp, #0
 8004ba6:	60f8      	str	r0, [r7, #12]
 8004ba8:	60b9      	str	r1, [r7, #8]
 8004baa:	e9c7 2300 	strd	r2, r3, [r7]
 8004bae:	2301      	movs	r3, #1
 8004bb0:	75fb      	strb	r3, [r7, #23]
 8004bb2:	4b23      	ldr	r3, [pc, #140]	; (8004c40 <HAL_FLASH_Program+0xa0>)
 8004bb4:	7e1b      	ldrb	r3, [r3, #24]
 8004bb6:	2b01      	cmp	r3, #1
 8004bb8:	d101      	bne.n	8004bbe <HAL_FLASH_Program+0x1e>
 8004bba:	2302      	movs	r3, #2
 8004bbc:	e03b      	b.n	8004c36 <HAL_FLASH_Program+0x96>
 8004bbe:	4b20      	ldr	r3, [pc, #128]	; (8004c40 <HAL_FLASH_Program+0xa0>)
 8004bc0:	2201      	movs	r2, #1
 8004bc2:	761a      	strb	r2, [r3, #24]
 8004bc4:	f24c 3050 	movw	r0, #50000	; 0xc350
 8004bc8:	f000 f870 	bl	8004cac <FLASH_WaitForLastOperation>
 8004bcc:	4603      	mov	r3, r0
 8004bce:	75fb      	strb	r3, [r7, #23]
 8004bd0:	7dfb      	ldrb	r3, [r7, #23]
 8004bd2:	2b00      	cmp	r3, #0
 8004bd4:	d12b      	bne.n	8004c2e <HAL_FLASH_Program+0x8e>
 8004bd6:	68fb      	ldr	r3, [r7, #12]
 8004bd8:	2b00      	cmp	r3, #0
 8004bda:	d105      	bne.n	8004be8 <HAL_FLASH_Program+0x48>
 8004bdc:	783b      	ldrb	r3, [r7, #0]
 8004bde:	4619      	mov	r1, r3
 8004be0:	68b8      	ldr	r0, [r7, #8]
 8004be2:	f000 f91b 	bl	8004e1c <FLASH_Program_Byte>
 8004be6:	e016      	b.n	8004c16 <HAL_FLASH_Program+0x76>
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	2b01      	cmp	r3, #1
 8004bec:	d105      	bne.n	8004bfa <HAL_FLASH_Program+0x5a>
 8004bee:	883b      	ldrh	r3, [r7, #0]
 8004bf0:	4619      	mov	r1, r3
 8004bf2:	68b8      	ldr	r0, [r7, #8]
 8004bf4:	f000 f8ee 	bl	8004dd4 <FLASH_Program_HalfWord>
 8004bf8:	e00d      	b.n	8004c16 <HAL_FLASH_Program+0x76>
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	2b02      	cmp	r3, #2
 8004bfe:	d105      	bne.n	8004c0c <HAL_FLASH_Program+0x6c>
 8004c00:	683b      	ldr	r3, [r7, #0]
 8004c02:	4619      	mov	r1, r3
 8004c04:	68b8      	ldr	r0, [r7, #8]
 8004c06:	f000 f8c3 	bl	8004d90 <FLASH_Program_Word>
 8004c0a:	e004      	b.n	8004c16 <HAL_FLASH_Program+0x76>
 8004c0c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004c10:	68b8      	ldr	r0, [r7, #8]
 8004c12:	f000 f88b 	bl	8004d2c <FLASH_Program_DoubleWord>
 8004c16:	f24c 3050 	movw	r0, #50000	; 0xc350
 8004c1a:	f000 f847 	bl	8004cac <FLASH_WaitForLastOperation>
 8004c1e:	4603      	mov	r3, r0
 8004c20:	75fb      	strb	r3, [r7, #23]
 8004c22:	4b08      	ldr	r3, [pc, #32]	; (8004c44 <HAL_FLASH_Program+0xa4>)
 8004c24:	691b      	ldr	r3, [r3, #16]
 8004c26:	4a07      	ldr	r2, [pc, #28]	; (8004c44 <HAL_FLASH_Program+0xa4>)
 8004c28:	f023 0301 	bic.w	r3, r3, #1
 8004c2c:	6113      	str	r3, [r2, #16]
 8004c2e:	4b04      	ldr	r3, [pc, #16]	; (8004c40 <HAL_FLASH_Program+0xa0>)
 8004c30:	2200      	movs	r2, #0
 8004c32:	761a      	strb	r2, [r3, #24]
 8004c34:	7dfb      	ldrb	r3, [r7, #23]
 8004c36:	4618      	mov	r0, r3
 8004c38:	3718      	adds	r7, #24
 8004c3a:	46bd      	mov	sp, r7
 8004c3c:	bd80      	pop	{r7, pc}
 8004c3e:	bf00      	nop
 8004c40:	200006dc 	.word	0x200006dc
 8004c44:	40023c00 	.word	0x40023c00

08004c48 <HAL_FLASH_Unlock>:
 8004c48:	b480      	push	{r7}
 8004c4a:	b083      	sub	sp, #12
 8004c4c:	af00      	add	r7, sp, #0
 8004c4e:	2300      	movs	r3, #0
 8004c50:	71fb      	strb	r3, [r7, #7]
 8004c52:	4b0b      	ldr	r3, [pc, #44]	; (8004c80 <HAL_FLASH_Unlock+0x38>)
 8004c54:	691b      	ldr	r3, [r3, #16]
 8004c56:	2b00      	cmp	r3, #0
 8004c58:	da0b      	bge.n	8004c72 <HAL_FLASH_Unlock+0x2a>
 8004c5a:	4b09      	ldr	r3, [pc, #36]	; (8004c80 <HAL_FLASH_Unlock+0x38>)
 8004c5c:	4a09      	ldr	r2, [pc, #36]	; (8004c84 <HAL_FLASH_Unlock+0x3c>)
 8004c5e:	605a      	str	r2, [r3, #4]
 8004c60:	4b07      	ldr	r3, [pc, #28]	; (8004c80 <HAL_FLASH_Unlock+0x38>)
 8004c62:	4a09      	ldr	r2, [pc, #36]	; (8004c88 <HAL_FLASH_Unlock+0x40>)
 8004c64:	605a      	str	r2, [r3, #4]
 8004c66:	4b06      	ldr	r3, [pc, #24]	; (8004c80 <HAL_FLASH_Unlock+0x38>)
 8004c68:	691b      	ldr	r3, [r3, #16]
 8004c6a:	2b00      	cmp	r3, #0
 8004c6c:	da01      	bge.n	8004c72 <HAL_FLASH_Unlock+0x2a>
 8004c6e:	2301      	movs	r3, #1
 8004c70:	71fb      	strb	r3, [r7, #7]
 8004c72:	79fb      	ldrb	r3, [r7, #7]
 8004c74:	4618      	mov	r0, r3
 8004c76:	370c      	adds	r7, #12
 8004c78:	46bd      	mov	sp, r7
 8004c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c7e:	4770      	bx	lr
 8004c80:	40023c00 	.word	0x40023c00
 8004c84:	45670123 	.word	0x45670123
 8004c88:	cdef89ab 	.word	0xcdef89ab

08004c8c <HAL_FLASH_Lock>:
 8004c8c:	b480      	push	{r7}
 8004c8e:	af00      	add	r7, sp, #0
 8004c90:	4b05      	ldr	r3, [pc, #20]	; (8004ca8 <HAL_FLASH_Lock+0x1c>)
 8004c92:	691b      	ldr	r3, [r3, #16]
 8004c94:	4a04      	ldr	r2, [pc, #16]	; (8004ca8 <HAL_FLASH_Lock+0x1c>)
 8004c96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004c9a:	6113      	str	r3, [r2, #16]
 8004c9c:	2300      	movs	r3, #0
 8004c9e:	4618      	mov	r0, r3
 8004ca0:	46bd      	mov	sp, r7
 8004ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ca6:	4770      	bx	lr
 8004ca8:	40023c00 	.word	0x40023c00

08004cac <FLASH_WaitForLastOperation>:
 8004cac:	b580      	push	{r7, lr}
 8004cae:	b084      	sub	sp, #16
 8004cb0:	af00      	add	r7, sp, #0
 8004cb2:	6078      	str	r0, [r7, #4]
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	60fb      	str	r3, [r7, #12]
 8004cb8:	4b1a      	ldr	r3, [pc, #104]	; (8004d24 <FLASH_WaitForLastOperation+0x78>)
 8004cba:	2200      	movs	r2, #0
 8004cbc:	61da      	str	r2, [r3, #28]
 8004cbe:	f7ff fe11 	bl	80048e4 <HAL_GetTick>
 8004cc2:	60f8      	str	r0, [r7, #12]
 8004cc4:	e010      	b.n	8004ce8 <FLASH_WaitForLastOperation+0x3c>
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ccc:	d00c      	beq.n	8004ce8 <FLASH_WaitForLastOperation+0x3c>
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d007      	beq.n	8004ce4 <FLASH_WaitForLastOperation+0x38>
 8004cd4:	f7ff fe06 	bl	80048e4 <HAL_GetTick>
 8004cd8:	4602      	mov	r2, r0
 8004cda:	68fb      	ldr	r3, [r7, #12]
 8004cdc:	1ad3      	subs	r3, r2, r3
 8004cde:	687a      	ldr	r2, [r7, #4]
 8004ce0:	429a      	cmp	r2, r3
 8004ce2:	d201      	bcs.n	8004ce8 <FLASH_WaitForLastOperation+0x3c>
 8004ce4:	2303      	movs	r3, #3
 8004ce6:	e019      	b.n	8004d1c <FLASH_WaitForLastOperation+0x70>
 8004ce8:	4b0f      	ldr	r3, [pc, #60]	; (8004d28 <FLASH_WaitForLastOperation+0x7c>)
 8004cea:	68db      	ldr	r3, [r3, #12]
 8004cec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004cf0:	2b00      	cmp	r3, #0
 8004cf2:	d1e8      	bne.n	8004cc6 <FLASH_WaitForLastOperation+0x1a>
 8004cf4:	4b0c      	ldr	r3, [pc, #48]	; (8004d28 <FLASH_WaitForLastOperation+0x7c>)
 8004cf6:	68db      	ldr	r3, [r3, #12]
 8004cf8:	f003 0301 	and.w	r3, r3, #1
 8004cfc:	2b00      	cmp	r3, #0
 8004cfe:	d002      	beq.n	8004d06 <FLASH_WaitForLastOperation+0x5a>
 8004d00:	4b09      	ldr	r3, [pc, #36]	; (8004d28 <FLASH_WaitForLastOperation+0x7c>)
 8004d02:	2201      	movs	r2, #1
 8004d04:	60da      	str	r2, [r3, #12]
 8004d06:	4b08      	ldr	r3, [pc, #32]	; (8004d28 <FLASH_WaitForLastOperation+0x7c>)
 8004d08:	68db      	ldr	r3, [r3, #12]
 8004d0a:	f003 03f2 	and.w	r3, r3, #242	; 0xf2
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d003      	beq.n	8004d1a <FLASH_WaitForLastOperation+0x6e>
 8004d12:	f000 f8a5 	bl	8004e60 <FLASH_SetErrorCode>
 8004d16:	2301      	movs	r3, #1
 8004d18:	e000      	b.n	8004d1c <FLASH_WaitForLastOperation+0x70>
 8004d1a:	2300      	movs	r3, #0
 8004d1c:	4618      	mov	r0, r3
 8004d1e:	3710      	adds	r7, #16
 8004d20:	46bd      	mov	sp, r7
 8004d22:	bd80      	pop	{r7, pc}
 8004d24:	200006dc 	.word	0x200006dc
 8004d28:	40023c00 	.word	0x40023c00

08004d2c <FLASH_Program_DoubleWord>:
 8004d2c:	b480      	push	{r7}
 8004d2e:	b085      	sub	sp, #20
 8004d30:	af00      	add	r7, sp, #0
 8004d32:	60f8      	str	r0, [r7, #12]
 8004d34:	e9c7 2300 	strd	r2, r3, [r7]
 8004d38:	4b14      	ldr	r3, [pc, #80]	; (8004d8c <FLASH_Program_DoubleWord+0x60>)
 8004d3a:	691b      	ldr	r3, [r3, #16]
 8004d3c:	4a13      	ldr	r2, [pc, #76]	; (8004d8c <FLASH_Program_DoubleWord+0x60>)
 8004d3e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004d42:	6113      	str	r3, [r2, #16]
 8004d44:	4b11      	ldr	r3, [pc, #68]	; (8004d8c <FLASH_Program_DoubleWord+0x60>)
 8004d46:	691b      	ldr	r3, [r3, #16]
 8004d48:	4a10      	ldr	r2, [pc, #64]	; (8004d8c <FLASH_Program_DoubleWord+0x60>)
 8004d4a:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8004d4e:	6113      	str	r3, [r2, #16]
 8004d50:	4b0e      	ldr	r3, [pc, #56]	; (8004d8c <FLASH_Program_DoubleWord+0x60>)
 8004d52:	691b      	ldr	r3, [r3, #16]
 8004d54:	4a0d      	ldr	r2, [pc, #52]	; (8004d8c <FLASH_Program_DoubleWord+0x60>)
 8004d56:	f043 0301 	orr.w	r3, r3, #1
 8004d5a:	6113      	str	r3, [r2, #16]
 8004d5c:	68fb      	ldr	r3, [r7, #12]
 8004d5e:	683a      	ldr	r2, [r7, #0]
 8004d60:	601a      	str	r2, [r3, #0]
 8004d62:	f3bf 8f6f 	isb	sy
 8004d66:	bf00      	nop
 8004d68:	e9d7 0100 	ldrd	r0, r1, [r7]
 8004d6c:	f04f 0200 	mov.w	r2, #0
 8004d70:	f04f 0300 	mov.w	r3, #0
 8004d74:	000a      	movs	r2, r1
 8004d76:	2300      	movs	r3, #0
 8004d78:	68f9      	ldr	r1, [r7, #12]
 8004d7a:	3104      	adds	r1, #4
 8004d7c:	4613      	mov	r3, r2
 8004d7e:	600b      	str	r3, [r1, #0]
 8004d80:	bf00      	nop
 8004d82:	3714      	adds	r7, #20
 8004d84:	46bd      	mov	sp, r7
 8004d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d8a:	4770      	bx	lr
 8004d8c:	40023c00 	.word	0x40023c00

08004d90 <FLASH_Program_Word>:
 8004d90:	b480      	push	{r7}
 8004d92:	b083      	sub	sp, #12
 8004d94:	af00      	add	r7, sp, #0
 8004d96:	6078      	str	r0, [r7, #4]
 8004d98:	6039      	str	r1, [r7, #0]
 8004d9a:	4b0d      	ldr	r3, [pc, #52]	; (8004dd0 <FLASH_Program_Word+0x40>)
 8004d9c:	691b      	ldr	r3, [r3, #16]
 8004d9e:	4a0c      	ldr	r2, [pc, #48]	; (8004dd0 <FLASH_Program_Word+0x40>)
 8004da0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004da4:	6113      	str	r3, [r2, #16]
 8004da6:	4b0a      	ldr	r3, [pc, #40]	; (8004dd0 <FLASH_Program_Word+0x40>)
 8004da8:	691b      	ldr	r3, [r3, #16]
 8004daa:	4a09      	ldr	r2, [pc, #36]	; (8004dd0 <FLASH_Program_Word+0x40>)
 8004dac:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004db0:	6113      	str	r3, [r2, #16]
 8004db2:	4b07      	ldr	r3, [pc, #28]	; (8004dd0 <FLASH_Program_Word+0x40>)
 8004db4:	691b      	ldr	r3, [r3, #16]
 8004db6:	4a06      	ldr	r2, [pc, #24]	; (8004dd0 <FLASH_Program_Word+0x40>)
 8004db8:	f043 0301 	orr.w	r3, r3, #1
 8004dbc:	6113      	str	r3, [r2, #16]
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	683a      	ldr	r2, [r7, #0]
 8004dc2:	601a      	str	r2, [r3, #0]
 8004dc4:	bf00      	nop
 8004dc6:	370c      	adds	r7, #12
 8004dc8:	46bd      	mov	sp, r7
 8004dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dce:	4770      	bx	lr
 8004dd0:	40023c00 	.word	0x40023c00

08004dd4 <FLASH_Program_HalfWord>:
 8004dd4:	b480      	push	{r7}
 8004dd6:	b083      	sub	sp, #12
 8004dd8:	af00      	add	r7, sp, #0
 8004dda:	6078      	str	r0, [r7, #4]
 8004ddc:	460b      	mov	r3, r1
 8004dde:	807b      	strh	r3, [r7, #2]
 8004de0:	4b0d      	ldr	r3, [pc, #52]	; (8004e18 <FLASH_Program_HalfWord+0x44>)
 8004de2:	691b      	ldr	r3, [r3, #16]
 8004de4:	4a0c      	ldr	r2, [pc, #48]	; (8004e18 <FLASH_Program_HalfWord+0x44>)
 8004de6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004dea:	6113      	str	r3, [r2, #16]
 8004dec:	4b0a      	ldr	r3, [pc, #40]	; (8004e18 <FLASH_Program_HalfWord+0x44>)
 8004dee:	691b      	ldr	r3, [r3, #16]
 8004df0:	4a09      	ldr	r2, [pc, #36]	; (8004e18 <FLASH_Program_HalfWord+0x44>)
 8004df2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004df6:	6113      	str	r3, [r2, #16]
 8004df8:	4b07      	ldr	r3, [pc, #28]	; (8004e18 <FLASH_Program_HalfWord+0x44>)
 8004dfa:	691b      	ldr	r3, [r3, #16]
 8004dfc:	4a06      	ldr	r2, [pc, #24]	; (8004e18 <FLASH_Program_HalfWord+0x44>)
 8004dfe:	f043 0301 	orr.w	r3, r3, #1
 8004e02:	6113      	str	r3, [r2, #16]
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	887a      	ldrh	r2, [r7, #2]
 8004e08:	801a      	strh	r2, [r3, #0]
 8004e0a:	bf00      	nop
 8004e0c:	370c      	adds	r7, #12
 8004e0e:	46bd      	mov	sp, r7
 8004e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e14:	4770      	bx	lr
 8004e16:	bf00      	nop
 8004e18:	40023c00 	.word	0x40023c00

08004e1c <FLASH_Program_Byte>:
 8004e1c:	b480      	push	{r7}
 8004e1e:	b083      	sub	sp, #12
 8004e20:	af00      	add	r7, sp, #0
 8004e22:	6078      	str	r0, [r7, #4]
 8004e24:	460b      	mov	r3, r1
 8004e26:	70fb      	strb	r3, [r7, #3]
 8004e28:	4b0c      	ldr	r3, [pc, #48]	; (8004e5c <FLASH_Program_Byte+0x40>)
 8004e2a:	691b      	ldr	r3, [r3, #16]
 8004e2c:	4a0b      	ldr	r2, [pc, #44]	; (8004e5c <FLASH_Program_Byte+0x40>)
 8004e2e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004e32:	6113      	str	r3, [r2, #16]
 8004e34:	4b09      	ldr	r3, [pc, #36]	; (8004e5c <FLASH_Program_Byte+0x40>)
 8004e36:	4a09      	ldr	r2, [pc, #36]	; (8004e5c <FLASH_Program_Byte+0x40>)
 8004e38:	691b      	ldr	r3, [r3, #16]
 8004e3a:	6113      	str	r3, [r2, #16]
 8004e3c:	4b07      	ldr	r3, [pc, #28]	; (8004e5c <FLASH_Program_Byte+0x40>)
 8004e3e:	691b      	ldr	r3, [r3, #16]
 8004e40:	4a06      	ldr	r2, [pc, #24]	; (8004e5c <FLASH_Program_Byte+0x40>)
 8004e42:	f043 0301 	orr.w	r3, r3, #1
 8004e46:	6113      	str	r3, [r2, #16]
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	78fa      	ldrb	r2, [r7, #3]
 8004e4c:	701a      	strb	r2, [r3, #0]
 8004e4e:	bf00      	nop
 8004e50:	370c      	adds	r7, #12
 8004e52:	46bd      	mov	sp, r7
 8004e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e58:	4770      	bx	lr
 8004e5a:	bf00      	nop
 8004e5c:	40023c00 	.word	0x40023c00

08004e60 <FLASH_SetErrorCode>:
 8004e60:	b480      	push	{r7}
 8004e62:	af00      	add	r7, sp, #0
 8004e64:	4b27      	ldr	r3, [pc, #156]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004e66:	68db      	ldr	r3, [r3, #12]
 8004e68:	f003 0310 	and.w	r3, r3, #16
 8004e6c:	2b00      	cmp	r3, #0
 8004e6e:	d008      	beq.n	8004e82 <FLASH_SetErrorCode+0x22>
 8004e70:	4b25      	ldr	r3, [pc, #148]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004e72:	69db      	ldr	r3, [r3, #28]
 8004e74:	f043 0310 	orr.w	r3, r3, #16
 8004e78:	4a23      	ldr	r2, [pc, #140]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004e7a:	61d3      	str	r3, [r2, #28]
 8004e7c:	4b21      	ldr	r3, [pc, #132]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004e7e:	2210      	movs	r2, #16
 8004e80:	60da      	str	r2, [r3, #12]
 8004e82:	4b20      	ldr	r3, [pc, #128]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004e84:	68db      	ldr	r3, [r3, #12]
 8004e86:	f003 0320 	and.w	r3, r3, #32
 8004e8a:	2b00      	cmp	r3, #0
 8004e8c:	d008      	beq.n	8004ea0 <FLASH_SetErrorCode+0x40>
 8004e8e:	4b1e      	ldr	r3, [pc, #120]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004e90:	69db      	ldr	r3, [r3, #28]
 8004e92:	f043 0308 	orr.w	r3, r3, #8
 8004e96:	4a1c      	ldr	r2, [pc, #112]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004e98:	61d3      	str	r3, [r2, #28]
 8004e9a:	4b1a      	ldr	r3, [pc, #104]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004e9c:	2220      	movs	r2, #32
 8004e9e:	60da      	str	r2, [r3, #12]
 8004ea0:	4b18      	ldr	r3, [pc, #96]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004ea2:	68db      	ldr	r3, [r3, #12]
 8004ea4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ea8:	2b00      	cmp	r3, #0
 8004eaa:	d008      	beq.n	8004ebe <FLASH_SetErrorCode+0x5e>
 8004eac:	4b16      	ldr	r3, [pc, #88]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004eae:	69db      	ldr	r3, [r3, #28]
 8004eb0:	f043 0304 	orr.w	r3, r3, #4
 8004eb4:	4a14      	ldr	r2, [pc, #80]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004eb6:	61d3      	str	r3, [r2, #28]
 8004eb8:	4b12      	ldr	r3, [pc, #72]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004eba:	2240      	movs	r2, #64	; 0x40
 8004ebc:	60da      	str	r2, [r3, #12]
 8004ebe:	4b11      	ldr	r3, [pc, #68]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004ec0:	68db      	ldr	r3, [r3, #12]
 8004ec2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d008      	beq.n	8004edc <FLASH_SetErrorCode+0x7c>
 8004eca:	4b0f      	ldr	r3, [pc, #60]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004ecc:	69db      	ldr	r3, [r3, #28]
 8004ece:	f043 0302 	orr.w	r3, r3, #2
 8004ed2:	4a0d      	ldr	r2, [pc, #52]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004ed4:	61d3      	str	r3, [r2, #28]
 8004ed6:	4b0b      	ldr	r3, [pc, #44]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004ed8:	2280      	movs	r2, #128	; 0x80
 8004eda:	60da      	str	r2, [r3, #12]
 8004edc:	4b09      	ldr	r3, [pc, #36]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004ede:	68db      	ldr	r3, [r3, #12]
 8004ee0:	f003 0302 	and.w	r3, r3, #2
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	d008      	beq.n	8004efa <FLASH_SetErrorCode+0x9a>
 8004ee8:	4b07      	ldr	r3, [pc, #28]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004eea:	69db      	ldr	r3, [r3, #28]
 8004eec:	f043 0320 	orr.w	r3, r3, #32
 8004ef0:	4a05      	ldr	r2, [pc, #20]	; (8004f08 <FLASH_SetErrorCode+0xa8>)
 8004ef2:	61d3      	str	r3, [r2, #28]
 8004ef4:	4b03      	ldr	r3, [pc, #12]	; (8004f04 <FLASH_SetErrorCode+0xa4>)
 8004ef6:	2202      	movs	r2, #2
 8004ef8:	60da      	str	r2, [r3, #12]
 8004efa:	bf00      	nop
 8004efc:	46bd      	mov	sp, r7
 8004efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f02:	4770      	bx	lr
 8004f04:	40023c00 	.word	0x40023c00
 8004f08:	200006dc 	.word	0x200006dc

08004f0c <FLASH_Erase_Sector>:
 8004f0c:	b480      	push	{r7}
 8004f0e:	b085      	sub	sp, #20
 8004f10:	af00      	add	r7, sp, #0
 8004f12:	6078      	str	r0, [r7, #4]
 8004f14:	460b      	mov	r3, r1
 8004f16:	70fb      	strb	r3, [r7, #3]
 8004f18:	2300      	movs	r3, #0
 8004f1a:	60fb      	str	r3, [r7, #12]
 8004f1c:	78fb      	ldrb	r3, [r7, #3]
 8004f1e:	2b00      	cmp	r3, #0
 8004f20:	d102      	bne.n	8004f28 <FLASH_Erase_Sector+0x1c>
 8004f22:	2300      	movs	r3, #0
 8004f24:	60fb      	str	r3, [r7, #12]
 8004f26:	e010      	b.n	8004f4a <FLASH_Erase_Sector+0x3e>
 8004f28:	78fb      	ldrb	r3, [r7, #3]
 8004f2a:	2b01      	cmp	r3, #1
 8004f2c:	d103      	bne.n	8004f36 <FLASH_Erase_Sector+0x2a>
 8004f2e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f32:	60fb      	str	r3, [r7, #12]
 8004f34:	e009      	b.n	8004f4a <FLASH_Erase_Sector+0x3e>
 8004f36:	78fb      	ldrb	r3, [r7, #3]
 8004f38:	2b02      	cmp	r3, #2
 8004f3a:	d103      	bne.n	8004f44 <FLASH_Erase_Sector+0x38>
 8004f3c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004f40:	60fb      	str	r3, [r7, #12]
 8004f42:	e002      	b.n	8004f4a <FLASH_Erase_Sector+0x3e>
 8004f44:	f44f 7340 	mov.w	r3, #768	; 0x300
 8004f48:	60fb      	str	r3, [r7, #12]
 8004f4a:	4b13      	ldr	r3, [pc, #76]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f4c:	691b      	ldr	r3, [r3, #16]
 8004f4e:	4a12      	ldr	r2, [pc, #72]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f50:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004f54:	6113      	str	r3, [r2, #16]
 8004f56:	4b10      	ldr	r3, [pc, #64]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f58:	691a      	ldr	r2, [r3, #16]
 8004f5a:	490f      	ldr	r1, [pc, #60]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f5c:	68fb      	ldr	r3, [r7, #12]
 8004f5e:	4313      	orrs	r3, r2
 8004f60:	610b      	str	r3, [r1, #16]
 8004f62:	4b0d      	ldr	r3, [pc, #52]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f64:	691b      	ldr	r3, [r3, #16]
 8004f66:	4a0c      	ldr	r2, [pc, #48]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f68:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8004f6c:	6113      	str	r3, [r2, #16]
 8004f6e:	4b0a      	ldr	r3, [pc, #40]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f70:	691a      	ldr	r2, [r3, #16]
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	00db      	lsls	r3, r3, #3
 8004f76:	4313      	orrs	r3, r2
 8004f78:	4a07      	ldr	r2, [pc, #28]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f7a:	f043 0302 	orr.w	r3, r3, #2
 8004f7e:	6113      	str	r3, [r2, #16]
 8004f80:	4b05      	ldr	r3, [pc, #20]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f82:	691b      	ldr	r3, [r3, #16]
 8004f84:	4a04      	ldr	r2, [pc, #16]	; (8004f98 <FLASH_Erase_Sector+0x8c>)
 8004f86:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004f8a:	6113      	str	r3, [r2, #16]
 8004f8c:	bf00      	nop
 8004f8e:	3714      	adds	r7, #20
 8004f90:	46bd      	mov	sp, r7
 8004f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f96:	4770      	bx	lr
 8004f98:	40023c00 	.word	0x40023c00

08004f9c <HAL_GPIO_Init>:
 8004f9c:	b480      	push	{r7}
 8004f9e:	b089      	sub	sp, #36	; 0x24
 8004fa0:	af00      	add	r7, sp, #0
 8004fa2:	6078      	str	r0, [r7, #4]
 8004fa4:	6039      	str	r1, [r7, #0]
 8004fa6:	2300      	movs	r3, #0
 8004fa8:	617b      	str	r3, [r7, #20]
 8004faa:	2300      	movs	r3, #0
 8004fac:	613b      	str	r3, [r7, #16]
 8004fae:	2300      	movs	r3, #0
 8004fb0:	61bb      	str	r3, [r7, #24]
 8004fb2:	2300      	movs	r3, #0
 8004fb4:	61fb      	str	r3, [r7, #28]
 8004fb6:	e16b      	b.n	8005290 <HAL_GPIO_Init+0x2f4>
 8004fb8:	2201      	movs	r2, #1
 8004fba:	69fb      	ldr	r3, [r7, #28]
 8004fbc:	fa02 f303 	lsl.w	r3, r2, r3
 8004fc0:	617b      	str	r3, [r7, #20]
 8004fc2:	683b      	ldr	r3, [r7, #0]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	697a      	ldr	r2, [r7, #20]
 8004fc8:	4013      	ands	r3, r2
 8004fca:	613b      	str	r3, [r7, #16]
 8004fcc:	693a      	ldr	r2, [r7, #16]
 8004fce:	697b      	ldr	r3, [r7, #20]
 8004fd0:	429a      	cmp	r2, r3
 8004fd2:	f040 815a 	bne.w	800528a <HAL_GPIO_Init+0x2ee>
 8004fd6:	683b      	ldr	r3, [r7, #0]
 8004fd8:	685b      	ldr	r3, [r3, #4]
 8004fda:	f003 0303 	and.w	r3, r3, #3
 8004fde:	2b01      	cmp	r3, #1
 8004fe0:	d005      	beq.n	8004fee <HAL_GPIO_Init+0x52>
 8004fe2:	683b      	ldr	r3, [r7, #0]
 8004fe4:	685b      	ldr	r3, [r3, #4]
 8004fe6:	f003 0303 	and.w	r3, r3, #3
 8004fea:	2b02      	cmp	r3, #2
 8004fec:	d130      	bne.n	8005050 <HAL_GPIO_Init+0xb4>
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	689b      	ldr	r3, [r3, #8]
 8004ff2:	61bb      	str	r3, [r7, #24]
 8004ff4:	69fb      	ldr	r3, [r7, #28]
 8004ff6:	005b      	lsls	r3, r3, #1
 8004ff8:	2203      	movs	r2, #3
 8004ffa:	fa02 f303 	lsl.w	r3, r2, r3
 8004ffe:	43db      	mvns	r3, r3
 8005000:	69ba      	ldr	r2, [r7, #24]
 8005002:	4013      	ands	r3, r2
 8005004:	61bb      	str	r3, [r7, #24]
 8005006:	683b      	ldr	r3, [r7, #0]
 8005008:	68da      	ldr	r2, [r3, #12]
 800500a:	69fb      	ldr	r3, [r7, #28]
 800500c:	005b      	lsls	r3, r3, #1
 800500e:	fa02 f303 	lsl.w	r3, r2, r3
 8005012:	69ba      	ldr	r2, [r7, #24]
 8005014:	4313      	orrs	r3, r2
 8005016:	61bb      	str	r3, [r7, #24]
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	69ba      	ldr	r2, [r7, #24]
 800501c:	609a      	str	r2, [r3, #8]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	685b      	ldr	r3, [r3, #4]
 8005022:	61bb      	str	r3, [r7, #24]
 8005024:	2201      	movs	r2, #1
 8005026:	69fb      	ldr	r3, [r7, #28]
 8005028:	fa02 f303 	lsl.w	r3, r2, r3
 800502c:	43db      	mvns	r3, r3
 800502e:	69ba      	ldr	r2, [r7, #24]
 8005030:	4013      	ands	r3, r2
 8005032:	61bb      	str	r3, [r7, #24]
 8005034:	683b      	ldr	r3, [r7, #0]
 8005036:	685b      	ldr	r3, [r3, #4]
 8005038:	091b      	lsrs	r3, r3, #4
 800503a:	f003 0201 	and.w	r2, r3, #1
 800503e:	69fb      	ldr	r3, [r7, #28]
 8005040:	fa02 f303 	lsl.w	r3, r2, r3
 8005044:	69ba      	ldr	r2, [r7, #24]
 8005046:	4313      	orrs	r3, r2
 8005048:	61bb      	str	r3, [r7, #24]
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	69ba      	ldr	r2, [r7, #24]
 800504e:	605a      	str	r2, [r3, #4]
 8005050:	683b      	ldr	r3, [r7, #0]
 8005052:	685b      	ldr	r3, [r3, #4]
 8005054:	f003 0303 	and.w	r3, r3, #3
 8005058:	2b03      	cmp	r3, #3
 800505a:	d017      	beq.n	800508c <HAL_GPIO_Init+0xf0>
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	68db      	ldr	r3, [r3, #12]
 8005060:	61bb      	str	r3, [r7, #24]
 8005062:	69fb      	ldr	r3, [r7, #28]
 8005064:	005b      	lsls	r3, r3, #1
 8005066:	2203      	movs	r2, #3
 8005068:	fa02 f303 	lsl.w	r3, r2, r3
 800506c:	43db      	mvns	r3, r3
 800506e:	69ba      	ldr	r2, [r7, #24]
 8005070:	4013      	ands	r3, r2
 8005072:	61bb      	str	r3, [r7, #24]
 8005074:	683b      	ldr	r3, [r7, #0]
 8005076:	689a      	ldr	r2, [r3, #8]
 8005078:	69fb      	ldr	r3, [r7, #28]
 800507a:	005b      	lsls	r3, r3, #1
 800507c:	fa02 f303 	lsl.w	r3, r2, r3
 8005080:	69ba      	ldr	r2, [r7, #24]
 8005082:	4313      	orrs	r3, r2
 8005084:	61bb      	str	r3, [r7, #24]
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	69ba      	ldr	r2, [r7, #24]
 800508a:	60da      	str	r2, [r3, #12]
 800508c:	683b      	ldr	r3, [r7, #0]
 800508e:	685b      	ldr	r3, [r3, #4]
 8005090:	f003 0303 	and.w	r3, r3, #3
 8005094:	2b02      	cmp	r3, #2
 8005096:	d123      	bne.n	80050e0 <HAL_GPIO_Init+0x144>
 8005098:	69fb      	ldr	r3, [r7, #28]
 800509a:	08da      	lsrs	r2, r3, #3
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	3208      	adds	r2, #8
 80050a0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80050a4:	61bb      	str	r3, [r7, #24]
 80050a6:	69fb      	ldr	r3, [r7, #28]
 80050a8:	f003 0307 	and.w	r3, r3, #7
 80050ac:	009b      	lsls	r3, r3, #2
 80050ae:	220f      	movs	r2, #15
 80050b0:	fa02 f303 	lsl.w	r3, r2, r3
 80050b4:	43db      	mvns	r3, r3
 80050b6:	69ba      	ldr	r2, [r7, #24]
 80050b8:	4013      	ands	r3, r2
 80050ba:	61bb      	str	r3, [r7, #24]
 80050bc:	683b      	ldr	r3, [r7, #0]
 80050be:	691a      	ldr	r2, [r3, #16]
 80050c0:	69fb      	ldr	r3, [r7, #28]
 80050c2:	f003 0307 	and.w	r3, r3, #7
 80050c6:	009b      	lsls	r3, r3, #2
 80050c8:	fa02 f303 	lsl.w	r3, r2, r3
 80050cc:	69ba      	ldr	r2, [r7, #24]
 80050ce:	4313      	orrs	r3, r2
 80050d0:	61bb      	str	r3, [r7, #24]
 80050d2:	69fb      	ldr	r3, [r7, #28]
 80050d4:	08da      	lsrs	r2, r3, #3
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	3208      	adds	r2, #8
 80050da:	69b9      	ldr	r1, [r7, #24]
 80050dc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	61bb      	str	r3, [r7, #24]
 80050e6:	69fb      	ldr	r3, [r7, #28]
 80050e8:	005b      	lsls	r3, r3, #1
 80050ea:	2203      	movs	r2, #3
 80050ec:	fa02 f303 	lsl.w	r3, r2, r3
 80050f0:	43db      	mvns	r3, r3
 80050f2:	69ba      	ldr	r2, [r7, #24]
 80050f4:	4013      	ands	r3, r2
 80050f6:	61bb      	str	r3, [r7, #24]
 80050f8:	683b      	ldr	r3, [r7, #0]
 80050fa:	685b      	ldr	r3, [r3, #4]
 80050fc:	f003 0203 	and.w	r2, r3, #3
 8005100:	69fb      	ldr	r3, [r7, #28]
 8005102:	005b      	lsls	r3, r3, #1
 8005104:	fa02 f303 	lsl.w	r3, r2, r3
 8005108:	69ba      	ldr	r2, [r7, #24]
 800510a:	4313      	orrs	r3, r2
 800510c:	61bb      	str	r3, [r7, #24]
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	69ba      	ldr	r2, [r7, #24]
 8005112:	601a      	str	r2, [r3, #0]
 8005114:	683b      	ldr	r3, [r7, #0]
 8005116:	685b      	ldr	r3, [r3, #4]
 8005118:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800511c:	2b00      	cmp	r3, #0
 800511e:	f000 80b4 	beq.w	800528a <HAL_GPIO_Init+0x2ee>
 8005122:	2300      	movs	r3, #0
 8005124:	60fb      	str	r3, [r7, #12]
 8005126:	4b60      	ldr	r3, [pc, #384]	; (80052a8 <HAL_GPIO_Init+0x30c>)
 8005128:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800512a:	4a5f      	ldr	r2, [pc, #380]	; (80052a8 <HAL_GPIO_Init+0x30c>)
 800512c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005130:	6453      	str	r3, [r2, #68]	; 0x44
 8005132:	4b5d      	ldr	r3, [pc, #372]	; (80052a8 <HAL_GPIO_Init+0x30c>)
 8005134:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005136:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800513a:	60fb      	str	r3, [r7, #12]
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	4a5b      	ldr	r2, [pc, #364]	; (80052ac <HAL_GPIO_Init+0x310>)
 8005140:	69fb      	ldr	r3, [r7, #28]
 8005142:	089b      	lsrs	r3, r3, #2
 8005144:	3302      	adds	r3, #2
 8005146:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800514a:	61bb      	str	r3, [r7, #24]
 800514c:	69fb      	ldr	r3, [r7, #28]
 800514e:	f003 0303 	and.w	r3, r3, #3
 8005152:	009b      	lsls	r3, r3, #2
 8005154:	220f      	movs	r2, #15
 8005156:	fa02 f303 	lsl.w	r3, r2, r3
 800515a:	43db      	mvns	r3, r3
 800515c:	69ba      	ldr	r2, [r7, #24]
 800515e:	4013      	ands	r3, r2
 8005160:	61bb      	str	r3, [r7, #24]
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	4a52      	ldr	r2, [pc, #328]	; (80052b0 <HAL_GPIO_Init+0x314>)
 8005166:	4293      	cmp	r3, r2
 8005168:	d02b      	beq.n	80051c2 <HAL_GPIO_Init+0x226>
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	4a51      	ldr	r2, [pc, #324]	; (80052b4 <HAL_GPIO_Init+0x318>)
 800516e:	4293      	cmp	r3, r2
 8005170:	d025      	beq.n	80051be <HAL_GPIO_Init+0x222>
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	4a50      	ldr	r2, [pc, #320]	; (80052b8 <HAL_GPIO_Init+0x31c>)
 8005176:	4293      	cmp	r3, r2
 8005178:	d01f      	beq.n	80051ba <HAL_GPIO_Init+0x21e>
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	4a4f      	ldr	r2, [pc, #316]	; (80052bc <HAL_GPIO_Init+0x320>)
 800517e:	4293      	cmp	r3, r2
 8005180:	d019      	beq.n	80051b6 <HAL_GPIO_Init+0x21a>
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	4a4e      	ldr	r2, [pc, #312]	; (80052c0 <HAL_GPIO_Init+0x324>)
 8005186:	4293      	cmp	r3, r2
 8005188:	d013      	beq.n	80051b2 <HAL_GPIO_Init+0x216>
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	4a4d      	ldr	r2, [pc, #308]	; (80052c4 <HAL_GPIO_Init+0x328>)
 800518e:	4293      	cmp	r3, r2
 8005190:	d00d      	beq.n	80051ae <HAL_GPIO_Init+0x212>
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	4a4c      	ldr	r2, [pc, #304]	; (80052c8 <HAL_GPIO_Init+0x32c>)
 8005196:	4293      	cmp	r3, r2
 8005198:	d007      	beq.n	80051aa <HAL_GPIO_Init+0x20e>
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	4a4b      	ldr	r2, [pc, #300]	; (80052cc <HAL_GPIO_Init+0x330>)
 800519e:	4293      	cmp	r3, r2
 80051a0:	d101      	bne.n	80051a6 <HAL_GPIO_Init+0x20a>
 80051a2:	2307      	movs	r3, #7
 80051a4:	e00e      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051a6:	2308      	movs	r3, #8
 80051a8:	e00c      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051aa:	2306      	movs	r3, #6
 80051ac:	e00a      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051ae:	2305      	movs	r3, #5
 80051b0:	e008      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051b2:	2304      	movs	r3, #4
 80051b4:	e006      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051b6:	2303      	movs	r3, #3
 80051b8:	e004      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051ba:	2302      	movs	r3, #2
 80051bc:	e002      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051be:	2301      	movs	r3, #1
 80051c0:	e000      	b.n	80051c4 <HAL_GPIO_Init+0x228>
 80051c2:	2300      	movs	r3, #0
 80051c4:	69fa      	ldr	r2, [r7, #28]
 80051c6:	f002 0203 	and.w	r2, r2, #3
 80051ca:	0092      	lsls	r2, r2, #2
 80051cc:	4093      	lsls	r3, r2
 80051ce:	69ba      	ldr	r2, [r7, #24]
 80051d0:	4313      	orrs	r3, r2
 80051d2:	61bb      	str	r3, [r7, #24]
 80051d4:	4935      	ldr	r1, [pc, #212]	; (80052ac <HAL_GPIO_Init+0x310>)
 80051d6:	69fb      	ldr	r3, [r7, #28]
 80051d8:	089b      	lsrs	r3, r3, #2
 80051da:	3302      	adds	r3, #2
 80051dc:	69ba      	ldr	r2, [r7, #24]
 80051de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80051e2:	4b3b      	ldr	r3, [pc, #236]	; (80052d0 <HAL_GPIO_Init+0x334>)
 80051e4:	689b      	ldr	r3, [r3, #8]
 80051e6:	61bb      	str	r3, [r7, #24]
 80051e8:	693b      	ldr	r3, [r7, #16]
 80051ea:	43db      	mvns	r3, r3
 80051ec:	69ba      	ldr	r2, [r7, #24]
 80051ee:	4013      	ands	r3, r2
 80051f0:	61bb      	str	r3, [r7, #24]
 80051f2:	683b      	ldr	r3, [r7, #0]
 80051f4:	685b      	ldr	r3, [r3, #4]
 80051f6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80051fa:	2b00      	cmp	r3, #0
 80051fc:	d003      	beq.n	8005206 <HAL_GPIO_Init+0x26a>
 80051fe:	69ba      	ldr	r2, [r7, #24]
 8005200:	693b      	ldr	r3, [r7, #16]
 8005202:	4313      	orrs	r3, r2
 8005204:	61bb      	str	r3, [r7, #24]
 8005206:	4a32      	ldr	r2, [pc, #200]	; (80052d0 <HAL_GPIO_Init+0x334>)
 8005208:	69bb      	ldr	r3, [r7, #24]
 800520a:	6093      	str	r3, [r2, #8]
 800520c:	4b30      	ldr	r3, [pc, #192]	; (80052d0 <HAL_GPIO_Init+0x334>)
 800520e:	68db      	ldr	r3, [r3, #12]
 8005210:	61bb      	str	r3, [r7, #24]
 8005212:	693b      	ldr	r3, [r7, #16]
 8005214:	43db      	mvns	r3, r3
 8005216:	69ba      	ldr	r2, [r7, #24]
 8005218:	4013      	ands	r3, r2
 800521a:	61bb      	str	r3, [r7, #24]
 800521c:	683b      	ldr	r3, [r7, #0]
 800521e:	685b      	ldr	r3, [r3, #4]
 8005220:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005224:	2b00      	cmp	r3, #0
 8005226:	d003      	beq.n	8005230 <HAL_GPIO_Init+0x294>
 8005228:	69ba      	ldr	r2, [r7, #24]
 800522a:	693b      	ldr	r3, [r7, #16]
 800522c:	4313      	orrs	r3, r2
 800522e:	61bb      	str	r3, [r7, #24]
 8005230:	4a27      	ldr	r2, [pc, #156]	; (80052d0 <HAL_GPIO_Init+0x334>)
 8005232:	69bb      	ldr	r3, [r7, #24]
 8005234:	60d3      	str	r3, [r2, #12]
 8005236:	4b26      	ldr	r3, [pc, #152]	; (80052d0 <HAL_GPIO_Init+0x334>)
 8005238:	685b      	ldr	r3, [r3, #4]
 800523a:	61bb      	str	r3, [r7, #24]
 800523c:	693b      	ldr	r3, [r7, #16]
 800523e:	43db      	mvns	r3, r3
 8005240:	69ba      	ldr	r2, [r7, #24]
 8005242:	4013      	ands	r3, r2
 8005244:	61bb      	str	r3, [r7, #24]
 8005246:	683b      	ldr	r3, [r7, #0]
 8005248:	685b      	ldr	r3, [r3, #4]
 800524a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800524e:	2b00      	cmp	r3, #0
 8005250:	d003      	beq.n	800525a <HAL_GPIO_Init+0x2be>
 8005252:	69ba      	ldr	r2, [r7, #24]
 8005254:	693b      	ldr	r3, [r7, #16]
 8005256:	4313      	orrs	r3, r2
 8005258:	61bb      	str	r3, [r7, #24]
 800525a:	4a1d      	ldr	r2, [pc, #116]	; (80052d0 <HAL_GPIO_Init+0x334>)
 800525c:	69bb      	ldr	r3, [r7, #24]
 800525e:	6053      	str	r3, [r2, #4]
 8005260:	4b1b      	ldr	r3, [pc, #108]	; (80052d0 <HAL_GPIO_Init+0x334>)
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	61bb      	str	r3, [r7, #24]
 8005266:	693b      	ldr	r3, [r7, #16]
 8005268:	43db      	mvns	r3, r3
 800526a:	69ba      	ldr	r2, [r7, #24]
 800526c:	4013      	ands	r3, r2
 800526e:	61bb      	str	r3, [r7, #24]
 8005270:	683b      	ldr	r3, [r7, #0]
 8005272:	685b      	ldr	r3, [r3, #4]
 8005274:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005278:	2b00      	cmp	r3, #0
 800527a:	d003      	beq.n	8005284 <HAL_GPIO_Init+0x2e8>
 800527c:	69ba      	ldr	r2, [r7, #24]
 800527e:	693b      	ldr	r3, [r7, #16]
 8005280:	4313      	orrs	r3, r2
 8005282:	61bb      	str	r3, [r7, #24]
 8005284:	4a12      	ldr	r2, [pc, #72]	; (80052d0 <HAL_GPIO_Init+0x334>)
 8005286:	69bb      	ldr	r3, [r7, #24]
 8005288:	6013      	str	r3, [r2, #0]
 800528a:	69fb      	ldr	r3, [r7, #28]
 800528c:	3301      	adds	r3, #1
 800528e:	61fb      	str	r3, [r7, #28]
 8005290:	69fb      	ldr	r3, [r7, #28]
 8005292:	2b0f      	cmp	r3, #15
 8005294:	f67f ae90 	bls.w	8004fb8 <HAL_GPIO_Init+0x1c>
 8005298:	bf00      	nop
 800529a:	bf00      	nop
 800529c:	3724      	adds	r7, #36	; 0x24
 800529e:	46bd      	mov	sp, r7
 80052a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052a4:	4770      	bx	lr
 80052a6:	bf00      	nop
 80052a8:	40023800 	.word	0x40023800
 80052ac:	40013800 	.word	0x40013800
 80052b0:	40020000 	.word	0x40020000
 80052b4:	40020400 	.word	0x40020400
 80052b8:	40020800 	.word	0x40020800
 80052bc:	40020c00 	.word	0x40020c00
 80052c0:	40021000 	.word	0x40021000
 80052c4:	40021400 	.word	0x40021400
 80052c8:	40021800 	.word	0x40021800
 80052cc:	40021c00 	.word	0x40021c00
 80052d0:	40013c00 	.word	0x40013c00

080052d4 <HAL_GPIO_ReadPin>:
 80052d4:	b480      	push	{r7}
 80052d6:	b085      	sub	sp, #20
 80052d8:	af00      	add	r7, sp, #0
 80052da:	6078      	str	r0, [r7, #4]
 80052dc:	460b      	mov	r3, r1
 80052de:	807b      	strh	r3, [r7, #2]
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	691a      	ldr	r2, [r3, #16]
 80052e4:	887b      	ldrh	r3, [r7, #2]
 80052e6:	4013      	ands	r3, r2
 80052e8:	2b00      	cmp	r3, #0
 80052ea:	d002      	beq.n	80052f2 <HAL_GPIO_ReadPin+0x1e>
 80052ec:	2301      	movs	r3, #1
 80052ee:	73fb      	strb	r3, [r7, #15]
 80052f0:	e001      	b.n	80052f6 <HAL_GPIO_ReadPin+0x22>
 80052f2:	2300      	movs	r3, #0
 80052f4:	73fb      	strb	r3, [r7, #15]
 80052f6:	7bfb      	ldrb	r3, [r7, #15]
 80052f8:	4618      	mov	r0, r3
 80052fa:	3714      	adds	r7, #20
 80052fc:	46bd      	mov	sp, r7
 80052fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005302:	4770      	bx	lr

08005304 <HAL_GPIO_WritePin>:
 8005304:	b480      	push	{r7}
 8005306:	b083      	sub	sp, #12
 8005308:	af00      	add	r7, sp, #0
 800530a:	6078      	str	r0, [r7, #4]
 800530c:	460b      	mov	r3, r1
 800530e:	807b      	strh	r3, [r7, #2]
 8005310:	4613      	mov	r3, r2
 8005312:	707b      	strb	r3, [r7, #1]
 8005314:	787b      	ldrb	r3, [r7, #1]
 8005316:	2b00      	cmp	r3, #0
 8005318:	d003      	beq.n	8005322 <HAL_GPIO_WritePin+0x1e>
 800531a:	887a      	ldrh	r2, [r7, #2]
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	619a      	str	r2, [r3, #24]
 8005320:	e003      	b.n	800532a <HAL_GPIO_WritePin+0x26>
 8005322:	887b      	ldrh	r3, [r7, #2]
 8005324:	041a      	lsls	r2, r3, #16
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	619a      	str	r2, [r3, #24]
 800532a:	bf00      	nop
 800532c:	370c      	adds	r7, #12
 800532e:	46bd      	mov	sp, r7
 8005330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005334:	4770      	bx	lr

08005336 <HAL_GPIO_TogglePin>:
 8005336:	b480      	push	{r7}
 8005338:	b085      	sub	sp, #20
 800533a:	af00      	add	r7, sp, #0
 800533c:	6078      	str	r0, [r7, #4]
 800533e:	460b      	mov	r3, r1
 8005340:	807b      	strh	r3, [r7, #2]
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	695b      	ldr	r3, [r3, #20]
 8005346:	60fb      	str	r3, [r7, #12]
 8005348:	887a      	ldrh	r2, [r7, #2]
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	4013      	ands	r3, r2
 800534e:	041a      	lsls	r2, r3, #16
 8005350:	68fb      	ldr	r3, [r7, #12]
 8005352:	43d9      	mvns	r1, r3
 8005354:	887b      	ldrh	r3, [r7, #2]
 8005356:	400b      	ands	r3, r1
 8005358:	431a      	orrs	r2, r3
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	619a      	str	r2, [r3, #24]
 800535e:	bf00      	nop
 8005360:	3714      	adds	r7, #20
 8005362:	46bd      	mov	sp, r7
 8005364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005368:	4770      	bx	lr
	...

0800536c <HAL_I2C_Init>:
 800536c:	b580      	push	{r7, lr}
 800536e:	b084      	sub	sp, #16
 8005370:	af00      	add	r7, sp, #0
 8005372:	6078      	str	r0, [r7, #4]
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	2b00      	cmp	r3, #0
 8005378:	d101      	bne.n	800537e <HAL_I2C_Init+0x12>
 800537a:	2301      	movs	r3, #1
 800537c:	e12b      	b.n	80055d6 <HAL_I2C_Init+0x26a>
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005384:	b2db      	uxtb	r3, r3
 8005386:	2b00      	cmp	r3, #0
 8005388:	d106      	bne.n	8005398 <HAL_I2C_Init+0x2c>
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	2200      	movs	r2, #0
 800538e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005392:	6878      	ldr	r0, [r7, #4]
 8005394:	f7ff f89e 	bl	80044d4 <HAL_I2C_MspInit>
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	2224      	movs	r2, #36	; 0x24
 800539c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	681a      	ldr	r2, [r3, #0]
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	f022 0201 	bic.w	r2, r2, #1
 80053ae:	601a      	str	r2, [r3, #0]
 80053b0:	687b      	ldr	r3, [r7, #4]
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	681a      	ldr	r2, [r3, #0]
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80053be:	601a      	str	r2, [r3, #0]
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	681a      	ldr	r2, [r3, #0]
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80053ce:	601a      	str	r2, [r3, #0]
 80053d0:	f002 fc58 	bl	8007c84 <HAL_RCC_GetPCLK1Freq>
 80053d4:	60f8      	str	r0, [r7, #12]
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	685b      	ldr	r3, [r3, #4]
 80053da:	4a81      	ldr	r2, [pc, #516]	; (80055e0 <HAL_I2C_Init+0x274>)
 80053dc:	4293      	cmp	r3, r2
 80053de:	d807      	bhi.n	80053f0 <HAL_I2C_Init+0x84>
 80053e0:	68fb      	ldr	r3, [r7, #12]
 80053e2:	4a80      	ldr	r2, [pc, #512]	; (80055e4 <HAL_I2C_Init+0x278>)
 80053e4:	4293      	cmp	r3, r2
 80053e6:	bf94      	ite	ls
 80053e8:	2301      	movls	r3, #1
 80053ea:	2300      	movhi	r3, #0
 80053ec:	b2db      	uxtb	r3, r3
 80053ee:	e006      	b.n	80053fe <HAL_I2C_Init+0x92>
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	4a7d      	ldr	r2, [pc, #500]	; (80055e8 <HAL_I2C_Init+0x27c>)
 80053f4:	4293      	cmp	r3, r2
 80053f6:	bf94      	ite	ls
 80053f8:	2301      	movls	r3, #1
 80053fa:	2300      	movhi	r3, #0
 80053fc:	b2db      	uxtb	r3, r3
 80053fe:	2b00      	cmp	r3, #0
 8005400:	d001      	beq.n	8005406 <HAL_I2C_Init+0x9a>
 8005402:	2301      	movs	r3, #1
 8005404:	e0e7      	b.n	80055d6 <HAL_I2C_Init+0x26a>
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	4a78      	ldr	r2, [pc, #480]	; (80055ec <HAL_I2C_Init+0x280>)
 800540a:	fba2 2303 	umull	r2, r3, r2, r3
 800540e:	0c9b      	lsrs	r3, r3, #18
 8005410:	60bb      	str	r3, [r7, #8]
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	681b      	ldr	r3, [r3, #0]
 8005416:	685b      	ldr	r3, [r3, #4]
 8005418:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	68ba      	ldr	r2, [r7, #8]
 8005422:	430a      	orrs	r2, r1
 8005424:	605a      	str	r2, [r3, #4]
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	6a1b      	ldr	r3, [r3, #32]
 800542c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	685b      	ldr	r3, [r3, #4]
 8005434:	4a6a      	ldr	r2, [pc, #424]	; (80055e0 <HAL_I2C_Init+0x274>)
 8005436:	4293      	cmp	r3, r2
 8005438:	d802      	bhi.n	8005440 <HAL_I2C_Init+0xd4>
 800543a:	68bb      	ldr	r3, [r7, #8]
 800543c:	3301      	adds	r3, #1
 800543e:	e009      	b.n	8005454 <HAL_I2C_Init+0xe8>
 8005440:	68bb      	ldr	r3, [r7, #8]
 8005442:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8005446:	fb02 f303 	mul.w	r3, r2, r3
 800544a:	4a69      	ldr	r2, [pc, #420]	; (80055f0 <HAL_I2C_Init+0x284>)
 800544c:	fba2 2303 	umull	r2, r3, r2, r3
 8005450:	099b      	lsrs	r3, r3, #6
 8005452:	3301      	adds	r3, #1
 8005454:	687a      	ldr	r2, [r7, #4]
 8005456:	6812      	ldr	r2, [r2, #0]
 8005458:	430b      	orrs	r3, r1
 800545a:	6213      	str	r3, [r2, #32]
 800545c:	687b      	ldr	r3, [r7, #4]
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	69db      	ldr	r3, [r3, #28]
 8005462:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8005466:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	685b      	ldr	r3, [r3, #4]
 800546e:	495c      	ldr	r1, [pc, #368]	; (80055e0 <HAL_I2C_Init+0x274>)
 8005470:	428b      	cmp	r3, r1
 8005472:	d819      	bhi.n	80054a8 <HAL_I2C_Init+0x13c>
 8005474:	68fb      	ldr	r3, [r7, #12]
 8005476:	1e59      	subs	r1, r3, #1
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	685b      	ldr	r3, [r3, #4]
 800547c:	005b      	lsls	r3, r3, #1
 800547e:	fbb1 f3f3 	udiv	r3, r1, r3
 8005482:	1c59      	adds	r1, r3, #1
 8005484:	f640 73fc 	movw	r3, #4092	; 0xffc
 8005488:	400b      	ands	r3, r1
 800548a:	2b00      	cmp	r3, #0
 800548c:	d00a      	beq.n	80054a4 <HAL_I2C_Init+0x138>
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	1e59      	subs	r1, r3, #1
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	685b      	ldr	r3, [r3, #4]
 8005496:	005b      	lsls	r3, r3, #1
 8005498:	fbb1 f3f3 	udiv	r3, r1, r3
 800549c:	3301      	adds	r3, #1
 800549e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80054a2:	e051      	b.n	8005548 <HAL_I2C_Init+0x1dc>
 80054a4:	2304      	movs	r3, #4
 80054a6:	e04f      	b.n	8005548 <HAL_I2C_Init+0x1dc>
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	689b      	ldr	r3, [r3, #8]
 80054ac:	2b00      	cmp	r3, #0
 80054ae:	d111      	bne.n	80054d4 <HAL_I2C_Init+0x168>
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	1e58      	subs	r0, r3, #1
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	6859      	ldr	r1, [r3, #4]
 80054b8:	460b      	mov	r3, r1
 80054ba:	005b      	lsls	r3, r3, #1
 80054bc:	440b      	add	r3, r1
 80054be:	fbb0 f3f3 	udiv	r3, r0, r3
 80054c2:	3301      	adds	r3, #1
 80054c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80054c8:	2b00      	cmp	r3, #0
 80054ca:	bf0c      	ite	eq
 80054cc:	2301      	moveq	r3, #1
 80054ce:	2300      	movne	r3, #0
 80054d0:	b2db      	uxtb	r3, r3
 80054d2:	e012      	b.n	80054fa <HAL_I2C_Init+0x18e>
 80054d4:	68fb      	ldr	r3, [r7, #12]
 80054d6:	1e58      	subs	r0, r3, #1
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	6859      	ldr	r1, [r3, #4]
 80054dc:	460b      	mov	r3, r1
 80054de:	009b      	lsls	r3, r3, #2
 80054e0:	440b      	add	r3, r1
 80054e2:	0099      	lsls	r1, r3, #2
 80054e4:	440b      	add	r3, r1
 80054e6:	fbb0 f3f3 	udiv	r3, r0, r3
 80054ea:	3301      	adds	r3, #1
 80054ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80054f0:	2b00      	cmp	r3, #0
 80054f2:	bf0c      	ite	eq
 80054f4:	2301      	moveq	r3, #1
 80054f6:	2300      	movne	r3, #0
 80054f8:	b2db      	uxtb	r3, r3
 80054fa:	2b00      	cmp	r3, #0
 80054fc:	d001      	beq.n	8005502 <HAL_I2C_Init+0x196>
 80054fe:	2301      	movs	r3, #1
 8005500:	e022      	b.n	8005548 <HAL_I2C_Init+0x1dc>
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	689b      	ldr	r3, [r3, #8]
 8005506:	2b00      	cmp	r3, #0
 8005508:	d10e      	bne.n	8005528 <HAL_I2C_Init+0x1bc>
 800550a:	68fb      	ldr	r3, [r7, #12]
 800550c:	1e58      	subs	r0, r3, #1
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	6859      	ldr	r1, [r3, #4]
 8005512:	460b      	mov	r3, r1
 8005514:	005b      	lsls	r3, r3, #1
 8005516:	440b      	add	r3, r1
 8005518:	fbb0 f3f3 	udiv	r3, r0, r3
 800551c:	3301      	adds	r3, #1
 800551e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005522:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005526:	e00f      	b.n	8005548 <HAL_I2C_Init+0x1dc>
 8005528:	68fb      	ldr	r3, [r7, #12]
 800552a:	1e58      	subs	r0, r3, #1
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	6859      	ldr	r1, [r3, #4]
 8005530:	460b      	mov	r3, r1
 8005532:	009b      	lsls	r3, r3, #2
 8005534:	440b      	add	r3, r1
 8005536:	0099      	lsls	r1, r3, #2
 8005538:	440b      	add	r3, r1
 800553a:	fbb0 f3f3 	udiv	r3, r0, r3
 800553e:	3301      	adds	r3, #1
 8005540:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005544:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005548:	6879      	ldr	r1, [r7, #4]
 800554a:	6809      	ldr	r1, [r1, #0]
 800554c:	4313      	orrs	r3, r2
 800554e:	61cb      	str	r3, [r1, #28]
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	69da      	ldr	r2, [r3, #28]
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	6a1b      	ldr	r3, [r3, #32]
 8005562:	431a      	orrs	r2, r3
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	430a      	orrs	r2, r1
 800556a:	601a      	str	r2, [r3, #0]
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	689b      	ldr	r3, [r3, #8]
 8005572:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005576:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800557a:	687a      	ldr	r2, [r7, #4]
 800557c:	6911      	ldr	r1, [r2, #16]
 800557e:	687a      	ldr	r2, [r7, #4]
 8005580:	68d2      	ldr	r2, [r2, #12]
 8005582:	4311      	orrs	r1, r2
 8005584:	687a      	ldr	r2, [r7, #4]
 8005586:	6812      	ldr	r2, [r2, #0]
 8005588:	430b      	orrs	r3, r1
 800558a:	6093      	str	r3, [r2, #8]
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	68db      	ldr	r3, [r3, #12]
 8005592:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8005596:	687b      	ldr	r3, [r7, #4]
 8005598:	695a      	ldr	r2, [r3, #20]
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	699b      	ldr	r3, [r3, #24]
 800559e:	431a      	orrs	r2, r3
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	430a      	orrs	r2, r1
 80055a6:	60da      	str	r2, [r3, #12]
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	681a      	ldr	r2, [r3, #0]
 80055ae:	687b      	ldr	r3, [r7, #4]
 80055b0:	681b      	ldr	r3, [r3, #0]
 80055b2:	f042 0201 	orr.w	r2, r2, #1
 80055b6:	601a      	str	r2, [r3, #0]
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	2200      	movs	r2, #0
 80055bc:	641a      	str	r2, [r3, #64]	; 0x40
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	2220      	movs	r2, #32
 80055c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	2200      	movs	r2, #0
 80055ca:	631a      	str	r2, [r3, #48]	; 0x30
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	2200      	movs	r2, #0
 80055d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80055d4:	2300      	movs	r3, #0
 80055d6:	4618      	mov	r0, r3
 80055d8:	3710      	adds	r7, #16
 80055da:	46bd      	mov	sp, r7
 80055dc:	bd80      	pop	{r7, pc}
 80055de:	bf00      	nop
 80055e0:	000186a0 	.word	0x000186a0
 80055e4:	001e847f 	.word	0x001e847f
 80055e8:	003d08ff 	.word	0x003d08ff
 80055ec:	431bde83 	.word	0x431bde83
 80055f0:	10624dd3 	.word	0x10624dd3

080055f4 <HAL_I2C_Master_Transmit>:
 80055f4:	b580      	push	{r7, lr}
 80055f6:	b088      	sub	sp, #32
 80055f8:	af02      	add	r7, sp, #8
 80055fa:	60f8      	str	r0, [r7, #12]
 80055fc:	607a      	str	r2, [r7, #4]
 80055fe:	461a      	mov	r2, r3
 8005600:	460b      	mov	r3, r1
 8005602:	817b      	strh	r3, [r7, #10]
 8005604:	4613      	mov	r3, r2
 8005606:	813b      	strh	r3, [r7, #8]
 8005608:	f7ff f96c 	bl	80048e4 <HAL_GetTick>
 800560c:	6178      	str	r0, [r7, #20]
 800560e:	68fb      	ldr	r3, [r7, #12]
 8005610:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005614:	b2db      	uxtb	r3, r3
 8005616:	2b20      	cmp	r3, #32
 8005618:	f040 80e0 	bne.w	80057dc <HAL_I2C_Master_Transmit+0x1e8>
 800561c:	697b      	ldr	r3, [r7, #20]
 800561e:	9300      	str	r3, [sp, #0]
 8005620:	2319      	movs	r3, #25
 8005622:	2201      	movs	r2, #1
 8005624:	4970      	ldr	r1, [pc, #448]	; (80057e8 <HAL_I2C_Master_Transmit+0x1f4>)
 8005626:	68f8      	ldr	r0, [r7, #12]
 8005628:	f000 fa92 	bl	8005b50 <I2C_WaitOnFlagUntilTimeout>
 800562c:	4603      	mov	r3, r0
 800562e:	2b00      	cmp	r3, #0
 8005630:	d001      	beq.n	8005636 <HAL_I2C_Master_Transmit+0x42>
 8005632:	2302      	movs	r3, #2
 8005634:	e0d3      	b.n	80057de <HAL_I2C_Master_Transmit+0x1ea>
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800563c:	2b01      	cmp	r3, #1
 800563e:	d101      	bne.n	8005644 <HAL_I2C_Master_Transmit+0x50>
 8005640:	2302      	movs	r3, #2
 8005642:	e0cc      	b.n	80057de <HAL_I2C_Master_Transmit+0x1ea>
 8005644:	68fb      	ldr	r3, [r7, #12]
 8005646:	2201      	movs	r2, #1
 8005648:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	681b      	ldr	r3, [r3, #0]
 8005652:	f003 0301 	and.w	r3, r3, #1
 8005656:	2b01      	cmp	r3, #1
 8005658:	d007      	beq.n	800566a <HAL_I2C_Master_Transmit+0x76>
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	681a      	ldr	r2, [r3, #0]
 8005660:	68fb      	ldr	r3, [r7, #12]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	f042 0201 	orr.w	r2, r2, #1
 8005668:	601a      	str	r2, [r3, #0]
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	681a      	ldr	r2, [r3, #0]
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005678:	601a      	str	r2, [r3, #0]
 800567a:	68fb      	ldr	r3, [r7, #12]
 800567c:	2221      	movs	r2, #33	; 0x21
 800567e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	2210      	movs	r2, #16
 8005686:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	2200      	movs	r2, #0
 800568e:	641a      	str	r2, [r3, #64]	; 0x40
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	687a      	ldr	r2, [r7, #4]
 8005694:	625a      	str	r2, [r3, #36]	; 0x24
 8005696:	68fb      	ldr	r3, [r7, #12]
 8005698:	893a      	ldrh	r2, [r7, #8]
 800569a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80056a0:	b29a      	uxth	r2, r3
 80056a2:	68fb      	ldr	r3, [r7, #12]
 80056a4:	851a      	strh	r2, [r3, #40]	; 0x28
 80056a6:	68fb      	ldr	r3, [r7, #12]
 80056a8:	4a50      	ldr	r2, [pc, #320]	; (80057ec <HAL_I2C_Master_Transmit+0x1f8>)
 80056aa:	62da      	str	r2, [r3, #44]	; 0x2c
 80056ac:	8979      	ldrh	r1, [r7, #10]
 80056ae:	697b      	ldr	r3, [r7, #20]
 80056b0:	6a3a      	ldr	r2, [r7, #32]
 80056b2:	68f8      	ldr	r0, [r7, #12]
 80056b4:	f000 f9ca 	bl	8005a4c <I2C_MasterRequestWrite>
 80056b8:	4603      	mov	r3, r0
 80056ba:	2b00      	cmp	r3, #0
 80056bc:	d001      	beq.n	80056c2 <HAL_I2C_Master_Transmit+0xce>
 80056be:	2301      	movs	r3, #1
 80056c0:	e08d      	b.n	80057de <HAL_I2C_Master_Transmit+0x1ea>
 80056c2:	2300      	movs	r3, #0
 80056c4:	613b      	str	r3, [r7, #16]
 80056c6:	68fb      	ldr	r3, [r7, #12]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	695b      	ldr	r3, [r3, #20]
 80056cc:	613b      	str	r3, [r7, #16]
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	699b      	ldr	r3, [r3, #24]
 80056d4:	613b      	str	r3, [r7, #16]
 80056d6:	693b      	ldr	r3, [r7, #16]
 80056d8:	e066      	b.n	80057a8 <HAL_I2C_Master_Transmit+0x1b4>
 80056da:	697a      	ldr	r2, [r7, #20]
 80056dc:	6a39      	ldr	r1, [r7, #32]
 80056de:	68f8      	ldr	r0, [r7, #12]
 80056e0:	f000 fb50 	bl	8005d84 <I2C_WaitOnTXEFlagUntilTimeout>
 80056e4:	4603      	mov	r3, r0
 80056e6:	2b00      	cmp	r3, #0
 80056e8:	d00d      	beq.n	8005706 <HAL_I2C_Master_Transmit+0x112>
 80056ea:	68fb      	ldr	r3, [r7, #12]
 80056ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056ee:	2b04      	cmp	r3, #4
 80056f0:	d107      	bne.n	8005702 <HAL_I2C_Master_Transmit+0x10e>
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	681a      	ldr	r2, [r3, #0]
 80056f8:	68fb      	ldr	r3, [r7, #12]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005700:	601a      	str	r2, [r3, #0]
 8005702:	2301      	movs	r3, #1
 8005704:	e06b      	b.n	80057de <HAL_I2C_Master_Transmit+0x1ea>
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800570a:	781a      	ldrb	r2, [r3, #0]
 800570c:	68fb      	ldr	r3, [r7, #12]
 800570e:	681b      	ldr	r3, [r3, #0]
 8005710:	611a      	str	r2, [r3, #16]
 8005712:	68fb      	ldr	r3, [r7, #12]
 8005714:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005716:	1c5a      	adds	r2, r3, #1
 8005718:	68fb      	ldr	r3, [r7, #12]
 800571a:	625a      	str	r2, [r3, #36]	; 0x24
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005720:	b29b      	uxth	r3, r3
 8005722:	3b01      	subs	r3, #1
 8005724:	b29a      	uxth	r2, r3
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	855a      	strh	r2, [r3, #42]	; 0x2a
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800572e:	3b01      	subs	r3, #1
 8005730:	b29a      	uxth	r2, r3
 8005732:	68fb      	ldr	r3, [r7, #12]
 8005734:	851a      	strh	r2, [r3, #40]	; 0x28
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	695b      	ldr	r3, [r3, #20]
 800573c:	f003 0304 	and.w	r3, r3, #4
 8005740:	2b04      	cmp	r3, #4
 8005742:	d11b      	bne.n	800577c <HAL_I2C_Master_Transmit+0x188>
 8005744:	68fb      	ldr	r3, [r7, #12]
 8005746:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005748:	2b00      	cmp	r3, #0
 800574a:	d017      	beq.n	800577c <HAL_I2C_Master_Transmit+0x188>
 800574c:	68fb      	ldr	r3, [r7, #12]
 800574e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005750:	781a      	ldrb	r2, [r3, #0]
 8005752:	68fb      	ldr	r3, [r7, #12]
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	611a      	str	r2, [r3, #16]
 8005758:	68fb      	ldr	r3, [r7, #12]
 800575a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800575c:	1c5a      	adds	r2, r3, #1
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	625a      	str	r2, [r3, #36]	; 0x24
 8005762:	68fb      	ldr	r3, [r7, #12]
 8005764:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005766:	b29b      	uxth	r3, r3
 8005768:	3b01      	subs	r3, #1
 800576a:	b29a      	uxth	r2, r3
 800576c:	68fb      	ldr	r3, [r7, #12]
 800576e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005774:	3b01      	subs	r3, #1
 8005776:	b29a      	uxth	r2, r3
 8005778:	68fb      	ldr	r3, [r7, #12]
 800577a:	851a      	strh	r2, [r3, #40]	; 0x28
 800577c:	697a      	ldr	r2, [r7, #20]
 800577e:	6a39      	ldr	r1, [r7, #32]
 8005780:	68f8      	ldr	r0, [r7, #12]
 8005782:	f000 fb47 	bl	8005e14 <I2C_WaitOnBTFFlagUntilTimeout>
 8005786:	4603      	mov	r3, r0
 8005788:	2b00      	cmp	r3, #0
 800578a:	d00d      	beq.n	80057a8 <HAL_I2C_Master_Transmit+0x1b4>
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005790:	2b04      	cmp	r3, #4
 8005792:	d107      	bne.n	80057a4 <HAL_I2C_Master_Transmit+0x1b0>
 8005794:	68fb      	ldr	r3, [r7, #12]
 8005796:	681b      	ldr	r3, [r3, #0]
 8005798:	681a      	ldr	r2, [r3, #0]
 800579a:	68fb      	ldr	r3, [r7, #12]
 800579c:	681b      	ldr	r3, [r3, #0]
 800579e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80057a2:	601a      	str	r2, [r3, #0]
 80057a4:	2301      	movs	r3, #1
 80057a6:	e01a      	b.n	80057de <HAL_I2C_Master_Transmit+0x1ea>
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057ac:	2b00      	cmp	r3, #0
 80057ae:	d194      	bne.n	80056da <HAL_I2C_Master_Transmit+0xe6>
 80057b0:	68fb      	ldr	r3, [r7, #12]
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	681a      	ldr	r2, [r3, #0]
 80057b6:	68fb      	ldr	r3, [r7, #12]
 80057b8:	681b      	ldr	r3, [r3, #0]
 80057ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80057be:	601a      	str	r2, [r3, #0]
 80057c0:	68fb      	ldr	r3, [r7, #12]
 80057c2:	2220      	movs	r2, #32
 80057c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	2200      	movs	r2, #0
 80057cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80057d0:	68fb      	ldr	r3, [r7, #12]
 80057d2:	2200      	movs	r2, #0
 80057d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80057d8:	2300      	movs	r3, #0
 80057da:	e000      	b.n	80057de <HAL_I2C_Master_Transmit+0x1ea>
 80057dc:	2302      	movs	r3, #2
 80057de:	4618      	mov	r0, r3
 80057e0:	3718      	adds	r7, #24
 80057e2:	46bd      	mov	sp, r7
 80057e4:	bd80      	pop	{r7, pc}
 80057e6:	bf00      	nop
 80057e8:	00100002 	.word	0x00100002
 80057ec:	ffff0000 	.word	0xffff0000

080057f0 <HAL_I2C_IsDeviceReady>:
 80057f0:	b580      	push	{r7, lr}
 80057f2:	b08a      	sub	sp, #40	; 0x28
 80057f4:	af02      	add	r7, sp, #8
 80057f6:	60f8      	str	r0, [r7, #12]
 80057f8:	607a      	str	r2, [r7, #4]
 80057fa:	603b      	str	r3, [r7, #0]
 80057fc:	460b      	mov	r3, r1
 80057fe:	817b      	strh	r3, [r7, #10]
 8005800:	f7ff f870 	bl	80048e4 <HAL_GetTick>
 8005804:	61f8      	str	r0, [r7, #28]
 8005806:	2300      	movs	r3, #0
 8005808:	61bb      	str	r3, [r7, #24]
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005810:	b2db      	uxtb	r3, r3
 8005812:	2b20      	cmp	r3, #32
 8005814:	f040 8111 	bne.w	8005a3a <HAL_I2C_IsDeviceReady+0x24a>
 8005818:	69fb      	ldr	r3, [r7, #28]
 800581a:	9300      	str	r3, [sp, #0]
 800581c:	2319      	movs	r3, #25
 800581e:	2201      	movs	r2, #1
 8005820:	4988      	ldr	r1, [pc, #544]	; (8005a44 <HAL_I2C_IsDeviceReady+0x254>)
 8005822:	68f8      	ldr	r0, [r7, #12]
 8005824:	f000 f994 	bl	8005b50 <I2C_WaitOnFlagUntilTimeout>
 8005828:	4603      	mov	r3, r0
 800582a:	2b00      	cmp	r3, #0
 800582c:	d001      	beq.n	8005832 <HAL_I2C_IsDeviceReady+0x42>
 800582e:	2302      	movs	r3, #2
 8005830:	e104      	b.n	8005a3c <HAL_I2C_IsDeviceReady+0x24c>
 8005832:	68fb      	ldr	r3, [r7, #12]
 8005834:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005838:	2b01      	cmp	r3, #1
 800583a:	d101      	bne.n	8005840 <HAL_I2C_IsDeviceReady+0x50>
 800583c:	2302      	movs	r3, #2
 800583e:	e0fd      	b.n	8005a3c <HAL_I2C_IsDeviceReady+0x24c>
 8005840:	68fb      	ldr	r3, [r7, #12]
 8005842:	2201      	movs	r2, #1
 8005844:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005848:	68fb      	ldr	r3, [r7, #12]
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	f003 0301 	and.w	r3, r3, #1
 8005852:	2b01      	cmp	r3, #1
 8005854:	d007      	beq.n	8005866 <HAL_I2C_IsDeviceReady+0x76>
 8005856:	68fb      	ldr	r3, [r7, #12]
 8005858:	681b      	ldr	r3, [r3, #0]
 800585a:	681a      	ldr	r2, [r3, #0]
 800585c:	68fb      	ldr	r3, [r7, #12]
 800585e:	681b      	ldr	r3, [r3, #0]
 8005860:	f042 0201 	orr.w	r2, r2, #1
 8005864:	601a      	str	r2, [r3, #0]
 8005866:	68fb      	ldr	r3, [r7, #12]
 8005868:	681b      	ldr	r3, [r3, #0]
 800586a:	681a      	ldr	r2, [r3, #0]
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005874:	601a      	str	r2, [r3, #0]
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	2224      	movs	r2, #36	; 0x24
 800587a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800587e:	68fb      	ldr	r3, [r7, #12]
 8005880:	2200      	movs	r2, #0
 8005882:	641a      	str	r2, [r3, #64]	; 0x40
 8005884:	68fb      	ldr	r3, [r7, #12]
 8005886:	4a70      	ldr	r2, [pc, #448]	; (8005a48 <HAL_I2C_IsDeviceReady+0x258>)
 8005888:	62da      	str	r2, [r3, #44]	; 0x2c
 800588a:	68fb      	ldr	r3, [r7, #12]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	681a      	ldr	r2, [r3, #0]
 8005890:	68fb      	ldr	r3, [r7, #12]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005898:	601a      	str	r2, [r3, #0]
 800589a:	69fb      	ldr	r3, [r7, #28]
 800589c:	9300      	str	r3, [sp, #0]
 800589e:	683b      	ldr	r3, [r7, #0]
 80058a0:	2200      	movs	r2, #0
 80058a2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80058a6:	68f8      	ldr	r0, [r7, #12]
 80058a8:	f000 f952 	bl	8005b50 <I2C_WaitOnFlagUntilTimeout>
 80058ac:	4603      	mov	r3, r0
 80058ae:	2b00      	cmp	r3, #0
 80058b0:	d00d      	beq.n	80058ce <HAL_I2C_IsDeviceReady+0xde>
 80058b2:	68fb      	ldr	r3, [r7, #12]
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	681b      	ldr	r3, [r3, #0]
 80058b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80058bc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80058c0:	d103      	bne.n	80058ca <HAL_I2C_IsDeviceReady+0xda>
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80058c8:	641a      	str	r2, [r3, #64]	; 0x40
 80058ca:	2303      	movs	r3, #3
 80058cc:	e0b6      	b.n	8005a3c <HAL_I2C_IsDeviceReady+0x24c>
 80058ce:	897b      	ldrh	r3, [r7, #10]
 80058d0:	b2db      	uxtb	r3, r3
 80058d2:	461a      	mov	r2, r3
 80058d4:	68fb      	ldr	r3, [r7, #12]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80058dc:	611a      	str	r2, [r3, #16]
 80058de:	f7ff f801 	bl	80048e4 <HAL_GetTick>
 80058e2:	61f8      	str	r0, [r7, #28]
 80058e4:	68fb      	ldr	r3, [r7, #12]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	695b      	ldr	r3, [r3, #20]
 80058ea:	f003 0302 	and.w	r3, r3, #2
 80058ee:	2b02      	cmp	r3, #2
 80058f0:	bf0c      	ite	eq
 80058f2:	2301      	moveq	r3, #1
 80058f4:	2300      	movne	r3, #0
 80058f6:	b2db      	uxtb	r3, r3
 80058f8:	75fb      	strb	r3, [r7, #23]
 80058fa:	68fb      	ldr	r3, [r7, #12]
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	695b      	ldr	r3, [r3, #20]
 8005900:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005904:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005908:	bf0c      	ite	eq
 800590a:	2301      	moveq	r3, #1
 800590c:	2300      	movne	r3, #0
 800590e:	b2db      	uxtb	r3, r3
 8005910:	75bb      	strb	r3, [r7, #22]
 8005912:	e025      	b.n	8005960 <HAL_I2C_IsDeviceReady+0x170>
 8005914:	f7fe ffe6 	bl	80048e4 <HAL_GetTick>
 8005918:	4602      	mov	r2, r0
 800591a:	69fb      	ldr	r3, [r7, #28]
 800591c:	1ad3      	subs	r3, r2, r3
 800591e:	683a      	ldr	r2, [r7, #0]
 8005920:	429a      	cmp	r2, r3
 8005922:	d302      	bcc.n	800592a <HAL_I2C_IsDeviceReady+0x13a>
 8005924:	683b      	ldr	r3, [r7, #0]
 8005926:	2b00      	cmp	r3, #0
 8005928:	d103      	bne.n	8005932 <HAL_I2C_IsDeviceReady+0x142>
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	22a0      	movs	r2, #160	; 0xa0
 800592e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005932:	68fb      	ldr	r3, [r7, #12]
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	695b      	ldr	r3, [r3, #20]
 8005938:	f003 0302 	and.w	r3, r3, #2
 800593c:	2b02      	cmp	r3, #2
 800593e:	bf0c      	ite	eq
 8005940:	2301      	moveq	r3, #1
 8005942:	2300      	movne	r3, #0
 8005944:	b2db      	uxtb	r3, r3
 8005946:	75fb      	strb	r3, [r7, #23]
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	695b      	ldr	r3, [r3, #20]
 800594e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005952:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005956:	bf0c      	ite	eq
 8005958:	2301      	moveq	r3, #1
 800595a:	2300      	movne	r3, #0
 800595c:	b2db      	uxtb	r3, r3
 800595e:	75bb      	strb	r3, [r7, #22]
 8005960:	68fb      	ldr	r3, [r7, #12]
 8005962:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005966:	b2db      	uxtb	r3, r3
 8005968:	2ba0      	cmp	r3, #160	; 0xa0
 800596a:	d005      	beq.n	8005978 <HAL_I2C_IsDeviceReady+0x188>
 800596c:	7dfb      	ldrb	r3, [r7, #23]
 800596e:	2b00      	cmp	r3, #0
 8005970:	d102      	bne.n	8005978 <HAL_I2C_IsDeviceReady+0x188>
 8005972:	7dbb      	ldrb	r3, [r7, #22]
 8005974:	2b00      	cmp	r3, #0
 8005976:	d0cd      	beq.n	8005914 <HAL_I2C_IsDeviceReady+0x124>
 8005978:	68fb      	ldr	r3, [r7, #12]
 800597a:	2220      	movs	r2, #32
 800597c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	681b      	ldr	r3, [r3, #0]
 8005984:	695b      	ldr	r3, [r3, #20]
 8005986:	f003 0302 	and.w	r3, r3, #2
 800598a:	2b02      	cmp	r3, #2
 800598c:	d129      	bne.n	80059e2 <HAL_I2C_IsDeviceReady+0x1f2>
 800598e:	68fb      	ldr	r3, [r7, #12]
 8005990:	681b      	ldr	r3, [r3, #0]
 8005992:	681a      	ldr	r2, [r3, #0]
 8005994:	68fb      	ldr	r3, [r7, #12]
 8005996:	681b      	ldr	r3, [r3, #0]
 8005998:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800599c:	601a      	str	r2, [r3, #0]
 800599e:	2300      	movs	r3, #0
 80059a0:	613b      	str	r3, [r7, #16]
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	681b      	ldr	r3, [r3, #0]
 80059a6:	695b      	ldr	r3, [r3, #20]
 80059a8:	613b      	str	r3, [r7, #16]
 80059aa:	68fb      	ldr	r3, [r7, #12]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	699b      	ldr	r3, [r3, #24]
 80059b0:	613b      	str	r3, [r7, #16]
 80059b2:	693b      	ldr	r3, [r7, #16]
 80059b4:	69fb      	ldr	r3, [r7, #28]
 80059b6:	9300      	str	r3, [sp, #0]
 80059b8:	2319      	movs	r3, #25
 80059ba:	2201      	movs	r2, #1
 80059bc:	4921      	ldr	r1, [pc, #132]	; (8005a44 <HAL_I2C_IsDeviceReady+0x254>)
 80059be:	68f8      	ldr	r0, [r7, #12]
 80059c0:	f000 f8c6 	bl	8005b50 <I2C_WaitOnFlagUntilTimeout>
 80059c4:	4603      	mov	r3, r0
 80059c6:	2b00      	cmp	r3, #0
 80059c8:	d001      	beq.n	80059ce <HAL_I2C_IsDeviceReady+0x1de>
 80059ca:	2301      	movs	r3, #1
 80059cc:	e036      	b.n	8005a3c <HAL_I2C_IsDeviceReady+0x24c>
 80059ce:	68fb      	ldr	r3, [r7, #12]
 80059d0:	2220      	movs	r2, #32
 80059d2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80059d6:	68fb      	ldr	r3, [r7, #12]
 80059d8:	2200      	movs	r2, #0
 80059da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80059de:	2300      	movs	r3, #0
 80059e0:	e02c      	b.n	8005a3c <HAL_I2C_IsDeviceReady+0x24c>
 80059e2:	68fb      	ldr	r3, [r7, #12]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	681a      	ldr	r2, [r3, #0]
 80059e8:	68fb      	ldr	r3, [r7, #12]
 80059ea:	681b      	ldr	r3, [r3, #0]
 80059ec:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80059f0:	601a      	str	r2, [r3, #0]
 80059f2:	68fb      	ldr	r3, [r7, #12]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80059fa:	615a      	str	r2, [r3, #20]
 80059fc:	69fb      	ldr	r3, [r7, #28]
 80059fe:	9300      	str	r3, [sp, #0]
 8005a00:	2319      	movs	r3, #25
 8005a02:	2201      	movs	r2, #1
 8005a04:	490f      	ldr	r1, [pc, #60]	; (8005a44 <HAL_I2C_IsDeviceReady+0x254>)
 8005a06:	68f8      	ldr	r0, [r7, #12]
 8005a08:	f000 f8a2 	bl	8005b50 <I2C_WaitOnFlagUntilTimeout>
 8005a0c:	4603      	mov	r3, r0
 8005a0e:	2b00      	cmp	r3, #0
 8005a10:	d001      	beq.n	8005a16 <HAL_I2C_IsDeviceReady+0x226>
 8005a12:	2301      	movs	r3, #1
 8005a14:	e012      	b.n	8005a3c <HAL_I2C_IsDeviceReady+0x24c>
 8005a16:	69bb      	ldr	r3, [r7, #24]
 8005a18:	3301      	adds	r3, #1
 8005a1a:	61bb      	str	r3, [r7, #24]
 8005a1c:	69ba      	ldr	r2, [r7, #24]
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	429a      	cmp	r2, r3
 8005a22:	f4ff af32 	bcc.w	800588a <HAL_I2C_IsDeviceReady+0x9a>
 8005a26:	68fb      	ldr	r3, [r7, #12]
 8005a28:	2220      	movs	r2, #32
 8005a2a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005a2e:	68fb      	ldr	r3, [r7, #12]
 8005a30:	2200      	movs	r2, #0
 8005a32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005a36:	2301      	movs	r3, #1
 8005a38:	e000      	b.n	8005a3c <HAL_I2C_IsDeviceReady+0x24c>
 8005a3a:	2302      	movs	r3, #2
 8005a3c:	4618      	mov	r0, r3
 8005a3e:	3720      	adds	r7, #32
 8005a40:	46bd      	mov	sp, r7
 8005a42:	bd80      	pop	{r7, pc}
 8005a44:	00100002 	.word	0x00100002
 8005a48:	ffff0000 	.word	0xffff0000

08005a4c <I2C_MasterRequestWrite>:
 8005a4c:	b580      	push	{r7, lr}
 8005a4e:	b088      	sub	sp, #32
 8005a50:	af02      	add	r7, sp, #8
 8005a52:	60f8      	str	r0, [r7, #12]
 8005a54:	607a      	str	r2, [r7, #4]
 8005a56:	603b      	str	r3, [r7, #0]
 8005a58:	460b      	mov	r3, r1
 8005a5a:	817b      	strh	r3, [r7, #10]
 8005a5c:	68fb      	ldr	r3, [r7, #12]
 8005a5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a60:	617b      	str	r3, [r7, #20]
 8005a62:	697b      	ldr	r3, [r7, #20]
 8005a64:	2b08      	cmp	r3, #8
 8005a66:	d006      	beq.n	8005a76 <I2C_MasterRequestWrite+0x2a>
 8005a68:	697b      	ldr	r3, [r7, #20]
 8005a6a:	2b01      	cmp	r3, #1
 8005a6c:	d003      	beq.n	8005a76 <I2C_MasterRequestWrite+0x2a>
 8005a6e:	697b      	ldr	r3, [r7, #20]
 8005a70:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005a74:	d108      	bne.n	8005a88 <I2C_MasterRequestWrite+0x3c>
 8005a76:	68fb      	ldr	r3, [r7, #12]
 8005a78:	681b      	ldr	r3, [r3, #0]
 8005a7a:	681a      	ldr	r2, [r3, #0]
 8005a7c:	68fb      	ldr	r3, [r7, #12]
 8005a7e:	681b      	ldr	r3, [r3, #0]
 8005a80:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005a84:	601a      	str	r2, [r3, #0]
 8005a86:	e00b      	b.n	8005aa0 <I2C_MasterRequestWrite+0x54>
 8005a88:	68fb      	ldr	r3, [r7, #12]
 8005a8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a8c:	2b12      	cmp	r3, #18
 8005a8e:	d107      	bne.n	8005aa0 <I2C_MasterRequestWrite+0x54>
 8005a90:	68fb      	ldr	r3, [r7, #12]
 8005a92:	681b      	ldr	r3, [r3, #0]
 8005a94:	681a      	ldr	r2, [r3, #0]
 8005a96:	68fb      	ldr	r3, [r7, #12]
 8005a98:	681b      	ldr	r3, [r3, #0]
 8005a9a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005a9e:	601a      	str	r2, [r3, #0]
 8005aa0:	683b      	ldr	r3, [r7, #0]
 8005aa2:	9300      	str	r3, [sp, #0]
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	2200      	movs	r2, #0
 8005aa8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005aac:	68f8      	ldr	r0, [r7, #12]
 8005aae:	f000 f84f 	bl	8005b50 <I2C_WaitOnFlagUntilTimeout>
 8005ab2:	4603      	mov	r3, r0
 8005ab4:	2b00      	cmp	r3, #0
 8005ab6:	d00d      	beq.n	8005ad4 <I2C_MasterRequestWrite+0x88>
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ac2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005ac6:	d103      	bne.n	8005ad0 <I2C_MasterRequestWrite+0x84>
 8005ac8:	68fb      	ldr	r3, [r7, #12]
 8005aca:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005ace:	641a      	str	r2, [r3, #64]	; 0x40
 8005ad0:	2303      	movs	r3, #3
 8005ad2:	e035      	b.n	8005b40 <I2C_MasterRequestWrite+0xf4>
 8005ad4:	68fb      	ldr	r3, [r7, #12]
 8005ad6:	691b      	ldr	r3, [r3, #16]
 8005ad8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005adc:	d108      	bne.n	8005af0 <I2C_MasterRequestWrite+0xa4>
 8005ade:	897b      	ldrh	r3, [r7, #10]
 8005ae0:	b2db      	uxtb	r3, r3
 8005ae2:	461a      	mov	r2, r3
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	681b      	ldr	r3, [r3, #0]
 8005ae8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005aec:	611a      	str	r2, [r3, #16]
 8005aee:	e01b      	b.n	8005b28 <I2C_MasterRequestWrite+0xdc>
 8005af0:	897b      	ldrh	r3, [r7, #10]
 8005af2:	11db      	asrs	r3, r3, #7
 8005af4:	b2db      	uxtb	r3, r3
 8005af6:	f003 0306 	and.w	r3, r3, #6
 8005afa:	b2db      	uxtb	r3, r3
 8005afc:	f063 030f 	orn	r3, r3, #15
 8005b00:	b2da      	uxtb	r2, r3
 8005b02:	68fb      	ldr	r3, [r7, #12]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	611a      	str	r2, [r3, #16]
 8005b08:	683b      	ldr	r3, [r7, #0]
 8005b0a:	687a      	ldr	r2, [r7, #4]
 8005b0c:	490e      	ldr	r1, [pc, #56]	; (8005b48 <I2C_MasterRequestWrite+0xfc>)
 8005b0e:	68f8      	ldr	r0, [r7, #12]
 8005b10:	f000 f898 	bl	8005c44 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005b14:	4603      	mov	r3, r0
 8005b16:	2b00      	cmp	r3, #0
 8005b18:	d001      	beq.n	8005b1e <I2C_MasterRequestWrite+0xd2>
 8005b1a:	2301      	movs	r3, #1
 8005b1c:	e010      	b.n	8005b40 <I2C_MasterRequestWrite+0xf4>
 8005b1e:	897b      	ldrh	r3, [r7, #10]
 8005b20:	b2da      	uxtb	r2, r3
 8005b22:	68fb      	ldr	r3, [r7, #12]
 8005b24:	681b      	ldr	r3, [r3, #0]
 8005b26:	611a      	str	r2, [r3, #16]
 8005b28:	683b      	ldr	r3, [r7, #0]
 8005b2a:	687a      	ldr	r2, [r7, #4]
 8005b2c:	4907      	ldr	r1, [pc, #28]	; (8005b4c <I2C_MasterRequestWrite+0x100>)
 8005b2e:	68f8      	ldr	r0, [r7, #12]
 8005b30:	f000 f888 	bl	8005c44 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005b34:	4603      	mov	r3, r0
 8005b36:	2b00      	cmp	r3, #0
 8005b38:	d001      	beq.n	8005b3e <I2C_MasterRequestWrite+0xf2>
 8005b3a:	2301      	movs	r3, #1
 8005b3c:	e000      	b.n	8005b40 <I2C_MasterRequestWrite+0xf4>
 8005b3e:	2300      	movs	r3, #0
 8005b40:	4618      	mov	r0, r3
 8005b42:	3718      	adds	r7, #24
 8005b44:	46bd      	mov	sp, r7
 8005b46:	bd80      	pop	{r7, pc}
 8005b48:	00010008 	.word	0x00010008
 8005b4c:	00010002 	.word	0x00010002

08005b50 <I2C_WaitOnFlagUntilTimeout>:
 8005b50:	b580      	push	{r7, lr}
 8005b52:	b084      	sub	sp, #16
 8005b54:	af00      	add	r7, sp, #0
 8005b56:	60f8      	str	r0, [r7, #12]
 8005b58:	60b9      	str	r1, [r7, #8]
 8005b5a:	603b      	str	r3, [r7, #0]
 8005b5c:	4613      	mov	r3, r2
 8005b5e:	71fb      	strb	r3, [r7, #7]
 8005b60:	e048      	b.n	8005bf4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005b62:	683b      	ldr	r3, [r7, #0]
 8005b64:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005b68:	d044      	beq.n	8005bf4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005b6a:	f7fe febb 	bl	80048e4 <HAL_GetTick>
 8005b6e:	4602      	mov	r2, r0
 8005b70:	69bb      	ldr	r3, [r7, #24]
 8005b72:	1ad3      	subs	r3, r2, r3
 8005b74:	683a      	ldr	r2, [r7, #0]
 8005b76:	429a      	cmp	r2, r3
 8005b78:	d302      	bcc.n	8005b80 <I2C_WaitOnFlagUntilTimeout+0x30>
 8005b7a:	683b      	ldr	r3, [r7, #0]
 8005b7c:	2b00      	cmp	r3, #0
 8005b7e:	d139      	bne.n	8005bf4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005b80:	68bb      	ldr	r3, [r7, #8]
 8005b82:	0c1b      	lsrs	r3, r3, #16
 8005b84:	b2db      	uxtb	r3, r3
 8005b86:	2b01      	cmp	r3, #1
 8005b88:	d10d      	bne.n	8005ba6 <I2C_WaitOnFlagUntilTimeout+0x56>
 8005b8a:	68fb      	ldr	r3, [r7, #12]
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	695b      	ldr	r3, [r3, #20]
 8005b90:	43da      	mvns	r2, r3
 8005b92:	68bb      	ldr	r3, [r7, #8]
 8005b94:	4013      	ands	r3, r2
 8005b96:	b29b      	uxth	r3, r3
 8005b98:	2b00      	cmp	r3, #0
 8005b9a:	bf0c      	ite	eq
 8005b9c:	2301      	moveq	r3, #1
 8005b9e:	2300      	movne	r3, #0
 8005ba0:	b2db      	uxtb	r3, r3
 8005ba2:	461a      	mov	r2, r3
 8005ba4:	e00c      	b.n	8005bc0 <I2C_WaitOnFlagUntilTimeout+0x70>
 8005ba6:	68fb      	ldr	r3, [r7, #12]
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	699b      	ldr	r3, [r3, #24]
 8005bac:	43da      	mvns	r2, r3
 8005bae:	68bb      	ldr	r3, [r7, #8]
 8005bb0:	4013      	ands	r3, r2
 8005bb2:	b29b      	uxth	r3, r3
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	bf0c      	ite	eq
 8005bb8:	2301      	moveq	r3, #1
 8005bba:	2300      	movne	r3, #0
 8005bbc:	b2db      	uxtb	r3, r3
 8005bbe:	461a      	mov	r2, r3
 8005bc0:	79fb      	ldrb	r3, [r7, #7]
 8005bc2:	429a      	cmp	r2, r3
 8005bc4:	d116      	bne.n	8005bf4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	2200      	movs	r2, #0
 8005bca:	631a      	str	r2, [r3, #48]	; 0x30
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	2220      	movs	r2, #32
 8005bd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005bd4:	68fb      	ldr	r3, [r7, #12]
 8005bd6:	2200      	movs	r2, #0
 8005bd8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005bdc:	68fb      	ldr	r3, [r7, #12]
 8005bde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005be0:	f043 0220 	orr.w	r2, r3, #32
 8005be4:	68fb      	ldr	r3, [r7, #12]
 8005be6:	641a      	str	r2, [r3, #64]	; 0x40
 8005be8:	68fb      	ldr	r3, [r7, #12]
 8005bea:	2200      	movs	r2, #0
 8005bec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005bf0:	2301      	movs	r3, #1
 8005bf2:	e023      	b.n	8005c3c <I2C_WaitOnFlagUntilTimeout+0xec>
 8005bf4:	68bb      	ldr	r3, [r7, #8]
 8005bf6:	0c1b      	lsrs	r3, r3, #16
 8005bf8:	b2db      	uxtb	r3, r3
 8005bfa:	2b01      	cmp	r3, #1
 8005bfc:	d10d      	bne.n	8005c1a <I2C_WaitOnFlagUntilTimeout+0xca>
 8005bfe:	68fb      	ldr	r3, [r7, #12]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	695b      	ldr	r3, [r3, #20]
 8005c04:	43da      	mvns	r2, r3
 8005c06:	68bb      	ldr	r3, [r7, #8]
 8005c08:	4013      	ands	r3, r2
 8005c0a:	b29b      	uxth	r3, r3
 8005c0c:	2b00      	cmp	r3, #0
 8005c0e:	bf0c      	ite	eq
 8005c10:	2301      	moveq	r3, #1
 8005c12:	2300      	movne	r3, #0
 8005c14:	b2db      	uxtb	r3, r3
 8005c16:	461a      	mov	r2, r3
 8005c18:	e00c      	b.n	8005c34 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	681b      	ldr	r3, [r3, #0]
 8005c1e:	699b      	ldr	r3, [r3, #24]
 8005c20:	43da      	mvns	r2, r3
 8005c22:	68bb      	ldr	r3, [r7, #8]
 8005c24:	4013      	ands	r3, r2
 8005c26:	b29b      	uxth	r3, r3
 8005c28:	2b00      	cmp	r3, #0
 8005c2a:	bf0c      	ite	eq
 8005c2c:	2301      	moveq	r3, #1
 8005c2e:	2300      	movne	r3, #0
 8005c30:	b2db      	uxtb	r3, r3
 8005c32:	461a      	mov	r2, r3
 8005c34:	79fb      	ldrb	r3, [r7, #7]
 8005c36:	429a      	cmp	r2, r3
 8005c38:	d093      	beq.n	8005b62 <I2C_WaitOnFlagUntilTimeout+0x12>
 8005c3a:	2300      	movs	r3, #0
 8005c3c:	4618      	mov	r0, r3
 8005c3e:	3710      	adds	r7, #16
 8005c40:	46bd      	mov	sp, r7
 8005c42:	bd80      	pop	{r7, pc}

08005c44 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8005c44:	b580      	push	{r7, lr}
 8005c46:	b084      	sub	sp, #16
 8005c48:	af00      	add	r7, sp, #0
 8005c4a:	60f8      	str	r0, [r7, #12]
 8005c4c:	60b9      	str	r1, [r7, #8]
 8005c4e:	607a      	str	r2, [r7, #4]
 8005c50:	603b      	str	r3, [r7, #0]
 8005c52:	e071      	b.n	8005d38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	695b      	ldr	r3, [r3, #20]
 8005c5a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005c5e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005c62:	d123      	bne.n	8005cac <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	681b      	ldr	r3, [r3, #0]
 8005c68:	681a      	ldr	r2, [r3, #0]
 8005c6a:	68fb      	ldr	r3, [r7, #12]
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c72:	601a      	str	r2, [r3, #0]
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8005c7c:	615a      	str	r2, [r3, #20]
 8005c7e:	68fb      	ldr	r3, [r7, #12]
 8005c80:	2200      	movs	r2, #0
 8005c82:	631a      	str	r2, [r3, #48]	; 0x30
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	2220      	movs	r2, #32
 8005c88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005c8c:	68fb      	ldr	r3, [r7, #12]
 8005c8e:	2200      	movs	r2, #0
 8005c90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c98:	f043 0204 	orr.w	r2, r3, #4
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	641a      	str	r2, [r3, #64]	; 0x40
 8005ca0:	68fb      	ldr	r3, [r7, #12]
 8005ca2:	2200      	movs	r2, #0
 8005ca4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ca8:	2301      	movs	r3, #1
 8005caa:	e067      	b.n	8005d7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005cb2:	d041      	beq.n	8005d38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005cb4:	f7fe fe16 	bl	80048e4 <HAL_GetTick>
 8005cb8:	4602      	mov	r2, r0
 8005cba:	683b      	ldr	r3, [r7, #0]
 8005cbc:	1ad3      	subs	r3, r2, r3
 8005cbe:	687a      	ldr	r2, [r7, #4]
 8005cc0:	429a      	cmp	r2, r3
 8005cc2:	d302      	bcc.n	8005cca <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8005cc4:	687b      	ldr	r3, [r7, #4]
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d136      	bne.n	8005d38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005cca:	68bb      	ldr	r3, [r7, #8]
 8005ccc:	0c1b      	lsrs	r3, r3, #16
 8005cce:	b2db      	uxtb	r3, r3
 8005cd0:	2b01      	cmp	r3, #1
 8005cd2:	d10c      	bne.n	8005cee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8005cd4:	68fb      	ldr	r3, [r7, #12]
 8005cd6:	681b      	ldr	r3, [r3, #0]
 8005cd8:	695b      	ldr	r3, [r3, #20]
 8005cda:	43da      	mvns	r2, r3
 8005cdc:	68bb      	ldr	r3, [r7, #8]
 8005cde:	4013      	ands	r3, r2
 8005ce0:	b29b      	uxth	r3, r3
 8005ce2:	2b00      	cmp	r3, #0
 8005ce4:	bf14      	ite	ne
 8005ce6:	2301      	movne	r3, #1
 8005ce8:	2300      	moveq	r3, #0
 8005cea:	b2db      	uxtb	r3, r3
 8005cec:	e00b      	b.n	8005d06 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8005cee:	68fb      	ldr	r3, [r7, #12]
 8005cf0:	681b      	ldr	r3, [r3, #0]
 8005cf2:	699b      	ldr	r3, [r3, #24]
 8005cf4:	43da      	mvns	r2, r3
 8005cf6:	68bb      	ldr	r3, [r7, #8]
 8005cf8:	4013      	ands	r3, r2
 8005cfa:	b29b      	uxth	r3, r3
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	bf14      	ite	ne
 8005d00:	2301      	movne	r3, #1
 8005d02:	2300      	moveq	r3, #0
 8005d04:	b2db      	uxtb	r3, r3
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d016      	beq.n	8005d38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	2200      	movs	r2, #0
 8005d0e:	631a      	str	r2, [r3, #48]	; 0x30
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	2220      	movs	r2, #32
 8005d14:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d18:	68fb      	ldr	r3, [r7, #12]
 8005d1a:	2200      	movs	r2, #0
 8005d1c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d24:	f043 0220 	orr.w	r2, r3, #32
 8005d28:	68fb      	ldr	r3, [r7, #12]
 8005d2a:	641a      	str	r2, [r3, #64]	; 0x40
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	2200      	movs	r2, #0
 8005d30:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d34:	2301      	movs	r3, #1
 8005d36:	e021      	b.n	8005d7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8005d38:	68bb      	ldr	r3, [r7, #8]
 8005d3a:	0c1b      	lsrs	r3, r3, #16
 8005d3c:	b2db      	uxtb	r3, r3
 8005d3e:	2b01      	cmp	r3, #1
 8005d40:	d10c      	bne.n	8005d5c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8005d42:	68fb      	ldr	r3, [r7, #12]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	695b      	ldr	r3, [r3, #20]
 8005d48:	43da      	mvns	r2, r3
 8005d4a:	68bb      	ldr	r3, [r7, #8]
 8005d4c:	4013      	ands	r3, r2
 8005d4e:	b29b      	uxth	r3, r3
 8005d50:	2b00      	cmp	r3, #0
 8005d52:	bf14      	ite	ne
 8005d54:	2301      	movne	r3, #1
 8005d56:	2300      	moveq	r3, #0
 8005d58:	b2db      	uxtb	r3, r3
 8005d5a:	e00b      	b.n	8005d74 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8005d5c:	68fb      	ldr	r3, [r7, #12]
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	699b      	ldr	r3, [r3, #24]
 8005d62:	43da      	mvns	r2, r3
 8005d64:	68bb      	ldr	r3, [r7, #8]
 8005d66:	4013      	ands	r3, r2
 8005d68:	b29b      	uxth	r3, r3
 8005d6a:	2b00      	cmp	r3, #0
 8005d6c:	bf14      	ite	ne
 8005d6e:	2301      	movne	r3, #1
 8005d70:	2300      	moveq	r3, #0
 8005d72:	b2db      	uxtb	r3, r3
 8005d74:	2b00      	cmp	r3, #0
 8005d76:	f47f af6d 	bne.w	8005c54 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8005d7a:	2300      	movs	r3, #0
 8005d7c:	4618      	mov	r0, r3
 8005d7e:	3710      	adds	r7, #16
 8005d80:	46bd      	mov	sp, r7
 8005d82:	bd80      	pop	{r7, pc}

08005d84 <I2C_WaitOnTXEFlagUntilTimeout>:
 8005d84:	b580      	push	{r7, lr}
 8005d86:	b084      	sub	sp, #16
 8005d88:	af00      	add	r7, sp, #0
 8005d8a:	60f8      	str	r0, [r7, #12]
 8005d8c:	60b9      	str	r1, [r7, #8]
 8005d8e:	607a      	str	r2, [r7, #4]
 8005d90:	e034      	b.n	8005dfc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005d92:	68f8      	ldr	r0, [r7, #12]
 8005d94:	f000 f886 	bl	8005ea4 <I2C_IsAcknowledgeFailed>
 8005d98:	4603      	mov	r3, r0
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d001      	beq.n	8005da2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8005d9e:	2301      	movs	r3, #1
 8005da0:	e034      	b.n	8005e0c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8005da2:	68bb      	ldr	r3, [r7, #8]
 8005da4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005da8:	d028      	beq.n	8005dfc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005daa:	f7fe fd9b 	bl	80048e4 <HAL_GetTick>
 8005dae:	4602      	mov	r2, r0
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	1ad3      	subs	r3, r2, r3
 8005db4:	68ba      	ldr	r2, [r7, #8]
 8005db6:	429a      	cmp	r2, r3
 8005db8:	d302      	bcc.n	8005dc0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8005dba:	68bb      	ldr	r3, [r7, #8]
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d11d      	bne.n	8005dfc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005dc0:	68fb      	ldr	r3, [r7, #12]
 8005dc2:	681b      	ldr	r3, [r3, #0]
 8005dc4:	695b      	ldr	r3, [r3, #20]
 8005dc6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005dca:	2b80      	cmp	r3, #128	; 0x80
 8005dcc:	d016      	beq.n	8005dfc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005dce:	68fb      	ldr	r3, [r7, #12]
 8005dd0:	2200      	movs	r2, #0
 8005dd2:	631a      	str	r2, [r3, #48]	; 0x30
 8005dd4:	68fb      	ldr	r3, [r7, #12]
 8005dd6:	2220      	movs	r2, #32
 8005dd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	2200      	movs	r2, #0
 8005de0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005de8:	f043 0220 	orr.w	r2, r3, #32
 8005dec:	68fb      	ldr	r3, [r7, #12]
 8005dee:	641a      	str	r2, [r3, #64]	; 0x40
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	2200      	movs	r2, #0
 8005df4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005df8:	2301      	movs	r3, #1
 8005dfa:	e007      	b.n	8005e0c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8005dfc:	68fb      	ldr	r3, [r7, #12]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	695b      	ldr	r3, [r3, #20]
 8005e02:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e06:	2b80      	cmp	r3, #128	; 0x80
 8005e08:	d1c3      	bne.n	8005d92 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8005e0a:	2300      	movs	r3, #0
 8005e0c:	4618      	mov	r0, r3
 8005e0e:	3710      	adds	r7, #16
 8005e10:	46bd      	mov	sp, r7
 8005e12:	bd80      	pop	{r7, pc}

08005e14 <I2C_WaitOnBTFFlagUntilTimeout>:
 8005e14:	b580      	push	{r7, lr}
 8005e16:	b084      	sub	sp, #16
 8005e18:	af00      	add	r7, sp, #0
 8005e1a:	60f8      	str	r0, [r7, #12]
 8005e1c:	60b9      	str	r1, [r7, #8]
 8005e1e:	607a      	str	r2, [r7, #4]
 8005e20:	e034      	b.n	8005e8c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8005e22:	68f8      	ldr	r0, [r7, #12]
 8005e24:	f000 f83e 	bl	8005ea4 <I2C_IsAcknowledgeFailed>
 8005e28:	4603      	mov	r3, r0
 8005e2a:	2b00      	cmp	r3, #0
 8005e2c:	d001      	beq.n	8005e32 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8005e2e:	2301      	movs	r3, #1
 8005e30:	e034      	b.n	8005e9c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8005e32:	68bb      	ldr	r3, [r7, #8]
 8005e34:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005e38:	d028      	beq.n	8005e8c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8005e3a:	f7fe fd53 	bl	80048e4 <HAL_GetTick>
 8005e3e:	4602      	mov	r2, r0
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	1ad3      	subs	r3, r2, r3
 8005e44:	68ba      	ldr	r2, [r7, #8]
 8005e46:	429a      	cmp	r2, r3
 8005e48:	d302      	bcc.n	8005e50 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8005e4a:	68bb      	ldr	r3, [r7, #8]
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d11d      	bne.n	8005e8c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8005e50:	68fb      	ldr	r3, [r7, #12]
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	695b      	ldr	r3, [r3, #20]
 8005e56:	f003 0304 	and.w	r3, r3, #4
 8005e5a:	2b04      	cmp	r3, #4
 8005e5c:	d016      	beq.n	8005e8c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8005e5e:	68fb      	ldr	r3, [r7, #12]
 8005e60:	2200      	movs	r2, #0
 8005e62:	631a      	str	r2, [r3, #48]	; 0x30
 8005e64:	68fb      	ldr	r3, [r7, #12]
 8005e66:	2220      	movs	r2, #32
 8005e68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e6c:	68fb      	ldr	r3, [r7, #12]
 8005e6e:	2200      	movs	r2, #0
 8005e70:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005e74:	68fb      	ldr	r3, [r7, #12]
 8005e76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e78:	f043 0220 	orr.w	r2, r3, #32
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	641a      	str	r2, [r3, #64]	; 0x40
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	2200      	movs	r2, #0
 8005e84:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005e88:	2301      	movs	r3, #1
 8005e8a:	e007      	b.n	8005e9c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8005e8c:	68fb      	ldr	r3, [r7, #12]
 8005e8e:	681b      	ldr	r3, [r3, #0]
 8005e90:	695b      	ldr	r3, [r3, #20]
 8005e92:	f003 0304 	and.w	r3, r3, #4
 8005e96:	2b04      	cmp	r3, #4
 8005e98:	d1c3      	bne.n	8005e22 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8005e9a:	2300      	movs	r3, #0
 8005e9c:	4618      	mov	r0, r3
 8005e9e:	3710      	adds	r7, #16
 8005ea0:	46bd      	mov	sp, r7
 8005ea2:	bd80      	pop	{r7, pc}

08005ea4 <I2C_IsAcknowledgeFailed>:
 8005ea4:	b480      	push	{r7}
 8005ea6:	b083      	sub	sp, #12
 8005ea8:	af00      	add	r7, sp, #0
 8005eaa:	6078      	str	r0, [r7, #4]
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	681b      	ldr	r3, [r3, #0]
 8005eb0:	695b      	ldr	r3, [r3, #20]
 8005eb2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005eb6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005eba:	d11b      	bne.n	8005ef4 <I2C_IsAcknowledgeFailed+0x50>
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	681b      	ldr	r3, [r3, #0]
 8005ec0:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8005ec4:	615a      	str	r2, [r3, #20]
 8005ec6:	687b      	ldr	r3, [r7, #4]
 8005ec8:	2200      	movs	r2, #0
 8005eca:	631a      	str	r2, [r3, #48]	; 0x30
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	2220      	movs	r2, #32
 8005ed0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	2200      	movs	r2, #0
 8005ed8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ee0:	f043 0204 	orr.w	r2, r3, #4
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	641a      	str	r2, [r3, #64]	; 0x40
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	2200      	movs	r2, #0
 8005eec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ef0:	2301      	movs	r3, #1
 8005ef2:	e000      	b.n	8005ef6 <I2C_IsAcknowledgeFailed+0x52>
 8005ef4:	2300      	movs	r3, #0
 8005ef6:	4618      	mov	r0, r3
 8005ef8:	370c      	adds	r7, #12
 8005efa:	46bd      	mov	sp, r7
 8005efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f00:	4770      	bx	lr

08005f02 <HAL_PCD_Init>:
 8005f02:	b580      	push	{r7, lr}
 8005f04:	b086      	sub	sp, #24
 8005f06:	af02      	add	r7, sp, #8
 8005f08:	6078      	str	r0, [r7, #4]
 8005f0a:	687b      	ldr	r3, [r7, #4]
 8005f0c:	2b00      	cmp	r3, #0
 8005f0e:	d101      	bne.n	8005f14 <HAL_PCD_Init+0x12>
 8005f10:	2301      	movs	r3, #1
 8005f12:	e101      	b.n	8006118 <HAL_PCD_Init+0x216>
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	681b      	ldr	r3, [r3, #0]
 8005f18:	60bb      	str	r3, [r7, #8]
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	f893 3495 	ldrb.w	r3, [r3, #1173]	; 0x495
 8005f20:	b2db      	uxtb	r3, r3
 8005f22:	2b00      	cmp	r3, #0
 8005f24:	d106      	bne.n	8005f34 <HAL_PCD_Init+0x32>
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	2200      	movs	r2, #0
 8005f2a:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8005f2e:	6878      	ldr	r0, [r7, #4]
 8005f30:	f006 f90a 	bl	800c148 <HAL_PCD_MspInit>
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	2203      	movs	r2, #3
 8005f38:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 8005f3c:	68bb      	ldr	r3, [r7, #8]
 8005f3e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8005f42:	d102      	bne.n	8005f4a <HAL_PCD_Init+0x48>
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	2200      	movs	r2, #0
 8005f48:	719a      	strb	r2, [r3, #6]
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	681b      	ldr	r3, [r3, #0]
 8005f4e:	4618      	mov	r0, r3
 8005f50:	f002 fcfb 	bl	800894a <USB_DisableGlobalInt>
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	6818      	ldr	r0, [r3, #0]
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	7c1a      	ldrb	r2, [r3, #16]
 8005f5c:	f88d 2000 	strb.w	r2, [sp]
 8005f60:	3304      	adds	r3, #4
 8005f62:	cb0e      	ldmia	r3, {r1, r2, r3}
 8005f64:	f002 fbda 	bl	800871c <USB_CoreInit>
 8005f68:	4603      	mov	r3, r0
 8005f6a:	2b00      	cmp	r3, #0
 8005f6c:	d005      	beq.n	8005f7a <HAL_PCD_Init+0x78>
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	2202      	movs	r2, #2
 8005f72:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 8005f76:	2301      	movs	r3, #1
 8005f78:	e0ce      	b.n	8006118 <HAL_PCD_Init+0x216>
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	681b      	ldr	r3, [r3, #0]
 8005f7e:	2100      	movs	r1, #0
 8005f80:	4618      	mov	r0, r3
 8005f82:	f002 fcf3 	bl	800896c <USB_SetCurrentMode>
 8005f86:	4603      	mov	r3, r0
 8005f88:	2b00      	cmp	r3, #0
 8005f8a:	d005      	beq.n	8005f98 <HAL_PCD_Init+0x96>
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	2202      	movs	r2, #2
 8005f90:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 8005f94:	2301      	movs	r3, #1
 8005f96:	e0bf      	b.n	8006118 <HAL_PCD_Init+0x216>
 8005f98:	2300      	movs	r3, #0
 8005f9a:	73fb      	strb	r3, [r7, #15]
 8005f9c:	e04a      	b.n	8006034 <HAL_PCD_Init+0x132>
 8005f9e:	7bfa      	ldrb	r2, [r7, #15]
 8005fa0:	6879      	ldr	r1, [r7, #4]
 8005fa2:	4613      	mov	r3, r2
 8005fa4:	00db      	lsls	r3, r3, #3
 8005fa6:	4413      	add	r3, r2
 8005fa8:	009b      	lsls	r3, r3, #2
 8005faa:	440b      	add	r3, r1
 8005fac:	3315      	adds	r3, #21
 8005fae:	2201      	movs	r2, #1
 8005fb0:	701a      	strb	r2, [r3, #0]
 8005fb2:	7bfa      	ldrb	r2, [r7, #15]
 8005fb4:	6879      	ldr	r1, [r7, #4]
 8005fb6:	4613      	mov	r3, r2
 8005fb8:	00db      	lsls	r3, r3, #3
 8005fba:	4413      	add	r3, r2
 8005fbc:	009b      	lsls	r3, r3, #2
 8005fbe:	440b      	add	r3, r1
 8005fc0:	3314      	adds	r3, #20
 8005fc2:	7bfa      	ldrb	r2, [r7, #15]
 8005fc4:	701a      	strb	r2, [r3, #0]
 8005fc6:	7bfa      	ldrb	r2, [r7, #15]
 8005fc8:	7bfb      	ldrb	r3, [r7, #15]
 8005fca:	b298      	uxth	r0, r3
 8005fcc:	6879      	ldr	r1, [r7, #4]
 8005fce:	4613      	mov	r3, r2
 8005fd0:	00db      	lsls	r3, r3, #3
 8005fd2:	4413      	add	r3, r2
 8005fd4:	009b      	lsls	r3, r3, #2
 8005fd6:	440b      	add	r3, r1
 8005fd8:	332e      	adds	r3, #46	; 0x2e
 8005fda:	4602      	mov	r2, r0
 8005fdc:	801a      	strh	r2, [r3, #0]
 8005fde:	7bfa      	ldrb	r2, [r7, #15]
 8005fe0:	6879      	ldr	r1, [r7, #4]
 8005fe2:	4613      	mov	r3, r2
 8005fe4:	00db      	lsls	r3, r3, #3
 8005fe6:	4413      	add	r3, r2
 8005fe8:	009b      	lsls	r3, r3, #2
 8005fea:	440b      	add	r3, r1
 8005fec:	3318      	adds	r3, #24
 8005fee:	2200      	movs	r2, #0
 8005ff0:	701a      	strb	r2, [r3, #0]
 8005ff2:	7bfa      	ldrb	r2, [r7, #15]
 8005ff4:	6879      	ldr	r1, [r7, #4]
 8005ff6:	4613      	mov	r3, r2
 8005ff8:	00db      	lsls	r3, r3, #3
 8005ffa:	4413      	add	r3, r2
 8005ffc:	009b      	lsls	r3, r3, #2
 8005ffe:	440b      	add	r3, r1
 8006000:	331c      	adds	r3, #28
 8006002:	2200      	movs	r2, #0
 8006004:	601a      	str	r2, [r3, #0]
 8006006:	7bfa      	ldrb	r2, [r7, #15]
 8006008:	6879      	ldr	r1, [r7, #4]
 800600a:	4613      	mov	r3, r2
 800600c:	00db      	lsls	r3, r3, #3
 800600e:	4413      	add	r3, r2
 8006010:	009b      	lsls	r3, r3, #2
 8006012:	440b      	add	r3, r1
 8006014:	3320      	adds	r3, #32
 8006016:	2200      	movs	r2, #0
 8006018:	601a      	str	r2, [r3, #0]
 800601a:	7bfa      	ldrb	r2, [r7, #15]
 800601c:	6879      	ldr	r1, [r7, #4]
 800601e:	4613      	mov	r3, r2
 8006020:	00db      	lsls	r3, r3, #3
 8006022:	4413      	add	r3, r2
 8006024:	009b      	lsls	r3, r3, #2
 8006026:	440b      	add	r3, r1
 8006028:	3324      	adds	r3, #36	; 0x24
 800602a:	2200      	movs	r2, #0
 800602c:	601a      	str	r2, [r3, #0]
 800602e:	7bfb      	ldrb	r3, [r7, #15]
 8006030:	3301      	adds	r3, #1
 8006032:	73fb      	strb	r3, [r7, #15]
 8006034:	687b      	ldr	r3, [r7, #4]
 8006036:	791b      	ldrb	r3, [r3, #4]
 8006038:	7bfa      	ldrb	r2, [r7, #15]
 800603a:	429a      	cmp	r2, r3
 800603c:	d3af      	bcc.n	8005f9e <HAL_PCD_Init+0x9c>
 800603e:	2300      	movs	r3, #0
 8006040:	73fb      	strb	r3, [r7, #15]
 8006042:	e044      	b.n	80060ce <HAL_PCD_Init+0x1cc>
 8006044:	7bfa      	ldrb	r2, [r7, #15]
 8006046:	6879      	ldr	r1, [r7, #4]
 8006048:	4613      	mov	r3, r2
 800604a:	00db      	lsls	r3, r3, #3
 800604c:	4413      	add	r3, r2
 800604e:	009b      	lsls	r3, r3, #2
 8006050:	440b      	add	r3, r1
 8006052:	f203 2355 	addw	r3, r3, #597	; 0x255
 8006056:	2200      	movs	r2, #0
 8006058:	701a      	strb	r2, [r3, #0]
 800605a:	7bfa      	ldrb	r2, [r7, #15]
 800605c:	6879      	ldr	r1, [r7, #4]
 800605e:	4613      	mov	r3, r2
 8006060:	00db      	lsls	r3, r3, #3
 8006062:	4413      	add	r3, r2
 8006064:	009b      	lsls	r3, r3, #2
 8006066:	440b      	add	r3, r1
 8006068:	f503 7315 	add.w	r3, r3, #596	; 0x254
 800606c:	7bfa      	ldrb	r2, [r7, #15]
 800606e:	701a      	strb	r2, [r3, #0]
 8006070:	7bfa      	ldrb	r2, [r7, #15]
 8006072:	6879      	ldr	r1, [r7, #4]
 8006074:	4613      	mov	r3, r2
 8006076:	00db      	lsls	r3, r3, #3
 8006078:	4413      	add	r3, r2
 800607a:	009b      	lsls	r3, r3, #2
 800607c:	440b      	add	r3, r1
 800607e:	f503 7316 	add.w	r3, r3, #600	; 0x258
 8006082:	2200      	movs	r2, #0
 8006084:	701a      	strb	r2, [r3, #0]
 8006086:	7bfa      	ldrb	r2, [r7, #15]
 8006088:	6879      	ldr	r1, [r7, #4]
 800608a:	4613      	mov	r3, r2
 800608c:	00db      	lsls	r3, r3, #3
 800608e:	4413      	add	r3, r2
 8006090:	009b      	lsls	r3, r3, #2
 8006092:	440b      	add	r3, r1
 8006094:	f503 7317 	add.w	r3, r3, #604	; 0x25c
 8006098:	2200      	movs	r2, #0
 800609a:	601a      	str	r2, [r3, #0]
 800609c:	7bfa      	ldrb	r2, [r7, #15]
 800609e:	6879      	ldr	r1, [r7, #4]
 80060a0:	4613      	mov	r3, r2
 80060a2:	00db      	lsls	r3, r3, #3
 80060a4:	4413      	add	r3, r2
 80060a6:	009b      	lsls	r3, r3, #2
 80060a8:	440b      	add	r3, r1
 80060aa:	f503 7318 	add.w	r3, r3, #608	; 0x260
 80060ae:	2200      	movs	r2, #0
 80060b0:	601a      	str	r2, [r3, #0]
 80060b2:	7bfa      	ldrb	r2, [r7, #15]
 80060b4:	6879      	ldr	r1, [r7, #4]
 80060b6:	4613      	mov	r3, r2
 80060b8:	00db      	lsls	r3, r3, #3
 80060ba:	4413      	add	r3, r2
 80060bc:	009b      	lsls	r3, r3, #2
 80060be:	440b      	add	r3, r1
 80060c0:	f503 7319 	add.w	r3, r3, #612	; 0x264
 80060c4:	2200      	movs	r2, #0
 80060c6:	601a      	str	r2, [r3, #0]
 80060c8:	7bfb      	ldrb	r3, [r7, #15]
 80060ca:	3301      	adds	r3, #1
 80060cc:	73fb      	strb	r3, [r7, #15]
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	791b      	ldrb	r3, [r3, #4]
 80060d2:	7bfa      	ldrb	r2, [r7, #15]
 80060d4:	429a      	cmp	r2, r3
 80060d6:	d3b5      	bcc.n	8006044 <HAL_PCD_Init+0x142>
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	6818      	ldr	r0, [r3, #0]
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	7c1a      	ldrb	r2, [r3, #16]
 80060e0:	f88d 2000 	strb.w	r2, [sp]
 80060e4:	3304      	adds	r3, #4
 80060e6:	cb0e      	ldmia	r3, {r1, r2, r3}
 80060e8:	f002 fc8c 	bl	8008a04 <USB_DevInit>
 80060ec:	4603      	mov	r3, r0
 80060ee:	2b00      	cmp	r3, #0
 80060f0:	d005      	beq.n	80060fe <HAL_PCD_Init+0x1fc>
 80060f2:	687b      	ldr	r3, [r7, #4]
 80060f4:	2202      	movs	r2, #2
 80060f6:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 80060fa:	2301      	movs	r3, #1
 80060fc:	e00c      	b.n	8006118 <HAL_PCD_Init+0x216>
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	2200      	movs	r2, #0
 8006102:	745a      	strb	r2, [r3, #17]
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	2201      	movs	r2, #1
 8006108:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	681b      	ldr	r3, [r3, #0]
 8006110:	4618      	mov	r0, r3
 8006112:	f003 fcd0 	bl	8009ab6 <USB_DevDisconnect>
 8006116:	2300      	movs	r3, #0
 8006118:	4618      	mov	r0, r3
 800611a:	3710      	adds	r7, #16
 800611c:	46bd      	mov	sp, r7
 800611e:	bd80      	pop	{r7, pc}

08006120 <HAL_PCD_Start>:
 8006120:	b580      	push	{r7, lr}
 8006122:	b084      	sub	sp, #16
 8006124:	af00      	add	r7, sp, #0
 8006126:	6078      	str	r0, [r7, #4]
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	60fb      	str	r3, [r7, #12]
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8006134:	2b01      	cmp	r3, #1
 8006136:	d101      	bne.n	800613c <HAL_PCD_Start+0x1c>
 8006138:	2302      	movs	r3, #2
 800613a:	e022      	b.n	8006182 <HAL_PCD_Start+0x62>
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	2201      	movs	r2, #1
 8006140:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006144:	68fb      	ldr	r3, [r7, #12]
 8006146:	68db      	ldr	r3, [r3, #12]
 8006148:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800614c:	2b00      	cmp	r3, #0
 800614e:	d009      	beq.n	8006164 <HAL_PCD_Start+0x44>
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	7b5b      	ldrb	r3, [r3, #13]
 8006154:	2b01      	cmp	r3, #1
 8006156:	d105      	bne.n	8006164 <HAL_PCD_Start+0x44>
 8006158:	68fb      	ldr	r3, [r7, #12]
 800615a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800615c:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	639a      	str	r2, [r3, #56]	; 0x38
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	681b      	ldr	r3, [r3, #0]
 8006168:	4618      	mov	r0, r3
 800616a:	f002 fbdd 	bl	8008928 <USB_EnableGlobalInt>
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	4618      	mov	r0, r3
 8006174:	f003 fc7e 	bl	8009a74 <USB_DevConnect>
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	2200      	movs	r2, #0
 800617c:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006180:	2300      	movs	r3, #0
 8006182:	4618      	mov	r0, r3
 8006184:	3710      	adds	r7, #16
 8006186:	46bd      	mov	sp, r7
 8006188:	bd80      	pop	{r7, pc}

0800618a <HAL_PCD_IRQHandler>:
 800618a:	b590      	push	{r4, r7, lr}
 800618c:	b08d      	sub	sp, #52	; 0x34
 800618e:	af00      	add	r7, sp, #0
 8006190:	6078      	str	r0, [r7, #4]
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	623b      	str	r3, [r7, #32]
 8006198:	6a3b      	ldr	r3, [r7, #32]
 800619a:	61fb      	str	r3, [r7, #28]
 800619c:	687b      	ldr	r3, [r7, #4]
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	4618      	mov	r0, r3
 80061a2:	f003 fd3c 	bl	8009c1e <USB_GetMode>
 80061a6:	4603      	mov	r3, r0
 80061a8:	2b00      	cmp	r3, #0
 80061aa:	f040 848c 	bne.w	8006ac6 <HAL_PCD_IRQHandler+0x93c>
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	4618      	mov	r0, r3
 80061b4:	f003 fca0 	bl	8009af8 <USB_ReadInterrupts>
 80061b8:	4603      	mov	r3, r0
 80061ba:	2b00      	cmp	r3, #0
 80061bc:	f000 8482 	beq.w	8006ac4 <HAL_PCD_IRQHandler+0x93a>
 80061c0:	69fb      	ldr	r3, [r7, #28]
 80061c2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80061c6:	689b      	ldr	r3, [r3, #8]
 80061c8:	0a1b      	lsrs	r3, r3, #8
 80061ca:	f3c3 020d 	ubfx	r2, r3, #0, #14
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	f8c3 24d4 	str.w	r2, [r3, #1236]	; 0x4d4
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	4618      	mov	r0, r3
 80061da:	f003 fc8d 	bl	8009af8 <USB_ReadInterrupts>
 80061de:	4603      	mov	r3, r0
 80061e0:	f003 0302 	and.w	r3, r3, #2
 80061e4:	2b02      	cmp	r3, #2
 80061e6:	d107      	bne.n	80061f8 <HAL_PCD_IRQHandler+0x6e>
 80061e8:	687b      	ldr	r3, [r7, #4]
 80061ea:	681b      	ldr	r3, [r3, #0]
 80061ec:	695a      	ldr	r2, [r3, #20]
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	f002 0202 	and.w	r2, r2, #2
 80061f6:	615a      	str	r2, [r3, #20]
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	4618      	mov	r0, r3
 80061fe:	f003 fc7b 	bl	8009af8 <USB_ReadInterrupts>
 8006202:	4603      	mov	r3, r0
 8006204:	f003 0310 	and.w	r3, r3, #16
 8006208:	2b10      	cmp	r3, #16
 800620a:	d161      	bne.n	80062d0 <HAL_PCD_IRQHandler+0x146>
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	699a      	ldr	r2, [r3, #24]
 8006212:	687b      	ldr	r3, [r7, #4]
 8006214:	681b      	ldr	r3, [r3, #0]
 8006216:	f022 0210 	bic.w	r2, r2, #16
 800621a:	619a      	str	r2, [r3, #24]
 800621c:	6a3b      	ldr	r3, [r7, #32]
 800621e:	6a1b      	ldr	r3, [r3, #32]
 8006220:	61bb      	str	r3, [r7, #24]
 8006222:	69bb      	ldr	r3, [r7, #24]
 8006224:	f003 020f 	and.w	r2, r3, #15
 8006228:	4613      	mov	r3, r2
 800622a:	00db      	lsls	r3, r3, #3
 800622c:	4413      	add	r3, r2
 800622e:	009b      	lsls	r3, r3, #2
 8006230:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8006234:	687a      	ldr	r2, [r7, #4]
 8006236:	4413      	add	r3, r2
 8006238:	3304      	adds	r3, #4
 800623a:	617b      	str	r3, [r7, #20]
 800623c:	69bb      	ldr	r3, [r7, #24]
 800623e:	0c5b      	lsrs	r3, r3, #17
 8006240:	f003 030f 	and.w	r3, r3, #15
 8006244:	2b02      	cmp	r3, #2
 8006246:	d124      	bne.n	8006292 <HAL_PCD_IRQHandler+0x108>
 8006248:	69ba      	ldr	r2, [r7, #24]
 800624a:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 800624e:	4013      	ands	r3, r2
 8006250:	2b00      	cmp	r3, #0
 8006252:	d035      	beq.n	80062c0 <HAL_PCD_IRQHandler+0x136>
 8006254:	697b      	ldr	r3, [r7, #20]
 8006256:	68d9      	ldr	r1, [r3, #12]
 8006258:	69bb      	ldr	r3, [r7, #24]
 800625a:	091b      	lsrs	r3, r3, #4
 800625c:	b29b      	uxth	r3, r3
 800625e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006262:	b29b      	uxth	r3, r3
 8006264:	461a      	mov	r2, r3
 8006266:	6a38      	ldr	r0, [r7, #32]
 8006268:	f003 fab2 	bl	80097d0 <USB_ReadPacket>
 800626c:	697b      	ldr	r3, [r7, #20]
 800626e:	68da      	ldr	r2, [r3, #12]
 8006270:	69bb      	ldr	r3, [r7, #24]
 8006272:	091b      	lsrs	r3, r3, #4
 8006274:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006278:	441a      	add	r2, r3
 800627a:	697b      	ldr	r3, [r7, #20]
 800627c:	60da      	str	r2, [r3, #12]
 800627e:	697b      	ldr	r3, [r7, #20]
 8006280:	695a      	ldr	r2, [r3, #20]
 8006282:	69bb      	ldr	r3, [r7, #24]
 8006284:	091b      	lsrs	r3, r3, #4
 8006286:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800628a:	441a      	add	r2, r3
 800628c:	697b      	ldr	r3, [r7, #20]
 800628e:	615a      	str	r2, [r3, #20]
 8006290:	e016      	b.n	80062c0 <HAL_PCD_IRQHandler+0x136>
 8006292:	69bb      	ldr	r3, [r7, #24]
 8006294:	0c5b      	lsrs	r3, r3, #17
 8006296:	f003 030f 	and.w	r3, r3, #15
 800629a:	2b06      	cmp	r3, #6
 800629c:	d110      	bne.n	80062c0 <HAL_PCD_IRQHandler+0x136>
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 80062a4:	2208      	movs	r2, #8
 80062a6:	4619      	mov	r1, r3
 80062a8:	6a38      	ldr	r0, [r7, #32]
 80062aa:	f003 fa91 	bl	80097d0 <USB_ReadPacket>
 80062ae:	697b      	ldr	r3, [r7, #20]
 80062b0:	695a      	ldr	r2, [r3, #20]
 80062b2:	69bb      	ldr	r3, [r7, #24]
 80062b4:	091b      	lsrs	r3, r3, #4
 80062b6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80062ba:	441a      	add	r2, r3
 80062bc:	697b      	ldr	r3, [r7, #20]
 80062be:	615a      	str	r2, [r3, #20]
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	699a      	ldr	r2, [r3, #24]
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	681b      	ldr	r3, [r3, #0]
 80062ca:	f042 0210 	orr.w	r2, r2, #16
 80062ce:	619a      	str	r2, [r3, #24]
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	4618      	mov	r0, r3
 80062d6:	f003 fc0f 	bl	8009af8 <USB_ReadInterrupts>
 80062da:	4603      	mov	r3, r0
 80062dc:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80062e0:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80062e4:	f040 80a7 	bne.w	8006436 <HAL_PCD_IRQHandler+0x2ac>
 80062e8:	2300      	movs	r3, #0
 80062ea:	627b      	str	r3, [r7, #36]	; 0x24
 80062ec:	687b      	ldr	r3, [r7, #4]
 80062ee:	681b      	ldr	r3, [r3, #0]
 80062f0:	4618      	mov	r0, r3
 80062f2:	f003 fc14 	bl	8009b1e <USB_ReadDevAllOutEpInterrupt>
 80062f6:	62b8      	str	r0, [r7, #40]	; 0x28
 80062f8:	e099      	b.n	800642e <HAL_PCD_IRQHandler+0x2a4>
 80062fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80062fc:	f003 0301 	and.w	r3, r3, #1
 8006300:	2b00      	cmp	r3, #0
 8006302:	f000 808e 	beq.w	8006422 <HAL_PCD_IRQHandler+0x298>
 8006306:	687b      	ldr	r3, [r7, #4]
 8006308:	681b      	ldr	r3, [r3, #0]
 800630a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800630c:	b2d2      	uxtb	r2, r2
 800630e:	4611      	mov	r1, r2
 8006310:	4618      	mov	r0, r3
 8006312:	f003 fc38 	bl	8009b86 <USB_ReadDevOutEPInterrupt>
 8006316:	6138      	str	r0, [r7, #16]
 8006318:	693b      	ldr	r3, [r7, #16]
 800631a:	f003 0301 	and.w	r3, r3, #1
 800631e:	2b00      	cmp	r3, #0
 8006320:	d00c      	beq.n	800633c <HAL_PCD_IRQHandler+0x1b2>
 8006322:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006324:	015a      	lsls	r2, r3, #5
 8006326:	69fb      	ldr	r3, [r7, #28]
 8006328:	4413      	add	r3, r2
 800632a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800632e:	461a      	mov	r2, r3
 8006330:	2301      	movs	r3, #1
 8006332:	6093      	str	r3, [r2, #8]
 8006334:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006336:	6878      	ldr	r0, [r7, #4]
 8006338:	f000 fea2 	bl	8007080 <PCD_EP_OutXfrComplete_int>
 800633c:	693b      	ldr	r3, [r7, #16]
 800633e:	f003 0308 	and.w	r3, r3, #8
 8006342:	2b00      	cmp	r3, #0
 8006344:	d00c      	beq.n	8006360 <HAL_PCD_IRQHandler+0x1d6>
 8006346:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006348:	015a      	lsls	r2, r3, #5
 800634a:	69fb      	ldr	r3, [r7, #28]
 800634c:	4413      	add	r3, r2
 800634e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006352:	461a      	mov	r2, r3
 8006354:	2308      	movs	r3, #8
 8006356:	6093      	str	r3, [r2, #8]
 8006358:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800635a:	6878      	ldr	r0, [r7, #4]
 800635c:	f000 ff78 	bl	8007250 <PCD_EP_OutSetupPacket_int>
 8006360:	693b      	ldr	r3, [r7, #16]
 8006362:	f003 0310 	and.w	r3, r3, #16
 8006366:	2b00      	cmp	r3, #0
 8006368:	d008      	beq.n	800637c <HAL_PCD_IRQHandler+0x1f2>
 800636a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800636c:	015a      	lsls	r2, r3, #5
 800636e:	69fb      	ldr	r3, [r7, #28]
 8006370:	4413      	add	r3, r2
 8006372:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006376:	461a      	mov	r2, r3
 8006378:	2310      	movs	r3, #16
 800637a:	6093      	str	r3, [r2, #8]
 800637c:	693b      	ldr	r3, [r7, #16]
 800637e:	f003 0302 	and.w	r3, r3, #2
 8006382:	2b00      	cmp	r3, #0
 8006384:	d030      	beq.n	80063e8 <HAL_PCD_IRQHandler+0x25e>
 8006386:	6a3b      	ldr	r3, [r7, #32]
 8006388:	695b      	ldr	r3, [r3, #20]
 800638a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800638e:	2b80      	cmp	r3, #128	; 0x80
 8006390:	d109      	bne.n	80063a6 <HAL_PCD_IRQHandler+0x21c>
 8006392:	69fb      	ldr	r3, [r7, #28]
 8006394:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006398:	685b      	ldr	r3, [r3, #4]
 800639a:	69fa      	ldr	r2, [r7, #28]
 800639c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80063a0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80063a4:	6053      	str	r3, [r2, #4]
 80063a6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80063a8:	4613      	mov	r3, r2
 80063aa:	00db      	lsls	r3, r3, #3
 80063ac:	4413      	add	r3, r2
 80063ae:	009b      	lsls	r3, r3, #2
 80063b0:	f503 7314 	add.w	r3, r3, #592	; 0x250
 80063b4:	687a      	ldr	r2, [r7, #4]
 80063b6:	4413      	add	r3, r2
 80063b8:	3304      	adds	r3, #4
 80063ba:	617b      	str	r3, [r7, #20]
 80063bc:	697b      	ldr	r3, [r7, #20]
 80063be:	78db      	ldrb	r3, [r3, #3]
 80063c0:	2b01      	cmp	r3, #1
 80063c2:	d108      	bne.n	80063d6 <HAL_PCD_IRQHandler+0x24c>
 80063c4:	697b      	ldr	r3, [r7, #20]
 80063c6:	2200      	movs	r2, #0
 80063c8:	70da      	strb	r2, [r3, #3]
 80063ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80063cc:	b2db      	uxtb	r3, r3
 80063ce:	4619      	mov	r1, r3
 80063d0:	6878      	ldr	r0, [r7, #4]
 80063d2:	f005 ffbf 	bl	800c354 <HAL_PCD_ISOOUTIncompleteCallback>
 80063d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80063d8:	015a      	lsls	r2, r3, #5
 80063da:	69fb      	ldr	r3, [r7, #28]
 80063dc:	4413      	add	r3, r2
 80063de:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80063e2:	461a      	mov	r2, r3
 80063e4:	2302      	movs	r3, #2
 80063e6:	6093      	str	r3, [r2, #8]
 80063e8:	693b      	ldr	r3, [r7, #16]
 80063ea:	f003 0320 	and.w	r3, r3, #32
 80063ee:	2b00      	cmp	r3, #0
 80063f0:	d008      	beq.n	8006404 <HAL_PCD_IRQHandler+0x27a>
 80063f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80063f4:	015a      	lsls	r2, r3, #5
 80063f6:	69fb      	ldr	r3, [r7, #28]
 80063f8:	4413      	add	r3, r2
 80063fa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80063fe:	461a      	mov	r2, r3
 8006400:	2320      	movs	r3, #32
 8006402:	6093      	str	r3, [r2, #8]
 8006404:	693b      	ldr	r3, [r7, #16]
 8006406:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800640a:	2b00      	cmp	r3, #0
 800640c:	d009      	beq.n	8006422 <HAL_PCD_IRQHandler+0x298>
 800640e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006410:	015a      	lsls	r2, r3, #5
 8006412:	69fb      	ldr	r3, [r7, #28]
 8006414:	4413      	add	r3, r2
 8006416:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800641a:	461a      	mov	r2, r3
 800641c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8006420:	6093      	str	r3, [r2, #8]
 8006422:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006424:	3301      	adds	r3, #1
 8006426:	627b      	str	r3, [r7, #36]	; 0x24
 8006428:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800642a:	085b      	lsrs	r3, r3, #1
 800642c:	62bb      	str	r3, [r7, #40]	; 0x28
 800642e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006430:	2b00      	cmp	r3, #0
 8006432:	f47f af62 	bne.w	80062fa <HAL_PCD_IRQHandler+0x170>
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	681b      	ldr	r3, [r3, #0]
 800643a:	4618      	mov	r0, r3
 800643c:	f003 fb5c 	bl	8009af8 <USB_ReadInterrupts>
 8006440:	4603      	mov	r3, r0
 8006442:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8006446:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800644a:	f040 80db 	bne.w	8006604 <HAL_PCD_IRQHandler+0x47a>
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	681b      	ldr	r3, [r3, #0]
 8006452:	4618      	mov	r0, r3
 8006454:	f003 fb7d 	bl	8009b52 <USB_ReadDevAllInEpInterrupt>
 8006458:	62b8      	str	r0, [r7, #40]	; 0x28
 800645a:	2300      	movs	r3, #0
 800645c:	627b      	str	r3, [r7, #36]	; 0x24
 800645e:	e0cd      	b.n	80065fc <HAL_PCD_IRQHandler+0x472>
 8006460:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006462:	f003 0301 	and.w	r3, r3, #1
 8006466:	2b00      	cmp	r3, #0
 8006468:	f000 80c2 	beq.w	80065f0 <HAL_PCD_IRQHandler+0x466>
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006472:	b2d2      	uxtb	r2, r2
 8006474:	4611      	mov	r1, r2
 8006476:	4618      	mov	r0, r3
 8006478:	f003 fba3 	bl	8009bc2 <USB_ReadDevInEPInterrupt>
 800647c:	6138      	str	r0, [r7, #16]
 800647e:	693b      	ldr	r3, [r7, #16]
 8006480:	f003 0301 	and.w	r3, r3, #1
 8006484:	2b00      	cmp	r3, #0
 8006486:	d057      	beq.n	8006538 <HAL_PCD_IRQHandler+0x3ae>
 8006488:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800648a:	f003 030f 	and.w	r3, r3, #15
 800648e:	2201      	movs	r2, #1
 8006490:	fa02 f303 	lsl.w	r3, r2, r3
 8006494:	60fb      	str	r3, [r7, #12]
 8006496:	69fb      	ldr	r3, [r7, #28]
 8006498:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800649c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800649e:	68fb      	ldr	r3, [r7, #12]
 80064a0:	43db      	mvns	r3, r3
 80064a2:	69f9      	ldr	r1, [r7, #28]
 80064a4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80064a8:	4013      	ands	r3, r2
 80064aa:	634b      	str	r3, [r1, #52]	; 0x34
 80064ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064ae:	015a      	lsls	r2, r3, #5
 80064b0:	69fb      	ldr	r3, [r7, #28]
 80064b2:	4413      	add	r3, r2
 80064b4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80064b8:	461a      	mov	r2, r3
 80064ba:	2301      	movs	r3, #1
 80064bc:	6093      	str	r3, [r2, #8]
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	799b      	ldrb	r3, [r3, #6]
 80064c2:	2b01      	cmp	r3, #1
 80064c4:	d132      	bne.n	800652c <HAL_PCD_IRQHandler+0x3a2>
 80064c6:	6879      	ldr	r1, [r7, #4]
 80064c8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80064ca:	4613      	mov	r3, r2
 80064cc:	00db      	lsls	r3, r3, #3
 80064ce:	4413      	add	r3, r2
 80064d0:	009b      	lsls	r3, r3, #2
 80064d2:	440b      	add	r3, r1
 80064d4:	3320      	adds	r3, #32
 80064d6:	6819      	ldr	r1, [r3, #0]
 80064d8:	6878      	ldr	r0, [r7, #4]
 80064da:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80064dc:	4613      	mov	r3, r2
 80064de:	00db      	lsls	r3, r3, #3
 80064e0:	4413      	add	r3, r2
 80064e2:	009b      	lsls	r3, r3, #2
 80064e4:	4403      	add	r3, r0
 80064e6:	331c      	adds	r3, #28
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	4419      	add	r1, r3
 80064ec:	6878      	ldr	r0, [r7, #4]
 80064ee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80064f0:	4613      	mov	r3, r2
 80064f2:	00db      	lsls	r3, r3, #3
 80064f4:	4413      	add	r3, r2
 80064f6:	009b      	lsls	r3, r3, #2
 80064f8:	4403      	add	r3, r0
 80064fa:	3320      	adds	r3, #32
 80064fc:	6019      	str	r1, [r3, #0]
 80064fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006500:	2b00      	cmp	r3, #0
 8006502:	d113      	bne.n	800652c <HAL_PCD_IRQHandler+0x3a2>
 8006504:	6879      	ldr	r1, [r7, #4]
 8006506:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006508:	4613      	mov	r3, r2
 800650a:	00db      	lsls	r3, r3, #3
 800650c:	4413      	add	r3, r2
 800650e:	009b      	lsls	r3, r3, #2
 8006510:	440b      	add	r3, r1
 8006512:	3324      	adds	r3, #36	; 0x24
 8006514:	681b      	ldr	r3, [r3, #0]
 8006516:	2b00      	cmp	r3, #0
 8006518:	d108      	bne.n	800652c <HAL_PCD_IRQHandler+0x3a2>
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	6818      	ldr	r0, [r3, #0]
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8006524:	461a      	mov	r2, r3
 8006526:	2101      	movs	r1, #1
 8006528:	f003 fbaa 	bl	8009c80 <USB_EP0_OutStart>
 800652c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800652e:	b2db      	uxtb	r3, r3
 8006530:	4619      	mov	r1, r3
 8006532:	6878      	ldr	r0, [r7, #4]
 8006534:	f005 fe89 	bl	800c24a <HAL_PCD_DataInStageCallback>
 8006538:	693b      	ldr	r3, [r7, #16]
 800653a:	f003 0308 	and.w	r3, r3, #8
 800653e:	2b00      	cmp	r3, #0
 8006540:	d008      	beq.n	8006554 <HAL_PCD_IRQHandler+0x3ca>
 8006542:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006544:	015a      	lsls	r2, r3, #5
 8006546:	69fb      	ldr	r3, [r7, #28]
 8006548:	4413      	add	r3, r2
 800654a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800654e:	461a      	mov	r2, r3
 8006550:	2308      	movs	r3, #8
 8006552:	6093      	str	r3, [r2, #8]
 8006554:	693b      	ldr	r3, [r7, #16]
 8006556:	f003 0310 	and.w	r3, r3, #16
 800655a:	2b00      	cmp	r3, #0
 800655c:	d008      	beq.n	8006570 <HAL_PCD_IRQHandler+0x3e6>
 800655e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006560:	015a      	lsls	r2, r3, #5
 8006562:	69fb      	ldr	r3, [r7, #28]
 8006564:	4413      	add	r3, r2
 8006566:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800656a:	461a      	mov	r2, r3
 800656c:	2310      	movs	r3, #16
 800656e:	6093      	str	r3, [r2, #8]
 8006570:	693b      	ldr	r3, [r7, #16]
 8006572:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006576:	2b00      	cmp	r3, #0
 8006578:	d008      	beq.n	800658c <HAL_PCD_IRQHandler+0x402>
 800657a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800657c:	015a      	lsls	r2, r3, #5
 800657e:	69fb      	ldr	r3, [r7, #28]
 8006580:	4413      	add	r3, r2
 8006582:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006586:	461a      	mov	r2, r3
 8006588:	2340      	movs	r3, #64	; 0x40
 800658a:	6093      	str	r3, [r2, #8]
 800658c:	693b      	ldr	r3, [r7, #16]
 800658e:	f003 0302 	and.w	r3, r3, #2
 8006592:	2b00      	cmp	r3, #0
 8006594:	d023      	beq.n	80065de <HAL_PCD_IRQHandler+0x454>
 8006596:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006598:	6a38      	ldr	r0, [r7, #32]
 800659a:	f002 fb97 	bl	8008ccc <USB_FlushTxFifo>
 800659e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80065a0:	4613      	mov	r3, r2
 80065a2:	00db      	lsls	r3, r3, #3
 80065a4:	4413      	add	r3, r2
 80065a6:	009b      	lsls	r3, r3, #2
 80065a8:	3310      	adds	r3, #16
 80065aa:	687a      	ldr	r2, [r7, #4]
 80065ac:	4413      	add	r3, r2
 80065ae:	3304      	adds	r3, #4
 80065b0:	617b      	str	r3, [r7, #20]
 80065b2:	697b      	ldr	r3, [r7, #20]
 80065b4:	78db      	ldrb	r3, [r3, #3]
 80065b6:	2b01      	cmp	r3, #1
 80065b8:	d108      	bne.n	80065cc <HAL_PCD_IRQHandler+0x442>
 80065ba:	697b      	ldr	r3, [r7, #20]
 80065bc:	2200      	movs	r2, #0
 80065be:	70da      	strb	r2, [r3, #3]
 80065c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065c2:	b2db      	uxtb	r3, r3
 80065c4:	4619      	mov	r1, r3
 80065c6:	6878      	ldr	r0, [r7, #4]
 80065c8:	f005 fed6 	bl	800c378 <HAL_PCD_ISOINIncompleteCallback>
 80065cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065ce:	015a      	lsls	r2, r3, #5
 80065d0:	69fb      	ldr	r3, [r7, #28]
 80065d2:	4413      	add	r3, r2
 80065d4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80065d8:	461a      	mov	r2, r3
 80065da:	2302      	movs	r3, #2
 80065dc:	6093      	str	r3, [r2, #8]
 80065de:	693b      	ldr	r3, [r7, #16]
 80065e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80065e4:	2b00      	cmp	r3, #0
 80065e6:	d003      	beq.n	80065f0 <HAL_PCD_IRQHandler+0x466>
 80065e8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80065ea:	6878      	ldr	r0, [r7, #4]
 80065ec:	f000 fcbb 	bl	8006f66 <PCD_WriteEmptyTxFifo>
 80065f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065f2:	3301      	adds	r3, #1
 80065f4:	627b      	str	r3, [r7, #36]	; 0x24
 80065f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80065f8:	085b      	lsrs	r3, r3, #1
 80065fa:	62bb      	str	r3, [r7, #40]	; 0x28
 80065fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80065fe:	2b00      	cmp	r3, #0
 8006600:	f47f af2e 	bne.w	8006460 <HAL_PCD_IRQHandler+0x2d6>
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	681b      	ldr	r3, [r3, #0]
 8006608:	4618      	mov	r0, r3
 800660a:	f003 fa75 	bl	8009af8 <USB_ReadInterrupts>
 800660e:	4603      	mov	r3, r0
 8006610:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8006614:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8006618:	d122      	bne.n	8006660 <HAL_PCD_IRQHandler+0x4d6>
 800661a:	69fb      	ldr	r3, [r7, #28]
 800661c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006620:	685b      	ldr	r3, [r3, #4]
 8006622:	69fa      	ldr	r2, [r7, #28]
 8006624:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006628:	f023 0301 	bic.w	r3, r3, #1
 800662c:	6053      	str	r3, [r2, #4]
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	f893 34cc 	ldrb.w	r3, [r3, #1228]	; 0x4cc
 8006634:	2b01      	cmp	r3, #1
 8006636:	d108      	bne.n	800664a <HAL_PCD_IRQHandler+0x4c0>
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	2200      	movs	r2, #0
 800663c:	f883 24cc 	strb.w	r2, [r3, #1228]	; 0x4cc
 8006640:	2100      	movs	r1, #0
 8006642:	6878      	ldr	r0, [r7, #4]
 8006644:	f000 fea2 	bl	800738c <HAL_PCDEx_LPM_Callback>
 8006648:	e002      	b.n	8006650 <HAL_PCD_IRQHandler+0x4c6>
 800664a:	6878      	ldr	r0, [r7, #4]
 800664c:	f005 fe74 	bl	800c338 <HAL_PCD_ResumeCallback>
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	695a      	ldr	r2, [r3, #20]
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 800665e:	615a      	str	r2, [r3, #20]
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	681b      	ldr	r3, [r3, #0]
 8006664:	4618      	mov	r0, r3
 8006666:	f003 fa47 	bl	8009af8 <USB_ReadInterrupts>
 800666a:	4603      	mov	r3, r0
 800666c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006670:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006674:	d112      	bne.n	800669c <HAL_PCD_IRQHandler+0x512>
 8006676:	69fb      	ldr	r3, [r7, #28]
 8006678:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800667c:	689b      	ldr	r3, [r3, #8]
 800667e:	f003 0301 	and.w	r3, r3, #1
 8006682:	2b01      	cmp	r3, #1
 8006684:	d102      	bne.n	800668c <HAL_PCD_IRQHandler+0x502>
 8006686:	6878      	ldr	r0, [r7, #4]
 8006688:	f005 fe30 	bl	800c2ec <HAL_PCD_SuspendCallback>
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	681b      	ldr	r3, [r3, #0]
 8006690:	695a      	ldr	r2, [r3, #20]
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	681b      	ldr	r3, [r3, #0]
 8006696:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 800669a:	615a      	str	r2, [r3, #20]
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	4618      	mov	r0, r3
 80066a2:	f003 fa29 	bl	8009af8 <USB_ReadInterrupts>
 80066a6:	4603      	mov	r3, r0
 80066a8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80066ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80066b0:	f040 80b7 	bne.w	8006822 <HAL_PCD_IRQHandler+0x698>
 80066b4:	69fb      	ldr	r3, [r7, #28]
 80066b6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80066ba:	685b      	ldr	r3, [r3, #4]
 80066bc:	69fa      	ldr	r2, [r7, #28]
 80066be:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80066c2:	f023 0301 	bic.w	r3, r3, #1
 80066c6:	6053      	str	r3, [r2, #4]
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	2110      	movs	r1, #16
 80066ce:	4618      	mov	r0, r3
 80066d0:	f002 fafc 	bl	8008ccc <USB_FlushTxFifo>
 80066d4:	2300      	movs	r3, #0
 80066d6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80066d8:	e046      	b.n	8006768 <HAL_PCD_IRQHandler+0x5de>
 80066da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80066dc:	015a      	lsls	r2, r3, #5
 80066de:	69fb      	ldr	r3, [r7, #28]
 80066e0:	4413      	add	r3, r2
 80066e2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80066e6:	461a      	mov	r2, r3
 80066e8:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80066ec:	6093      	str	r3, [r2, #8]
 80066ee:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80066f0:	015a      	lsls	r2, r3, #5
 80066f2:	69fb      	ldr	r3, [r7, #28]
 80066f4:	4413      	add	r3, r2
 80066f6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80066fe:	0151      	lsls	r1, r2, #5
 8006700:	69fa      	ldr	r2, [r7, #28]
 8006702:	440a      	add	r2, r1
 8006704:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8006708:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800670c:	6013      	str	r3, [r2, #0]
 800670e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006710:	015a      	lsls	r2, r3, #5
 8006712:	69fb      	ldr	r3, [r7, #28]
 8006714:	4413      	add	r3, r2
 8006716:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800671a:	461a      	mov	r2, r3
 800671c:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8006720:	6093      	str	r3, [r2, #8]
 8006722:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006724:	015a      	lsls	r2, r3, #5
 8006726:	69fb      	ldr	r3, [r7, #28]
 8006728:	4413      	add	r3, r2
 800672a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006732:	0151      	lsls	r1, r2, #5
 8006734:	69fa      	ldr	r2, [r7, #28]
 8006736:	440a      	add	r2, r1
 8006738:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800673c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8006740:	6013      	str	r3, [r2, #0]
 8006742:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006744:	015a      	lsls	r2, r3, #5
 8006746:	69fb      	ldr	r3, [r7, #28]
 8006748:	4413      	add	r3, r2
 800674a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800674e:	681b      	ldr	r3, [r3, #0]
 8006750:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006752:	0151      	lsls	r1, r2, #5
 8006754:	69fa      	ldr	r2, [r7, #28]
 8006756:	440a      	add	r2, r1
 8006758:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800675c:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8006760:	6013      	str	r3, [r2, #0]
 8006762:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006764:	3301      	adds	r3, #1
 8006766:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	791b      	ldrb	r3, [r3, #4]
 800676c:	461a      	mov	r2, r3
 800676e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006770:	4293      	cmp	r3, r2
 8006772:	d3b2      	bcc.n	80066da <HAL_PCD_IRQHandler+0x550>
 8006774:	69fb      	ldr	r3, [r7, #28]
 8006776:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800677a:	69db      	ldr	r3, [r3, #28]
 800677c:	69fa      	ldr	r2, [r7, #28]
 800677e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006782:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 8006786:	61d3      	str	r3, [r2, #28]
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	7bdb      	ldrb	r3, [r3, #15]
 800678c:	2b00      	cmp	r3, #0
 800678e:	d016      	beq.n	80067be <HAL_PCD_IRQHandler+0x634>
 8006790:	69fb      	ldr	r3, [r7, #28]
 8006792:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006796:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800679a:	69fa      	ldr	r2, [r7, #28]
 800679c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80067a0:	f043 030b 	orr.w	r3, r3, #11
 80067a4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 80067a8:	69fb      	ldr	r3, [r7, #28]
 80067aa:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80067ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80067b0:	69fa      	ldr	r2, [r7, #28]
 80067b2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80067b6:	f043 030b 	orr.w	r3, r3, #11
 80067ba:	6453      	str	r3, [r2, #68]	; 0x44
 80067bc:	e015      	b.n	80067ea <HAL_PCD_IRQHandler+0x660>
 80067be:	69fb      	ldr	r3, [r7, #28]
 80067c0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80067c4:	695b      	ldr	r3, [r3, #20]
 80067c6:	69fa      	ldr	r2, [r7, #28]
 80067c8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80067cc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80067d0:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 80067d4:	6153      	str	r3, [r2, #20]
 80067d6:	69fb      	ldr	r3, [r7, #28]
 80067d8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80067dc:	691b      	ldr	r3, [r3, #16]
 80067de:	69fa      	ldr	r2, [r7, #28]
 80067e0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80067e4:	f043 030b 	orr.w	r3, r3, #11
 80067e8:	6113      	str	r3, [r2, #16]
 80067ea:	69fb      	ldr	r3, [r7, #28]
 80067ec:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	69fa      	ldr	r2, [r7, #28]
 80067f4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80067f8:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 80067fc:	6013      	str	r3, [r2, #0]
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	6818      	ldr	r0, [r3, #0]
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	7999      	ldrb	r1, [r3, #6]
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800680c:	461a      	mov	r2, r3
 800680e:	f003 fa37 	bl	8009c80 <USB_EP0_OutStart>
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	681b      	ldr	r3, [r3, #0]
 8006816:	695a      	ldr	r2, [r3, #20]
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	681b      	ldr	r3, [r3, #0]
 800681c:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8006820:	615a      	str	r2, [r3, #20]
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	681b      	ldr	r3, [r3, #0]
 8006826:	4618      	mov	r0, r3
 8006828:	f003 f966 	bl	8009af8 <USB_ReadInterrupts>
 800682c:	4603      	mov	r3, r0
 800682e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006832:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006836:	d123      	bne.n	8006880 <HAL_PCD_IRQHandler+0x6f6>
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	681b      	ldr	r3, [r3, #0]
 800683c:	4618      	mov	r0, r3
 800683e:	f003 f9fc 	bl	8009c3a <USB_ActivateSetup>
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	681b      	ldr	r3, [r3, #0]
 8006846:	4618      	mov	r0, r3
 8006848:	f002 fab9 	bl	8008dbe <USB_GetDevSpeed>
 800684c:	4603      	mov	r3, r0
 800684e:	461a      	mov	r2, r3
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	71da      	strb	r2, [r3, #7]
 8006854:	687b      	ldr	r3, [r7, #4]
 8006856:	681c      	ldr	r4, [r3, #0]
 8006858:	f001 fa08 	bl	8007c6c <HAL_RCC_GetHCLKFreq>
 800685c:	4601      	mov	r1, r0
 800685e:	687b      	ldr	r3, [r7, #4]
 8006860:	79db      	ldrb	r3, [r3, #7]
 8006862:	461a      	mov	r2, r3
 8006864:	4620      	mov	r0, r4
 8006866:	f001 ffbd 	bl	80087e4 <USB_SetTurnaroundTime>
 800686a:	6878      	ldr	r0, [r7, #4]
 800686c:	f005 fd15 	bl	800c29a <HAL_PCD_ResetCallback>
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	695a      	ldr	r2, [r3, #20]
 8006876:	687b      	ldr	r3, [r7, #4]
 8006878:	681b      	ldr	r3, [r3, #0]
 800687a:	f402 5200 	and.w	r2, r2, #8192	; 0x2000
 800687e:	615a      	str	r2, [r3, #20]
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	681b      	ldr	r3, [r3, #0]
 8006884:	4618      	mov	r0, r3
 8006886:	f003 f937 	bl	8009af8 <USB_ReadInterrupts>
 800688a:	4603      	mov	r3, r0
 800688c:	f003 0308 	and.w	r3, r3, #8
 8006890:	2b08      	cmp	r3, #8
 8006892:	d10a      	bne.n	80068aa <HAL_PCD_IRQHandler+0x720>
 8006894:	6878      	ldr	r0, [r7, #4]
 8006896:	f005 fcf2 	bl	800c27e <HAL_PCD_SOFCallback>
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	681b      	ldr	r3, [r3, #0]
 800689e:	695a      	ldr	r2, [r3, #20]
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	f002 0208 	and.w	r2, r2, #8
 80068a8:	615a      	str	r2, [r3, #20]
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	681b      	ldr	r3, [r3, #0]
 80068ae:	4618      	mov	r0, r3
 80068b0:	f003 f922 	bl	8009af8 <USB_ReadInterrupts>
 80068b4:	4603      	mov	r3, r0
 80068b6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80068ba:	2b80      	cmp	r3, #128	; 0x80
 80068bc:	d123      	bne.n	8006906 <HAL_PCD_IRQHandler+0x77c>
 80068be:	6a3b      	ldr	r3, [r7, #32]
 80068c0:	699b      	ldr	r3, [r3, #24]
 80068c2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80068c6:	6a3b      	ldr	r3, [r7, #32]
 80068c8:	619a      	str	r2, [r3, #24]
 80068ca:	2301      	movs	r3, #1
 80068cc:	627b      	str	r3, [r7, #36]	; 0x24
 80068ce:	e014      	b.n	80068fa <HAL_PCD_IRQHandler+0x770>
 80068d0:	6879      	ldr	r1, [r7, #4]
 80068d2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80068d4:	4613      	mov	r3, r2
 80068d6:	00db      	lsls	r3, r3, #3
 80068d8:	4413      	add	r3, r2
 80068da:	009b      	lsls	r3, r3, #2
 80068dc:	440b      	add	r3, r1
 80068de:	f203 2357 	addw	r3, r3, #599	; 0x257
 80068e2:	781b      	ldrb	r3, [r3, #0]
 80068e4:	2b01      	cmp	r3, #1
 80068e6:	d105      	bne.n	80068f4 <HAL_PCD_IRQHandler+0x76a>
 80068e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068ea:	b2db      	uxtb	r3, r3
 80068ec:	4619      	mov	r1, r3
 80068ee:	6878      	ldr	r0, [r7, #4]
 80068f0:	f000 fb08 	bl	8006f04 <HAL_PCD_EP_Abort>
 80068f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068f6:	3301      	adds	r3, #1
 80068f8:	627b      	str	r3, [r7, #36]	; 0x24
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	791b      	ldrb	r3, [r3, #4]
 80068fe:	461a      	mov	r2, r3
 8006900:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006902:	4293      	cmp	r3, r2
 8006904:	d3e4      	bcc.n	80068d0 <HAL_PCD_IRQHandler+0x746>
 8006906:	687b      	ldr	r3, [r7, #4]
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	4618      	mov	r0, r3
 800690c:	f003 f8f4 	bl	8009af8 <USB_ReadInterrupts>
 8006910:	4603      	mov	r3, r0
 8006912:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006916:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800691a:	d13c      	bne.n	8006996 <HAL_PCD_IRQHandler+0x80c>
 800691c:	2301      	movs	r3, #1
 800691e:	627b      	str	r3, [r7, #36]	; 0x24
 8006920:	e02b      	b.n	800697a <HAL_PCD_IRQHandler+0x7f0>
 8006922:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006924:	015a      	lsls	r2, r3, #5
 8006926:	69fb      	ldr	r3, [r7, #28]
 8006928:	4413      	add	r3, r2
 800692a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	61bb      	str	r3, [r7, #24]
 8006932:	6879      	ldr	r1, [r7, #4]
 8006934:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006936:	4613      	mov	r3, r2
 8006938:	00db      	lsls	r3, r3, #3
 800693a:	4413      	add	r3, r2
 800693c:	009b      	lsls	r3, r3, #2
 800693e:	440b      	add	r3, r1
 8006940:	3318      	adds	r3, #24
 8006942:	781b      	ldrb	r3, [r3, #0]
 8006944:	2b01      	cmp	r3, #1
 8006946:	d115      	bne.n	8006974 <HAL_PCD_IRQHandler+0x7ea>
 8006948:	69bb      	ldr	r3, [r7, #24]
 800694a:	2b00      	cmp	r3, #0
 800694c:	da12      	bge.n	8006974 <HAL_PCD_IRQHandler+0x7ea>
 800694e:	6879      	ldr	r1, [r7, #4]
 8006950:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006952:	4613      	mov	r3, r2
 8006954:	00db      	lsls	r3, r3, #3
 8006956:	4413      	add	r3, r2
 8006958:	009b      	lsls	r3, r3, #2
 800695a:	440b      	add	r3, r1
 800695c:	3317      	adds	r3, #23
 800695e:	2201      	movs	r2, #1
 8006960:	701a      	strb	r2, [r3, #0]
 8006962:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006964:	b2db      	uxtb	r3, r3
 8006966:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800696a:	b2db      	uxtb	r3, r3
 800696c:	4619      	mov	r1, r3
 800696e:	6878      	ldr	r0, [r7, #4]
 8006970:	f000 fac8 	bl	8006f04 <HAL_PCD_EP_Abort>
 8006974:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006976:	3301      	adds	r3, #1
 8006978:	627b      	str	r3, [r7, #36]	; 0x24
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	791b      	ldrb	r3, [r3, #4]
 800697e:	461a      	mov	r2, r3
 8006980:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006982:	4293      	cmp	r3, r2
 8006984:	d3cd      	bcc.n	8006922 <HAL_PCD_IRQHandler+0x798>
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	681b      	ldr	r3, [r3, #0]
 800698a:	695a      	ldr	r2, [r3, #20]
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	681b      	ldr	r3, [r3, #0]
 8006990:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8006994:	615a      	str	r2, [r3, #20]
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	4618      	mov	r0, r3
 800699c:	f003 f8ac 	bl	8009af8 <USB_ReadInterrupts>
 80069a0:	4603      	mov	r3, r0
 80069a2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80069a6:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80069aa:	d156      	bne.n	8006a5a <HAL_PCD_IRQHandler+0x8d0>
 80069ac:	2301      	movs	r3, #1
 80069ae:	627b      	str	r3, [r7, #36]	; 0x24
 80069b0:	e045      	b.n	8006a3e <HAL_PCD_IRQHandler+0x8b4>
 80069b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069b4:	015a      	lsls	r2, r3, #5
 80069b6:	69fb      	ldr	r3, [r7, #28]
 80069b8:	4413      	add	r3, r2
 80069ba:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80069be:	681b      	ldr	r3, [r3, #0]
 80069c0:	61bb      	str	r3, [r7, #24]
 80069c2:	6879      	ldr	r1, [r7, #4]
 80069c4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80069c6:	4613      	mov	r3, r2
 80069c8:	00db      	lsls	r3, r3, #3
 80069ca:	4413      	add	r3, r2
 80069cc:	009b      	lsls	r3, r3, #2
 80069ce:	440b      	add	r3, r1
 80069d0:	f503 7316 	add.w	r3, r3, #600	; 0x258
 80069d4:	781b      	ldrb	r3, [r3, #0]
 80069d6:	2b01      	cmp	r3, #1
 80069d8:	d12e      	bne.n	8006a38 <HAL_PCD_IRQHandler+0x8ae>
 80069da:	69bb      	ldr	r3, [r7, #24]
 80069dc:	2b00      	cmp	r3, #0
 80069de:	da2b      	bge.n	8006a38 <HAL_PCD_IRQHandler+0x8ae>
 80069e0:	69bb      	ldr	r3, [r7, #24]
 80069e2:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	f8d3 34d4 	ldr.w	r3, [r3, #1236]	; 0x4d4
 80069ec:	f003 0301 	and.w	r3, r3, #1
 80069f0:	429a      	cmp	r2, r3
 80069f2:	d121      	bne.n	8006a38 <HAL_PCD_IRQHandler+0x8ae>
 80069f4:	6879      	ldr	r1, [r7, #4]
 80069f6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80069f8:	4613      	mov	r3, r2
 80069fa:	00db      	lsls	r3, r3, #3
 80069fc:	4413      	add	r3, r2
 80069fe:	009b      	lsls	r3, r3, #2
 8006a00:	440b      	add	r3, r1
 8006a02:	f203 2357 	addw	r3, r3, #599	; 0x257
 8006a06:	2201      	movs	r2, #1
 8006a08:	701a      	strb	r2, [r3, #0]
 8006a0a:	6a3b      	ldr	r3, [r7, #32]
 8006a0c:	699b      	ldr	r3, [r3, #24]
 8006a0e:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8006a12:	6a3b      	ldr	r3, [r7, #32]
 8006a14:	619a      	str	r2, [r3, #24]
 8006a16:	6a3b      	ldr	r3, [r7, #32]
 8006a18:	695b      	ldr	r3, [r3, #20]
 8006a1a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006a1e:	2b00      	cmp	r3, #0
 8006a20:	d10a      	bne.n	8006a38 <HAL_PCD_IRQHandler+0x8ae>
 8006a22:	69fb      	ldr	r3, [r7, #28]
 8006a24:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006a28:	685b      	ldr	r3, [r3, #4]
 8006a2a:	69fa      	ldr	r2, [r7, #28]
 8006a2c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006a30:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006a34:	6053      	str	r3, [r2, #4]
 8006a36:	e008      	b.n	8006a4a <HAL_PCD_IRQHandler+0x8c0>
 8006a38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a3a:	3301      	adds	r3, #1
 8006a3c:	627b      	str	r3, [r7, #36]	; 0x24
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	791b      	ldrb	r3, [r3, #4]
 8006a42:	461a      	mov	r2, r3
 8006a44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a46:	4293      	cmp	r3, r2
 8006a48:	d3b3      	bcc.n	80069b2 <HAL_PCD_IRQHandler+0x828>
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	695a      	ldr	r2, [r3, #20]
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	681b      	ldr	r3, [r3, #0]
 8006a54:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 8006a58:	615a      	str	r2, [r3, #20]
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	4618      	mov	r0, r3
 8006a60:	f003 f84a 	bl	8009af8 <USB_ReadInterrupts>
 8006a64:	4603      	mov	r3, r0
 8006a66:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8006a6a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006a6e:	d10a      	bne.n	8006a86 <HAL_PCD_IRQHandler+0x8fc>
 8006a70:	6878      	ldr	r0, [r7, #4]
 8006a72:	f005 fc93 	bl	800c39c <HAL_PCD_ConnectCallback>
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	681b      	ldr	r3, [r3, #0]
 8006a7a:	695a      	ldr	r2, [r3, #20]
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8006a84:	615a      	str	r2, [r3, #20]
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	4618      	mov	r0, r3
 8006a8c:	f003 f834 	bl	8009af8 <USB_ReadInterrupts>
 8006a90:	4603      	mov	r3, r0
 8006a92:	f003 0304 	and.w	r3, r3, #4
 8006a96:	2b04      	cmp	r3, #4
 8006a98:	d115      	bne.n	8006ac6 <HAL_PCD_IRQHandler+0x93c>
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	685b      	ldr	r3, [r3, #4]
 8006aa0:	61bb      	str	r3, [r7, #24]
 8006aa2:	69bb      	ldr	r3, [r7, #24]
 8006aa4:	f003 0304 	and.w	r3, r3, #4
 8006aa8:	2b00      	cmp	r3, #0
 8006aaa:	d002      	beq.n	8006ab2 <HAL_PCD_IRQHandler+0x928>
 8006aac:	6878      	ldr	r0, [r7, #4]
 8006aae:	f005 fc83 	bl	800c3b8 <HAL_PCD_DisconnectCallback>
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	6859      	ldr	r1, [r3, #4]
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	681b      	ldr	r3, [r3, #0]
 8006abc:	69ba      	ldr	r2, [r7, #24]
 8006abe:	430a      	orrs	r2, r1
 8006ac0:	605a      	str	r2, [r3, #4]
 8006ac2:	e000      	b.n	8006ac6 <HAL_PCD_IRQHandler+0x93c>
 8006ac4:	bf00      	nop
 8006ac6:	3734      	adds	r7, #52	; 0x34
 8006ac8:	46bd      	mov	sp, r7
 8006aca:	bd90      	pop	{r4, r7, pc}

08006acc <HAL_PCD_SetAddress>:
 8006acc:	b580      	push	{r7, lr}
 8006ace:	b082      	sub	sp, #8
 8006ad0:	af00      	add	r7, sp, #0
 8006ad2:	6078      	str	r0, [r7, #4]
 8006ad4:	460b      	mov	r3, r1
 8006ad6:	70fb      	strb	r3, [r7, #3]
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8006ade:	2b01      	cmp	r3, #1
 8006ae0:	d101      	bne.n	8006ae6 <HAL_PCD_SetAddress+0x1a>
 8006ae2:	2302      	movs	r3, #2
 8006ae4:	e012      	b.n	8006b0c <HAL_PCD_SetAddress+0x40>
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	2201      	movs	r2, #1
 8006aea:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	78fa      	ldrb	r2, [r7, #3]
 8006af2:	745a      	strb	r2, [r3, #17]
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	78fa      	ldrb	r2, [r7, #3]
 8006afa:	4611      	mov	r1, r2
 8006afc:	4618      	mov	r0, r3
 8006afe:	f002 ff93 	bl	8009a28 <USB_SetDevAddress>
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	2200      	movs	r2, #0
 8006b06:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006b0a:	2300      	movs	r3, #0
 8006b0c:	4618      	mov	r0, r3
 8006b0e:	3708      	adds	r7, #8
 8006b10:	46bd      	mov	sp, r7
 8006b12:	bd80      	pop	{r7, pc}

08006b14 <HAL_PCD_EP_Open>:
 8006b14:	b580      	push	{r7, lr}
 8006b16:	b084      	sub	sp, #16
 8006b18:	af00      	add	r7, sp, #0
 8006b1a:	6078      	str	r0, [r7, #4]
 8006b1c:	4608      	mov	r0, r1
 8006b1e:	4611      	mov	r1, r2
 8006b20:	461a      	mov	r2, r3
 8006b22:	4603      	mov	r3, r0
 8006b24:	70fb      	strb	r3, [r7, #3]
 8006b26:	460b      	mov	r3, r1
 8006b28:	803b      	strh	r3, [r7, #0]
 8006b2a:	4613      	mov	r3, r2
 8006b2c:	70bb      	strb	r3, [r7, #2]
 8006b2e:	2300      	movs	r3, #0
 8006b30:	72fb      	strb	r3, [r7, #11]
 8006b32:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8006b36:	2b00      	cmp	r3, #0
 8006b38:	da0f      	bge.n	8006b5a <HAL_PCD_EP_Open+0x46>
 8006b3a:	78fb      	ldrb	r3, [r7, #3]
 8006b3c:	f003 020f 	and.w	r2, r3, #15
 8006b40:	4613      	mov	r3, r2
 8006b42:	00db      	lsls	r3, r3, #3
 8006b44:	4413      	add	r3, r2
 8006b46:	009b      	lsls	r3, r3, #2
 8006b48:	3310      	adds	r3, #16
 8006b4a:	687a      	ldr	r2, [r7, #4]
 8006b4c:	4413      	add	r3, r2
 8006b4e:	3304      	adds	r3, #4
 8006b50:	60fb      	str	r3, [r7, #12]
 8006b52:	68fb      	ldr	r3, [r7, #12]
 8006b54:	2201      	movs	r2, #1
 8006b56:	705a      	strb	r2, [r3, #1]
 8006b58:	e00f      	b.n	8006b7a <HAL_PCD_EP_Open+0x66>
 8006b5a:	78fb      	ldrb	r3, [r7, #3]
 8006b5c:	f003 020f 	and.w	r2, r3, #15
 8006b60:	4613      	mov	r3, r2
 8006b62:	00db      	lsls	r3, r3, #3
 8006b64:	4413      	add	r3, r2
 8006b66:	009b      	lsls	r3, r3, #2
 8006b68:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8006b6c:	687a      	ldr	r2, [r7, #4]
 8006b6e:	4413      	add	r3, r2
 8006b70:	3304      	adds	r3, #4
 8006b72:	60fb      	str	r3, [r7, #12]
 8006b74:	68fb      	ldr	r3, [r7, #12]
 8006b76:	2200      	movs	r2, #0
 8006b78:	705a      	strb	r2, [r3, #1]
 8006b7a:	78fb      	ldrb	r3, [r7, #3]
 8006b7c:	f003 030f 	and.w	r3, r3, #15
 8006b80:	b2da      	uxtb	r2, r3
 8006b82:	68fb      	ldr	r3, [r7, #12]
 8006b84:	701a      	strb	r2, [r3, #0]
 8006b86:	883a      	ldrh	r2, [r7, #0]
 8006b88:	68fb      	ldr	r3, [r7, #12]
 8006b8a:	609a      	str	r2, [r3, #8]
 8006b8c:	68fb      	ldr	r3, [r7, #12]
 8006b8e:	78ba      	ldrb	r2, [r7, #2]
 8006b90:	711a      	strb	r2, [r3, #4]
 8006b92:	68fb      	ldr	r3, [r7, #12]
 8006b94:	785b      	ldrb	r3, [r3, #1]
 8006b96:	2b00      	cmp	r3, #0
 8006b98:	d004      	beq.n	8006ba4 <HAL_PCD_EP_Open+0x90>
 8006b9a:	68fb      	ldr	r3, [r7, #12]
 8006b9c:	781b      	ldrb	r3, [r3, #0]
 8006b9e:	b29a      	uxth	r2, r3
 8006ba0:	68fb      	ldr	r3, [r7, #12]
 8006ba2:	835a      	strh	r2, [r3, #26]
 8006ba4:	78bb      	ldrb	r3, [r7, #2]
 8006ba6:	2b02      	cmp	r3, #2
 8006ba8:	d102      	bne.n	8006bb0 <HAL_PCD_EP_Open+0x9c>
 8006baa:	68fb      	ldr	r3, [r7, #12]
 8006bac:	2200      	movs	r2, #0
 8006bae:	715a      	strb	r2, [r3, #5]
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8006bb6:	2b01      	cmp	r3, #1
 8006bb8:	d101      	bne.n	8006bbe <HAL_PCD_EP_Open+0xaa>
 8006bba:	2302      	movs	r3, #2
 8006bbc:	e00e      	b.n	8006bdc <HAL_PCD_EP_Open+0xc8>
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	2201      	movs	r2, #1
 8006bc2:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	68f9      	ldr	r1, [r7, #12]
 8006bcc:	4618      	mov	r0, r3
 8006bce:	f002 f91b 	bl	8008e08 <USB_ActivateEndpoint>
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	2200      	movs	r2, #0
 8006bd6:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006bda:	7afb      	ldrb	r3, [r7, #11]
 8006bdc:	4618      	mov	r0, r3
 8006bde:	3710      	adds	r7, #16
 8006be0:	46bd      	mov	sp, r7
 8006be2:	bd80      	pop	{r7, pc}

08006be4 <HAL_PCD_EP_Close>:
 8006be4:	b580      	push	{r7, lr}
 8006be6:	b084      	sub	sp, #16
 8006be8:	af00      	add	r7, sp, #0
 8006bea:	6078      	str	r0, [r7, #4]
 8006bec:	460b      	mov	r3, r1
 8006bee:	70fb      	strb	r3, [r7, #3]
 8006bf0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8006bf4:	2b00      	cmp	r3, #0
 8006bf6:	da0f      	bge.n	8006c18 <HAL_PCD_EP_Close+0x34>
 8006bf8:	78fb      	ldrb	r3, [r7, #3]
 8006bfa:	f003 020f 	and.w	r2, r3, #15
 8006bfe:	4613      	mov	r3, r2
 8006c00:	00db      	lsls	r3, r3, #3
 8006c02:	4413      	add	r3, r2
 8006c04:	009b      	lsls	r3, r3, #2
 8006c06:	3310      	adds	r3, #16
 8006c08:	687a      	ldr	r2, [r7, #4]
 8006c0a:	4413      	add	r3, r2
 8006c0c:	3304      	adds	r3, #4
 8006c0e:	60fb      	str	r3, [r7, #12]
 8006c10:	68fb      	ldr	r3, [r7, #12]
 8006c12:	2201      	movs	r2, #1
 8006c14:	705a      	strb	r2, [r3, #1]
 8006c16:	e00f      	b.n	8006c38 <HAL_PCD_EP_Close+0x54>
 8006c18:	78fb      	ldrb	r3, [r7, #3]
 8006c1a:	f003 020f 	and.w	r2, r3, #15
 8006c1e:	4613      	mov	r3, r2
 8006c20:	00db      	lsls	r3, r3, #3
 8006c22:	4413      	add	r3, r2
 8006c24:	009b      	lsls	r3, r3, #2
 8006c26:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8006c2a:	687a      	ldr	r2, [r7, #4]
 8006c2c:	4413      	add	r3, r2
 8006c2e:	3304      	adds	r3, #4
 8006c30:	60fb      	str	r3, [r7, #12]
 8006c32:	68fb      	ldr	r3, [r7, #12]
 8006c34:	2200      	movs	r2, #0
 8006c36:	705a      	strb	r2, [r3, #1]
 8006c38:	78fb      	ldrb	r3, [r7, #3]
 8006c3a:	f003 030f 	and.w	r3, r3, #15
 8006c3e:	b2da      	uxtb	r2, r3
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	701a      	strb	r2, [r3, #0]
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8006c4a:	2b01      	cmp	r3, #1
 8006c4c:	d101      	bne.n	8006c52 <HAL_PCD_EP_Close+0x6e>
 8006c4e:	2302      	movs	r3, #2
 8006c50:	e00e      	b.n	8006c70 <HAL_PCD_EP_Close+0x8c>
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	2201      	movs	r2, #1
 8006c56:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	68f9      	ldr	r1, [r7, #12]
 8006c60:	4618      	mov	r0, r3
 8006c62:	f002 f959 	bl	8008f18 <USB_DeactivateEndpoint>
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	2200      	movs	r2, #0
 8006c6a:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006c6e:	2300      	movs	r3, #0
 8006c70:	4618      	mov	r0, r3
 8006c72:	3710      	adds	r7, #16
 8006c74:	46bd      	mov	sp, r7
 8006c76:	bd80      	pop	{r7, pc}

08006c78 <HAL_PCD_EP_Receive>:
 8006c78:	b580      	push	{r7, lr}
 8006c7a:	b086      	sub	sp, #24
 8006c7c:	af00      	add	r7, sp, #0
 8006c7e:	60f8      	str	r0, [r7, #12]
 8006c80:	607a      	str	r2, [r7, #4]
 8006c82:	603b      	str	r3, [r7, #0]
 8006c84:	460b      	mov	r3, r1
 8006c86:	72fb      	strb	r3, [r7, #11]
 8006c88:	7afb      	ldrb	r3, [r7, #11]
 8006c8a:	f003 020f 	and.w	r2, r3, #15
 8006c8e:	4613      	mov	r3, r2
 8006c90:	00db      	lsls	r3, r3, #3
 8006c92:	4413      	add	r3, r2
 8006c94:	009b      	lsls	r3, r3, #2
 8006c96:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8006c9a:	68fa      	ldr	r2, [r7, #12]
 8006c9c:	4413      	add	r3, r2
 8006c9e:	3304      	adds	r3, #4
 8006ca0:	617b      	str	r3, [r7, #20]
 8006ca2:	697b      	ldr	r3, [r7, #20]
 8006ca4:	687a      	ldr	r2, [r7, #4]
 8006ca6:	60da      	str	r2, [r3, #12]
 8006ca8:	697b      	ldr	r3, [r7, #20]
 8006caa:	683a      	ldr	r2, [r7, #0]
 8006cac:	611a      	str	r2, [r3, #16]
 8006cae:	697b      	ldr	r3, [r7, #20]
 8006cb0:	2200      	movs	r2, #0
 8006cb2:	615a      	str	r2, [r3, #20]
 8006cb4:	697b      	ldr	r3, [r7, #20]
 8006cb6:	2200      	movs	r2, #0
 8006cb8:	705a      	strb	r2, [r3, #1]
 8006cba:	7afb      	ldrb	r3, [r7, #11]
 8006cbc:	f003 030f 	and.w	r3, r3, #15
 8006cc0:	b2da      	uxtb	r2, r3
 8006cc2:	697b      	ldr	r3, [r7, #20]
 8006cc4:	701a      	strb	r2, [r3, #0]
 8006cc6:	68fb      	ldr	r3, [r7, #12]
 8006cc8:	799b      	ldrb	r3, [r3, #6]
 8006cca:	2b01      	cmp	r3, #1
 8006ccc:	d102      	bne.n	8006cd4 <HAL_PCD_EP_Receive+0x5c>
 8006cce:	687a      	ldr	r2, [r7, #4]
 8006cd0:	697b      	ldr	r3, [r7, #20]
 8006cd2:	61da      	str	r2, [r3, #28]
 8006cd4:	68fb      	ldr	r3, [r7, #12]
 8006cd6:	6818      	ldr	r0, [r3, #0]
 8006cd8:	68fb      	ldr	r3, [r7, #12]
 8006cda:	799b      	ldrb	r3, [r3, #6]
 8006cdc:	461a      	mov	r2, r3
 8006cde:	6979      	ldr	r1, [r7, #20]
 8006ce0:	f002 f9f6 	bl	80090d0 <USB_EPStartXfer>
 8006ce4:	2300      	movs	r3, #0
 8006ce6:	4618      	mov	r0, r3
 8006ce8:	3718      	adds	r7, #24
 8006cea:	46bd      	mov	sp, r7
 8006cec:	bd80      	pop	{r7, pc}

08006cee <HAL_PCD_EP_GetRxCount>:
 8006cee:	b480      	push	{r7}
 8006cf0:	b083      	sub	sp, #12
 8006cf2:	af00      	add	r7, sp, #0
 8006cf4:	6078      	str	r0, [r7, #4]
 8006cf6:	460b      	mov	r3, r1
 8006cf8:	70fb      	strb	r3, [r7, #3]
 8006cfa:	78fb      	ldrb	r3, [r7, #3]
 8006cfc:	f003 020f 	and.w	r2, r3, #15
 8006d00:	6879      	ldr	r1, [r7, #4]
 8006d02:	4613      	mov	r3, r2
 8006d04:	00db      	lsls	r3, r3, #3
 8006d06:	4413      	add	r3, r2
 8006d08:	009b      	lsls	r3, r3, #2
 8006d0a:	440b      	add	r3, r1
 8006d0c:	f503 731a 	add.w	r3, r3, #616	; 0x268
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	4618      	mov	r0, r3
 8006d14:	370c      	adds	r7, #12
 8006d16:	46bd      	mov	sp, r7
 8006d18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d1c:	4770      	bx	lr

08006d1e <HAL_PCD_EP_Transmit>:
 8006d1e:	b580      	push	{r7, lr}
 8006d20:	b086      	sub	sp, #24
 8006d22:	af00      	add	r7, sp, #0
 8006d24:	60f8      	str	r0, [r7, #12]
 8006d26:	607a      	str	r2, [r7, #4]
 8006d28:	603b      	str	r3, [r7, #0]
 8006d2a:	460b      	mov	r3, r1
 8006d2c:	72fb      	strb	r3, [r7, #11]
 8006d2e:	7afb      	ldrb	r3, [r7, #11]
 8006d30:	f003 020f 	and.w	r2, r3, #15
 8006d34:	4613      	mov	r3, r2
 8006d36:	00db      	lsls	r3, r3, #3
 8006d38:	4413      	add	r3, r2
 8006d3a:	009b      	lsls	r3, r3, #2
 8006d3c:	3310      	adds	r3, #16
 8006d3e:	68fa      	ldr	r2, [r7, #12]
 8006d40:	4413      	add	r3, r2
 8006d42:	3304      	adds	r3, #4
 8006d44:	617b      	str	r3, [r7, #20]
 8006d46:	697b      	ldr	r3, [r7, #20]
 8006d48:	687a      	ldr	r2, [r7, #4]
 8006d4a:	60da      	str	r2, [r3, #12]
 8006d4c:	697b      	ldr	r3, [r7, #20]
 8006d4e:	683a      	ldr	r2, [r7, #0]
 8006d50:	611a      	str	r2, [r3, #16]
 8006d52:	697b      	ldr	r3, [r7, #20]
 8006d54:	2200      	movs	r2, #0
 8006d56:	615a      	str	r2, [r3, #20]
 8006d58:	697b      	ldr	r3, [r7, #20]
 8006d5a:	2201      	movs	r2, #1
 8006d5c:	705a      	strb	r2, [r3, #1]
 8006d5e:	7afb      	ldrb	r3, [r7, #11]
 8006d60:	f003 030f 	and.w	r3, r3, #15
 8006d64:	b2da      	uxtb	r2, r3
 8006d66:	697b      	ldr	r3, [r7, #20]
 8006d68:	701a      	strb	r2, [r3, #0]
 8006d6a:	68fb      	ldr	r3, [r7, #12]
 8006d6c:	799b      	ldrb	r3, [r3, #6]
 8006d6e:	2b01      	cmp	r3, #1
 8006d70:	d102      	bne.n	8006d78 <HAL_PCD_EP_Transmit+0x5a>
 8006d72:	687a      	ldr	r2, [r7, #4]
 8006d74:	697b      	ldr	r3, [r7, #20]
 8006d76:	61da      	str	r2, [r3, #28]
 8006d78:	68fb      	ldr	r3, [r7, #12]
 8006d7a:	6818      	ldr	r0, [r3, #0]
 8006d7c:	68fb      	ldr	r3, [r7, #12]
 8006d7e:	799b      	ldrb	r3, [r3, #6]
 8006d80:	461a      	mov	r2, r3
 8006d82:	6979      	ldr	r1, [r7, #20]
 8006d84:	f002 f9a4 	bl	80090d0 <USB_EPStartXfer>
 8006d88:	2300      	movs	r3, #0
 8006d8a:	4618      	mov	r0, r3
 8006d8c:	3718      	adds	r7, #24
 8006d8e:	46bd      	mov	sp, r7
 8006d90:	bd80      	pop	{r7, pc}

08006d92 <HAL_PCD_EP_SetStall>:
 8006d92:	b580      	push	{r7, lr}
 8006d94:	b084      	sub	sp, #16
 8006d96:	af00      	add	r7, sp, #0
 8006d98:	6078      	str	r0, [r7, #4]
 8006d9a:	460b      	mov	r3, r1
 8006d9c:	70fb      	strb	r3, [r7, #3]
 8006d9e:	78fb      	ldrb	r3, [r7, #3]
 8006da0:	f003 030f 	and.w	r3, r3, #15
 8006da4:	687a      	ldr	r2, [r7, #4]
 8006da6:	7912      	ldrb	r2, [r2, #4]
 8006da8:	4293      	cmp	r3, r2
 8006daa:	d901      	bls.n	8006db0 <HAL_PCD_EP_SetStall+0x1e>
 8006dac:	2301      	movs	r3, #1
 8006dae:	e04f      	b.n	8006e50 <HAL_PCD_EP_SetStall+0xbe>
 8006db0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8006db4:	2b00      	cmp	r3, #0
 8006db6:	da0f      	bge.n	8006dd8 <HAL_PCD_EP_SetStall+0x46>
 8006db8:	78fb      	ldrb	r3, [r7, #3]
 8006dba:	f003 020f 	and.w	r2, r3, #15
 8006dbe:	4613      	mov	r3, r2
 8006dc0:	00db      	lsls	r3, r3, #3
 8006dc2:	4413      	add	r3, r2
 8006dc4:	009b      	lsls	r3, r3, #2
 8006dc6:	3310      	adds	r3, #16
 8006dc8:	687a      	ldr	r2, [r7, #4]
 8006dca:	4413      	add	r3, r2
 8006dcc:	3304      	adds	r3, #4
 8006dce:	60fb      	str	r3, [r7, #12]
 8006dd0:	68fb      	ldr	r3, [r7, #12]
 8006dd2:	2201      	movs	r2, #1
 8006dd4:	705a      	strb	r2, [r3, #1]
 8006dd6:	e00d      	b.n	8006df4 <HAL_PCD_EP_SetStall+0x62>
 8006dd8:	78fa      	ldrb	r2, [r7, #3]
 8006dda:	4613      	mov	r3, r2
 8006ddc:	00db      	lsls	r3, r3, #3
 8006dde:	4413      	add	r3, r2
 8006de0:	009b      	lsls	r3, r3, #2
 8006de2:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8006de6:	687a      	ldr	r2, [r7, #4]
 8006de8:	4413      	add	r3, r2
 8006dea:	3304      	adds	r3, #4
 8006dec:	60fb      	str	r3, [r7, #12]
 8006dee:	68fb      	ldr	r3, [r7, #12]
 8006df0:	2200      	movs	r2, #0
 8006df2:	705a      	strb	r2, [r3, #1]
 8006df4:	68fb      	ldr	r3, [r7, #12]
 8006df6:	2201      	movs	r2, #1
 8006df8:	709a      	strb	r2, [r3, #2]
 8006dfa:	78fb      	ldrb	r3, [r7, #3]
 8006dfc:	f003 030f 	and.w	r3, r3, #15
 8006e00:	b2da      	uxtb	r2, r3
 8006e02:	68fb      	ldr	r3, [r7, #12]
 8006e04:	701a      	strb	r2, [r3, #0]
 8006e06:	687b      	ldr	r3, [r7, #4]
 8006e08:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8006e0c:	2b01      	cmp	r3, #1
 8006e0e:	d101      	bne.n	8006e14 <HAL_PCD_EP_SetStall+0x82>
 8006e10:	2302      	movs	r3, #2
 8006e12:	e01d      	b.n	8006e50 <HAL_PCD_EP_SetStall+0xbe>
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	2201      	movs	r2, #1
 8006e18:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	681b      	ldr	r3, [r3, #0]
 8006e20:	68f9      	ldr	r1, [r7, #12]
 8006e22:	4618      	mov	r0, r3
 8006e24:	f002 fd2c 	bl	8009880 <USB_EPSetStall>
 8006e28:	78fb      	ldrb	r3, [r7, #3]
 8006e2a:	f003 030f 	and.w	r3, r3, #15
 8006e2e:	2b00      	cmp	r3, #0
 8006e30:	d109      	bne.n	8006e46 <HAL_PCD_EP_SetStall+0xb4>
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	6818      	ldr	r0, [r3, #0]
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	7999      	ldrb	r1, [r3, #6]
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8006e40:	461a      	mov	r2, r3
 8006e42:	f002 ff1d 	bl	8009c80 <USB_EP0_OutStart>
 8006e46:	687b      	ldr	r3, [r7, #4]
 8006e48:	2200      	movs	r2, #0
 8006e4a:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006e4e:	2300      	movs	r3, #0
 8006e50:	4618      	mov	r0, r3
 8006e52:	3710      	adds	r7, #16
 8006e54:	46bd      	mov	sp, r7
 8006e56:	bd80      	pop	{r7, pc}

08006e58 <HAL_PCD_EP_ClrStall>:
 8006e58:	b580      	push	{r7, lr}
 8006e5a:	b084      	sub	sp, #16
 8006e5c:	af00      	add	r7, sp, #0
 8006e5e:	6078      	str	r0, [r7, #4]
 8006e60:	460b      	mov	r3, r1
 8006e62:	70fb      	strb	r3, [r7, #3]
 8006e64:	78fb      	ldrb	r3, [r7, #3]
 8006e66:	f003 030f 	and.w	r3, r3, #15
 8006e6a:	687a      	ldr	r2, [r7, #4]
 8006e6c:	7912      	ldrb	r2, [r2, #4]
 8006e6e:	4293      	cmp	r3, r2
 8006e70:	d901      	bls.n	8006e76 <HAL_PCD_EP_ClrStall+0x1e>
 8006e72:	2301      	movs	r3, #1
 8006e74:	e042      	b.n	8006efc <HAL_PCD_EP_ClrStall+0xa4>
 8006e76:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8006e7a:	2b00      	cmp	r3, #0
 8006e7c:	da0f      	bge.n	8006e9e <HAL_PCD_EP_ClrStall+0x46>
 8006e7e:	78fb      	ldrb	r3, [r7, #3]
 8006e80:	f003 020f 	and.w	r2, r3, #15
 8006e84:	4613      	mov	r3, r2
 8006e86:	00db      	lsls	r3, r3, #3
 8006e88:	4413      	add	r3, r2
 8006e8a:	009b      	lsls	r3, r3, #2
 8006e8c:	3310      	adds	r3, #16
 8006e8e:	687a      	ldr	r2, [r7, #4]
 8006e90:	4413      	add	r3, r2
 8006e92:	3304      	adds	r3, #4
 8006e94:	60fb      	str	r3, [r7, #12]
 8006e96:	68fb      	ldr	r3, [r7, #12]
 8006e98:	2201      	movs	r2, #1
 8006e9a:	705a      	strb	r2, [r3, #1]
 8006e9c:	e00f      	b.n	8006ebe <HAL_PCD_EP_ClrStall+0x66>
 8006e9e:	78fb      	ldrb	r3, [r7, #3]
 8006ea0:	f003 020f 	and.w	r2, r3, #15
 8006ea4:	4613      	mov	r3, r2
 8006ea6:	00db      	lsls	r3, r3, #3
 8006ea8:	4413      	add	r3, r2
 8006eaa:	009b      	lsls	r3, r3, #2
 8006eac:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8006eb0:	687a      	ldr	r2, [r7, #4]
 8006eb2:	4413      	add	r3, r2
 8006eb4:	3304      	adds	r3, #4
 8006eb6:	60fb      	str	r3, [r7, #12]
 8006eb8:	68fb      	ldr	r3, [r7, #12]
 8006eba:	2200      	movs	r2, #0
 8006ebc:	705a      	strb	r2, [r3, #1]
 8006ebe:	68fb      	ldr	r3, [r7, #12]
 8006ec0:	2200      	movs	r2, #0
 8006ec2:	709a      	strb	r2, [r3, #2]
 8006ec4:	78fb      	ldrb	r3, [r7, #3]
 8006ec6:	f003 030f 	and.w	r3, r3, #15
 8006eca:	b2da      	uxtb	r2, r3
 8006ecc:	68fb      	ldr	r3, [r7, #12]
 8006ece:	701a      	strb	r2, [r3, #0]
 8006ed0:	687b      	ldr	r3, [r7, #4]
 8006ed2:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8006ed6:	2b01      	cmp	r3, #1
 8006ed8:	d101      	bne.n	8006ede <HAL_PCD_EP_ClrStall+0x86>
 8006eda:	2302      	movs	r3, #2
 8006edc:	e00e      	b.n	8006efc <HAL_PCD_EP_ClrStall+0xa4>
 8006ede:	687b      	ldr	r3, [r7, #4]
 8006ee0:	2201      	movs	r2, #1
 8006ee2:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	68f9      	ldr	r1, [r7, #12]
 8006eec:	4618      	mov	r0, r3
 8006eee:	f002 fd35 	bl	800995c <USB_EPClearStall>
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	2200      	movs	r2, #0
 8006ef6:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8006efa:	2300      	movs	r3, #0
 8006efc:	4618      	mov	r0, r3
 8006efe:	3710      	adds	r7, #16
 8006f00:	46bd      	mov	sp, r7
 8006f02:	bd80      	pop	{r7, pc}

08006f04 <HAL_PCD_EP_Abort>:
 8006f04:	b580      	push	{r7, lr}
 8006f06:	b084      	sub	sp, #16
 8006f08:	af00      	add	r7, sp, #0
 8006f0a:	6078      	str	r0, [r7, #4]
 8006f0c:	460b      	mov	r3, r1
 8006f0e:	70fb      	strb	r3, [r7, #3]
 8006f10:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8006f14:	2b00      	cmp	r3, #0
 8006f16:	da0c      	bge.n	8006f32 <HAL_PCD_EP_Abort+0x2e>
 8006f18:	78fb      	ldrb	r3, [r7, #3]
 8006f1a:	f003 020f 	and.w	r2, r3, #15
 8006f1e:	4613      	mov	r3, r2
 8006f20:	00db      	lsls	r3, r3, #3
 8006f22:	4413      	add	r3, r2
 8006f24:	009b      	lsls	r3, r3, #2
 8006f26:	3310      	adds	r3, #16
 8006f28:	687a      	ldr	r2, [r7, #4]
 8006f2a:	4413      	add	r3, r2
 8006f2c:	3304      	adds	r3, #4
 8006f2e:	60fb      	str	r3, [r7, #12]
 8006f30:	e00c      	b.n	8006f4c <HAL_PCD_EP_Abort+0x48>
 8006f32:	78fb      	ldrb	r3, [r7, #3]
 8006f34:	f003 020f 	and.w	r2, r3, #15
 8006f38:	4613      	mov	r3, r2
 8006f3a:	00db      	lsls	r3, r3, #3
 8006f3c:	4413      	add	r3, r2
 8006f3e:	009b      	lsls	r3, r3, #2
 8006f40:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8006f44:	687a      	ldr	r2, [r7, #4]
 8006f46:	4413      	add	r3, r2
 8006f48:	3304      	adds	r3, #4
 8006f4a:	60fb      	str	r3, [r7, #12]
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	68f9      	ldr	r1, [r7, #12]
 8006f52:	4618      	mov	r0, r3
 8006f54:	f002 fb54 	bl	8009600 <USB_EPStopXfer>
 8006f58:	4603      	mov	r3, r0
 8006f5a:	72fb      	strb	r3, [r7, #11]
 8006f5c:	7afb      	ldrb	r3, [r7, #11]
 8006f5e:	4618      	mov	r0, r3
 8006f60:	3710      	adds	r7, #16
 8006f62:	46bd      	mov	sp, r7
 8006f64:	bd80      	pop	{r7, pc}

08006f66 <PCD_WriteEmptyTxFifo>:
 8006f66:	b580      	push	{r7, lr}
 8006f68:	b08a      	sub	sp, #40	; 0x28
 8006f6a:	af02      	add	r7, sp, #8
 8006f6c:	6078      	str	r0, [r7, #4]
 8006f6e:	6039      	str	r1, [r7, #0]
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	617b      	str	r3, [r7, #20]
 8006f76:	697b      	ldr	r3, [r7, #20]
 8006f78:	613b      	str	r3, [r7, #16]
 8006f7a:	683a      	ldr	r2, [r7, #0]
 8006f7c:	4613      	mov	r3, r2
 8006f7e:	00db      	lsls	r3, r3, #3
 8006f80:	4413      	add	r3, r2
 8006f82:	009b      	lsls	r3, r3, #2
 8006f84:	3310      	adds	r3, #16
 8006f86:	687a      	ldr	r2, [r7, #4]
 8006f88:	4413      	add	r3, r2
 8006f8a:	3304      	adds	r3, #4
 8006f8c:	60fb      	str	r3, [r7, #12]
 8006f8e:	68fb      	ldr	r3, [r7, #12]
 8006f90:	695a      	ldr	r2, [r3, #20]
 8006f92:	68fb      	ldr	r3, [r7, #12]
 8006f94:	691b      	ldr	r3, [r3, #16]
 8006f96:	429a      	cmp	r2, r3
 8006f98:	d901      	bls.n	8006f9e <PCD_WriteEmptyTxFifo+0x38>
 8006f9a:	2301      	movs	r3, #1
 8006f9c:	e06b      	b.n	8007076 <PCD_WriteEmptyTxFifo+0x110>
 8006f9e:	68fb      	ldr	r3, [r7, #12]
 8006fa0:	691a      	ldr	r2, [r3, #16]
 8006fa2:	68fb      	ldr	r3, [r7, #12]
 8006fa4:	695b      	ldr	r3, [r3, #20]
 8006fa6:	1ad3      	subs	r3, r2, r3
 8006fa8:	61fb      	str	r3, [r7, #28]
 8006faa:	68fb      	ldr	r3, [r7, #12]
 8006fac:	689b      	ldr	r3, [r3, #8]
 8006fae:	69fa      	ldr	r2, [r7, #28]
 8006fb0:	429a      	cmp	r2, r3
 8006fb2:	d902      	bls.n	8006fba <PCD_WriteEmptyTxFifo+0x54>
 8006fb4:	68fb      	ldr	r3, [r7, #12]
 8006fb6:	689b      	ldr	r3, [r3, #8]
 8006fb8:	61fb      	str	r3, [r7, #28]
 8006fba:	69fb      	ldr	r3, [r7, #28]
 8006fbc:	3303      	adds	r3, #3
 8006fbe:	089b      	lsrs	r3, r3, #2
 8006fc0:	61bb      	str	r3, [r7, #24]
 8006fc2:	e02a      	b.n	800701a <PCD_WriteEmptyTxFifo+0xb4>
 8006fc4:	68fb      	ldr	r3, [r7, #12]
 8006fc6:	691a      	ldr	r2, [r3, #16]
 8006fc8:	68fb      	ldr	r3, [r7, #12]
 8006fca:	695b      	ldr	r3, [r3, #20]
 8006fcc:	1ad3      	subs	r3, r2, r3
 8006fce:	61fb      	str	r3, [r7, #28]
 8006fd0:	68fb      	ldr	r3, [r7, #12]
 8006fd2:	689b      	ldr	r3, [r3, #8]
 8006fd4:	69fa      	ldr	r2, [r7, #28]
 8006fd6:	429a      	cmp	r2, r3
 8006fd8:	d902      	bls.n	8006fe0 <PCD_WriteEmptyTxFifo+0x7a>
 8006fda:	68fb      	ldr	r3, [r7, #12]
 8006fdc:	689b      	ldr	r3, [r3, #8]
 8006fde:	61fb      	str	r3, [r7, #28]
 8006fe0:	69fb      	ldr	r3, [r7, #28]
 8006fe2:	3303      	adds	r3, #3
 8006fe4:	089b      	lsrs	r3, r3, #2
 8006fe6:	61bb      	str	r3, [r7, #24]
 8006fe8:	68fb      	ldr	r3, [r7, #12]
 8006fea:	68d9      	ldr	r1, [r3, #12]
 8006fec:	683b      	ldr	r3, [r7, #0]
 8006fee:	b2da      	uxtb	r2, r3
 8006ff0:	69fb      	ldr	r3, [r7, #28]
 8006ff2:	b298      	uxth	r0, r3
 8006ff4:	687b      	ldr	r3, [r7, #4]
 8006ff6:	799b      	ldrb	r3, [r3, #6]
 8006ff8:	9300      	str	r3, [sp, #0]
 8006ffa:	4603      	mov	r3, r0
 8006ffc:	6978      	ldr	r0, [r7, #20]
 8006ffe:	f002 fba9 	bl	8009754 <USB_WritePacket>
 8007002:	68fb      	ldr	r3, [r7, #12]
 8007004:	68da      	ldr	r2, [r3, #12]
 8007006:	69fb      	ldr	r3, [r7, #28]
 8007008:	441a      	add	r2, r3
 800700a:	68fb      	ldr	r3, [r7, #12]
 800700c:	60da      	str	r2, [r3, #12]
 800700e:	68fb      	ldr	r3, [r7, #12]
 8007010:	695a      	ldr	r2, [r3, #20]
 8007012:	69fb      	ldr	r3, [r7, #28]
 8007014:	441a      	add	r2, r3
 8007016:	68fb      	ldr	r3, [r7, #12]
 8007018:	615a      	str	r2, [r3, #20]
 800701a:	683b      	ldr	r3, [r7, #0]
 800701c:	015a      	lsls	r2, r3, #5
 800701e:	693b      	ldr	r3, [r7, #16]
 8007020:	4413      	add	r3, r2
 8007022:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007026:	699b      	ldr	r3, [r3, #24]
 8007028:	b29b      	uxth	r3, r3
 800702a:	69ba      	ldr	r2, [r7, #24]
 800702c:	429a      	cmp	r2, r3
 800702e:	d809      	bhi.n	8007044 <PCD_WriteEmptyTxFifo+0xde>
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	695a      	ldr	r2, [r3, #20]
 8007034:	68fb      	ldr	r3, [r7, #12]
 8007036:	691b      	ldr	r3, [r3, #16]
 8007038:	429a      	cmp	r2, r3
 800703a:	d203      	bcs.n	8007044 <PCD_WriteEmptyTxFifo+0xde>
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	691b      	ldr	r3, [r3, #16]
 8007040:	2b00      	cmp	r3, #0
 8007042:	d1bf      	bne.n	8006fc4 <PCD_WriteEmptyTxFifo+0x5e>
 8007044:	68fb      	ldr	r3, [r7, #12]
 8007046:	691a      	ldr	r2, [r3, #16]
 8007048:	68fb      	ldr	r3, [r7, #12]
 800704a:	695b      	ldr	r3, [r3, #20]
 800704c:	429a      	cmp	r2, r3
 800704e:	d811      	bhi.n	8007074 <PCD_WriteEmptyTxFifo+0x10e>
 8007050:	683b      	ldr	r3, [r7, #0]
 8007052:	f003 030f 	and.w	r3, r3, #15
 8007056:	2201      	movs	r2, #1
 8007058:	fa02 f303 	lsl.w	r3, r2, r3
 800705c:	60bb      	str	r3, [r7, #8]
 800705e:	693b      	ldr	r3, [r7, #16]
 8007060:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007064:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007066:	68bb      	ldr	r3, [r7, #8]
 8007068:	43db      	mvns	r3, r3
 800706a:	6939      	ldr	r1, [r7, #16]
 800706c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8007070:	4013      	ands	r3, r2
 8007072:	634b      	str	r3, [r1, #52]	; 0x34
 8007074:	2300      	movs	r3, #0
 8007076:	4618      	mov	r0, r3
 8007078:	3720      	adds	r7, #32
 800707a:	46bd      	mov	sp, r7
 800707c:	bd80      	pop	{r7, pc}
	...

08007080 <PCD_EP_OutXfrComplete_int>:
 8007080:	b580      	push	{r7, lr}
 8007082:	b088      	sub	sp, #32
 8007084:	af00      	add	r7, sp, #0
 8007086:	6078      	str	r0, [r7, #4]
 8007088:	6039      	str	r1, [r7, #0]
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	61fb      	str	r3, [r7, #28]
 8007090:	69fb      	ldr	r3, [r7, #28]
 8007092:	61bb      	str	r3, [r7, #24]
 8007094:	69fb      	ldr	r3, [r7, #28]
 8007096:	333c      	adds	r3, #60	; 0x3c
 8007098:	3304      	adds	r3, #4
 800709a:	681b      	ldr	r3, [r3, #0]
 800709c:	617b      	str	r3, [r7, #20]
 800709e:	683b      	ldr	r3, [r7, #0]
 80070a0:	015a      	lsls	r2, r3, #5
 80070a2:	69bb      	ldr	r3, [r7, #24]
 80070a4:	4413      	add	r3, r2
 80070a6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80070aa:	689b      	ldr	r3, [r3, #8]
 80070ac:	613b      	str	r3, [r7, #16]
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	799b      	ldrb	r3, [r3, #6]
 80070b2:	2b01      	cmp	r3, #1
 80070b4:	d17b      	bne.n	80071ae <PCD_EP_OutXfrComplete_int+0x12e>
 80070b6:	693b      	ldr	r3, [r7, #16]
 80070b8:	f003 0308 	and.w	r3, r3, #8
 80070bc:	2b00      	cmp	r3, #0
 80070be:	d015      	beq.n	80070ec <PCD_EP_OutXfrComplete_int+0x6c>
 80070c0:	697b      	ldr	r3, [r7, #20]
 80070c2:	4a61      	ldr	r2, [pc, #388]	; (8007248 <PCD_EP_OutXfrComplete_int+0x1c8>)
 80070c4:	4293      	cmp	r3, r2
 80070c6:	f240 80b9 	bls.w	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 80070ca:	693b      	ldr	r3, [r7, #16]
 80070cc:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80070d0:	2b00      	cmp	r3, #0
 80070d2:	f000 80b3 	beq.w	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 80070d6:	683b      	ldr	r3, [r7, #0]
 80070d8:	015a      	lsls	r2, r3, #5
 80070da:	69bb      	ldr	r3, [r7, #24]
 80070dc:	4413      	add	r3, r2
 80070de:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80070e2:	461a      	mov	r2, r3
 80070e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80070e8:	6093      	str	r3, [r2, #8]
 80070ea:	e0a7      	b.n	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 80070ec:	693b      	ldr	r3, [r7, #16]
 80070ee:	f003 0320 	and.w	r3, r3, #32
 80070f2:	2b00      	cmp	r3, #0
 80070f4:	d009      	beq.n	800710a <PCD_EP_OutXfrComplete_int+0x8a>
 80070f6:	683b      	ldr	r3, [r7, #0]
 80070f8:	015a      	lsls	r2, r3, #5
 80070fa:	69bb      	ldr	r3, [r7, #24]
 80070fc:	4413      	add	r3, r2
 80070fe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007102:	461a      	mov	r2, r3
 8007104:	2320      	movs	r3, #32
 8007106:	6093      	str	r3, [r2, #8]
 8007108:	e098      	b.n	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 800710a:	693b      	ldr	r3, [r7, #16]
 800710c:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007110:	2b00      	cmp	r3, #0
 8007112:	f040 8093 	bne.w	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 8007116:	697b      	ldr	r3, [r7, #20]
 8007118:	4a4b      	ldr	r2, [pc, #300]	; (8007248 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800711a:	4293      	cmp	r3, r2
 800711c:	d90f      	bls.n	800713e <PCD_EP_OutXfrComplete_int+0xbe>
 800711e:	693b      	ldr	r3, [r7, #16]
 8007120:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8007124:	2b00      	cmp	r3, #0
 8007126:	d00a      	beq.n	800713e <PCD_EP_OutXfrComplete_int+0xbe>
 8007128:	683b      	ldr	r3, [r7, #0]
 800712a:	015a      	lsls	r2, r3, #5
 800712c:	69bb      	ldr	r3, [r7, #24]
 800712e:	4413      	add	r3, r2
 8007130:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007134:	461a      	mov	r2, r3
 8007136:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800713a:	6093      	str	r3, [r2, #8]
 800713c:	e07e      	b.n	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 800713e:	683a      	ldr	r2, [r7, #0]
 8007140:	4613      	mov	r3, r2
 8007142:	00db      	lsls	r3, r3, #3
 8007144:	4413      	add	r3, r2
 8007146:	009b      	lsls	r3, r3, #2
 8007148:	f503 7314 	add.w	r3, r3, #592	; 0x250
 800714c:	687a      	ldr	r2, [r7, #4]
 800714e:	4413      	add	r3, r2
 8007150:	3304      	adds	r3, #4
 8007152:	60fb      	str	r3, [r7, #12]
 8007154:	68fb      	ldr	r3, [r7, #12]
 8007156:	6a1a      	ldr	r2, [r3, #32]
 8007158:	683b      	ldr	r3, [r7, #0]
 800715a:	0159      	lsls	r1, r3, #5
 800715c:	69bb      	ldr	r3, [r7, #24]
 800715e:	440b      	add	r3, r1
 8007160:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007164:	691b      	ldr	r3, [r3, #16]
 8007166:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800716a:	1ad2      	subs	r2, r2, r3
 800716c:	68fb      	ldr	r3, [r7, #12]
 800716e:	615a      	str	r2, [r3, #20]
 8007170:	683b      	ldr	r3, [r7, #0]
 8007172:	2b00      	cmp	r3, #0
 8007174:	d114      	bne.n	80071a0 <PCD_EP_OutXfrComplete_int+0x120>
 8007176:	68fb      	ldr	r3, [r7, #12]
 8007178:	691b      	ldr	r3, [r3, #16]
 800717a:	2b00      	cmp	r3, #0
 800717c:	d109      	bne.n	8007192 <PCD_EP_OutXfrComplete_int+0x112>
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	6818      	ldr	r0, [r3, #0]
 8007182:	687b      	ldr	r3, [r7, #4]
 8007184:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8007188:	461a      	mov	r2, r3
 800718a:	2101      	movs	r1, #1
 800718c:	f002 fd78 	bl	8009c80 <USB_EP0_OutStart>
 8007190:	e006      	b.n	80071a0 <PCD_EP_OutXfrComplete_int+0x120>
 8007192:	68fb      	ldr	r3, [r7, #12]
 8007194:	68da      	ldr	r2, [r3, #12]
 8007196:	68fb      	ldr	r3, [r7, #12]
 8007198:	695b      	ldr	r3, [r3, #20]
 800719a:	441a      	add	r2, r3
 800719c:	68fb      	ldr	r3, [r7, #12]
 800719e:	60da      	str	r2, [r3, #12]
 80071a0:	683b      	ldr	r3, [r7, #0]
 80071a2:	b2db      	uxtb	r3, r3
 80071a4:	4619      	mov	r1, r3
 80071a6:	6878      	ldr	r0, [r7, #4]
 80071a8:	f005 f834 	bl	800c214 <HAL_PCD_DataOutStageCallback>
 80071ac:	e046      	b.n	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 80071ae:	697b      	ldr	r3, [r7, #20]
 80071b0:	4a26      	ldr	r2, [pc, #152]	; (800724c <PCD_EP_OutXfrComplete_int+0x1cc>)
 80071b2:	4293      	cmp	r3, r2
 80071b4:	d124      	bne.n	8007200 <PCD_EP_OutXfrComplete_int+0x180>
 80071b6:	693b      	ldr	r3, [r7, #16]
 80071b8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80071bc:	2b00      	cmp	r3, #0
 80071be:	d00a      	beq.n	80071d6 <PCD_EP_OutXfrComplete_int+0x156>
 80071c0:	683b      	ldr	r3, [r7, #0]
 80071c2:	015a      	lsls	r2, r3, #5
 80071c4:	69bb      	ldr	r3, [r7, #24]
 80071c6:	4413      	add	r3, r2
 80071c8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80071cc:	461a      	mov	r2, r3
 80071ce:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80071d2:	6093      	str	r3, [r2, #8]
 80071d4:	e032      	b.n	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 80071d6:	693b      	ldr	r3, [r7, #16]
 80071d8:	f003 0320 	and.w	r3, r3, #32
 80071dc:	2b00      	cmp	r3, #0
 80071de:	d008      	beq.n	80071f2 <PCD_EP_OutXfrComplete_int+0x172>
 80071e0:	683b      	ldr	r3, [r7, #0]
 80071e2:	015a      	lsls	r2, r3, #5
 80071e4:	69bb      	ldr	r3, [r7, #24]
 80071e6:	4413      	add	r3, r2
 80071e8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80071ec:	461a      	mov	r2, r3
 80071ee:	2320      	movs	r3, #32
 80071f0:	6093      	str	r3, [r2, #8]
 80071f2:	683b      	ldr	r3, [r7, #0]
 80071f4:	b2db      	uxtb	r3, r3
 80071f6:	4619      	mov	r1, r3
 80071f8:	6878      	ldr	r0, [r7, #4]
 80071fa:	f005 f80b 	bl	800c214 <HAL_PCD_DataOutStageCallback>
 80071fe:	e01d      	b.n	800723c <PCD_EP_OutXfrComplete_int+0x1bc>
 8007200:	683b      	ldr	r3, [r7, #0]
 8007202:	2b00      	cmp	r3, #0
 8007204:	d114      	bne.n	8007230 <PCD_EP_OutXfrComplete_int+0x1b0>
 8007206:	6879      	ldr	r1, [r7, #4]
 8007208:	683a      	ldr	r2, [r7, #0]
 800720a:	4613      	mov	r3, r2
 800720c:	00db      	lsls	r3, r3, #3
 800720e:	4413      	add	r3, r2
 8007210:	009b      	lsls	r3, r3, #2
 8007212:	440b      	add	r3, r1
 8007214:	f503 7319 	add.w	r3, r3, #612	; 0x264
 8007218:	681b      	ldr	r3, [r3, #0]
 800721a:	2b00      	cmp	r3, #0
 800721c:	d108      	bne.n	8007230 <PCD_EP_OutXfrComplete_int+0x1b0>
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	6818      	ldr	r0, [r3, #0]
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8007228:	461a      	mov	r2, r3
 800722a:	2100      	movs	r1, #0
 800722c:	f002 fd28 	bl	8009c80 <USB_EP0_OutStart>
 8007230:	683b      	ldr	r3, [r7, #0]
 8007232:	b2db      	uxtb	r3, r3
 8007234:	4619      	mov	r1, r3
 8007236:	6878      	ldr	r0, [r7, #4]
 8007238:	f004 ffec 	bl	800c214 <HAL_PCD_DataOutStageCallback>
 800723c:	2300      	movs	r3, #0
 800723e:	4618      	mov	r0, r3
 8007240:	3720      	adds	r7, #32
 8007242:	46bd      	mov	sp, r7
 8007244:	bd80      	pop	{r7, pc}
 8007246:	bf00      	nop
 8007248:	4f54300a 	.word	0x4f54300a
 800724c:	4f54310a 	.word	0x4f54310a

08007250 <PCD_EP_OutSetupPacket_int>:
 8007250:	b580      	push	{r7, lr}
 8007252:	b086      	sub	sp, #24
 8007254:	af00      	add	r7, sp, #0
 8007256:	6078      	str	r0, [r7, #4]
 8007258:	6039      	str	r1, [r7, #0]
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	681b      	ldr	r3, [r3, #0]
 800725e:	617b      	str	r3, [r7, #20]
 8007260:	697b      	ldr	r3, [r7, #20]
 8007262:	613b      	str	r3, [r7, #16]
 8007264:	697b      	ldr	r3, [r7, #20]
 8007266:	333c      	adds	r3, #60	; 0x3c
 8007268:	3304      	adds	r3, #4
 800726a:	681b      	ldr	r3, [r3, #0]
 800726c:	60fb      	str	r3, [r7, #12]
 800726e:	683b      	ldr	r3, [r7, #0]
 8007270:	015a      	lsls	r2, r3, #5
 8007272:	693b      	ldr	r3, [r7, #16]
 8007274:	4413      	add	r3, r2
 8007276:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800727a:	689b      	ldr	r3, [r3, #8]
 800727c:	60bb      	str	r3, [r7, #8]
 800727e:	68fb      	ldr	r3, [r7, #12]
 8007280:	4a15      	ldr	r2, [pc, #84]	; (80072d8 <PCD_EP_OutSetupPacket_int+0x88>)
 8007282:	4293      	cmp	r3, r2
 8007284:	d90e      	bls.n	80072a4 <PCD_EP_OutSetupPacket_int+0x54>
 8007286:	68bb      	ldr	r3, [r7, #8]
 8007288:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800728c:	2b00      	cmp	r3, #0
 800728e:	d009      	beq.n	80072a4 <PCD_EP_OutSetupPacket_int+0x54>
 8007290:	683b      	ldr	r3, [r7, #0]
 8007292:	015a      	lsls	r2, r3, #5
 8007294:	693b      	ldr	r3, [r7, #16]
 8007296:	4413      	add	r3, r2
 8007298:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800729c:	461a      	mov	r2, r3
 800729e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80072a2:	6093      	str	r3, [r2, #8]
 80072a4:	6878      	ldr	r0, [r7, #4]
 80072a6:	f004 ffa3 	bl	800c1f0 <HAL_PCD_SetupStageCallback>
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	4a0a      	ldr	r2, [pc, #40]	; (80072d8 <PCD_EP_OutSetupPacket_int+0x88>)
 80072ae:	4293      	cmp	r3, r2
 80072b0:	d90c      	bls.n	80072cc <PCD_EP_OutSetupPacket_int+0x7c>
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	799b      	ldrb	r3, [r3, #6]
 80072b6:	2b01      	cmp	r3, #1
 80072b8:	d108      	bne.n	80072cc <PCD_EP_OutSetupPacket_int+0x7c>
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	6818      	ldr	r0, [r3, #0]
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 80072c4:	461a      	mov	r2, r3
 80072c6:	2101      	movs	r1, #1
 80072c8:	f002 fcda 	bl	8009c80 <USB_EP0_OutStart>
 80072cc:	2300      	movs	r3, #0
 80072ce:	4618      	mov	r0, r3
 80072d0:	3718      	adds	r7, #24
 80072d2:	46bd      	mov	sp, r7
 80072d4:	bd80      	pop	{r7, pc}
 80072d6:	bf00      	nop
 80072d8:	4f54300a 	.word	0x4f54300a

080072dc <HAL_PCDEx_SetTxFiFo>:
 80072dc:	b480      	push	{r7}
 80072de:	b085      	sub	sp, #20
 80072e0:	af00      	add	r7, sp, #0
 80072e2:	6078      	str	r0, [r7, #4]
 80072e4:	460b      	mov	r3, r1
 80072e6:	70fb      	strb	r3, [r7, #3]
 80072e8:	4613      	mov	r3, r2
 80072ea:	803b      	strh	r3, [r7, #0]
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	681b      	ldr	r3, [r3, #0]
 80072f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072f2:	60bb      	str	r3, [r7, #8]
 80072f4:	78fb      	ldrb	r3, [r7, #3]
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	d107      	bne.n	800730a <HAL_PCDEx_SetTxFiFo+0x2e>
 80072fa:	883b      	ldrh	r3, [r7, #0]
 80072fc:	0419      	lsls	r1, r3, #16
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	681b      	ldr	r3, [r3, #0]
 8007302:	68ba      	ldr	r2, [r7, #8]
 8007304:	430a      	orrs	r2, r1
 8007306:	629a      	str	r2, [r3, #40]	; 0x28
 8007308:	e028      	b.n	800735c <HAL_PCDEx_SetTxFiFo+0x80>
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	681b      	ldr	r3, [r3, #0]
 800730e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007310:	0c1b      	lsrs	r3, r3, #16
 8007312:	68ba      	ldr	r2, [r7, #8]
 8007314:	4413      	add	r3, r2
 8007316:	60bb      	str	r3, [r7, #8]
 8007318:	2300      	movs	r3, #0
 800731a:	73fb      	strb	r3, [r7, #15]
 800731c:	e00d      	b.n	800733a <HAL_PCDEx_SetTxFiFo+0x5e>
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	681a      	ldr	r2, [r3, #0]
 8007322:	7bfb      	ldrb	r3, [r7, #15]
 8007324:	3340      	adds	r3, #64	; 0x40
 8007326:	009b      	lsls	r3, r3, #2
 8007328:	4413      	add	r3, r2
 800732a:	685b      	ldr	r3, [r3, #4]
 800732c:	0c1b      	lsrs	r3, r3, #16
 800732e:	68ba      	ldr	r2, [r7, #8]
 8007330:	4413      	add	r3, r2
 8007332:	60bb      	str	r3, [r7, #8]
 8007334:	7bfb      	ldrb	r3, [r7, #15]
 8007336:	3301      	adds	r3, #1
 8007338:	73fb      	strb	r3, [r7, #15]
 800733a:	7bfa      	ldrb	r2, [r7, #15]
 800733c:	78fb      	ldrb	r3, [r7, #3]
 800733e:	3b01      	subs	r3, #1
 8007340:	429a      	cmp	r2, r3
 8007342:	d3ec      	bcc.n	800731e <HAL_PCDEx_SetTxFiFo+0x42>
 8007344:	883b      	ldrh	r3, [r7, #0]
 8007346:	0418      	lsls	r0, r3, #16
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	6819      	ldr	r1, [r3, #0]
 800734c:	78fb      	ldrb	r3, [r7, #3]
 800734e:	3b01      	subs	r3, #1
 8007350:	68ba      	ldr	r2, [r7, #8]
 8007352:	4302      	orrs	r2, r0
 8007354:	3340      	adds	r3, #64	; 0x40
 8007356:	009b      	lsls	r3, r3, #2
 8007358:	440b      	add	r3, r1
 800735a:	605a      	str	r2, [r3, #4]
 800735c:	2300      	movs	r3, #0
 800735e:	4618      	mov	r0, r3
 8007360:	3714      	adds	r7, #20
 8007362:	46bd      	mov	sp, r7
 8007364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007368:	4770      	bx	lr

0800736a <HAL_PCDEx_SetRxFiFo>:
 800736a:	b480      	push	{r7}
 800736c:	b083      	sub	sp, #12
 800736e:	af00      	add	r7, sp, #0
 8007370:	6078      	str	r0, [r7, #4]
 8007372:	460b      	mov	r3, r1
 8007374:	807b      	strh	r3, [r7, #2]
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	681b      	ldr	r3, [r3, #0]
 800737a:	887a      	ldrh	r2, [r7, #2]
 800737c:	625a      	str	r2, [r3, #36]	; 0x24
 800737e:	2300      	movs	r3, #0
 8007380:	4618      	mov	r0, r3
 8007382:	370c      	adds	r7, #12
 8007384:	46bd      	mov	sp, r7
 8007386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800738a:	4770      	bx	lr

0800738c <HAL_PCDEx_LPM_Callback>:
 800738c:	b480      	push	{r7}
 800738e:	b083      	sub	sp, #12
 8007390:	af00      	add	r7, sp, #0
 8007392:	6078      	str	r0, [r7, #4]
 8007394:	460b      	mov	r3, r1
 8007396:	70fb      	strb	r3, [r7, #3]
 8007398:	bf00      	nop
 800739a:	370c      	adds	r7, #12
 800739c:	46bd      	mov	sp, r7
 800739e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a2:	4770      	bx	lr

080073a4 <HAL_RCC_OscConfig>:
 80073a4:	b580      	push	{r7, lr}
 80073a6:	b086      	sub	sp, #24
 80073a8:	af00      	add	r7, sp, #0
 80073aa:	6078      	str	r0, [r7, #4]
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d101      	bne.n	80073b6 <HAL_RCC_OscConfig+0x12>
 80073b2:	2301      	movs	r3, #1
 80073b4:	e267      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	f003 0301 	and.w	r3, r3, #1
 80073be:	2b00      	cmp	r3, #0
 80073c0:	d075      	beq.n	80074ae <HAL_RCC_OscConfig+0x10a>
 80073c2:	4b88      	ldr	r3, [pc, #544]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80073c4:	689b      	ldr	r3, [r3, #8]
 80073c6:	f003 030c 	and.w	r3, r3, #12
 80073ca:	2b04      	cmp	r3, #4
 80073cc:	d00c      	beq.n	80073e8 <HAL_RCC_OscConfig+0x44>
 80073ce:	4b85      	ldr	r3, [pc, #532]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80073d0:	689b      	ldr	r3, [r3, #8]
 80073d2:	f003 030c 	and.w	r3, r3, #12
 80073d6:	2b08      	cmp	r3, #8
 80073d8:	d112      	bne.n	8007400 <HAL_RCC_OscConfig+0x5c>
 80073da:	4b82      	ldr	r3, [pc, #520]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80073dc:	685b      	ldr	r3, [r3, #4]
 80073de:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80073e2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80073e6:	d10b      	bne.n	8007400 <HAL_RCC_OscConfig+0x5c>
 80073e8:	4b7e      	ldr	r3, [pc, #504]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80073ea:	681b      	ldr	r3, [r3, #0]
 80073ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80073f0:	2b00      	cmp	r3, #0
 80073f2:	d05b      	beq.n	80074ac <HAL_RCC_OscConfig+0x108>
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	685b      	ldr	r3, [r3, #4]
 80073f8:	2b00      	cmp	r3, #0
 80073fa:	d157      	bne.n	80074ac <HAL_RCC_OscConfig+0x108>
 80073fc:	2301      	movs	r3, #1
 80073fe:	e242      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	685b      	ldr	r3, [r3, #4]
 8007404:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007408:	d106      	bne.n	8007418 <HAL_RCC_OscConfig+0x74>
 800740a:	4b76      	ldr	r3, [pc, #472]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	4a75      	ldr	r2, [pc, #468]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007410:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007414:	6013      	str	r3, [r2, #0]
 8007416:	e01d      	b.n	8007454 <HAL_RCC_OscConfig+0xb0>
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	685b      	ldr	r3, [r3, #4]
 800741c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007420:	d10c      	bne.n	800743c <HAL_RCC_OscConfig+0x98>
 8007422:	4b70      	ldr	r3, [pc, #448]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	4a6f      	ldr	r2, [pc, #444]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007428:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800742c:	6013      	str	r3, [r2, #0]
 800742e:	4b6d      	ldr	r3, [pc, #436]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	4a6c      	ldr	r2, [pc, #432]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007434:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007438:	6013      	str	r3, [r2, #0]
 800743a:	e00b      	b.n	8007454 <HAL_RCC_OscConfig+0xb0>
 800743c:	4b69      	ldr	r3, [pc, #420]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	4a68      	ldr	r2, [pc, #416]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007442:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007446:	6013      	str	r3, [r2, #0]
 8007448:	4b66      	ldr	r3, [pc, #408]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	4a65      	ldr	r2, [pc, #404]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 800744e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007452:	6013      	str	r3, [r2, #0]
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	685b      	ldr	r3, [r3, #4]
 8007458:	2b00      	cmp	r3, #0
 800745a:	d013      	beq.n	8007484 <HAL_RCC_OscConfig+0xe0>
 800745c:	f7fd fa42 	bl	80048e4 <HAL_GetTick>
 8007460:	6138      	str	r0, [r7, #16]
 8007462:	e008      	b.n	8007476 <HAL_RCC_OscConfig+0xd2>
 8007464:	f7fd fa3e 	bl	80048e4 <HAL_GetTick>
 8007468:	4602      	mov	r2, r0
 800746a:	693b      	ldr	r3, [r7, #16]
 800746c:	1ad3      	subs	r3, r2, r3
 800746e:	2b64      	cmp	r3, #100	; 0x64
 8007470:	d901      	bls.n	8007476 <HAL_RCC_OscConfig+0xd2>
 8007472:	2303      	movs	r3, #3
 8007474:	e207      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 8007476:	4b5b      	ldr	r3, [pc, #364]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800747e:	2b00      	cmp	r3, #0
 8007480:	d0f0      	beq.n	8007464 <HAL_RCC_OscConfig+0xc0>
 8007482:	e014      	b.n	80074ae <HAL_RCC_OscConfig+0x10a>
 8007484:	f7fd fa2e 	bl	80048e4 <HAL_GetTick>
 8007488:	6138      	str	r0, [r7, #16]
 800748a:	e008      	b.n	800749e <HAL_RCC_OscConfig+0xfa>
 800748c:	f7fd fa2a 	bl	80048e4 <HAL_GetTick>
 8007490:	4602      	mov	r2, r0
 8007492:	693b      	ldr	r3, [r7, #16]
 8007494:	1ad3      	subs	r3, r2, r3
 8007496:	2b64      	cmp	r3, #100	; 0x64
 8007498:	d901      	bls.n	800749e <HAL_RCC_OscConfig+0xfa>
 800749a:	2303      	movs	r3, #3
 800749c:	e1f3      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 800749e:	4b51      	ldr	r3, [pc, #324]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80074a6:	2b00      	cmp	r3, #0
 80074a8:	d1f0      	bne.n	800748c <HAL_RCC_OscConfig+0xe8>
 80074aa:	e000      	b.n	80074ae <HAL_RCC_OscConfig+0x10a>
 80074ac:	bf00      	nop
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	681b      	ldr	r3, [r3, #0]
 80074b2:	f003 0302 	and.w	r3, r3, #2
 80074b6:	2b00      	cmp	r3, #0
 80074b8:	d063      	beq.n	8007582 <HAL_RCC_OscConfig+0x1de>
 80074ba:	4b4a      	ldr	r3, [pc, #296]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80074bc:	689b      	ldr	r3, [r3, #8]
 80074be:	f003 030c 	and.w	r3, r3, #12
 80074c2:	2b00      	cmp	r3, #0
 80074c4:	d00b      	beq.n	80074de <HAL_RCC_OscConfig+0x13a>
 80074c6:	4b47      	ldr	r3, [pc, #284]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80074c8:	689b      	ldr	r3, [r3, #8]
 80074ca:	f003 030c 	and.w	r3, r3, #12
 80074ce:	2b08      	cmp	r3, #8
 80074d0:	d11c      	bne.n	800750c <HAL_RCC_OscConfig+0x168>
 80074d2:	4b44      	ldr	r3, [pc, #272]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80074d4:	685b      	ldr	r3, [r3, #4]
 80074d6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80074da:	2b00      	cmp	r3, #0
 80074dc:	d116      	bne.n	800750c <HAL_RCC_OscConfig+0x168>
 80074de:	4b41      	ldr	r3, [pc, #260]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80074e0:	681b      	ldr	r3, [r3, #0]
 80074e2:	f003 0302 	and.w	r3, r3, #2
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	d005      	beq.n	80074f6 <HAL_RCC_OscConfig+0x152>
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	68db      	ldr	r3, [r3, #12]
 80074ee:	2b01      	cmp	r3, #1
 80074f0:	d001      	beq.n	80074f6 <HAL_RCC_OscConfig+0x152>
 80074f2:	2301      	movs	r3, #1
 80074f4:	e1c7      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 80074f6:	4b3b      	ldr	r3, [pc, #236]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80074f8:	681b      	ldr	r3, [r3, #0]
 80074fa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	691b      	ldr	r3, [r3, #16]
 8007502:	00db      	lsls	r3, r3, #3
 8007504:	4937      	ldr	r1, [pc, #220]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007506:	4313      	orrs	r3, r2
 8007508:	600b      	str	r3, [r1, #0]
 800750a:	e03a      	b.n	8007582 <HAL_RCC_OscConfig+0x1de>
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	68db      	ldr	r3, [r3, #12]
 8007510:	2b00      	cmp	r3, #0
 8007512:	d020      	beq.n	8007556 <HAL_RCC_OscConfig+0x1b2>
 8007514:	4b34      	ldr	r3, [pc, #208]	; (80075e8 <HAL_RCC_OscConfig+0x244>)
 8007516:	2201      	movs	r2, #1
 8007518:	601a      	str	r2, [r3, #0]
 800751a:	f7fd f9e3 	bl	80048e4 <HAL_GetTick>
 800751e:	6138      	str	r0, [r7, #16]
 8007520:	e008      	b.n	8007534 <HAL_RCC_OscConfig+0x190>
 8007522:	f7fd f9df 	bl	80048e4 <HAL_GetTick>
 8007526:	4602      	mov	r2, r0
 8007528:	693b      	ldr	r3, [r7, #16]
 800752a:	1ad3      	subs	r3, r2, r3
 800752c:	2b02      	cmp	r3, #2
 800752e:	d901      	bls.n	8007534 <HAL_RCC_OscConfig+0x190>
 8007530:	2303      	movs	r3, #3
 8007532:	e1a8      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 8007534:	4b2b      	ldr	r3, [pc, #172]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007536:	681b      	ldr	r3, [r3, #0]
 8007538:	f003 0302 	and.w	r3, r3, #2
 800753c:	2b00      	cmp	r3, #0
 800753e:	d0f0      	beq.n	8007522 <HAL_RCC_OscConfig+0x17e>
 8007540:	4b28      	ldr	r3, [pc, #160]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007542:	681b      	ldr	r3, [r3, #0]
 8007544:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	691b      	ldr	r3, [r3, #16]
 800754c:	00db      	lsls	r3, r3, #3
 800754e:	4925      	ldr	r1, [pc, #148]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007550:	4313      	orrs	r3, r2
 8007552:	600b      	str	r3, [r1, #0]
 8007554:	e015      	b.n	8007582 <HAL_RCC_OscConfig+0x1de>
 8007556:	4b24      	ldr	r3, [pc, #144]	; (80075e8 <HAL_RCC_OscConfig+0x244>)
 8007558:	2200      	movs	r2, #0
 800755a:	601a      	str	r2, [r3, #0]
 800755c:	f7fd f9c2 	bl	80048e4 <HAL_GetTick>
 8007560:	6138      	str	r0, [r7, #16]
 8007562:	e008      	b.n	8007576 <HAL_RCC_OscConfig+0x1d2>
 8007564:	f7fd f9be 	bl	80048e4 <HAL_GetTick>
 8007568:	4602      	mov	r2, r0
 800756a:	693b      	ldr	r3, [r7, #16]
 800756c:	1ad3      	subs	r3, r2, r3
 800756e:	2b02      	cmp	r3, #2
 8007570:	d901      	bls.n	8007576 <HAL_RCC_OscConfig+0x1d2>
 8007572:	2303      	movs	r3, #3
 8007574:	e187      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 8007576:	4b1b      	ldr	r3, [pc, #108]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	f003 0302 	and.w	r3, r3, #2
 800757e:	2b00      	cmp	r3, #0
 8007580:	d1f0      	bne.n	8007564 <HAL_RCC_OscConfig+0x1c0>
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	681b      	ldr	r3, [r3, #0]
 8007586:	f003 0308 	and.w	r3, r3, #8
 800758a:	2b00      	cmp	r3, #0
 800758c:	d036      	beq.n	80075fc <HAL_RCC_OscConfig+0x258>
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	695b      	ldr	r3, [r3, #20]
 8007592:	2b00      	cmp	r3, #0
 8007594:	d016      	beq.n	80075c4 <HAL_RCC_OscConfig+0x220>
 8007596:	4b15      	ldr	r3, [pc, #84]	; (80075ec <HAL_RCC_OscConfig+0x248>)
 8007598:	2201      	movs	r2, #1
 800759a:	601a      	str	r2, [r3, #0]
 800759c:	f7fd f9a2 	bl	80048e4 <HAL_GetTick>
 80075a0:	6138      	str	r0, [r7, #16]
 80075a2:	e008      	b.n	80075b6 <HAL_RCC_OscConfig+0x212>
 80075a4:	f7fd f99e 	bl	80048e4 <HAL_GetTick>
 80075a8:	4602      	mov	r2, r0
 80075aa:	693b      	ldr	r3, [r7, #16]
 80075ac:	1ad3      	subs	r3, r2, r3
 80075ae:	2b02      	cmp	r3, #2
 80075b0:	d901      	bls.n	80075b6 <HAL_RCC_OscConfig+0x212>
 80075b2:	2303      	movs	r3, #3
 80075b4:	e167      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 80075b6:	4b0b      	ldr	r3, [pc, #44]	; (80075e4 <HAL_RCC_OscConfig+0x240>)
 80075b8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80075ba:	f003 0302 	and.w	r3, r3, #2
 80075be:	2b00      	cmp	r3, #0
 80075c0:	d0f0      	beq.n	80075a4 <HAL_RCC_OscConfig+0x200>
 80075c2:	e01b      	b.n	80075fc <HAL_RCC_OscConfig+0x258>
 80075c4:	4b09      	ldr	r3, [pc, #36]	; (80075ec <HAL_RCC_OscConfig+0x248>)
 80075c6:	2200      	movs	r2, #0
 80075c8:	601a      	str	r2, [r3, #0]
 80075ca:	f7fd f98b 	bl	80048e4 <HAL_GetTick>
 80075ce:	6138      	str	r0, [r7, #16]
 80075d0:	e00e      	b.n	80075f0 <HAL_RCC_OscConfig+0x24c>
 80075d2:	f7fd f987 	bl	80048e4 <HAL_GetTick>
 80075d6:	4602      	mov	r2, r0
 80075d8:	693b      	ldr	r3, [r7, #16]
 80075da:	1ad3      	subs	r3, r2, r3
 80075dc:	2b02      	cmp	r3, #2
 80075de:	d907      	bls.n	80075f0 <HAL_RCC_OscConfig+0x24c>
 80075e0:	2303      	movs	r3, #3
 80075e2:	e150      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 80075e4:	40023800 	.word	0x40023800
 80075e8:	42470000 	.word	0x42470000
 80075ec:	42470e80 	.word	0x42470e80
 80075f0:	4b88      	ldr	r3, [pc, #544]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80075f2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80075f4:	f003 0302 	and.w	r3, r3, #2
 80075f8:	2b00      	cmp	r3, #0
 80075fa:	d1ea      	bne.n	80075d2 <HAL_RCC_OscConfig+0x22e>
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	681b      	ldr	r3, [r3, #0]
 8007600:	f003 0304 	and.w	r3, r3, #4
 8007604:	2b00      	cmp	r3, #0
 8007606:	f000 8097 	beq.w	8007738 <HAL_RCC_OscConfig+0x394>
 800760a:	2300      	movs	r3, #0
 800760c:	75fb      	strb	r3, [r7, #23]
 800760e:	4b81      	ldr	r3, [pc, #516]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007610:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007612:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007616:	2b00      	cmp	r3, #0
 8007618:	d10f      	bne.n	800763a <HAL_RCC_OscConfig+0x296>
 800761a:	2300      	movs	r3, #0
 800761c:	60bb      	str	r3, [r7, #8]
 800761e:	4b7d      	ldr	r3, [pc, #500]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007620:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007622:	4a7c      	ldr	r2, [pc, #496]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007624:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007628:	6413      	str	r3, [r2, #64]	; 0x40
 800762a:	4b7a      	ldr	r3, [pc, #488]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 800762c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800762e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007632:	60bb      	str	r3, [r7, #8]
 8007634:	68bb      	ldr	r3, [r7, #8]
 8007636:	2301      	movs	r3, #1
 8007638:	75fb      	strb	r3, [r7, #23]
 800763a:	4b77      	ldr	r3, [pc, #476]	; (8007818 <HAL_RCC_OscConfig+0x474>)
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007642:	2b00      	cmp	r3, #0
 8007644:	d118      	bne.n	8007678 <HAL_RCC_OscConfig+0x2d4>
 8007646:	4b74      	ldr	r3, [pc, #464]	; (8007818 <HAL_RCC_OscConfig+0x474>)
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	4a73      	ldr	r2, [pc, #460]	; (8007818 <HAL_RCC_OscConfig+0x474>)
 800764c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007650:	6013      	str	r3, [r2, #0]
 8007652:	f7fd f947 	bl	80048e4 <HAL_GetTick>
 8007656:	6138      	str	r0, [r7, #16]
 8007658:	e008      	b.n	800766c <HAL_RCC_OscConfig+0x2c8>
 800765a:	f7fd f943 	bl	80048e4 <HAL_GetTick>
 800765e:	4602      	mov	r2, r0
 8007660:	693b      	ldr	r3, [r7, #16]
 8007662:	1ad3      	subs	r3, r2, r3
 8007664:	2b02      	cmp	r3, #2
 8007666:	d901      	bls.n	800766c <HAL_RCC_OscConfig+0x2c8>
 8007668:	2303      	movs	r3, #3
 800766a:	e10c      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 800766c:	4b6a      	ldr	r3, [pc, #424]	; (8007818 <HAL_RCC_OscConfig+0x474>)
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007674:	2b00      	cmp	r3, #0
 8007676:	d0f0      	beq.n	800765a <HAL_RCC_OscConfig+0x2b6>
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	689b      	ldr	r3, [r3, #8]
 800767c:	2b01      	cmp	r3, #1
 800767e:	d106      	bne.n	800768e <HAL_RCC_OscConfig+0x2ea>
 8007680:	4b64      	ldr	r3, [pc, #400]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007682:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007684:	4a63      	ldr	r2, [pc, #396]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007686:	f043 0301 	orr.w	r3, r3, #1
 800768a:	6713      	str	r3, [r2, #112]	; 0x70
 800768c:	e01c      	b.n	80076c8 <HAL_RCC_OscConfig+0x324>
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	689b      	ldr	r3, [r3, #8]
 8007692:	2b05      	cmp	r3, #5
 8007694:	d10c      	bne.n	80076b0 <HAL_RCC_OscConfig+0x30c>
 8007696:	4b5f      	ldr	r3, [pc, #380]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007698:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800769a:	4a5e      	ldr	r2, [pc, #376]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 800769c:	f043 0304 	orr.w	r3, r3, #4
 80076a0:	6713      	str	r3, [r2, #112]	; 0x70
 80076a2:	4b5c      	ldr	r3, [pc, #368]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80076a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80076a6:	4a5b      	ldr	r2, [pc, #364]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80076a8:	f043 0301 	orr.w	r3, r3, #1
 80076ac:	6713      	str	r3, [r2, #112]	; 0x70
 80076ae:	e00b      	b.n	80076c8 <HAL_RCC_OscConfig+0x324>
 80076b0:	4b58      	ldr	r3, [pc, #352]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80076b2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80076b4:	4a57      	ldr	r2, [pc, #348]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80076b6:	f023 0301 	bic.w	r3, r3, #1
 80076ba:	6713      	str	r3, [r2, #112]	; 0x70
 80076bc:	4b55      	ldr	r3, [pc, #340]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80076be:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80076c0:	4a54      	ldr	r2, [pc, #336]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80076c2:	f023 0304 	bic.w	r3, r3, #4
 80076c6:	6713      	str	r3, [r2, #112]	; 0x70
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	689b      	ldr	r3, [r3, #8]
 80076cc:	2b00      	cmp	r3, #0
 80076ce:	d015      	beq.n	80076fc <HAL_RCC_OscConfig+0x358>
 80076d0:	f7fd f908 	bl	80048e4 <HAL_GetTick>
 80076d4:	6138      	str	r0, [r7, #16]
 80076d6:	e00a      	b.n	80076ee <HAL_RCC_OscConfig+0x34a>
 80076d8:	f7fd f904 	bl	80048e4 <HAL_GetTick>
 80076dc:	4602      	mov	r2, r0
 80076de:	693b      	ldr	r3, [r7, #16]
 80076e0:	1ad3      	subs	r3, r2, r3
 80076e2:	f241 3288 	movw	r2, #5000	; 0x1388
 80076e6:	4293      	cmp	r3, r2
 80076e8:	d901      	bls.n	80076ee <HAL_RCC_OscConfig+0x34a>
 80076ea:	2303      	movs	r3, #3
 80076ec:	e0cb      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 80076ee:	4b49      	ldr	r3, [pc, #292]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80076f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80076f2:	f003 0302 	and.w	r3, r3, #2
 80076f6:	2b00      	cmp	r3, #0
 80076f8:	d0ee      	beq.n	80076d8 <HAL_RCC_OscConfig+0x334>
 80076fa:	e014      	b.n	8007726 <HAL_RCC_OscConfig+0x382>
 80076fc:	f7fd f8f2 	bl	80048e4 <HAL_GetTick>
 8007700:	6138      	str	r0, [r7, #16]
 8007702:	e00a      	b.n	800771a <HAL_RCC_OscConfig+0x376>
 8007704:	f7fd f8ee 	bl	80048e4 <HAL_GetTick>
 8007708:	4602      	mov	r2, r0
 800770a:	693b      	ldr	r3, [r7, #16]
 800770c:	1ad3      	subs	r3, r2, r3
 800770e:	f241 3288 	movw	r2, #5000	; 0x1388
 8007712:	4293      	cmp	r3, r2
 8007714:	d901      	bls.n	800771a <HAL_RCC_OscConfig+0x376>
 8007716:	2303      	movs	r3, #3
 8007718:	e0b5      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 800771a:	4b3e      	ldr	r3, [pc, #248]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 800771c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800771e:	f003 0302 	and.w	r3, r3, #2
 8007722:	2b00      	cmp	r3, #0
 8007724:	d1ee      	bne.n	8007704 <HAL_RCC_OscConfig+0x360>
 8007726:	7dfb      	ldrb	r3, [r7, #23]
 8007728:	2b01      	cmp	r3, #1
 800772a:	d105      	bne.n	8007738 <HAL_RCC_OscConfig+0x394>
 800772c:	4b39      	ldr	r3, [pc, #228]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 800772e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007730:	4a38      	ldr	r2, [pc, #224]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007732:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007736:	6413      	str	r3, [r2, #64]	; 0x40
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	699b      	ldr	r3, [r3, #24]
 800773c:	2b00      	cmp	r3, #0
 800773e:	f000 80a1 	beq.w	8007884 <HAL_RCC_OscConfig+0x4e0>
 8007742:	4b34      	ldr	r3, [pc, #208]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007744:	689b      	ldr	r3, [r3, #8]
 8007746:	f003 030c 	and.w	r3, r3, #12
 800774a:	2b08      	cmp	r3, #8
 800774c:	d05c      	beq.n	8007808 <HAL_RCC_OscConfig+0x464>
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	699b      	ldr	r3, [r3, #24]
 8007752:	2b02      	cmp	r3, #2
 8007754:	d141      	bne.n	80077da <HAL_RCC_OscConfig+0x436>
 8007756:	4b31      	ldr	r3, [pc, #196]	; (800781c <HAL_RCC_OscConfig+0x478>)
 8007758:	2200      	movs	r2, #0
 800775a:	601a      	str	r2, [r3, #0]
 800775c:	f7fd f8c2 	bl	80048e4 <HAL_GetTick>
 8007760:	6138      	str	r0, [r7, #16]
 8007762:	e008      	b.n	8007776 <HAL_RCC_OscConfig+0x3d2>
 8007764:	f7fd f8be 	bl	80048e4 <HAL_GetTick>
 8007768:	4602      	mov	r2, r0
 800776a:	693b      	ldr	r3, [r7, #16]
 800776c:	1ad3      	subs	r3, r2, r3
 800776e:	2b02      	cmp	r3, #2
 8007770:	d901      	bls.n	8007776 <HAL_RCC_OscConfig+0x3d2>
 8007772:	2303      	movs	r3, #3
 8007774:	e087      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 8007776:	4b27      	ldr	r3, [pc, #156]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 8007778:	681b      	ldr	r3, [r3, #0]
 800777a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800777e:	2b00      	cmp	r3, #0
 8007780:	d1f0      	bne.n	8007764 <HAL_RCC_OscConfig+0x3c0>
 8007782:	687b      	ldr	r3, [r7, #4]
 8007784:	69da      	ldr	r2, [r3, #28]
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	6a1b      	ldr	r3, [r3, #32]
 800778a:	431a      	orrs	r2, r3
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007790:	019b      	lsls	r3, r3, #6
 8007792:	431a      	orrs	r2, r3
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007798:	085b      	lsrs	r3, r3, #1
 800779a:	3b01      	subs	r3, #1
 800779c:	041b      	lsls	r3, r3, #16
 800779e:	431a      	orrs	r2, r3
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077a4:	061b      	lsls	r3, r3, #24
 80077a6:	491b      	ldr	r1, [pc, #108]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80077a8:	4313      	orrs	r3, r2
 80077aa:	604b      	str	r3, [r1, #4]
 80077ac:	4b1b      	ldr	r3, [pc, #108]	; (800781c <HAL_RCC_OscConfig+0x478>)
 80077ae:	2201      	movs	r2, #1
 80077b0:	601a      	str	r2, [r3, #0]
 80077b2:	f7fd f897 	bl	80048e4 <HAL_GetTick>
 80077b6:	6138      	str	r0, [r7, #16]
 80077b8:	e008      	b.n	80077cc <HAL_RCC_OscConfig+0x428>
 80077ba:	f7fd f893 	bl	80048e4 <HAL_GetTick>
 80077be:	4602      	mov	r2, r0
 80077c0:	693b      	ldr	r3, [r7, #16]
 80077c2:	1ad3      	subs	r3, r2, r3
 80077c4:	2b02      	cmp	r3, #2
 80077c6:	d901      	bls.n	80077cc <HAL_RCC_OscConfig+0x428>
 80077c8:	2303      	movs	r3, #3
 80077ca:	e05c      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 80077cc:	4b11      	ldr	r3, [pc, #68]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80077d4:	2b00      	cmp	r3, #0
 80077d6:	d0f0      	beq.n	80077ba <HAL_RCC_OscConfig+0x416>
 80077d8:	e054      	b.n	8007884 <HAL_RCC_OscConfig+0x4e0>
 80077da:	4b10      	ldr	r3, [pc, #64]	; (800781c <HAL_RCC_OscConfig+0x478>)
 80077dc:	2200      	movs	r2, #0
 80077de:	601a      	str	r2, [r3, #0]
 80077e0:	f7fd f880 	bl	80048e4 <HAL_GetTick>
 80077e4:	6138      	str	r0, [r7, #16]
 80077e6:	e008      	b.n	80077fa <HAL_RCC_OscConfig+0x456>
 80077e8:	f7fd f87c 	bl	80048e4 <HAL_GetTick>
 80077ec:	4602      	mov	r2, r0
 80077ee:	693b      	ldr	r3, [r7, #16]
 80077f0:	1ad3      	subs	r3, r2, r3
 80077f2:	2b02      	cmp	r3, #2
 80077f4:	d901      	bls.n	80077fa <HAL_RCC_OscConfig+0x456>
 80077f6:	2303      	movs	r3, #3
 80077f8:	e045      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 80077fa:	4b06      	ldr	r3, [pc, #24]	; (8007814 <HAL_RCC_OscConfig+0x470>)
 80077fc:	681b      	ldr	r3, [r3, #0]
 80077fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007802:	2b00      	cmp	r3, #0
 8007804:	d1f0      	bne.n	80077e8 <HAL_RCC_OscConfig+0x444>
 8007806:	e03d      	b.n	8007884 <HAL_RCC_OscConfig+0x4e0>
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	699b      	ldr	r3, [r3, #24]
 800780c:	2b01      	cmp	r3, #1
 800780e:	d107      	bne.n	8007820 <HAL_RCC_OscConfig+0x47c>
 8007810:	2301      	movs	r3, #1
 8007812:	e038      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 8007814:	40023800 	.word	0x40023800
 8007818:	40007000 	.word	0x40007000
 800781c:	42470060 	.word	0x42470060
 8007820:	4b1b      	ldr	r3, [pc, #108]	; (8007890 <HAL_RCC_OscConfig+0x4ec>)
 8007822:	685b      	ldr	r3, [r3, #4]
 8007824:	60fb      	str	r3, [r7, #12]
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	699b      	ldr	r3, [r3, #24]
 800782a:	2b01      	cmp	r3, #1
 800782c:	d028      	beq.n	8007880 <HAL_RCC_OscConfig+0x4dc>
 800782e:	68fb      	ldr	r3, [r7, #12]
 8007830:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	69db      	ldr	r3, [r3, #28]
 8007838:	429a      	cmp	r2, r3
 800783a:	d121      	bne.n	8007880 <HAL_RCC_OscConfig+0x4dc>
 800783c:	68fb      	ldr	r3, [r7, #12]
 800783e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	6a1b      	ldr	r3, [r3, #32]
 8007846:	429a      	cmp	r2, r3
 8007848:	d11a      	bne.n	8007880 <HAL_RCC_OscConfig+0x4dc>
 800784a:	68fa      	ldr	r2, [r7, #12]
 800784c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8007850:	4013      	ands	r3, r2
 8007852:	687a      	ldr	r2, [r7, #4]
 8007854:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8007856:	0192      	lsls	r2, r2, #6
 8007858:	4293      	cmp	r3, r2
 800785a:	d111      	bne.n	8007880 <HAL_RCC_OscConfig+0x4dc>
 800785c:	68fb      	ldr	r3, [r7, #12]
 800785e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007866:	085b      	lsrs	r3, r3, #1
 8007868:	3b01      	subs	r3, #1
 800786a:	041b      	lsls	r3, r3, #16
 800786c:	429a      	cmp	r2, r3
 800786e:	d107      	bne.n	8007880 <HAL_RCC_OscConfig+0x4dc>
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800787a:	061b      	lsls	r3, r3, #24
 800787c:	429a      	cmp	r2, r3
 800787e:	d001      	beq.n	8007884 <HAL_RCC_OscConfig+0x4e0>
 8007880:	2301      	movs	r3, #1
 8007882:	e000      	b.n	8007886 <HAL_RCC_OscConfig+0x4e2>
 8007884:	2300      	movs	r3, #0
 8007886:	4618      	mov	r0, r3
 8007888:	3718      	adds	r7, #24
 800788a:	46bd      	mov	sp, r7
 800788c:	bd80      	pop	{r7, pc}
 800788e:	bf00      	nop
 8007890:	40023800 	.word	0x40023800

08007894 <HAL_RCC_ClockConfig>:
 8007894:	b580      	push	{r7, lr}
 8007896:	b084      	sub	sp, #16
 8007898:	af00      	add	r7, sp, #0
 800789a:	6078      	str	r0, [r7, #4]
 800789c:	6039      	str	r1, [r7, #0]
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	2b00      	cmp	r3, #0
 80078a2:	d101      	bne.n	80078a8 <HAL_RCC_ClockConfig+0x14>
 80078a4:	2301      	movs	r3, #1
 80078a6:	e0cc      	b.n	8007a42 <HAL_RCC_ClockConfig+0x1ae>
 80078a8:	4b68      	ldr	r3, [pc, #416]	; (8007a4c <HAL_RCC_ClockConfig+0x1b8>)
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	f003 0307 	and.w	r3, r3, #7
 80078b0:	683a      	ldr	r2, [r7, #0]
 80078b2:	429a      	cmp	r2, r3
 80078b4:	d90c      	bls.n	80078d0 <HAL_RCC_ClockConfig+0x3c>
 80078b6:	4b65      	ldr	r3, [pc, #404]	; (8007a4c <HAL_RCC_ClockConfig+0x1b8>)
 80078b8:	683a      	ldr	r2, [r7, #0]
 80078ba:	b2d2      	uxtb	r2, r2
 80078bc:	701a      	strb	r2, [r3, #0]
 80078be:	4b63      	ldr	r3, [pc, #396]	; (8007a4c <HAL_RCC_ClockConfig+0x1b8>)
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	f003 0307 	and.w	r3, r3, #7
 80078c6:	683a      	ldr	r2, [r7, #0]
 80078c8:	429a      	cmp	r2, r3
 80078ca:	d001      	beq.n	80078d0 <HAL_RCC_ClockConfig+0x3c>
 80078cc:	2301      	movs	r3, #1
 80078ce:	e0b8      	b.n	8007a42 <HAL_RCC_ClockConfig+0x1ae>
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	681b      	ldr	r3, [r3, #0]
 80078d4:	f003 0302 	and.w	r3, r3, #2
 80078d8:	2b00      	cmp	r3, #0
 80078da:	d020      	beq.n	800791e <HAL_RCC_ClockConfig+0x8a>
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f003 0304 	and.w	r3, r3, #4
 80078e4:	2b00      	cmp	r3, #0
 80078e6:	d005      	beq.n	80078f4 <HAL_RCC_ClockConfig+0x60>
 80078e8:	4b59      	ldr	r3, [pc, #356]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 80078ea:	689b      	ldr	r3, [r3, #8]
 80078ec:	4a58      	ldr	r2, [pc, #352]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 80078ee:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80078f2:	6093      	str	r3, [r2, #8]
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	681b      	ldr	r3, [r3, #0]
 80078f8:	f003 0308 	and.w	r3, r3, #8
 80078fc:	2b00      	cmp	r3, #0
 80078fe:	d005      	beq.n	800790c <HAL_RCC_ClockConfig+0x78>
 8007900:	4b53      	ldr	r3, [pc, #332]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007902:	689b      	ldr	r3, [r3, #8]
 8007904:	4a52      	ldr	r2, [pc, #328]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007906:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800790a:	6093      	str	r3, [r2, #8]
 800790c:	4b50      	ldr	r3, [pc, #320]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 800790e:	689b      	ldr	r3, [r3, #8]
 8007910:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	689b      	ldr	r3, [r3, #8]
 8007918:	494d      	ldr	r1, [pc, #308]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 800791a:	4313      	orrs	r3, r2
 800791c:	608b      	str	r3, [r1, #8]
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	681b      	ldr	r3, [r3, #0]
 8007922:	f003 0301 	and.w	r3, r3, #1
 8007926:	2b00      	cmp	r3, #0
 8007928:	d044      	beq.n	80079b4 <HAL_RCC_ClockConfig+0x120>
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	685b      	ldr	r3, [r3, #4]
 800792e:	2b01      	cmp	r3, #1
 8007930:	d107      	bne.n	8007942 <HAL_RCC_ClockConfig+0xae>
 8007932:	4b47      	ldr	r3, [pc, #284]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800793a:	2b00      	cmp	r3, #0
 800793c:	d119      	bne.n	8007972 <HAL_RCC_ClockConfig+0xde>
 800793e:	2301      	movs	r3, #1
 8007940:	e07f      	b.n	8007a42 <HAL_RCC_ClockConfig+0x1ae>
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	685b      	ldr	r3, [r3, #4]
 8007946:	2b02      	cmp	r3, #2
 8007948:	d003      	beq.n	8007952 <HAL_RCC_ClockConfig+0xbe>
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	685b      	ldr	r3, [r3, #4]
 800794e:	2b03      	cmp	r3, #3
 8007950:	d107      	bne.n	8007962 <HAL_RCC_ClockConfig+0xce>
 8007952:	4b3f      	ldr	r3, [pc, #252]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800795a:	2b00      	cmp	r3, #0
 800795c:	d109      	bne.n	8007972 <HAL_RCC_ClockConfig+0xde>
 800795e:	2301      	movs	r3, #1
 8007960:	e06f      	b.n	8007a42 <HAL_RCC_ClockConfig+0x1ae>
 8007962:	4b3b      	ldr	r3, [pc, #236]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007964:	681b      	ldr	r3, [r3, #0]
 8007966:	f003 0302 	and.w	r3, r3, #2
 800796a:	2b00      	cmp	r3, #0
 800796c:	d101      	bne.n	8007972 <HAL_RCC_ClockConfig+0xde>
 800796e:	2301      	movs	r3, #1
 8007970:	e067      	b.n	8007a42 <HAL_RCC_ClockConfig+0x1ae>
 8007972:	4b37      	ldr	r3, [pc, #220]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007974:	689b      	ldr	r3, [r3, #8]
 8007976:	f023 0203 	bic.w	r2, r3, #3
 800797a:	687b      	ldr	r3, [r7, #4]
 800797c:	685b      	ldr	r3, [r3, #4]
 800797e:	4934      	ldr	r1, [pc, #208]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007980:	4313      	orrs	r3, r2
 8007982:	608b      	str	r3, [r1, #8]
 8007984:	f7fc ffae 	bl	80048e4 <HAL_GetTick>
 8007988:	60f8      	str	r0, [r7, #12]
 800798a:	e00a      	b.n	80079a2 <HAL_RCC_ClockConfig+0x10e>
 800798c:	f7fc ffaa 	bl	80048e4 <HAL_GetTick>
 8007990:	4602      	mov	r2, r0
 8007992:	68fb      	ldr	r3, [r7, #12]
 8007994:	1ad3      	subs	r3, r2, r3
 8007996:	f241 3288 	movw	r2, #5000	; 0x1388
 800799a:	4293      	cmp	r3, r2
 800799c:	d901      	bls.n	80079a2 <HAL_RCC_ClockConfig+0x10e>
 800799e:	2303      	movs	r3, #3
 80079a0:	e04f      	b.n	8007a42 <HAL_RCC_ClockConfig+0x1ae>
 80079a2:	4b2b      	ldr	r3, [pc, #172]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 80079a4:	689b      	ldr	r3, [r3, #8]
 80079a6:	f003 020c 	and.w	r2, r3, #12
 80079aa:	687b      	ldr	r3, [r7, #4]
 80079ac:	685b      	ldr	r3, [r3, #4]
 80079ae:	009b      	lsls	r3, r3, #2
 80079b0:	429a      	cmp	r2, r3
 80079b2:	d1eb      	bne.n	800798c <HAL_RCC_ClockConfig+0xf8>
 80079b4:	4b25      	ldr	r3, [pc, #148]	; (8007a4c <HAL_RCC_ClockConfig+0x1b8>)
 80079b6:	681b      	ldr	r3, [r3, #0]
 80079b8:	f003 0307 	and.w	r3, r3, #7
 80079bc:	683a      	ldr	r2, [r7, #0]
 80079be:	429a      	cmp	r2, r3
 80079c0:	d20c      	bcs.n	80079dc <HAL_RCC_ClockConfig+0x148>
 80079c2:	4b22      	ldr	r3, [pc, #136]	; (8007a4c <HAL_RCC_ClockConfig+0x1b8>)
 80079c4:	683a      	ldr	r2, [r7, #0]
 80079c6:	b2d2      	uxtb	r2, r2
 80079c8:	701a      	strb	r2, [r3, #0]
 80079ca:	4b20      	ldr	r3, [pc, #128]	; (8007a4c <HAL_RCC_ClockConfig+0x1b8>)
 80079cc:	681b      	ldr	r3, [r3, #0]
 80079ce:	f003 0307 	and.w	r3, r3, #7
 80079d2:	683a      	ldr	r2, [r7, #0]
 80079d4:	429a      	cmp	r2, r3
 80079d6:	d001      	beq.n	80079dc <HAL_RCC_ClockConfig+0x148>
 80079d8:	2301      	movs	r3, #1
 80079da:	e032      	b.n	8007a42 <HAL_RCC_ClockConfig+0x1ae>
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	681b      	ldr	r3, [r3, #0]
 80079e0:	f003 0304 	and.w	r3, r3, #4
 80079e4:	2b00      	cmp	r3, #0
 80079e6:	d008      	beq.n	80079fa <HAL_RCC_ClockConfig+0x166>
 80079e8:	4b19      	ldr	r3, [pc, #100]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 80079ea:	689b      	ldr	r3, [r3, #8]
 80079ec:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80079f0:	687b      	ldr	r3, [r7, #4]
 80079f2:	68db      	ldr	r3, [r3, #12]
 80079f4:	4916      	ldr	r1, [pc, #88]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 80079f6:	4313      	orrs	r3, r2
 80079f8:	608b      	str	r3, [r1, #8]
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	681b      	ldr	r3, [r3, #0]
 80079fe:	f003 0308 	and.w	r3, r3, #8
 8007a02:	2b00      	cmp	r3, #0
 8007a04:	d009      	beq.n	8007a1a <HAL_RCC_ClockConfig+0x186>
 8007a06:	4b12      	ldr	r3, [pc, #72]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007a08:	689b      	ldr	r3, [r3, #8]
 8007a0a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	691b      	ldr	r3, [r3, #16]
 8007a12:	00db      	lsls	r3, r3, #3
 8007a14:	490e      	ldr	r1, [pc, #56]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007a16:	4313      	orrs	r3, r2
 8007a18:	608b      	str	r3, [r1, #8]
 8007a1a:	f000 f821 	bl	8007a60 <HAL_RCC_GetSysClockFreq>
 8007a1e:	4602      	mov	r2, r0
 8007a20:	4b0b      	ldr	r3, [pc, #44]	; (8007a50 <HAL_RCC_ClockConfig+0x1bc>)
 8007a22:	689b      	ldr	r3, [r3, #8]
 8007a24:	091b      	lsrs	r3, r3, #4
 8007a26:	f003 030f 	and.w	r3, r3, #15
 8007a2a:	490a      	ldr	r1, [pc, #40]	; (8007a54 <HAL_RCC_ClockConfig+0x1c0>)
 8007a2c:	5ccb      	ldrb	r3, [r1, r3]
 8007a2e:	fa22 f303 	lsr.w	r3, r2, r3
 8007a32:	4a09      	ldr	r2, [pc, #36]	; (8007a58 <HAL_RCC_ClockConfig+0x1c4>)
 8007a34:	6013      	str	r3, [r2, #0]
 8007a36:	4b09      	ldr	r3, [pc, #36]	; (8007a5c <HAL_RCC_ClockConfig+0x1c8>)
 8007a38:	681b      	ldr	r3, [r3, #0]
 8007a3a:	4618      	mov	r0, r3
 8007a3c:	f7fc ff0e 	bl	800485c <HAL_InitTick>
 8007a40:	2300      	movs	r3, #0
 8007a42:	4618      	mov	r0, r3
 8007a44:	3710      	adds	r7, #16
 8007a46:	46bd      	mov	sp, r7
 8007a48:	bd80      	pop	{r7, pc}
 8007a4a:	bf00      	nop
 8007a4c:	40023c00 	.word	0x40023c00
 8007a50:	40023800 	.word	0x40023800
 8007a54:	0800f404 	.word	0x0800f404
 8007a58:	20000014 	.word	0x20000014
 8007a5c:	20000018 	.word	0x20000018

08007a60 <HAL_RCC_GetSysClockFreq>:
 8007a60:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007a64:	b094      	sub	sp, #80	; 0x50
 8007a66:	af00      	add	r7, sp, #0
 8007a68:	2300      	movs	r3, #0
 8007a6a:	647b      	str	r3, [r7, #68]	; 0x44
 8007a6c:	2300      	movs	r3, #0
 8007a6e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007a70:	2300      	movs	r3, #0
 8007a72:	643b      	str	r3, [r7, #64]	; 0x40
 8007a74:	2300      	movs	r3, #0
 8007a76:	64bb      	str	r3, [r7, #72]	; 0x48
 8007a78:	4b79      	ldr	r3, [pc, #484]	; (8007c60 <HAL_RCC_GetSysClockFreq+0x200>)
 8007a7a:	689b      	ldr	r3, [r3, #8]
 8007a7c:	f003 030c 	and.w	r3, r3, #12
 8007a80:	2b08      	cmp	r3, #8
 8007a82:	d00d      	beq.n	8007aa0 <HAL_RCC_GetSysClockFreq+0x40>
 8007a84:	2b08      	cmp	r3, #8
 8007a86:	f200 80e1 	bhi.w	8007c4c <HAL_RCC_GetSysClockFreq+0x1ec>
 8007a8a:	2b00      	cmp	r3, #0
 8007a8c:	d002      	beq.n	8007a94 <HAL_RCC_GetSysClockFreq+0x34>
 8007a8e:	2b04      	cmp	r3, #4
 8007a90:	d003      	beq.n	8007a9a <HAL_RCC_GetSysClockFreq+0x3a>
 8007a92:	e0db      	b.n	8007c4c <HAL_RCC_GetSysClockFreq+0x1ec>
 8007a94:	4b73      	ldr	r3, [pc, #460]	; (8007c64 <HAL_RCC_GetSysClockFreq+0x204>)
 8007a96:	64bb      	str	r3, [r7, #72]	; 0x48
 8007a98:	e0db      	b.n	8007c52 <HAL_RCC_GetSysClockFreq+0x1f2>
 8007a9a:	4b73      	ldr	r3, [pc, #460]	; (8007c68 <HAL_RCC_GetSysClockFreq+0x208>)
 8007a9c:	64bb      	str	r3, [r7, #72]	; 0x48
 8007a9e:	e0d8      	b.n	8007c52 <HAL_RCC_GetSysClockFreq+0x1f2>
 8007aa0:	4b6f      	ldr	r3, [pc, #444]	; (8007c60 <HAL_RCC_GetSysClockFreq+0x200>)
 8007aa2:	685b      	ldr	r3, [r3, #4]
 8007aa4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8007aa8:	647b      	str	r3, [r7, #68]	; 0x44
 8007aaa:	4b6d      	ldr	r3, [pc, #436]	; (8007c60 <HAL_RCC_GetSysClockFreq+0x200>)
 8007aac:	685b      	ldr	r3, [r3, #4]
 8007aae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007ab2:	2b00      	cmp	r3, #0
 8007ab4:	d063      	beq.n	8007b7e <HAL_RCC_GetSysClockFreq+0x11e>
 8007ab6:	4b6a      	ldr	r3, [pc, #424]	; (8007c60 <HAL_RCC_GetSysClockFreq+0x200>)
 8007ab8:	685b      	ldr	r3, [r3, #4]
 8007aba:	099b      	lsrs	r3, r3, #6
 8007abc:	2200      	movs	r2, #0
 8007abe:	63bb      	str	r3, [r7, #56]	; 0x38
 8007ac0:	63fa      	str	r2, [r7, #60]	; 0x3c
 8007ac2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007ac4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007ac8:	633b      	str	r3, [r7, #48]	; 0x30
 8007aca:	2300      	movs	r3, #0
 8007acc:	637b      	str	r3, [r7, #52]	; 0x34
 8007ace:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8007ad2:	4622      	mov	r2, r4
 8007ad4:	462b      	mov	r3, r5
 8007ad6:	f04f 0000 	mov.w	r0, #0
 8007ada:	f04f 0100 	mov.w	r1, #0
 8007ade:	0159      	lsls	r1, r3, #5
 8007ae0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007ae4:	0150      	lsls	r0, r2, #5
 8007ae6:	4602      	mov	r2, r0
 8007ae8:	460b      	mov	r3, r1
 8007aea:	4621      	mov	r1, r4
 8007aec:	1a51      	subs	r1, r2, r1
 8007aee:	6139      	str	r1, [r7, #16]
 8007af0:	4629      	mov	r1, r5
 8007af2:	eb63 0301 	sbc.w	r3, r3, r1
 8007af6:	617b      	str	r3, [r7, #20]
 8007af8:	f04f 0200 	mov.w	r2, #0
 8007afc:	f04f 0300 	mov.w	r3, #0
 8007b00:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007b04:	4659      	mov	r1, fp
 8007b06:	018b      	lsls	r3, r1, #6
 8007b08:	4651      	mov	r1, sl
 8007b0a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8007b0e:	4651      	mov	r1, sl
 8007b10:	018a      	lsls	r2, r1, #6
 8007b12:	4651      	mov	r1, sl
 8007b14:	ebb2 0801 	subs.w	r8, r2, r1
 8007b18:	4659      	mov	r1, fp
 8007b1a:	eb63 0901 	sbc.w	r9, r3, r1
 8007b1e:	f04f 0200 	mov.w	r2, #0
 8007b22:	f04f 0300 	mov.w	r3, #0
 8007b26:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007b2a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007b2e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007b32:	4690      	mov	r8, r2
 8007b34:	4699      	mov	r9, r3
 8007b36:	4623      	mov	r3, r4
 8007b38:	eb18 0303 	adds.w	r3, r8, r3
 8007b3c:	60bb      	str	r3, [r7, #8]
 8007b3e:	462b      	mov	r3, r5
 8007b40:	eb49 0303 	adc.w	r3, r9, r3
 8007b44:	60fb      	str	r3, [r7, #12]
 8007b46:	f04f 0200 	mov.w	r2, #0
 8007b4a:	f04f 0300 	mov.w	r3, #0
 8007b4e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8007b52:	4629      	mov	r1, r5
 8007b54:	024b      	lsls	r3, r1, #9
 8007b56:	4621      	mov	r1, r4
 8007b58:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8007b5c:	4621      	mov	r1, r4
 8007b5e:	024a      	lsls	r2, r1, #9
 8007b60:	4610      	mov	r0, r2
 8007b62:	4619      	mov	r1, r3
 8007b64:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007b66:	2200      	movs	r2, #0
 8007b68:	62bb      	str	r3, [r7, #40]	; 0x28
 8007b6a:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007b6c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8007b70:	f7fa f8d6 	bl	8001d20 <__aeabi_uldivmod>
 8007b74:	4602      	mov	r2, r0
 8007b76:	460b      	mov	r3, r1
 8007b78:	4613      	mov	r3, r2
 8007b7a:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007b7c:	e058      	b.n	8007c30 <HAL_RCC_GetSysClockFreq+0x1d0>
 8007b7e:	4b38      	ldr	r3, [pc, #224]	; (8007c60 <HAL_RCC_GetSysClockFreq+0x200>)
 8007b80:	685b      	ldr	r3, [r3, #4]
 8007b82:	099b      	lsrs	r3, r3, #6
 8007b84:	2200      	movs	r2, #0
 8007b86:	4618      	mov	r0, r3
 8007b88:	4611      	mov	r1, r2
 8007b8a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8007b8e:	623b      	str	r3, [r7, #32]
 8007b90:	2300      	movs	r3, #0
 8007b92:	627b      	str	r3, [r7, #36]	; 0x24
 8007b94:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8007b98:	4642      	mov	r2, r8
 8007b9a:	464b      	mov	r3, r9
 8007b9c:	f04f 0000 	mov.w	r0, #0
 8007ba0:	f04f 0100 	mov.w	r1, #0
 8007ba4:	0159      	lsls	r1, r3, #5
 8007ba6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007baa:	0150      	lsls	r0, r2, #5
 8007bac:	4602      	mov	r2, r0
 8007bae:	460b      	mov	r3, r1
 8007bb0:	4641      	mov	r1, r8
 8007bb2:	ebb2 0a01 	subs.w	sl, r2, r1
 8007bb6:	4649      	mov	r1, r9
 8007bb8:	eb63 0b01 	sbc.w	fp, r3, r1
 8007bbc:	f04f 0200 	mov.w	r2, #0
 8007bc0:	f04f 0300 	mov.w	r3, #0
 8007bc4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8007bc8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8007bcc:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8007bd0:	ebb2 040a 	subs.w	r4, r2, sl
 8007bd4:	eb63 050b 	sbc.w	r5, r3, fp
 8007bd8:	f04f 0200 	mov.w	r2, #0
 8007bdc:	f04f 0300 	mov.w	r3, #0
 8007be0:	00eb      	lsls	r3, r5, #3
 8007be2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007be6:	00e2      	lsls	r2, r4, #3
 8007be8:	4614      	mov	r4, r2
 8007bea:	461d      	mov	r5, r3
 8007bec:	4643      	mov	r3, r8
 8007bee:	18e3      	adds	r3, r4, r3
 8007bf0:	603b      	str	r3, [r7, #0]
 8007bf2:	464b      	mov	r3, r9
 8007bf4:	eb45 0303 	adc.w	r3, r5, r3
 8007bf8:	607b      	str	r3, [r7, #4]
 8007bfa:	f04f 0200 	mov.w	r2, #0
 8007bfe:	f04f 0300 	mov.w	r3, #0
 8007c02:	e9d7 4500 	ldrd	r4, r5, [r7]
 8007c06:	4629      	mov	r1, r5
 8007c08:	028b      	lsls	r3, r1, #10
 8007c0a:	4621      	mov	r1, r4
 8007c0c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8007c10:	4621      	mov	r1, r4
 8007c12:	028a      	lsls	r2, r1, #10
 8007c14:	4610      	mov	r0, r2
 8007c16:	4619      	mov	r1, r3
 8007c18:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007c1a:	2200      	movs	r2, #0
 8007c1c:	61bb      	str	r3, [r7, #24]
 8007c1e:	61fa      	str	r2, [r7, #28]
 8007c20:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007c24:	f7fa f87c 	bl	8001d20 <__aeabi_uldivmod>
 8007c28:	4602      	mov	r2, r0
 8007c2a:	460b      	mov	r3, r1
 8007c2c:	4613      	mov	r3, r2
 8007c2e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007c30:	4b0b      	ldr	r3, [pc, #44]	; (8007c60 <HAL_RCC_GetSysClockFreq+0x200>)
 8007c32:	685b      	ldr	r3, [r3, #4]
 8007c34:	0c1b      	lsrs	r3, r3, #16
 8007c36:	f003 0303 	and.w	r3, r3, #3
 8007c3a:	3301      	adds	r3, #1
 8007c3c:	005b      	lsls	r3, r3, #1
 8007c3e:	643b      	str	r3, [r7, #64]	; 0x40
 8007c40:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8007c42:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007c44:	fbb2 f3f3 	udiv	r3, r2, r3
 8007c48:	64bb      	str	r3, [r7, #72]	; 0x48
 8007c4a:	e002      	b.n	8007c52 <HAL_RCC_GetSysClockFreq+0x1f2>
 8007c4c:	4b05      	ldr	r3, [pc, #20]	; (8007c64 <HAL_RCC_GetSysClockFreq+0x204>)
 8007c4e:	64bb      	str	r3, [r7, #72]	; 0x48
 8007c50:	bf00      	nop
 8007c52:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007c54:	4618      	mov	r0, r3
 8007c56:	3750      	adds	r7, #80	; 0x50
 8007c58:	46bd      	mov	sp, r7
 8007c5a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007c5e:	bf00      	nop
 8007c60:	40023800 	.word	0x40023800
 8007c64:	00f42400 	.word	0x00f42400
 8007c68:	007a1200 	.word	0x007a1200

08007c6c <HAL_RCC_GetHCLKFreq>:
 8007c6c:	b480      	push	{r7}
 8007c6e:	af00      	add	r7, sp, #0
 8007c70:	4b03      	ldr	r3, [pc, #12]	; (8007c80 <HAL_RCC_GetHCLKFreq+0x14>)
 8007c72:	681b      	ldr	r3, [r3, #0]
 8007c74:	4618      	mov	r0, r3
 8007c76:	46bd      	mov	sp, r7
 8007c78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c7c:	4770      	bx	lr
 8007c7e:	bf00      	nop
 8007c80:	20000014 	.word	0x20000014

08007c84 <HAL_RCC_GetPCLK1Freq>:
 8007c84:	b580      	push	{r7, lr}
 8007c86:	af00      	add	r7, sp, #0
 8007c88:	f7ff fff0 	bl	8007c6c <HAL_RCC_GetHCLKFreq>
 8007c8c:	4602      	mov	r2, r0
 8007c8e:	4b05      	ldr	r3, [pc, #20]	; (8007ca4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8007c90:	689b      	ldr	r3, [r3, #8]
 8007c92:	0a9b      	lsrs	r3, r3, #10
 8007c94:	f003 0307 	and.w	r3, r3, #7
 8007c98:	4903      	ldr	r1, [pc, #12]	; (8007ca8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8007c9a:	5ccb      	ldrb	r3, [r1, r3]
 8007c9c:	fa22 f303 	lsr.w	r3, r2, r3
 8007ca0:	4618      	mov	r0, r3
 8007ca2:	bd80      	pop	{r7, pc}
 8007ca4:	40023800 	.word	0x40023800
 8007ca8:	0800f414 	.word	0x0800f414

08007cac <HAL_RNG_Init>:
 8007cac:	b580      	push	{r7, lr}
 8007cae:	b082      	sub	sp, #8
 8007cb0:	af00      	add	r7, sp, #0
 8007cb2:	6078      	str	r0, [r7, #4]
 8007cb4:	687b      	ldr	r3, [r7, #4]
 8007cb6:	2b00      	cmp	r3, #0
 8007cb8:	d101      	bne.n	8007cbe <HAL_RNG_Init+0x12>
 8007cba:	2301      	movs	r3, #1
 8007cbc:	e01c      	b.n	8007cf8 <HAL_RNG_Init+0x4c>
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	795b      	ldrb	r3, [r3, #5]
 8007cc2:	b2db      	uxtb	r3, r3
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d105      	bne.n	8007cd4 <HAL_RNG_Init+0x28>
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	2200      	movs	r2, #0
 8007ccc:	711a      	strb	r2, [r3, #4]
 8007cce:	6878      	ldr	r0, [r7, #4]
 8007cd0:	f7fc fc48 	bl	8004564 <HAL_RNG_MspInit>
 8007cd4:	687b      	ldr	r3, [r7, #4]
 8007cd6:	2202      	movs	r2, #2
 8007cd8:	715a      	strb	r2, [r3, #5]
 8007cda:	687b      	ldr	r3, [r7, #4]
 8007cdc:	681b      	ldr	r3, [r3, #0]
 8007cde:	681a      	ldr	r2, [r3, #0]
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	f042 0204 	orr.w	r2, r2, #4
 8007ce8:	601a      	str	r2, [r3, #0]
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	2201      	movs	r2, #1
 8007cee:	715a      	strb	r2, [r3, #5]
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	2200      	movs	r2, #0
 8007cf4:	609a      	str	r2, [r3, #8]
 8007cf6:	2300      	movs	r3, #0
 8007cf8:	4618      	mov	r0, r3
 8007cfa:	3708      	adds	r7, #8
 8007cfc:	46bd      	mov	sp, r7
 8007cfe:	bd80      	pop	{r7, pc}

08007d00 <HAL_RNG_GenerateRandomNumber_IT>:
 8007d00:	b480      	push	{r7}
 8007d02:	b085      	sub	sp, #20
 8007d04:	af00      	add	r7, sp, #0
 8007d06:	6078      	str	r0, [r7, #4]
 8007d08:	2300      	movs	r3, #0
 8007d0a:	73fb      	strb	r3, [r7, #15]
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	791b      	ldrb	r3, [r3, #4]
 8007d10:	2b01      	cmp	r3, #1
 8007d12:	d101      	bne.n	8007d18 <HAL_RNG_GenerateRandomNumber_IT+0x18>
 8007d14:	2302      	movs	r3, #2
 8007d16:	e01c      	b.n	8007d52 <HAL_RNG_GenerateRandomNumber_IT+0x52>
 8007d18:	687b      	ldr	r3, [r7, #4]
 8007d1a:	2201      	movs	r2, #1
 8007d1c:	711a      	strb	r2, [r3, #4]
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	795b      	ldrb	r3, [r3, #5]
 8007d22:	b2db      	uxtb	r3, r3
 8007d24:	2b01      	cmp	r3, #1
 8007d26:	d10b      	bne.n	8007d40 <HAL_RNG_GenerateRandomNumber_IT+0x40>
 8007d28:	687b      	ldr	r3, [r7, #4]
 8007d2a:	2202      	movs	r2, #2
 8007d2c:	715a      	strb	r2, [r3, #5]
 8007d2e:	687b      	ldr	r3, [r7, #4]
 8007d30:	681b      	ldr	r3, [r3, #0]
 8007d32:	681a      	ldr	r2, [r3, #0]
 8007d34:	687b      	ldr	r3, [r7, #4]
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	f042 0208 	orr.w	r2, r2, #8
 8007d3c:	601a      	str	r2, [r3, #0]
 8007d3e:	e007      	b.n	8007d50 <HAL_RNG_GenerateRandomNumber_IT+0x50>
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	2200      	movs	r2, #0
 8007d44:	711a      	strb	r2, [r3, #4]
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	2204      	movs	r2, #4
 8007d4a:	609a      	str	r2, [r3, #8]
 8007d4c:	2301      	movs	r3, #1
 8007d4e:	73fb      	strb	r3, [r7, #15]
 8007d50:	7bfb      	ldrb	r3, [r7, #15]
 8007d52:	4618      	mov	r0, r3
 8007d54:	3714      	adds	r7, #20
 8007d56:	46bd      	mov	sp, r7
 8007d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d5c:	4770      	bx	lr

08007d5e <HAL_RNG_IRQHandler>:
 8007d5e:	b580      	push	{r7, lr}
 8007d60:	b084      	sub	sp, #16
 8007d62:	af00      	add	r7, sp, #0
 8007d64:	6078      	str	r0, [r7, #4]
 8007d66:	2300      	movs	r3, #0
 8007d68:	60fb      	str	r3, [r7, #12]
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	681b      	ldr	r3, [r3, #0]
 8007d6e:	685b      	ldr	r3, [r3, #4]
 8007d70:	60bb      	str	r3, [r7, #8]
 8007d72:	68bb      	ldr	r3, [r7, #8]
 8007d74:	f003 0320 	and.w	r3, r3, #32
 8007d78:	2b00      	cmp	r3, #0
 8007d7a:	d005      	beq.n	8007d88 <HAL_RNG_IRQHandler+0x2a>
 8007d7c:	687b      	ldr	r3, [r7, #4]
 8007d7e:	2210      	movs	r2, #16
 8007d80:	609a      	str	r2, [r3, #8]
 8007d82:	2301      	movs	r3, #1
 8007d84:	60fb      	str	r3, [r7, #12]
 8007d86:	e009      	b.n	8007d9c <HAL_RNG_IRQHandler+0x3e>
 8007d88:	68bb      	ldr	r3, [r7, #8]
 8007d8a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007d8e:	2b00      	cmp	r3, #0
 8007d90:	d004      	beq.n	8007d9c <HAL_RNG_IRQHandler+0x3e>
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	2208      	movs	r2, #8
 8007d96:	609a      	str	r2, [r3, #8]
 8007d98:	2301      	movs	r3, #1
 8007d9a:	60fb      	str	r3, [r7, #12]
 8007d9c:	68fb      	ldr	r3, [r7, #12]
 8007d9e:	2b01      	cmp	r3, #1
 8007da0:	d10b      	bne.n	8007dba <HAL_RNG_IRQHandler+0x5c>
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	2204      	movs	r2, #4
 8007da6:	715a      	strb	r2, [r3, #5]
 8007da8:	6878      	ldr	r0, [r7, #4]
 8007daa:	f000 f838 	bl	8007e1e <HAL_RNG_ErrorCallback>
 8007dae:	687b      	ldr	r3, [r7, #4]
 8007db0:	681b      	ldr	r3, [r3, #0]
 8007db2:	f06f 0260 	mvn.w	r2, #96	; 0x60
 8007db6:	605a      	str	r2, [r3, #4]
 8007db8:	e022      	b.n	8007e00 <HAL_RNG_IRQHandler+0xa2>
 8007dba:	68bb      	ldr	r3, [r7, #8]
 8007dbc:	f003 0301 	and.w	r3, r3, #1
 8007dc0:	2b00      	cmp	r3, #0
 8007dc2:	d01d      	beq.n	8007e00 <HAL_RNG_IRQHandler+0xa2>
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	681b      	ldr	r3, [r3, #0]
 8007dc8:	681a      	ldr	r2, [r3, #0]
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	681b      	ldr	r3, [r3, #0]
 8007dce:	f022 0208 	bic.w	r2, r2, #8
 8007dd2:	601a      	str	r2, [r3, #0]
 8007dd4:	687b      	ldr	r3, [r7, #4]
 8007dd6:	681b      	ldr	r3, [r3, #0]
 8007dd8:	689a      	ldr	r2, [r3, #8]
 8007dda:	687b      	ldr	r3, [r7, #4]
 8007ddc:	60da      	str	r2, [r3, #12]
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	795b      	ldrb	r3, [r3, #5]
 8007de2:	b2db      	uxtb	r3, r3
 8007de4:	2b04      	cmp	r3, #4
 8007de6:	d00b      	beq.n	8007e00 <HAL_RNG_IRQHandler+0xa2>
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	2201      	movs	r2, #1
 8007dec:	715a      	strb	r2, [r3, #5]
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	2200      	movs	r2, #0
 8007df2:	711a      	strb	r2, [r3, #4]
 8007df4:	687b      	ldr	r3, [r7, #4]
 8007df6:	68db      	ldr	r3, [r3, #12]
 8007df8:	4619      	mov	r1, r3
 8007dfa:	6878      	ldr	r0, [r7, #4]
 8007dfc:	f7fb fe62 	bl	8003ac4 <HAL_RNG_ReadyDataCallback>
 8007e00:	3710      	adds	r7, #16
 8007e02:	46bd      	mov	sp, r7
 8007e04:	bd80      	pop	{r7, pc}

08007e06 <HAL_RNG_ReadLastRandomNumber>:
 8007e06:	b480      	push	{r7}
 8007e08:	b083      	sub	sp, #12
 8007e0a:	af00      	add	r7, sp, #0
 8007e0c:	6078      	str	r0, [r7, #4]
 8007e0e:	687b      	ldr	r3, [r7, #4]
 8007e10:	68db      	ldr	r3, [r3, #12]
 8007e12:	4618      	mov	r0, r3
 8007e14:	370c      	adds	r7, #12
 8007e16:	46bd      	mov	sp, r7
 8007e18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e1c:	4770      	bx	lr

08007e1e <HAL_RNG_ErrorCallback>:
 8007e1e:	b480      	push	{r7}
 8007e20:	b083      	sub	sp, #12
 8007e22:	af00      	add	r7, sp, #0
 8007e24:	6078      	str	r0, [r7, #4]
 8007e26:	bf00      	nop
 8007e28:	370c      	adds	r7, #12
 8007e2a:	46bd      	mov	sp, r7
 8007e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e30:	4770      	bx	lr

08007e32 <HAL_TIM_Base_Init>:
 8007e32:	b580      	push	{r7, lr}
 8007e34:	b082      	sub	sp, #8
 8007e36:	af00      	add	r7, sp, #0
 8007e38:	6078      	str	r0, [r7, #4]
 8007e3a:	687b      	ldr	r3, [r7, #4]
 8007e3c:	2b00      	cmp	r3, #0
 8007e3e:	d101      	bne.n	8007e44 <HAL_TIM_Base_Init+0x12>
 8007e40:	2301      	movs	r3, #1
 8007e42:	e041      	b.n	8007ec8 <HAL_TIM_Base_Init+0x96>
 8007e44:	687b      	ldr	r3, [r7, #4]
 8007e46:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007e4a:	b2db      	uxtb	r3, r3
 8007e4c:	2b00      	cmp	r3, #0
 8007e4e:	d106      	bne.n	8007e5e <HAL_TIM_Base_Init+0x2c>
 8007e50:	687b      	ldr	r3, [r7, #4]
 8007e52:	2200      	movs	r2, #0
 8007e54:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007e58:	6878      	ldr	r0, [r7, #4]
 8007e5a:	f7fc fbab 	bl	80045b4 <HAL_TIM_Base_MspInit>
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	2202      	movs	r2, #2
 8007e62:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	681a      	ldr	r2, [r3, #0]
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	3304      	adds	r3, #4
 8007e6e:	4619      	mov	r1, r3
 8007e70:	4610      	mov	r0, r2
 8007e72:	f000 fa7d 	bl	8008370 <TIM_Base_SetConfig>
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	2201      	movs	r2, #1
 8007e7a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	2201      	movs	r2, #1
 8007e82:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	2201      	movs	r2, #1
 8007e8a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007e8e:	687b      	ldr	r3, [r7, #4]
 8007e90:	2201      	movs	r2, #1
 8007e92:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	2201      	movs	r2, #1
 8007e9a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	2201      	movs	r2, #1
 8007ea2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	2201      	movs	r2, #1
 8007eaa:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8007eae:	687b      	ldr	r3, [r7, #4]
 8007eb0:	2201      	movs	r2, #1
 8007eb2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	2201      	movs	r2, #1
 8007eba:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	2201      	movs	r2, #1
 8007ec2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ec6:	2300      	movs	r3, #0
 8007ec8:	4618      	mov	r0, r3
 8007eca:	3708      	adds	r7, #8
 8007ecc:	46bd      	mov	sp, r7
 8007ece:	bd80      	pop	{r7, pc}

08007ed0 <HAL_TIM_Base_Start_IT>:
 8007ed0:	b480      	push	{r7}
 8007ed2:	b085      	sub	sp, #20
 8007ed4:	af00      	add	r7, sp, #0
 8007ed6:	6078      	str	r0, [r7, #4]
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007ede:	b2db      	uxtb	r3, r3
 8007ee0:	2b01      	cmp	r3, #1
 8007ee2:	d001      	beq.n	8007ee8 <HAL_TIM_Base_Start_IT+0x18>
 8007ee4:	2301      	movs	r3, #1
 8007ee6:	e04e      	b.n	8007f86 <HAL_TIM_Base_Start_IT+0xb6>
 8007ee8:	687b      	ldr	r3, [r7, #4]
 8007eea:	2202      	movs	r2, #2
 8007eec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	681b      	ldr	r3, [r3, #0]
 8007ef4:	68da      	ldr	r2, [r3, #12]
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	f042 0201 	orr.w	r2, r2, #1
 8007efe:	60da      	str	r2, [r3, #12]
 8007f00:	687b      	ldr	r3, [r7, #4]
 8007f02:	681b      	ldr	r3, [r3, #0]
 8007f04:	4a23      	ldr	r2, [pc, #140]	; (8007f94 <HAL_TIM_Base_Start_IT+0xc4>)
 8007f06:	4293      	cmp	r3, r2
 8007f08:	d022      	beq.n	8007f50 <HAL_TIM_Base_Start_IT+0x80>
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	681b      	ldr	r3, [r3, #0]
 8007f0e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007f12:	d01d      	beq.n	8007f50 <HAL_TIM_Base_Start_IT+0x80>
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	4a1f      	ldr	r2, [pc, #124]	; (8007f98 <HAL_TIM_Base_Start_IT+0xc8>)
 8007f1a:	4293      	cmp	r3, r2
 8007f1c:	d018      	beq.n	8007f50 <HAL_TIM_Base_Start_IT+0x80>
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	681b      	ldr	r3, [r3, #0]
 8007f22:	4a1e      	ldr	r2, [pc, #120]	; (8007f9c <HAL_TIM_Base_Start_IT+0xcc>)
 8007f24:	4293      	cmp	r3, r2
 8007f26:	d013      	beq.n	8007f50 <HAL_TIM_Base_Start_IT+0x80>
 8007f28:	687b      	ldr	r3, [r7, #4]
 8007f2a:	681b      	ldr	r3, [r3, #0]
 8007f2c:	4a1c      	ldr	r2, [pc, #112]	; (8007fa0 <HAL_TIM_Base_Start_IT+0xd0>)
 8007f2e:	4293      	cmp	r3, r2
 8007f30:	d00e      	beq.n	8007f50 <HAL_TIM_Base_Start_IT+0x80>
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	4a1b      	ldr	r2, [pc, #108]	; (8007fa4 <HAL_TIM_Base_Start_IT+0xd4>)
 8007f38:	4293      	cmp	r3, r2
 8007f3a:	d009      	beq.n	8007f50 <HAL_TIM_Base_Start_IT+0x80>
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	681b      	ldr	r3, [r3, #0]
 8007f40:	4a19      	ldr	r2, [pc, #100]	; (8007fa8 <HAL_TIM_Base_Start_IT+0xd8>)
 8007f42:	4293      	cmp	r3, r2
 8007f44:	d004      	beq.n	8007f50 <HAL_TIM_Base_Start_IT+0x80>
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	681b      	ldr	r3, [r3, #0]
 8007f4a:	4a18      	ldr	r2, [pc, #96]	; (8007fac <HAL_TIM_Base_Start_IT+0xdc>)
 8007f4c:	4293      	cmp	r3, r2
 8007f4e:	d111      	bne.n	8007f74 <HAL_TIM_Base_Start_IT+0xa4>
 8007f50:	687b      	ldr	r3, [r7, #4]
 8007f52:	681b      	ldr	r3, [r3, #0]
 8007f54:	689b      	ldr	r3, [r3, #8]
 8007f56:	f003 0307 	and.w	r3, r3, #7
 8007f5a:	60fb      	str	r3, [r7, #12]
 8007f5c:	68fb      	ldr	r3, [r7, #12]
 8007f5e:	2b06      	cmp	r3, #6
 8007f60:	d010      	beq.n	8007f84 <HAL_TIM_Base_Start_IT+0xb4>
 8007f62:	687b      	ldr	r3, [r7, #4]
 8007f64:	681b      	ldr	r3, [r3, #0]
 8007f66:	681a      	ldr	r2, [r3, #0]
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	f042 0201 	orr.w	r2, r2, #1
 8007f70:	601a      	str	r2, [r3, #0]
 8007f72:	e007      	b.n	8007f84 <HAL_TIM_Base_Start_IT+0xb4>
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	681a      	ldr	r2, [r3, #0]
 8007f7a:	687b      	ldr	r3, [r7, #4]
 8007f7c:	681b      	ldr	r3, [r3, #0]
 8007f7e:	f042 0201 	orr.w	r2, r2, #1
 8007f82:	601a      	str	r2, [r3, #0]
 8007f84:	2300      	movs	r3, #0
 8007f86:	4618      	mov	r0, r3
 8007f88:	3714      	adds	r7, #20
 8007f8a:	46bd      	mov	sp, r7
 8007f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f90:	4770      	bx	lr
 8007f92:	bf00      	nop
 8007f94:	40010000 	.word	0x40010000
 8007f98:	40000400 	.word	0x40000400
 8007f9c:	40000800 	.word	0x40000800
 8007fa0:	40000c00 	.word	0x40000c00
 8007fa4:	40010400 	.word	0x40010400
 8007fa8:	40014000 	.word	0x40014000
 8007fac:	40001800 	.word	0x40001800

08007fb0 <HAL_TIM_IRQHandler>:
 8007fb0:	b580      	push	{r7, lr}
 8007fb2:	b084      	sub	sp, #16
 8007fb4:	af00      	add	r7, sp, #0
 8007fb6:	6078      	str	r0, [r7, #4]
 8007fb8:	687b      	ldr	r3, [r7, #4]
 8007fba:	681b      	ldr	r3, [r3, #0]
 8007fbc:	68db      	ldr	r3, [r3, #12]
 8007fbe:	60fb      	str	r3, [r7, #12]
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	681b      	ldr	r3, [r3, #0]
 8007fc4:	691b      	ldr	r3, [r3, #16]
 8007fc6:	60bb      	str	r3, [r7, #8]
 8007fc8:	68bb      	ldr	r3, [r7, #8]
 8007fca:	f003 0302 	and.w	r3, r3, #2
 8007fce:	2b00      	cmp	r3, #0
 8007fd0:	d020      	beq.n	8008014 <HAL_TIM_IRQHandler+0x64>
 8007fd2:	68fb      	ldr	r3, [r7, #12]
 8007fd4:	f003 0302 	and.w	r3, r3, #2
 8007fd8:	2b00      	cmp	r3, #0
 8007fda:	d01b      	beq.n	8008014 <HAL_TIM_IRQHandler+0x64>
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	681b      	ldr	r3, [r3, #0]
 8007fe0:	f06f 0202 	mvn.w	r2, #2
 8007fe4:	611a      	str	r2, [r3, #16]
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	2201      	movs	r2, #1
 8007fea:	771a      	strb	r2, [r3, #28]
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	681b      	ldr	r3, [r3, #0]
 8007ff0:	699b      	ldr	r3, [r3, #24]
 8007ff2:	f003 0303 	and.w	r3, r3, #3
 8007ff6:	2b00      	cmp	r3, #0
 8007ff8:	d003      	beq.n	8008002 <HAL_TIM_IRQHandler+0x52>
 8007ffa:	6878      	ldr	r0, [r7, #4]
 8007ffc:	f000 f999 	bl	8008332 <HAL_TIM_IC_CaptureCallback>
 8008000:	e005      	b.n	800800e <HAL_TIM_IRQHandler+0x5e>
 8008002:	6878      	ldr	r0, [r7, #4]
 8008004:	f000 f98b 	bl	800831e <HAL_TIM_OC_DelayElapsedCallback>
 8008008:	6878      	ldr	r0, [r7, #4]
 800800a:	f000 f99c 	bl	8008346 <HAL_TIM_PWM_PulseFinishedCallback>
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	2200      	movs	r2, #0
 8008012:	771a      	strb	r2, [r3, #28]
 8008014:	68bb      	ldr	r3, [r7, #8]
 8008016:	f003 0304 	and.w	r3, r3, #4
 800801a:	2b00      	cmp	r3, #0
 800801c:	d020      	beq.n	8008060 <HAL_TIM_IRQHandler+0xb0>
 800801e:	68fb      	ldr	r3, [r7, #12]
 8008020:	f003 0304 	and.w	r3, r3, #4
 8008024:	2b00      	cmp	r3, #0
 8008026:	d01b      	beq.n	8008060 <HAL_TIM_IRQHandler+0xb0>
 8008028:	687b      	ldr	r3, [r7, #4]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	f06f 0204 	mvn.w	r2, #4
 8008030:	611a      	str	r2, [r3, #16]
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	2202      	movs	r2, #2
 8008036:	771a      	strb	r2, [r3, #28]
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	681b      	ldr	r3, [r3, #0]
 800803c:	699b      	ldr	r3, [r3, #24]
 800803e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008042:	2b00      	cmp	r3, #0
 8008044:	d003      	beq.n	800804e <HAL_TIM_IRQHandler+0x9e>
 8008046:	6878      	ldr	r0, [r7, #4]
 8008048:	f000 f973 	bl	8008332 <HAL_TIM_IC_CaptureCallback>
 800804c:	e005      	b.n	800805a <HAL_TIM_IRQHandler+0xaa>
 800804e:	6878      	ldr	r0, [r7, #4]
 8008050:	f000 f965 	bl	800831e <HAL_TIM_OC_DelayElapsedCallback>
 8008054:	6878      	ldr	r0, [r7, #4]
 8008056:	f000 f976 	bl	8008346 <HAL_TIM_PWM_PulseFinishedCallback>
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	2200      	movs	r2, #0
 800805e:	771a      	strb	r2, [r3, #28]
 8008060:	68bb      	ldr	r3, [r7, #8]
 8008062:	f003 0308 	and.w	r3, r3, #8
 8008066:	2b00      	cmp	r3, #0
 8008068:	d020      	beq.n	80080ac <HAL_TIM_IRQHandler+0xfc>
 800806a:	68fb      	ldr	r3, [r7, #12]
 800806c:	f003 0308 	and.w	r3, r3, #8
 8008070:	2b00      	cmp	r3, #0
 8008072:	d01b      	beq.n	80080ac <HAL_TIM_IRQHandler+0xfc>
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	681b      	ldr	r3, [r3, #0]
 8008078:	f06f 0208 	mvn.w	r2, #8
 800807c:	611a      	str	r2, [r3, #16]
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	2204      	movs	r2, #4
 8008082:	771a      	strb	r2, [r3, #28]
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	681b      	ldr	r3, [r3, #0]
 8008088:	69db      	ldr	r3, [r3, #28]
 800808a:	f003 0303 	and.w	r3, r3, #3
 800808e:	2b00      	cmp	r3, #0
 8008090:	d003      	beq.n	800809a <HAL_TIM_IRQHandler+0xea>
 8008092:	6878      	ldr	r0, [r7, #4]
 8008094:	f000 f94d 	bl	8008332 <HAL_TIM_IC_CaptureCallback>
 8008098:	e005      	b.n	80080a6 <HAL_TIM_IRQHandler+0xf6>
 800809a:	6878      	ldr	r0, [r7, #4]
 800809c:	f000 f93f 	bl	800831e <HAL_TIM_OC_DelayElapsedCallback>
 80080a0:	6878      	ldr	r0, [r7, #4]
 80080a2:	f000 f950 	bl	8008346 <HAL_TIM_PWM_PulseFinishedCallback>
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	2200      	movs	r2, #0
 80080aa:	771a      	strb	r2, [r3, #28]
 80080ac:	68bb      	ldr	r3, [r7, #8]
 80080ae:	f003 0310 	and.w	r3, r3, #16
 80080b2:	2b00      	cmp	r3, #0
 80080b4:	d020      	beq.n	80080f8 <HAL_TIM_IRQHandler+0x148>
 80080b6:	68fb      	ldr	r3, [r7, #12]
 80080b8:	f003 0310 	and.w	r3, r3, #16
 80080bc:	2b00      	cmp	r3, #0
 80080be:	d01b      	beq.n	80080f8 <HAL_TIM_IRQHandler+0x148>
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	681b      	ldr	r3, [r3, #0]
 80080c4:	f06f 0210 	mvn.w	r2, #16
 80080c8:	611a      	str	r2, [r3, #16]
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	2208      	movs	r2, #8
 80080ce:	771a      	strb	r2, [r3, #28]
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	681b      	ldr	r3, [r3, #0]
 80080d4:	69db      	ldr	r3, [r3, #28]
 80080d6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80080da:	2b00      	cmp	r3, #0
 80080dc:	d003      	beq.n	80080e6 <HAL_TIM_IRQHandler+0x136>
 80080de:	6878      	ldr	r0, [r7, #4]
 80080e0:	f000 f927 	bl	8008332 <HAL_TIM_IC_CaptureCallback>
 80080e4:	e005      	b.n	80080f2 <HAL_TIM_IRQHandler+0x142>
 80080e6:	6878      	ldr	r0, [r7, #4]
 80080e8:	f000 f919 	bl	800831e <HAL_TIM_OC_DelayElapsedCallback>
 80080ec:	6878      	ldr	r0, [r7, #4]
 80080ee:	f000 f92a 	bl	8008346 <HAL_TIM_PWM_PulseFinishedCallback>
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	2200      	movs	r2, #0
 80080f6:	771a      	strb	r2, [r3, #28]
 80080f8:	68bb      	ldr	r3, [r7, #8]
 80080fa:	f003 0301 	and.w	r3, r3, #1
 80080fe:	2b00      	cmp	r3, #0
 8008100:	d00c      	beq.n	800811c <HAL_TIM_IRQHandler+0x16c>
 8008102:	68fb      	ldr	r3, [r7, #12]
 8008104:	f003 0301 	and.w	r3, r3, #1
 8008108:	2b00      	cmp	r3, #0
 800810a:	d007      	beq.n	800811c <HAL_TIM_IRQHandler+0x16c>
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	f06f 0201 	mvn.w	r2, #1
 8008114:	611a      	str	r2, [r3, #16]
 8008116:	6878      	ldr	r0, [r7, #4]
 8008118:	f7fb fce4 	bl	8003ae4 <HAL_TIM_PeriodElapsedCallback>
 800811c:	68bb      	ldr	r3, [r7, #8]
 800811e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008122:	2b00      	cmp	r3, #0
 8008124:	d00c      	beq.n	8008140 <HAL_TIM_IRQHandler+0x190>
 8008126:	68fb      	ldr	r3, [r7, #12]
 8008128:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800812c:	2b00      	cmp	r3, #0
 800812e:	d007      	beq.n	8008140 <HAL_TIM_IRQHandler+0x190>
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	681b      	ldr	r3, [r3, #0]
 8008134:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008138:	611a      	str	r2, [r3, #16]
 800813a:	6878      	ldr	r0, [r7, #4]
 800813c:	f000 fae4 	bl	8008708 <HAL_TIMEx_BreakCallback>
 8008140:	68bb      	ldr	r3, [r7, #8]
 8008142:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008146:	2b00      	cmp	r3, #0
 8008148:	d00c      	beq.n	8008164 <HAL_TIM_IRQHandler+0x1b4>
 800814a:	68fb      	ldr	r3, [r7, #12]
 800814c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008150:	2b00      	cmp	r3, #0
 8008152:	d007      	beq.n	8008164 <HAL_TIM_IRQHandler+0x1b4>
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	681b      	ldr	r3, [r3, #0]
 8008158:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800815c:	611a      	str	r2, [r3, #16]
 800815e:	6878      	ldr	r0, [r7, #4]
 8008160:	f000 f8fb 	bl	800835a <HAL_TIM_TriggerCallback>
 8008164:	68bb      	ldr	r3, [r7, #8]
 8008166:	f003 0320 	and.w	r3, r3, #32
 800816a:	2b00      	cmp	r3, #0
 800816c:	d00c      	beq.n	8008188 <HAL_TIM_IRQHandler+0x1d8>
 800816e:	68fb      	ldr	r3, [r7, #12]
 8008170:	f003 0320 	and.w	r3, r3, #32
 8008174:	2b00      	cmp	r3, #0
 8008176:	d007      	beq.n	8008188 <HAL_TIM_IRQHandler+0x1d8>
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	681b      	ldr	r3, [r3, #0]
 800817c:	f06f 0220 	mvn.w	r2, #32
 8008180:	611a      	str	r2, [r3, #16]
 8008182:	6878      	ldr	r0, [r7, #4]
 8008184:	f000 fab6 	bl	80086f4 <HAL_TIMEx_CommutCallback>
 8008188:	bf00      	nop
 800818a:	3710      	adds	r7, #16
 800818c:	46bd      	mov	sp, r7
 800818e:	bd80      	pop	{r7, pc}

08008190 <HAL_TIM_ConfigClockSource>:
 8008190:	b580      	push	{r7, lr}
 8008192:	b084      	sub	sp, #16
 8008194:	af00      	add	r7, sp, #0
 8008196:	6078      	str	r0, [r7, #4]
 8008198:	6039      	str	r1, [r7, #0]
 800819a:	2300      	movs	r3, #0
 800819c:	73fb      	strb	r3, [r7, #15]
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80081a4:	2b01      	cmp	r3, #1
 80081a6:	d101      	bne.n	80081ac <HAL_TIM_ConfigClockSource+0x1c>
 80081a8:	2302      	movs	r3, #2
 80081aa:	e0b4      	b.n	8008316 <HAL_TIM_ConfigClockSource+0x186>
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	2201      	movs	r2, #1
 80081b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	2202      	movs	r2, #2
 80081b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	689b      	ldr	r3, [r3, #8]
 80081c2:	60bb      	str	r3, [r7, #8]
 80081c4:	68bb      	ldr	r3, [r7, #8]
 80081c6:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80081ca:	60bb      	str	r3, [r7, #8]
 80081cc:	68bb      	ldr	r3, [r7, #8]
 80081ce:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80081d2:	60bb      	str	r3, [r7, #8]
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	681b      	ldr	r3, [r3, #0]
 80081d8:	68ba      	ldr	r2, [r7, #8]
 80081da:	609a      	str	r2, [r3, #8]
 80081dc:	683b      	ldr	r3, [r7, #0]
 80081de:	681b      	ldr	r3, [r3, #0]
 80081e0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80081e4:	d03e      	beq.n	8008264 <HAL_TIM_ConfigClockSource+0xd4>
 80081e6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80081ea:	f200 8087 	bhi.w	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 80081ee:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80081f2:	f000 8086 	beq.w	8008302 <HAL_TIM_ConfigClockSource+0x172>
 80081f6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80081fa:	d87f      	bhi.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 80081fc:	2b70      	cmp	r3, #112	; 0x70
 80081fe:	d01a      	beq.n	8008236 <HAL_TIM_ConfigClockSource+0xa6>
 8008200:	2b70      	cmp	r3, #112	; 0x70
 8008202:	d87b      	bhi.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 8008204:	2b60      	cmp	r3, #96	; 0x60
 8008206:	d050      	beq.n	80082aa <HAL_TIM_ConfigClockSource+0x11a>
 8008208:	2b60      	cmp	r3, #96	; 0x60
 800820a:	d877      	bhi.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 800820c:	2b50      	cmp	r3, #80	; 0x50
 800820e:	d03c      	beq.n	800828a <HAL_TIM_ConfigClockSource+0xfa>
 8008210:	2b50      	cmp	r3, #80	; 0x50
 8008212:	d873      	bhi.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 8008214:	2b40      	cmp	r3, #64	; 0x40
 8008216:	d058      	beq.n	80082ca <HAL_TIM_ConfigClockSource+0x13a>
 8008218:	2b40      	cmp	r3, #64	; 0x40
 800821a:	d86f      	bhi.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 800821c:	2b30      	cmp	r3, #48	; 0x30
 800821e:	d064      	beq.n	80082ea <HAL_TIM_ConfigClockSource+0x15a>
 8008220:	2b30      	cmp	r3, #48	; 0x30
 8008222:	d86b      	bhi.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 8008224:	2b20      	cmp	r3, #32
 8008226:	d060      	beq.n	80082ea <HAL_TIM_ConfigClockSource+0x15a>
 8008228:	2b20      	cmp	r3, #32
 800822a:	d867      	bhi.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 800822c:	2b00      	cmp	r3, #0
 800822e:	d05c      	beq.n	80082ea <HAL_TIM_ConfigClockSource+0x15a>
 8008230:	2b10      	cmp	r3, #16
 8008232:	d05a      	beq.n	80082ea <HAL_TIM_ConfigClockSource+0x15a>
 8008234:	e062      	b.n	80082fc <HAL_TIM_ConfigClockSource+0x16c>
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	6818      	ldr	r0, [r3, #0]
 800823a:	683b      	ldr	r3, [r7, #0]
 800823c:	6899      	ldr	r1, [r3, #8]
 800823e:	683b      	ldr	r3, [r7, #0]
 8008240:	685a      	ldr	r2, [r3, #4]
 8008242:	683b      	ldr	r3, [r7, #0]
 8008244:	68db      	ldr	r3, [r3, #12]
 8008246:	f000 f9b9 	bl	80085bc <TIM_ETR_SetConfig>
 800824a:	687b      	ldr	r3, [r7, #4]
 800824c:	681b      	ldr	r3, [r3, #0]
 800824e:	689b      	ldr	r3, [r3, #8]
 8008250:	60bb      	str	r3, [r7, #8]
 8008252:	68bb      	ldr	r3, [r7, #8]
 8008254:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8008258:	60bb      	str	r3, [r7, #8]
 800825a:	687b      	ldr	r3, [r7, #4]
 800825c:	681b      	ldr	r3, [r3, #0]
 800825e:	68ba      	ldr	r2, [r7, #8]
 8008260:	609a      	str	r2, [r3, #8]
 8008262:	e04f      	b.n	8008304 <HAL_TIM_ConfigClockSource+0x174>
 8008264:	687b      	ldr	r3, [r7, #4]
 8008266:	6818      	ldr	r0, [r3, #0]
 8008268:	683b      	ldr	r3, [r7, #0]
 800826a:	6899      	ldr	r1, [r3, #8]
 800826c:	683b      	ldr	r3, [r7, #0]
 800826e:	685a      	ldr	r2, [r3, #4]
 8008270:	683b      	ldr	r3, [r7, #0]
 8008272:	68db      	ldr	r3, [r3, #12]
 8008274:	f000 f9a2 	bl	80085bc <TIM_ETR_SetConfig>
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	681b      	ldr	r3, [r3, #0]
 800827c:	689a      	ldr	r2, [r3, #8]
 800827e:	687b      	ldr	r3, [r7, #4]
 8008280:	681b      	ldr	r3, [r3, #0]
 8008282:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008286:	609a      	str	r2, [r3, #8]
 8008288:	e03c      	b.n	8008304 <HAL_TIM_ConfigClockSource+0x174>
 800828a:	687b      	ldr	r3, [r7, #4]
 800828c:	6818      	ldr	r0, [r3, #0]
 800828e:	683b      	ldr	r3, [r7, #0]
 8008290:	6859      	ldr	r1, [r3, #4]
 8008292:	683b      	ldr	r3, [r7, #0]
 8008294:	68db      	ldr	r3, [r3, #12]
 8008296:	461a      	mov	r2, r3
 8008298:	f000 f916 	bl	80084c8 <TIM_TI1_ConfigInputStage>
 800829c:	687b      	ldr	r3, [r7, #4]
 800829e:	681b      	ldr	r3, [r3, #0]
 80082a0:	2150      	movs	r1, #80	; 0x50
 80082a2:	4618      	mov	r0, r3
 80082a4:	f000 f96f 	bl	8008586 <TIM_ITRx_SetConfig>
 80082a8:	e02c      	b.n	8008304 <HAL_TIM_ConfigClockSource+0x174>
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	6818      	ldr	r0, [r3, #0]
 80082ae:	683b      	ldr	r3, [r7, #0]
 80082b0:	6859      	ldr	r1, [r3, #4]
 80082b2:	683b      	ldr	r3, [r7, #0]
 80082b4:	68db      	ldr	r3, [r3, #12]
 80082b6:	461a      	mov	r2, r3
 80082b8:	f000 f935 	bl	8008526 <TIM_TI2_ConfigInputStage>
 80082bc:	687b      	ldr	r3, [r7, #4]
 80082be:	681b      	ldr	r3, [r3, #0]
 80082c0:	2160      	movs	r1, #96	; 0x60
 80082c2:	4618      	mov	r0, r3
 80082c4:	f000 f95f 	bl	8008586 <TIM_ITRx_SetConfig>
 80082c8:	e01c      	b.n	8008304 <HAL_TIM_ConfigClockSource+0x174>
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	6818      	ldr	r0, [r3, #0]
 80082ce:	683b      	ldr	r3, [r7, #0]
 80082d0:	6859      	ldr	r1, [r3, #4]
 80082d2:	683b      	ldr	r3, [r7, #0]
 80082d4:	68db      	ldr	r3, [r3, #12]
 80082d6:	461a      	mov	r2, r3
 80082d8:	f000 f8f6 	bl	80084c8 <TIM_TI1_ConfigInputStage>
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	681b      	ldr	r3, [r3, #0]
 80082e0:	2140      	movs	r1, #64	; 0x40
 80082e2:	4618      	mov	r0, r3
 80082e4:	f000 f94f 	bl	8008586 <TIM_ITRx_SetConfig>
 80082e8:	e00c      	b.n	8008304 <HAL_TIM_ConfigClockSource+0x174>
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	681a      	ldr	r2, [r3, #0]
 80082ee:	683b      	ldr	r3, [r7, #0]
 80082f0:	681b      	ldr	r3, [r3, #0]
 80082f2:	4619      	mov	r1, r3
 80082f4:	4610      	mov	r0, r2
 80082f6:	f000 f946 	bl	8008586 <TIM_ITRx_SetConfig>
 80082fa:	e003      	b.n	8008304 <HAL_TIM_ConfigClockSource+0x174>
 80082fc:	2301      	movs	r3, #1
 80082fe:	73fb      	strb	r3, [r7, #15]
 8008300:	e000      	b.n	8008304 <HAL_TIM_ConfigClockSource+0x174>
 8008302:	bf00      	nop
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	2201      	movs	r2, #1
 8008308:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800830c:	687b      	ldr	r3, [r7, #4]
 800830e:	2200      	movs	r2, #0
 8008310:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008314:	7bfb      	ldrb	r3, [r7, #15]
 8008316:	4618      	mov	r0, r3
 8008318:	3710      	adds	r7, #16
 800831a:	46bd      	mov	sp, r7
 800831c:	bd80      	pop	{r7, pc}

0800831e <HAL_TIM_OC_DelayElapsedCallback>:
 800831e:	b480      	push	{r7}
 8008320:	b083      	sub	sp, #12
 8008322:	af00      	add	r7, sp, #0
 8008324:	6078      	str	r0, [r7, #4]
 8008326:	bf00      	nop
 8008328:	370c      	adds	r7, #12
 800832a:	46bd      	mov	sp, r7
 800832c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008330:	4770      	bx	lr

08008332 <HAL_TIM_IC_CaptureCallback>:
 8008332:	b480      	push	{r7}
 8008334:	b083      	sub	sp, #12
 8008336:	af00      	add	r7, sp, #0
 8008338:	6078      	str	r0, [r7, #4]
 800833a:	bf00      	nop
 800833c:	370c      	adds	r7, #12
 800833e:	46bd      	mov	sp, r7
 8008340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008344:	4770      	bx	lr

08008346 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008346:	b480      	push	{r7}
 8008348:	b083      	sub	sp, #12
 800834a:	af00      	add	r7, sp, #0
 800834c:	6078      	str	r0, [r7, #4]
 800834e:	bf00      	nop
 8008350:	370c      	adds	r7, #12
 8008352:	46bd      	mov	sp, r7
 8008354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008358:	4770      	bx	lr

0800835a <HAL_TIM_TriggerCallback>:
 800835a:	b480      	push	{r7}
 800835c:	b083      	sub	sp, #12
 800835e:	af00      	add	r7, sp, #0
 8008360:	6078      	str	r0, [r7, #4]
 8008362:	bf00      	nop
 8008364:	370c      	adds	r7, #12
 8008366:	46bd      	mov	sp, r7
 8008368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800836c:	4770      	bx	lr
	...

08008370 <TIM_Base_SetConfig>:
 8008370:	b480      	push	{r7}
 8008372:	b085      	sub	sp, #20
 8008374:	af00      	add	r7, sp, #0
 8008376:	6078      	str	r0, [r7, #4]
 8008378:	6039      	str	r1, [r7, #0]
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	681b      	ldr	r3, [r3, #0]
 800837e:	60fb      	str	r3, [r7, #12]
 8008380:	687b      	ldr	r3, [r7, #4]
 8008382:	4a46      	ldr	r2, [pc, #280]	; (800849c <TIM_Base_SetConfig+0x12c>)
 8008384:	4293      	cmp	r3, r2
 8008386:	d013      	beq.n	80083b0 <TIM_Base_SetConfig+0x40>
 8008388:	687b      	ldr	r3, [r7, #4]
 800838a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800838e:	d00f      	beq.n	80083b0 <TIM_Base_SetConfig+0x40>
 8008390:	687b      	ldr	r3, [r7, #4]
 8008392:	4a43      	ldr	r2, [pc, #268]	; (80084a0 <TIM_Base_SetConfig+0x130>)
 8008394:	4293      	cmp	r3, r2
 8008396:	d00b      	beq.n	80083b0 <TIM_Base_SetConfig+0x40>
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	4a42      	ldr	r2, [pc, #264]	; (80084a4 <TIM_Base_SetConfig+0x134>)
 800839c:	4293      	cmp	r3, r2
 800839e:	d007      	beq.n	80083b0 <TIM_Base_SetConfig+0x40>
 80083a0:	687b      	ldr	r3, [r7, #4]
 80083a2:	4a41      	ldr	r2, [pc, #260]	; (80084a8 <TIM_Base_SetConfig+0x138>)
 80083a4:	4293      	cmp	r3, r2
 80083a6:	d003      	beq.n	80083b0 <TIM_Base_SetConfig+0x40>
 80083a8:	687b      	ldr	r3, [r7, #4]
 80083aa:	4a40      	ldr	r2, [pc, #256]	; (80084ac <TIM_Base_SetConfig+0x13c>)
 80083ac:	4293      	cmp	r3, r2
 80083ae:	d108      	bne.n	80083c2 <TIM_Base_SetConfig+0x52>
 80083b0:	68fb      	ldr	r3, [r7, #12]
 80083b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80083b6:	60fb      	str	r3, [r7, #12]
 80083b8:	683b      	ldr	r3, [r7, #0]
 80083ba:	685b      	ldr	r3, [r3, #4]
 80083bc:	68fa      	ldr	r2, [r7, #12]
 80083be:	4313      	orrs	r3, r2
 80083c0:	60fb      	str	r3, [r7, #12]
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	4a35      	ldr	r2, [pc, #212]	; (800849c <TIM_Base_SetConfig+0x12c>)
 80083c6:	4293      	cmp	r3, r2
 80083c8:	d02b      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80083d0:	d027      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	4a32      	ldr	r2, [pc, #200]	; (80084a0 <TIM_Base_SetConfig+0x130>)
 80083d6:	4293      	cmp	r3, r2
 80083d8:	d023      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	4a31      	ldr	r2, [pc, #196]	; (80084a4 <TIM_Base_SetConfig+0x134>)
 80083de:	4293      	cmp	r3, r2
 80083e0:	d01f      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 80083e2:	687b      	ldr	r3, [r7, #4]
 80083e4:	4a30      	ldr	r2, [pc, #192]	; (80084a8 <TIM_Base_SetConfig+0x138>)
 80083e6:	4293      	cmp	r3, r2
 80083e8:	d01b      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	4a2f      	ldr	r2, [pc, #188]	; (80084ac <TIM_Base_SetConfig+0x13c>)
 80083ee:	4293      	cmp	r3, r2
 80083f0:	d017      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	4a2e      	ldr	r2, [pc, #184]	; (80084b0 <TIM_Base_SetConfig+0x140>)
 80083f6:	4293      	cmp	r3, r2
 80083f8:	d013      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	4a2d      	ldr	r2, [pc, #180]	; (80084b4 <TIM_Base_SetConfig+0x144>)
 80083fe:	4293      	cmp	r3, r2
 8008400:	d00f      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 8008402:	687b      	ldr	r3, [r7, #4]
 8008404:	4a2c      	ldr	r2, [pc, #176]	; (80084b8 <TIM_Base_SetConfig+0x148>)
 8008406:	4293      	cmp	r3, r2
 8008408:	d00b      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 800840a:	687b      	ldr	r3, [r7, #4]
 800840c:	4a2b      	ldr	r2, [pc, #172]	; (80084bc <TIM_Base_SetConfig+0x14c>)
 800840e:	4293      	cmp	r3, r2
 8008410:	d007      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 8008412:	687b      	ldr	r3, [r7, #4]
 8008414:	4a2a      	ldr	r2, [pc, #168]	; (80084c0 <TIM_Base_SetConfig+0x150>)
 8008416:	4293      	cmp	r3, r2
 8008418:	d003      	beq.n	8008422 <TIM_Base_SetConfig+0xb2>
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	4a29      	ldr	r2, [pc, #164]	; (80084c4 <TIM_Base_SetConfig+0x154>)
 800841e:	4293      	cmp	r3, r2
 8008420:	d108      	bne.n	8008434 <TIM_Base_SetConfig+0xc4>
 8008422:	68fb      	ldr	r3, [r7, #12]
 8008424:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008428:	60fb      	str	r3, [r7, #12]
 800842a:	683b      	ldr	r3, [r7, #0]
 800842c:	68db      	ldr	r3, [r3, #12]
 800842e:	68fa      	ldr	r2, [r7, #12]
 8008430:	4313      	orrs	r3, r2
 8008432:	60fb      	str	r3, [r7, #12]
 8008434:	68fb      	ldr	r3, [r7, #12]
 8008436:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800843a:	683b      	ldr	r3, [r7, #0]
 800843c:	695b      	ldr	r3, [r3, #20]
 800843e:	4313      	orrs	r3, r2
 8008440:	60fb      	str	r3, [r7, #12]
 8008442:	687b      	ldr	r3, [r7, #4]
 8008444:	68fa      	ldr	r2, [r7, #12]
 8008446:	601a      	str	r2, [r3, #0]
 8008448:	683b      	ldr	r3, [r7, #0]
 800844a:	689a      	ldr	r2, [r3, #8]
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	62da      	str	r2, [r3, #44]	; 0x2c
 8008450:	683b      	ldr	r3, [r7, #0]
 8008452:	681a      	ldr	r2, [r3, #0]
 8008454:	687b      	ldr	r3, [r7, #4]
 8008456:	629a      	str	r2, [r3, #40]	; 0x28
 8008458:	687b      	ldr	r3, [r7, #4]
 800845a:	4a10      	ldr	r2, [pc, #64]	; (800849c <TIM_Base_SetConfig+0x12c>)
 800845c:	4293      	cmp	r3, r2
 800845e:	d003      	beq.n	8008468 <TIM_Base_SetConfig+0xf8>
 8008460:	687b      	ldr	r3, [r7, #4]
 8008462:	4a12      	ldr	r2, [pc, #72]	; (80084ac <TIM_Base_SetConfig+0x13c>)
 8008464:	4293      	cmp	r3, r2
 8008466:	d103      	bne.n	8008470 <TIM_Base_SetConfig+0x100>
 8008468:	683b      	ldr	r3, [r7, #0]
 800846a:	691a      	ldr	r2, [r3, #16]
 800846c:	687b      	ldr	r3, [r7, #4]
 800846e:	631a      	str	r2, [r3, #48]	; 0x30
 8008470:	687b      	ldr	r3, [r7, #4]
 8008472:	2201      	movs	r2, #1
 8008474:	615a      	str	r2, [r3, #20]
 8008476:	687b      	ldr	r3, [r7, #4]
 8008478:	691b      	ldr	r3, [r3, #16]
 800847a:	f003 0301 	and.w	r3, r3, #1
 800847e:	2b01      	cmp	r3, #1
 8008480:	d105      	bne.n	800848e <TIM_Base_SetConfig+0x11e>
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	691b      	ldr	r3, [r3, #16]
 8008486:	f023 0201 	bic.w	r2, r3, #1
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	611a      	str	r2, [r3, #16]
 800848e:	bf00      	nop
 8008490:	3714      	adds	r7, #20
 8008492:	46bd      	mov	sp, r7
 8008494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008498:	4770      	bx	lr
 800849a:	bf00      	nop
 800849c:	40010000 	.word	0x40010000
 80084a0:	40000400 	.word	0x40000400
 80084a4:	40000800 	.word	0x40000800
 80084a8:	40000c00 	.word	0x40000c00
 80084ac:	40010400 	.word	0x40010400
 80084b0:	40014000 	.word	0x40014000
 80084b4:	40014400 	.word	0x40014400
 80084b8:	40014800 	.word	0x40014800
 80084bc:	40001800 	.word	0x40001800
 80084c0:	40001c00 	.word	0x40001c00
 80084c4:	40002000 	.word	0x40002000

080084c8 <TIM_TI1_ConfigInputStage>:
 80084c8:	b480      	push	{r7}
 80084ca:	b087      	sub	sp, #28
 80084cc:	af00      	add	r7, sp, #0
 80084ce:	60f8      	str	r0, [r7, #12]
 80084d0:	60b9      	str	r1, [r7, #8]
 80084d2:	607a      	str	r2, [r7, #4]
 80084d4:	68fb      	ldr	r3, [r7, #12]
 80084d6:	6a1b      	ldr	r3, [r3, #32]
 80084d8:	617b      	str	r3, [r7, #20]
 80084da:	68fb      	ldr	r3, [r7, #12]
 80084dc:	6a1b      	ldr	r3, [r3, #32]
 80084de:	f023 0201 	bic.w	r2, r3, #1
 80084e2:	68fb      	ldr	r3, [r7, #12]
 80084e4:	621a      	str	r2, [r3, #32]
 80084e6:	68fb      	ldr	r3, [r7, #12]
 80084e8:	699b      	ldr	r3, [r3, #24]
 80084ea:	613b      	str	r3, [r7, #16]
 80084ec:	693b      	ldr	r3, [r7, #16]
 80084ee:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80084f2:	613b      	str	r3, [r7, #16]
 80084f4:	687b      	ldr	r3, [r7, #4]
 80084f6:	011b      	lsls	r3, r3, #4
 80084f8:	693a      	ldr	r2, [r7, #16]
 80084fa:	4313      	orrs	r3, r2
 80084fc:	613b      	str	r3, [r7, #16]
 80084fe:	697b      	ldr	r3, [r7, #20]
 8008500:	f023 030a 	bic.w	r3, r3, #10
 8008504:	617b      	str	r3, [r7, #20]
 8008506:	697a      	ldr	r2, [r7, #20]
 8008508:	68bb      	ldr	r3, [r7, #8]
 800850a:	4313      	orrs	r3, r2
 800850c:	617b      	str	r3, [r7, #20]
 800850e:	68fb      	ldr	r3, [r7, #12]
 8008510:	693a      	ldr	r2, [r7, #16]
 8008512:	619a      	str	r2, [r3, #24]
 8008514:	68fb      	ldr	r3, [r7, #12]
 8008516:	697a      	ldr	r2, [r7, #20]
 8008518:	621a      	str	r2, [r3, #32]
 800851a:	bf00      	nop
 800851c:	371c      	adds	r7, #28
 800851e:	46bd      	mov	sp, r7
 8008520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008524:	4770      	bx	lr

08008526 <TIM_TI2_ConfigInputStage>:
 8008526:	b480      	push	{r7}
 8008528:	b087      	sub	sp, #28
 800852a:	af00      	add	r7, sp, #0
 800852c:	60f8      	str	r0, [r7, #12]
 800852e:	60b9      	str	r1, [r7, #8]
 8008530:	607a      	str	r2, [r7, #4]
 8008532:	68fb      	ldr	r3, [r7, #12]
 8008534:	6a1b      	ldr	r3, [r3, #32]
 8008536:	617b      	str	r3, [r7, #20]
 8008538:	68fb      	ldr	r3, [r7, #12]
 800853a:	6a1b      	ldr	r3, [r3, #32]
 800853c:	f023 0210 	bic.w	r2, r3, #16
 8008540:	68fb      	ldr	r3, [r7, #12]
 8008542:	621a      	str	r2, [r3, #32]
 8008544:	68fb      	ldr	r3, [r7, #12]
 8008546:	699b      	ldr	r3, [r3, #24]
 8008548:	613b      	str	r3, [r7, #16]
 800854a:	693b      	ldr	r3, [r7, #16]
 800854c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008550:	613b      	str	r3, [r7, #16]
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	031b      	lsls	r3, r3, #12
 8008556:	693a      	ldr	r2, [r7, #16]
 8008558:	4313      	orrs	r3, r2
 800855a:	613b      	str	r3, [r7, #16]
 800855c:	697b      	ldr	r3, [r7, #20]
 800855e:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008562:	617b      	str	r3, [r7, #20]
 8008564:	68bb      	ldr	r3, [r7, #8]
 8008566:	011b      	lsls	r3, r3, #4
 8008568:	697a      	ldr	r2, [r7, #20]
 800856a:	4313      	orrs	r3, r2
 800856c:	617b      	str	r3, [r7, #20]
 800856e:	68fb      	ldr	r3, [r7, #12]
 8008570:	693a      	ldr	r2, [r7, #16]
 8008572:	619a      	str	r2, [r3, #24]
 8008574:	68fb      	ldr	r3, [r7, #12]
 8008576:	697a      	ldr	r2, [r7, #20]
 8008578:	621a      	str	r2, [r3, #32]
 800857a:	bf00      	nop
 800857c:	371c      	adds	r7, #28
 800857e:	46bd      	mov	sp, r7
 8008580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008584:	4770      	bx	lr

08008586 <TIM_ITRx_SetConfig>:
 8008586:	b480      	push	{r7}
 8008588:	b085      	sub	sp, #20
 800858a:	af00      	add	r7, sp, #0
 800858c:	6078      	str	r0, [r7, #4]
 800858e:	6039      	str	r1, [r7, #0]
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	689b      	ldr	r3, [r3, #8]
 8008594:	60fb      	str	r3, [r7, #12]
 8008596:	68fb      	ldr	r3, [r7, #12]
 8008598:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800859c:	60fb      	str	r3, [r7, #12]
 800859e:	683a      	ldr	r2, [r7, #0]
 80085a0:	68fb      	ldr	r3, [r7, #12]
 80085a2:	4313      	orrs	r3, r2
 80085a4:	f043 0307 	orr.w	r3, r3, #7
 80085a8:	60fb      	str	r3, [r7, #12]
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	68fa      	ldr	r2, [r7, #12]
 80085ae:	609a      	str	r2, [r3, #8]
 80085b0:	bf00      	nop
 80085b2:	3714      	adds	r7, #20
 80085b4:	46bd      	mov	sp, r7
 80085b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ba:	4770      	bx	lr

080085bc <TIM_ETR_SetConfig>:
 80085bc:	b480      	push	{r7}
 80085be:	b087      	sub	sp, #28
 80085c0:	af00      	add	r7, sp, #0
 80085c2:	60f8      	str	r0, [r7, #12]
 80085c4:	60b9      	str	r1, [r7, #8]
 80085c6:	607a      	str	r2, [r7, #4]
 80085c8:	603b      	str	r3, [r7, #0]
 80085ca:	68fb      	ldr	r3, [r7, #12]
 80085cc:	689b      	ldr	r3, [r3, #8]
 80085ce:	617b      	str	r3, [r7, #20]
 80085d0:	697b      	ldr	r3, [r7, #20]
 80085d2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80085d6:	617b      	str	r3, [r7, #20]
 80085d8:	683b      	ldr	r3, [r7, #0]
 80085da:	021a      	lsls	r2, r3, #8
 80085dc:	687b      	ldr	r3, [r7, #4]
 80085de:	431a      	orrs	r2, r3
 80085e0:	68bb      	ldr	r3, [r7, #8]
 80085e2:	4313      	orrs	r3, r2
 80085e4:	697a      	ldr	r2, [r7, #20]
 80085e6:	4313      	orrs	r3, r2
 80085e8:	617b      	str	r3, [r7, #20]
 80085ea:	68fb      	ldr	r3, [r7, #12]
 80085ec:	697a      	ldr	r2, [r7, #20]
 80085ee:	609a      	str	r2, [r3, #8]
 80085f0:	bf00      	nop
 80085f2:	371c      	adds	r7, #28
 80085f4:	46bd      	mov	sp, r7
 80085f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085fa:	4770      	bx	lr

080085fc <HAL_TIMEx_MasterConfigSynchronization>:
 80085fc:	b480      	push	{r7}
 80085fe:	b085      	sub	sp, #20
 8008600:	af00      	add	r7, sp, #0
 8008602:	6078      	str	r0, [r7, #4]
 8008604:	6039      	str	r1, [r7, #0]
 8008606:	687b      	ldr	r3, [r7, #4]
 8008608:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800860c:	2b01      	cmp	r3, #1
 800860e:	d101      	bne.n	8008614 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008610:	2302      	movs	r3, #2
 8008612:	e05a      	b.n	80086ca <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	2201      	movs	r2, #1
 8008618:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	2202      	movs	r2, #2
 8008620:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	681b      	ldr	r3, [r3, #0]
 8008628:	685b      	ldr	r3, [r3, #4]
 800862a:	60fb      	str	r3, [r7, #12]
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	681b      	ldr	r3, [r3, #0]
 8008630:	689b      	ldr	r3, [r3, #8]
 8008632:	60bb      	str	r3, [r7, #8]
 8008634:	68fb      	ldr	r3, [r7, #12]
 8008636:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800863a:	60fb      	str	r3, [r7, #12]
 800863c:	683b      	ldr	r3, [r7, #0]
 800863e:	681b      	ldr	r3, [r3, #0]
 8008640:	68fa      	ldr	r2, [r7, #12]
 8008642:	4313      	orrs	r3, r2
 8008644:	60fb      	str	r3, [r7, #12]
 8008646:	687b      	ldr	r3, [r7, #4]
 8008648:	681b      	ldr	r3, [r3, #0]
 800864a:	68fa      	ldr	r2, [r7, #12]
 800864c:	605a      	str	r2, [r3, #4]
 800864e:	687b      	ldr	r3, [r7, #4]
 8008650:	681b      	ldr	r3, [r3, #0]
 8008652:	4a21      	ldr	r2, [pc, #132]	; (80086d8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8008654:	4293      	cmp	r3, r2
 8008656:	d022      	beq.n	800869e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008658:	687b      	ldr	r3, [r7, #4]
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008660:	d01d      	beq.n	800869e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008662:	687b      	ldr	r3, [r7, #4]
 8008664:	681b      	ldr	r3, [r3, #0]
 8008666:	4a1d      	ldr	r2, [pc, #116]	; (80086dc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8008668:	4293      	cmp	r3, r2
 800866a:	d018      	beq.n	800869e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800866c:	687b      	ldr	r3, [r7, #4]
 800866e:	681b      	ldr	r3, [r3, #0]
 8008670:	4a1b      	ldr	r2, [pc, #108]	; (80086e0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8008672:	4293      	cmp	r3, r2
 8008674:	d013      	beq.n	800869e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	681b      	ldr	r3, [r3, #0]
 800867a:	4a1a      	ldr	r2, [pc, #104]	; (80086e4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800867c:	4293      	cmp	r3, r2
 800867e:	d00e      	beq.n	800869e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008680:	687b      	ldr	r3, [r7, #4]
 8008682:	681b      	ldr	r3, [r3, #0]
 8008684:	4a18      	ldr	r2, [pc, #96]	; (80086e8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8008686:	4293      	cmp	r3, r2
 8008688:	d009      	beq.n	800869e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800868a:	687b      	ldr	r3, [r7, #4]
 800868c:	681b      	ldr	r3, [r3, #0]
 800868e:	4a17      	ldr	r2, [pc, #92]	; (80086ec <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8008690:	4293      	cmp	r3, r2
 8008692:	d004      	beq.n	800869e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008694:	687b      	ldr	r3, [r7, #4]
 8008696:	681b      	ldr	r3, [r3, #0]
 8008698:	4a15      	ldr	r2, [pc, #84]	; (80086f0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800869a:	4293      	cmp	r3, r2
 800869c:	d10c      	bne.n	80086b8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800869e:	68bb      	ldr	r3, [r7, #8]
 80086a0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80086a4:	60bb      	str	r3, [r7, #8]
 80086a6:	683b      	ldr	r3, [r7, #0]
 80086a8:	685b      	ldr	r3, [r3, #4]
 80086aa:	68ba      	ldr	r2, [r7, #8]
 80086ac:	4313      	orrs	r3, r2
 80086ae:	60bb      	str	r3, [r7, #8]
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	681b      	ldr	r3, [r3, #0]
 80086b4:	68ba      	ldr	r2, [r7, #8]
 80086b6:	609a      	str	r2, [r3, #8]
 80086b8:	687b      	ldr	r3, [r7, #4]
 80086ba:	2201      	movs	r2, #1
 80086bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80086c0:	687b      	ldr	r3, [r7, #4]
 80086c2:	2200      	movs	r2, #0
 80086c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80086c8:	2300      	movs	r3, #0
 80086ca:	4618      	mov	r0, r3
 80086cc:	3714      	adds	r7, #20
 80086ce:	46bd      	mov	sp, r7
 80086d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086d4:	4770      	bx	lr
 80086d6:	bf00      	nop
 80086d8:	40010000 	.word	0x40010000
 80086dc:	40000400 	.word	0x40000400
 80086e0:	40000800 	.word	0x40000800
 80086e4:	40000c00 	.word	0x40000c00
 80086e8:	40010400 	.word	0x40010400
 80086ec:	40014000 	.word	0x40014000
 80086f0:	40001800 	.word	0x40001800

080086f4 <HAL_TIMEx_CommutCallback>:
 80086f4:	b480      	push	{r7}
 80086f6:	b083      	sub	sp, #12
 80086f8:	af00      	add	r7, sp, #0
 80086fa:	6078      	str	r0, [r7, #4]
 80086fc:	bf00      	nop
 80086fe:	370c      	adds	r7, #12
 8008700:	46bd      	mov	sp, r7
 8008702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008706:	4770      	bx	lr

08008708 <HAL_TIMEx_BreakCallback>:
 8008708:	b480      	push	{r7}
 800870a:	b083      	sub	sp, #12
 800870c:	af00      	add	r7, sp, #0
 800870e:	6078      	str	r0, [r7, #4]
 8008710:	bf00      	nop
 8008712:	370c      	adds	r7, #12
 8008714:	46bd      	mov	sp, r7
 8008716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800871a:	4770      	bx	lr

0800871c <USB_CoreInit>:
 800871c:	b084      	sub	sp, #16
 800871e:	b580      	push	{r7, lr}
 8008720:	b084      	sub	sp, #16
 8008722:	af00      	add	r7, sp, #0
 8008724:	6078      	str	r0, [r7, #4]
 8008726:	f107 001c 	add.w	r0, r7, #28
 800872a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800872e:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 8008732:	2b01      	cmp	r3, #1
 8008734:	d123      	bne.n	800877e <USB_CoreInit+0x62>
 8008736:	687b      	ldr	r3, [r7, #4]
 8008738:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800873a:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800873e:	687b      	ldr	r3, [r7, #4]
 8008740:	639a      	str	r2, [r3, #56]	; 0x38
 8008742:	687b      	ldr	r3, [r7, #4]
 8008744:	68db      	ldr	r3, [r3, #12]
 8008746:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 800874a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800874e:	687a      	ldr	r2, [r7, #4]
 8008750:	60d3      	str	r3, [r2, #12]
 8008752:	687b      	ldr	r3, [r7, #4]
 8008754:	68db      	ldr	r3, [r3, #12]
 8008756:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800875a:	687b      	ldr	r3, [r7, #4]
 800875c:	60da      	str	r2, [r3, #12]
 800875e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008762:	2b01      	cmp	r3, #1
 8008764:	d105      	bne.n	8008772 <USB_CoreInit+0x56>
 8008766:	687b      	ldr	r3, [r7, #4]
 8008768:	68db      	ldr	r3, [r3, #12]
 800876a:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	60da      	str	r2, [r3, #12]
 8008772:	6878      	ldr	r0, [r7, #4]
 8008774:	f001 fae2 	bl	8009d3c <USB_CoreReset>
 8008778:	4603      	mov	r3, r0
 800877a:	73fb      	strb	r3, [r7, #15]
 800877c:	e01b      	b.n	80087b6 <USB_CoreInit+0x9a>
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	68db      	ldr	r3, [r3, #12]
 8008782:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8008786:	687b      	ldr	r3, [r7, #4]
 8008788:	60da      	str	r2, [r3, #12]
 800878a:	6878      	ldr	r0, [r7, #4]
 800878c:	f001 fad6 	bl	8009d3c <USB_CoreReset>
 8008790:	4603      	mov	r3, r0
 8008792:	73fb      	strb	r3, [r7, #15]
 8008794:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8008798:	2b00      	cmp	r3, #0
 800879a:	d106      	bne.n	80087aa <USB_CoreInit+0x8e>
 800879c:	687b      	ldr	r3, [r7, #4]
 800879e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80087a0:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	639a      	str	r2, [r3, #56]	; 0x38
 80087a8:	e005      	b.n	80087b6 <USB_CoreInit+0x9a>
 80087aa:	687b      	ldr	r3, [r7, #4]
 80087ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80087ae:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	639a      	str	r2, [r3, #56]	; 0x38
 80087b6:	7fbb      	ldrb	r3, [r7, #30]
 80087b8:	2b01      	cmp	r3, #1
 80087ba:	d10b      	bne.n	80087d4 <USB_CoreInit+0xb8>
 80087bc:	687b      	ldr	r3, [r7, #4]
 80087be:	689b      	ldr	r3, [r3, #8]
 80087c0:	f043 0206 	orr.w	r2, r3, #6
 80087c4:	687b      	ldr	r3, [r7, #4]
 80087c6:	609a      	str	r2, [r3, #8]
 80087c8:	687b      	ldr	r3, [r7, #4]
 80087ca:	689b      	ldr	r3, [r3, #8]
 80087cc:	f043 0220 	orr.w	r2, r3, #32
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	609a      	str	r2, [r3, #8]
 80087d4:	7bfb      	ldrb	r3, [r7, #15]
 80087d6:	4618      	mov	r0, r3
 80087d8:	3710      	adds	r7, #16
 80087da:	46bd      	mov	sp, r7
 80087dc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80087e0:	b004      	add	sp, #16
 80087e2:	4770      	bx	lr

080087e4 <USB_SetTurnaroundTime>:
 80087e4:	b480      	push	{r7}
 80087e6:	b087      	sub	sp, #28
 80087e8:	af00      	add	r7, sp, #0
 80087ea:	60f8      	str	r0, [r7, #12]
 80087ec:	60b9      	str	r1, [r7, #8]
 80087ee:	4613      	mov	r3, r2
 80087f0:	71fb      	strb	r3, [r7, #7]
 80087f2:	79fb      	ldrb	r3, [r7, #7]
 80087f4:	2b02      	cmp	r3, #2
 80087f6:	d165      	bne.n	80088c4 <USB_SetTurnaroundTime+0xe0>
 80087f8:	68bb      	ldr	r3, [r7, #8]
 80087fa:	4a41      	ldr	r2, [pc, #260]	; (8008900 <USB_SetTurnaroundTime+0x11c>)
 80087fc:	4293      	cmp	r3, r2
 80087fe:	d906      	bls.n	800880e <USB_SetTurnaroundTime+0x2a>
 8008800:	68bb      	ldr	r3, [r7, #8]
 8008802:	4a40      	ldr	r2, [pc, #256]	; (8008904 <USB_SetTurnaroundTime+0x120>)
 8008804:	4293      	cmp	r3, r2
 8008806:	d202      	bcs.n	800880e <USB_SetTurnaroundTime+0x2a>
 8008808:	230f      	movs	r3, #15
 800880a:	617b      	str	r3, [r7, #20]
 800880c:	e062      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 800880e:	68bb      	ldr	r3, [r7, #8]
 8008810:	4a3c      	ldr	r2, [pc, #240]	; (8008904 <USB_SetTurnaroundTime+0x120>)
 8008812:	4293      	cmp	r3, r2
 8008814:	d306      	bcc.n	8008824 <USB_SetTurnaroundTime+0x40>
 8008816:	68bb      	ldr	r3, [r7, #8]
 8008818:	4a3b      	ldr	r2, [pc, #236]	; (8008908 <USB_SetTurnaroundTime+0x124>)
 800881a:	4293      	cmp	r3, r2
 800881c:	d202      	bcs.n	8008824 <USB_SetTurnaroundTime+0x40>
 800881e:	230e      	movs	r3, #14
 8008820:	617b      	str	r3, [r7, #20]
 8008822:	e057      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 8008824:	68bb      	ldr	r3, [r7, #8]
 8008826:	4a38      	ldr	r2, [pc, #224]	; (8008908 <USB_SetTurnaroundTime+0x124>)
 8008828:	4293      	cmp	r3, r2
 800882a:	d306      	bcc.n	800883a <USB_SetTurnaroundTime+0x56>
 800882c:	68bb      	ldr	r3, [r7, #8]
 800882e:	4a37      	ldr	r2, [pc, #220]	; (800890c <USB_SetTurnaroundTime+0x128>)
 8008830:	4293      	cmp	r3, r2
 8008832:	d202      	bcs.n	800883a <USB_SetTurnaroundTime+0x56>
 8008834:	230d      	movs	r3, #13
 8008836:	617b      	str	r3, [r7, #20]
 8008838:	e04c      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 800883a:	68bb      	ldr	r3, [r7, #8]
 800883c:	4a33      	ldr	r2, [pc, #204]	; (800890c <USB_SetTurnaroundTime+0x128>)
 800883e:	4293      	cmp	r3, r2
 8008840:	d306      	bcc.n	8008850 <USB_SetTurnaroundTime+0x6c>
 8008842:	68bb      	ldr	r3, [r7, #8]
 8008844:	4a32      	ldr	r2, [pc, #200]	; (8008910 <USB_SetTurnaroundTime+0x12c>)
 8008846:	4293      	cmp	r3, r2
 8008848:	d802      	bhi.n	8008850 <USB_SetTurnaroundTime+0x6c>
 800884a:	230c      	movs	r3, #12
 800884c:	617b      	str	r3, [r7, #20]
 800884e:	e041      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 8008850:	68bb      	ldr	r3, [r7, #8]
 8008852:	4a2f      	ldr	r2, [pc, #188]	; (8008910 <USB_SetTurnaroundTime+0x12c>)
 8008854:	4293      	cmp	r3, r2
 8008856:	d906      	bls.n	8008866 <USB_SetTurnaroundTime+0x82>
 8008858:	68bb      	ldr	r3, [r7, #8]
 800885a:	4a2e      	ldr	r2, [pc, #184]	; (8008914 <USB_SetTurnaroundTime+0x130>)
 800885c:	4293      	cmp	r3, r2
 800885e:	d802      	bhi.n	8008866 <USB_SetTurnaroundTime+0x82>
 8008860:	230b      	movs	r3, #11
 8008862:	617b      	str	r3, [r7, #20]
 8008864:	e036      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 8008866:	68bb      	ldr	r3, [r7, #8]
 8008868:	4a2a      	ldr	r2, [pc, #168]	; (8008914 <USB_SetTurnaroundTime+0x130>)
 800886a:	4293      	cmp	r3, r2
 800886c:	d906      	bls.n	800887c <USB_SetTurnaroundTime+0x98>
 800886e:	68bb      	ldr	r3, [r7, #8]
 8008870:	4a29      	ldr	r2, [pc, #164]	; (8008918 <USB_SetTurnaroundTime+0x134>)
 8008872:	4293      	cmp	r3, r2
 8008874:	d802      	bhi.n	800887c <USB_SetTurnaroundTime+0x98>
 8008876:	230a      	movs	r3, #10
 8008878:	617b      	str	r3, [r7, #20]
 800887a:	e02b      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 800887c:	68bb      	ldr	r3, [r7, #8]
 800887e:	4a26      	ldr	r2, [pc, #152]	; (8008918 <USB_SetTurnaroundTime+0x134>)
 8008880:	4293      	cmp	r3, r2
 8008882:	d906      	bls.n	8008892 <USB_SetTurnaroundTime+0xae>
 8008884:	68bb      	ldr	r3, [r7, #8]
 8008886:	4a25      	ldr	r2, [pc, #148]	; (800891c <USB_SetTurnaroundTime+0x138>)
 8008888:	4293      	cmp	r3, r2
 800888a:	d202      	bcs.n	8008892 <USB_SetTurnaroundTime+0xae>
 800888c:	2309      	movs	r3, #9
 800888e:	617b      	str	r3, [r7, #20]
 8008890:	e020      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 8008892:	68bb      	ldr	r3, [r7, #8]
 8008894:	4a21      	ldr	r2, [pc, #132]	; (800891c <USB_SetTurnaroundTime+0x138>)
 8008896:	4293      	cmp	r3, r2
 8008898:	d306      	bcc.n	80088a8 <USB_SetTurnaroundTime+0xc4>
 800889a:	68bb      	ldr	r3, [r7, #8]
 800889c:	4a20      	ldr	r2, [pc, #128]	; (8008920 <USB_SetTurnaroundTime+0x13c>)
 800889e:	4293      	cmp	r3, r2
 80088a0:	d802      	bhi.n	80088a8 <USB_SetTurnaroundTime+0xc4>
 80088a2:	2308      	movs	r3, #8
 80088a4:	617b      	str	r3, [r7, #20]
 80088a6:	e015      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 80088a8:	68bb      	ldr	r3, [r7, #8]
 80088aa:	4a1d      	ldr	r2, [pc, #116]	; (8008920 <USB_SetTurnaroundTime+0x13c>)
 80088ac:	4293      	cmp	r3, r2
 80088ae:	d906      	bls.n	80088be <USB_SetTurnaroundTime+0xda>
 80088b0:	68bb      	ldr	r3, [r7, #8]
 80088b2:	4a1c      	ldr	r2, [pc, #112]	; (8008924 <USB_SetTurnaroundTime+0x140>)
 80088b4:	4293      	cmp	r3, r2
 80088b6:	d202      	bcs.n	80088be <USB_SetTurnaroundTime+0xda>
 80088b8:	2307      	movs	r3, #7
 80088ba:	617b      	str	r3, [r7, #20]
 80088bc:	e00a      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 80088be:	2306      	movs	r3, #6
 80088c0:	617b      	str	r3, [r7, #20]
 80088c2:	e007      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 80088c4:	79fb      	ldrb	r3, [r7, #7]
 80088c6:	2b00      	cmp	r3, #0
 80088c8:	d102      	bne.n	80088d0 <USB_SetTurnaroundTime+0xec>
 80088ca:	2309      	movs	r3, #9
 80088cc:	617b      	str	r3, [r7, #20]
 80088ce:	e001      	b.n	80088d4 <USB_SetTurnaroundTime+0xf0>
 80088d0:	2309      	movs	r3, #9
 80088d2:	617b      	str	r3, [r7, #20]
 80088d4:	68fb      	ldr	r3, [r7, #12]
 80088d6:	68db      	ldr	r3, [r3, #12]
 80088d8:	f423 5270 	bic.w	r2, r3, #15360	; 0x3c00
 80088dc:	68fb      	ldr	r3, [r7, #12]
 80088de:	60da      	str	r2, [r3, #12]
 80088e0:	68fb      	ldr	r3, [r7, #12]
 80088e2:	68da      	ldr	r2, [r3, #12]
 80088e4:	697b      	ldr	r3, [r7, #20]
 80088e6:	029b      	lsls	r3, r3, #10
 80088e8:	f403 5370 	and.w	r3, r3, #15360	; 0x3c00
 80088ec:	431a      	orrs	r2, r3
 80088ee:	68fb      	ldr	r3, [r7, #12]
 80088f0:	60da      	str	r2, [r3, #12]
 80088f2:	2300      	movs	r3, #0
 80088f4:	4618      	mov	r0, r3
 80088f6:	371c      	adds	r7, #28
 80088f8:	46bd      	mov	sp, r7
 80088fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088fe:	4770      	bx	lr
 8008900:	00d8acbf 	.word	0x00d8acbf
 8008904:	00e4e1c0 	.word	0x00e4e1c0
 8008908:	00f42400 	.word	0x00f42400
 800890c:	01067380 	.word	0x01067380
 8008910:	011a499f 	.word	0x011a499f
 8008914:	01312cff 	.word	0x01312cff
 8008918:	014ca43f 	.word	0x014ca43f
 800891c:	016e3600 	.word	0x016e3600
 8008920:	01a6ab1f 	.word	0x01a6ab1f
 8008924:	01e84800 	.word	0x01e84800

08008928 <USB_EnableGlobalInt>:
 8008928:	b480      	push	{r7}
 800892a:	b083      	sub	sp, #12
 800892c:	af00      	add	r7, sp, #0
 800892e:	6078      	str	r0, [r7, #4]
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	689b      	ldr	r3, [r3, #8]
 8008934:	f043 0201 	orr.w	r2, r3, #1
 8008938:	687b      	ldr	r3, [r7, #4]
 800893a:	609a      	str	r2, [r3, #8]
 800893c:	2300      	movs	r3, #0
 800893e:	4618      	mov	r0, r3
 8008940:	370c      	adds	r7, #12
 8008942:	46bd      	mov	sp, r7
 8008944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008948:	4770      	bx	lr

0800894a <USB_DisableGlobalInt>:
 800894a:	b480      	push	{r7}
 800894c:	b083      	sub	sp, #12
 800894e:	af00      	add	r7, sp, #0
 8008950:	6078      	str	r0, [r7, #4]
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	689b      	ldr	r3, [r3, #8]
 8008956:	f023 0201 	bic.w	r2, r3, #1
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	609a      	str	r2, [r3, #8]
 800895e:	2300      	movs	r3, #0
 8008960:	4618      	mov	r0, r3
 8008962:	370c      	adds	r7, #12
 8008964:	46bd      	mov	sp, r7
 8008966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800896a:	4770      	bx	lr

0800896c <USB_SetCurrentMode>:
 800896c:	b580      	push	{r7, lr}
 800896e:	b084      	sub	sp, #16
 8008970:	af00      	add	r7, sp, #0
 8008972:	6078      	str	r0, [r7, #4]
 8008974:	460b      	mov	r3, r1
 8008976:	70fb      	strb	r3, [r7, #3]
 8008978:	2300      	movs	r3, #0
 800897a:	60fb      	str	r3, [r7, #12]
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	68db      	ldr	r3, [r3, #12]
 8008980:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	60da      	str	r2, [r3, #12]
 8008988:	78fb      	ldrb	r3, [r7, #3]
 800898a:	2b01      	cmp	r3, #1
 800898c:	d115      	bne.n	80089ba <USB_SetCurrentMode+0x4e>
 800898e:	687b      	ldr	r3, [r7, #4]
 8008990:	68db      	ldr	r3, [r3, #12]
 8008992:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8008996:	687b      	ldr	r3, [r7, #4]
 8008998:	60da      	str	r2, [r3, #12]
 800899a:	200a      	movs	r0, #10
 800899c:	f7fb ffae 	bl	80048fc <HAL_Delay>
 80089a0:	68fb      	ldr	r3, [r7, #12]
 80089a2:	330a      	adds	r3, #10
 80089a4:	60fb      	str	r3, [r7, #12]
 80089a6:	6878      	ldr	r0, [r7, #4]
 80089a8:	f001 f939 	bl	8009c1e <USB_GetMode>
 80089ac:	4603      	mov	r3, r0
 80089ae:	2b01      	cmp	r3, #1
 80089b0:	d01e      	beq.n	80089f0 <USB_SetCurrentMode+0x84>
 80089b2:	68fb      	ldr	r3, [r7, #12]
 80089b4:	2bc7      	cmp	r3, #199	; 0xc7
 80089b6:	d9f0      	bls.n	800899a <USB_SetCurrentMode+0x2e>
 80089b8:	e01a      	b.n	80089f0 <USB_SetCurrentMode+0x84>
 80089ba:	78fb      	ldrb	r3, [r7, #3]
 80089bc:	2b00      	cmp	r3, #0
 80089be:	d115      	bne.n	80089ec <USB_SetCurrentMode+0x80>
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	68db      	ldr	r3, [r3, #12]
 80089c4:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	60da      	str	r2, [r3, #12]
 80089cc:	200a      	movs	r0, #10
 80089ce:	f7fb ff95 	bl	80048fc <HAL_Delay>
 80089d2:	68fb      	ldr	r3, [r7, #12]
 80089d4:	330a      	adds	r3, #10
 80089d6:	60fb      	str	r3, [r7, #12]
 80089d8:	6878      	ldr	r0, [r7, #4]
 80089da:	f001 f920 	bl	8009c1e <USB_GetMode>
 80089de:	4603      	mov	r3, r0
 80089e0:	2b00      	cmp	r3, #0
 80089e2:	d005      	beq.n	80089f0 <USB_SetCurrentMode+0x84>
 80089e4:	68fb      	ldr	r3, [r7, #12]
 80089e6:	2bc7      	cmp	r3, #199	; 0xc7
 80089e8:	d9f0      	bls.n	80089cc <USB_SetCurrentMode+0x60>
 80089ea:	e001      	b.n	80089f0 <USB_SetCurrentMode+0x84>
 80089ec:	2301      	movs	r3, #1
 80089ee:	e005      	b.n	80089fc <USB_SetCurrentMode+0x90>
 80089f0:	68fb      	ldr	r3, [r7, #12]
 80089f2:	2bc8      	cmp	r3, #200	; 0xc8
 80089f4:	d101      	bne.n	80089fa <USB_SetCurrentMode+0x8e>
 80089f6:	2301      	movs	r3, #1
 80089f8:	e000      	b.n	80089fc <USB_SetCurrentMode+0x90>
 80089fa:	2300      	movs	r3, #0
 80089fc:	4618      	mov	r0, r3
 80089fe:	3710      	adds	r7, #16
 8008a00:	46bd      	mov	sp, r7
 8008a02:	bd80      	pop	{r7, pc}

08008a04 <USB_DevInit>:
 8008a04:	b084      	sub	sp, #16
 8008a06:	b580      	push	{r7, lr}
 8008a08:	b086      	sub	sp, #24
 8008a0a:	af00      	add	r7, sp, #0
 8008a0c:	6078      	str	r0, [r7, #4]
 8008a0e:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8008a12:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8008a16:	2300      	movs	r3, #0
 8008a18:	75fb      	strb	r3, [r7, #23]
 8008a1a:	687b      	ldr	r3, [r7, #4]
 8008a1c:	60fb      	str	r3, [r7, #12]
 8008a1e:	2300      	movs	r3, #0
 8008a20:	613b      	str	r3, [r7, #16]
 8008a22:	e009      	b.n	8008a38 <USB_DevInit+0x34>
 8008a24:	687a      	ldr	r2, [r7, #4]
 8008a26:	693b      	ldr	r3, [r7, #16]
 8008a28:	3340      	adds	r3, #64	; 0x40
 8008a2a:	009b      	lsls	r3, r3, #2
 8008a2c:	4413      	add	r3, r2
 8008a2e:	2200      	movs	r2, #0
 8008a30:	605a      	str	r2, [r3, #4]
 8008a32:	693b      	ldr	r3, [r7, #16]
 8008a34:	3301      	adds	r3, #1
 8008a36:	613b      	str	r3, [r7, #16]
 8008a38:	693b      	ldr	r3, [r7, #16]
 8008a3a:	2b0e      	cmp	r3, #14
 8008a3c:	d9f2      	bls.n	8008a24 <USB_DevInit+0x20>
 8008a3e:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8008a42:	2b00      	cmp	r3, #0
 8008a44:	d11c      	bne.n	8008a80 <USB_DevInit+0x7c>
 8008a46:	68fb      	ldr	r3, [r7, #12]
 8008a48:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008a4c:	685b      	ldr	r3, [r3, #4]
 8008a4e:	68fa      	ldr	r2, [r7, #12]
 8008a50:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8008a54:	f043 0302 	orr.w	r3, r3, #2
 8008a58:	6053      	str	r3, [r2, #4]
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a5e:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8008a62:	687b      	ldr	r3, [r7, #4]
 8008a64:	639a      	str	r2, [r3, #56]	; 0x38
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a6a:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	639a      	str	r2, [r3, #56]	; 0x38
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a76:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 8008a7a:	687b      	ldr	r3, [r7, #4]
 8008a7c:	639a      	str	r2, [r3, #56]	; 0x38
 8008a7e:	e00b      	b.n	8008a98 <USB_DevInit+0x94>
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a84:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8008a88:	687b      	ldr	r3, [r7, #4]
 8008a8a:	639a      	str	r2, [r3, #56]	; 0x38
 8008a8c:	687b      	ldr	r3, [r7, #4]
 8008a8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a90:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	639a      	str	r2, [r3, #56]	; 0x38
 8008a98:	68fb      	ldr	r3, [r7, #12]
 8008a9a:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8008a9e:	461a      	mov	r2, r3
 8008aa0:	2300      	movs	r3, #0
 8008aa2:	6013      	str	r3, [r2, #0]
 8008aa4:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8008aa8:	2b01      	cmp	r3, #1
 8008aaa:	d10d      	bne.n	8008ac8 <USB_DevInit+0xc4>
 8008aac:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8008ab0:	2b00      	cmp	r3, #0
 8008ab2:	d104      	bne.n	8008abe <USB_DevInit+0xba>
 8008ab4:	2100      	movs	r1, #0
 8008ab6:	6878      	ldr	r0, [r7, #4]
 8008ab8:	f000 f968 	bl	8008d8c <USB_SetDevSpeed>
 8008abc:	e008      	b.n	8008ad0 <USB_DevInit+0xcc>
 8008abe:	2101      	movs	r1, #1
 8008ac0:	6878      	ldr	r0, [r7, #4]
 8008ac2:	f000 f963 	bl	8008d8c <USB_SetDevSpeed>
 8008ac6:	e003      	b.n	8008ad0 <USB_DevInit+0xcc>
 8008ac8:	2103      	movs	r1, #3
 8008aca:	6878      	ldr	r0, [r7, #4]
 8008acc:	f000 f95e 	bl	8008d8c <USB_SetDevSpeed>
 8008ad0:	2110      	movs	r1, #16
 8008ad2:	6878      	ldr	r0, [r7, #4]
 8008ad4:	f000 f8fa 	bl	8008ccc <USB_FlushTxFifo>
 8008ad8:	4603      	mov	r3, r0
 8008ada:	2b00      	cmp	r3, #0
 8008adc:	d001      	beq.n	8008ae2 <USB_DevInit+0xde>
 8008ade:	2301      	movs	r3, #1
 8008ae0:	75fb      	strb	r3, [r7, #23]
 8008ae2:	6878      	ldr	r0, [r7, #4]
 8008ae4:	f000 f924 	bl	8008d30 <USB_FlushRxFifo>
 8008ae8:	4603      	mov	r3, r0
 8008aea:	2b00      	cmp	r3, #0
 8008aec:	d001      	beq.n	8008af2 <USB_DevInit+0xee>
 8008aee:	2301      	movs	r3, #1
 8008af0:	75fb      	strb	r3, [r7, #23]
 8008af2:	68fb      	ldr	r3, [r7, #12]
 8008af4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008af8:	461a      	mov	r2, r3
 8008afa:	2300      	movs	r3, #0
 8008afc:	6113      	str	r3, [r2, #16]
 8008afe:	68fb      	ldr	r3, [r7, #12]
 8008b00:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008b04:	461a      	mov	r2, r3
 8008b06:	2300      	movs	r3, #0
 8008b08:	6153      	str	r3, [r2, #20]
 8008b0a:	68fb      	ldr	r3, [r7, #12]
 8008b0c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008b10:	461a      	mov	r2, r3
 8008b12:	2300      	movs	r3, #0
 8008b14:	61d3      	str	r3, [r2, #28]
 8008b16:	2300      	movs	r3, #0
 8008b18:	613b      	str	r3, [r7, #16]
 8008b1a:	e043      	b.n	8008ba4 <USB_DevInit+0x1a0>
 8008b1c:	693b      	ldr	r3, [r7, #16]
 8008b1e:	015a      	lsls	r2, r3, #5
 8008b20:	68fb      	ldr	r3, [r7, #12]
 8008b22:	4413      	add	r3, r2
 8008b24:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b28:	681b      	ldr	r3, [r3, #0]
 8008b2a:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008b2e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008b32:	d118      	bne.n	8008b66 <USB_DevInit+0x162>
 8008b34:	693b      	ldr	r3, [r7, #16]
 8008b36:	2b00      	cmp	r3, #0
 8008b38:	d10a      	bne.n	8008b50 <USB_DevInit+0x14c>
 8008b3a:	693b      	ldr	r3, [r7, #16]
 8008b3c:	015a      	lsls	r2, r3, #5
 8008b3e:	68fb      	ldr	r3, [r7, #12]
 8008b40:	4413      	add	r3, r2
 8008b42:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b46:	461a      	mov	r2, r3
 8008b48:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008b4c:	6013      	str	r3, [r2, #0]
 8008b4e:	e013      	b.n	8008b78 <USB_DevInit+0x174>
 8008b50:	693b      	ldr	r3, [r7, #16]
 8008b52:	015a      	lsls	r2, r3, #5
 8008b54:	68fb      	ldr	r3, [r7, #12]
 8008b56:	4413      	add	r3, r2
 8008b58:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b5c:	461a      	mov	r2, r3
 8008b5e:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8008b62:	6013      	str	r3, [r2, #0]
 8008b64:	e008      	b.n	8008b78 <USB_DevInit+0x174>
 8008b66:	693b      	ldr	r3, [r7, #16]
 8008b68:	015a      	lsls	r2, r3, #5
 8008b6a:	68fb      	ldr	r3, [r7, #12]
 8008b6c:	4413      	add	r3, r2
 8008b6e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b72:	461a      	mov	r2, r3
 8008b74:	2300      	movs	r3, #0
 8008b76:	6013      	str	r3, [r2, #0]
 8008b78:	693b      	ldr	r3, [r7, #16]
 8008b7a:	015a      	lsls	r2, r3, #5
 8008b7c:	68fb      	ldr	r3, [r7, #12]
 8008b7e:	4413      	add	r3, r2
 8008b80:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b84:	461a      	mov	r2, r3
 8008b86:	2300      	movs	r3, #0
 8008b88:	6113      	str	r3, [r2, #16]
 8008b8a:	693b      	ldr	r3, [r7, #16]
 8008b8c:	015a      	lsls	r2, r3, #5
 8008b8e:	68fb      	ldr	r3, [r7, #12]
 8008b90:	4413      	add	r3, r2
 8008b92:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008b96:	461a      	mov	r2, r3
 8008b98:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8008b9c:	6093      	str	r3, [r2, #8]
 8008b9e:	693b      	ldr	r3, [r7, #16]
 8008ba0:	3301      	adds	r3, #1
 8008ba2:	613b      	str	r3, [r7, #16]
 8008ba4:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8008ba8:	461a      	mov	r2, r3
 8008baa:	693b      	ldr	r3, [r7, #16]
 8008bac:	4293      	cmp	r3, r2
 8008bae:	d3b5      	bcc.n	8008b1c <USB_DevInit+0x118>
 8008bb0:	2300      	movs	r3, #0
 8008bb2:	613b      	str	r3, [r7, #16]
 8008bb4:	e043      	b.n	8008c3e <USB_DevInit+0x23a>
 8008bb6:	693b      	ldr	r3, [r7, #16]
 8008bb8:	015a      	lsls	r2, r3, #5
 8008bba:	68fb      	ldr	r3, [r7, #12]
 8008bbc:	4413      	add	r3, r2
 8008bbe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008bc2:	681b      	ldr	r3, [r3, #0]
 8008bc4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008bc8:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008bcc:	d118      	bne.n	8008c00 <USB_DevInit+0x1fc>
 8008bce:	693b      	ldr	r3, [r7, #16]
 8008bd0:	2b00      	cmp	r3, #0
 8008bd2:	d10a      	bne.n	8008bea <USB_DevInit+0x1e6>
 8008bd4:	693b      	ldr	r3, [r7, #16]
 8008bd6:	015a      	lsls	r2, r3, #5
 8008bd8:	68fb      	ldr	r3, [r7, #12]
 8008bda:	4413      	add	r3, r2
 8008bdc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008be0:	461a      	mov	r2, r3
 8008be2:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008be6:	6013      	str	r3, [r2, #0]
 8008be8:	e013      	b.n	8008c12 <USB_DevInit+0x20e>
 8008bea:	693b      	ldr	r3, [r7, #16]
 8008bec:	015a      	lsls	r2, r3, #5
 8008bee:	68fb      	ldr	r3, [r7, #12]
 8008bf0:	4413      	add	r3, r2
 8008bf2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008bf6:	461a      	mov	r2, r3
 8008bf8:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8008bfc:	6013      	str	r3, [r2, #0]
 8008bfe:	e008      	b.n	8008c12 <USB_DevInit+0x20e>
 8008c00:	693b      	ldr	r3, [r7, #16]
 8008c02:	015a      	lsls	r2, r3, #5
 8008c04:	68fb      	ldr	r3, [r7, #12]
 8008c06:	4413      	add	r3, r2
 8008c08:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008c0c:	461a      	mov	r2, r3
 8008c0e:	2300      	movs	r3, #0
 8008c10:	6013      	str	r3, [r2, #0]
 8008c12:	693b      	ldr	r3, [r7, #16]
 8008c14:	015a      	lsls	r2, r3, #5
 8008c16:	68fb      	ldr	r3, [r7, #12]
 8008c18:	4413      	add	r3, r2
 8008c1a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008c1e:	461a      	mov	r2, r3
 8008c20:	2300      	movs	r3, #0
 8008c22:	6113      	str	r3, [r2, #16]
 8008c24:	693b      	ldr	r3, [r7, #16]
 8008c26:	015a      	lsls	r2, r3, #5
 8008c28:	68fb      	ldr	r3, [r7, #12]
 8008c2a:	4413      	add	r3, r2
 8008c2c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008c30:	461a      	mov	r2, r3
 8008c32:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8008c36:	6093      	str	r3, [r2, #8]
 8008c38:	693b      	ldr	r3, [r7, #16]
 8008c3a:	3301      	adds	r3, #1
 8008c3c:	613b      	str	r3, [r7, #16]
 8008c3e:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8008c42:	461a      	mov	r2, r3
 8008c44:	693b      	ldr	r3, [r7, #16]
 8008c46:	4293      	cmp	r3, r2
 8008c48:	d3b5      	bcc.n	8008bb6 <USB_DevInit+0x1b2>
 8008c4a:	68fb      	ldr	r3, [r7, #12]
 8008c4c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008c50:	691b      	ldr	r3, [r3, #16]
 8008c52:	68fa      	ldr	r2, [r7, #12]
 8008c54:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8008c58:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008c5c:	6113      	str	r3, [r2, #16]
 8008c5e:	687b      	ldr	r3, [r7, #4]
 8008c60:	2200      	movs	r2, #0
 8008c62:	619a      	str	r2, [r3, #24]
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 8008c6a:	615a      	str	r2, [r3, #20]
 8008c6c:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8008c70:	2b00      	cmp	r3, #0
 8008c72:	d105      	bne.n	8008c80 <USB_DevInit+0x27c>
 8008c74:	687b      	ldr	r3, [r7, #4]
 8008c76:	699b      	ldr	r3, [r3, #24]
 8008c78:	f043 0210 	orr.w	r2, r3, #16
 8008c7c:	687b      	ldr	r3, [r7, #4]
 8008c7e:	619a      	str	r2, [r3, #24]
 8008c80:	687b      	ldr	r3, [r7, #4]
 8008c82:	699a      	ldr	r2, [r3, #24]
 8008c84:	4b10      	ldr	r3, [pc, #64]	; (8008cc8 <USB_DevInit+0x2c4>)
 8008c86:	4313      	orrs	r3, r2
 8008c88:	687a      	ldr	r2, [r7, #4]
 8008c8a:	6193      	str	r3, [r2, #24]
 8008c8c:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 8008c90:	2b00      	cmp	r3, #0
 8008c92:	d005      	beq.n	8008ca0 <USB_DevInit+0x29c>
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	699b      	ldr	r3, [r3, #24]
 8008c98:	f043 0208 	orr.w	r2, r3, #8
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	619a      	str	r2, [r3, #24]
 8008ca0:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8008ca4:	2b01      	cmp	r3, #1
 8008ca6:	d107      	bne.n	8008cb8 <USB_DevInit+0x2b4>
 8008ca8:	687b      	ldr	r3, [r7, #4]
 8008caa:	699b      	ldr	r3, [r3, #24]
 8008cac:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008cb0:	f043 0304 	orr.w	r3, r3, #4
 8008cb4:	687a      	ldr	r2, [r7, #4]
 8008cb6:	6193      	str	r3, [r2, #24]
 8008cb8:	7dfb      	ldrb	r3, [r7, #23]
 8008cba:	4618      	mov	r0, r3
 8008cbc:	3718      	adds	r7, #24
 8008cbe:	46bd      	mov	sp, r7
 8008cc0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8008cc4:	b004      	add	sp, #16
 8008cc6:	4770      	bx	lr
 8008cc8:	803c3800 	.word	0x803c3800

08008ccc <USB_FlushTxFifo>:
 8008ccc:	b480      	push	{r7}
 8008cce:	b085      	sub	sp, #20
 8008cd0:	af00      	add	r7, sp, #0
 8008cd2:	6078      	str	r0, [r7, #4]
 8008cd4:	6039      	str	r1, [r7, #0]
 8008cd6:	2300      	movs	r3, #0
 8008cd8:	60fb      	str	r3, [r7, #12]
 8008cda:	68fb      	ldr	r3, [r7, #12]
 8008cdc:	3301      	adds	r3, #1
 8008cde:	60fb      	str	r3, [r7, #12]
 8008ce0:	68fb      	ldr	r3, [r7, #12]
 8008ce2:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8008ce6:	d901      	bls.n	8008cec <USB_FlushTxFifo+0x20>
 8008ce8:	2303      	movs	r3, #3
 8008cea:	e01b      	b.n	8008d24 <USB_FlushTxFifo+0x58>
 8008cec:	687b      	ldr	r3, [r7, #4]
 8008cee:	691b      	ldr	r3, [r3, #16]
 8008cf0:	2b00      	cmp	r3, #0
 8008cf2:	daf2      	bge.n	8008cda <USB_FlushTxFifo+0xe>
 8008cf4:	2300      	movs	r3, #0
 8008cf6:	60fb      	str	r3, [r7, #12]
 8008cf8:	683b      	ldr	r3, [r7, #0]
 8008cfa:	019b      	lsls	r3, r3, #6
 8008cfc:	f043 0220 	orr.w	r2, r3, #32
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	611a      	str	r2, [r3, #16]
 8008d04:	68fb      	ldr	r3, [r7, #12]
 8008d06:	3301      	adds	r3, #1
 8008d08:	60fb      	str	r3, [r7, #12]
 8008d0a:	68fb      	ldr	r3, [r7, #12]
 8008d0c:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8008d10:	d901      	bls.n	8008d16 <USB_FlushTxFifo+0x4a>
 8008d12:	2303      	movs	r3, #3
 8008d14:	e006      	b.n	8008d24 <USB_FlushTxFifo+0x58>
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	691b      	ldr	r3, [r3, #16]
 8008d1a:	f003 0320 	and.w	r3, r3, #32
 8008d1e:	2b20      	cmp	r3, #32
 8008d20:	d0f0      	beq.n	8008d04 <USB_FlushTxFifo+0x38>
 8008d22:	2300      	movs	r3, #0
 8008d24:	4618      	mov	r0, r3
 8008d26:	3714      	adds	r7, #20
 8008d28:	46bd      	mov	sp, r7
 8008d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d2e:	4770      	bx	lr

08008d30 <USB_FlushRxFifo>:
 8008d30:	b480      	push	{r7}
 8008d32:	b085      	sub	sp, #20
 8008d34:	af00      	add	r7, sp, #0
 8008d36:	6078      	str	r0, [r7, #4]
 8008d38:	2300      	movs	r3, #0
 8008d3a:	60fb      	str	r3, [r7, #12]
 8008d3c:	68fb      	ldr	r3, [r7, #12]
 8008d3e:	3301      	adds	r3, #1
 8008d40:	60fb      	str	r3, [r7, #12]
 8008d42:	68fb      	ldr	r3, [r7, #12]
 8008d44:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8008d48:	d901      	bls.n	8008d4e <USB_FlushRxFifo+0x1e>
 8008d4a:	2303      	movs	r3, #3
 8008d4c:	e018      	b.n	8008d80 <USB_FlushRxFifo+0x50>
 8008d4e:	687b      	ldr	r3, [r7, #4]
 8008d50:	691b      	ldr	r3, [r3, #16]
 8008d52:	2b00      	cmp	r3, #0
 8008d54:	daf2      	bge.n	8008d3c <USB_FlushRxFifo+0xc>
 8008d56:	2300      	movs	r3, #0
 8008d58:	60fb      	str	r3, [r7, #12]
 8008d5a:	687b      	ldr	r3, [r7, #4]
 8008d5c:	2210      	movs	r2, #16
 8008d5e:	611a      	str	r2, [r3, #16]
 8008d60:	68fb      	ldr	r3, [r7, #12]
 8008d62:	3301      	adds	r3, #1
 8008d64:	60fb      	str	r3, [r7, #12]
 8008d66:	68fb      	ldr	r3, [r7, #12]
 8008d68:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8008d6c:	d901      	bls.n	8008d72 <USB_FlushRxFifo+0x42>
 8008d6e:	2303      	movs	r3, #3
 8008d70:	e006      	b.n	8008d80 <USB_FlushRxFifo+0x50>
 8008d72:	687b      	ldr	r3, [r7, #4]
 8008d74:	691b      	ldr	r3, [r3, #16]
 8008d76:	f003 0310 	and.w	r3, r3, #16
 8008d7a:	2b10      	cmp	r3, #16
 8008d7c:	d0f0      	beq.n	8008d60 <USB_FlushRxFifo+0x30>
 8008d7e:	2300      	movs	r3, #0
 8008d80:	4618      	mov	r0, r3
 8008d82:	3714      	adds	r7, #20
 8008d84:	46bd      	mov	sp, r7
 8008d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d8a:	4770      	bx	lr

08008d8c <USB_SetDevSpeed>:
 8008d8c:	b480      	push	{r7}
 8008d8e:	b085      	sub	sp, #20
 8008d90:	af00      	add	r7, sp, #0
 8008d92:	6078      	str	r0, [r7, #4]
 8008d94:	460b      	mov	r3, r1
 8008d96:	70fb      	strb	r3, [r7, #3]
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	60fb      	str	r3, [r7, #12]
 8008d9c:	68fb      	ldr	r3, [r7, #12]
 8008d9e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008da2:	681a      	ldr	r2, [r3, #0]
 8008da4:	78fb      	ldrb	r3, [r7, #3]
 8008da6:	68f9      	ldr	r1, [r7, #12]
 8008da8:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008dac:	4313      	orrs	r3, r2
 8008dae:	600b      	str	r3, [r1, #0]
 8008db0:	2300      	movs	r3, #0
 8008db2:	4618      	mov	r0, r3
 8008db4:	3714      	adds	r7, #20
 8008db6:	46bd      	mov	sp, r7
 8008db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dbc:	4770      	bx	lr

08008dbe <USB_GetDevSpeed>:
 8008dbe:	b480      	push	{r7}
 8008dc0:	b087      	sub	sp, #28
 8008dc2:	af00      	add	r7, sp, #0
 8008dc4:	6078      	str	r0, [r7, #4]
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	613b      	str	r3, [r7, #16]
 8008dca:	693b      	ldr	r3, [r7, #16]
 8008dcc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008dd0:	689b      	ldr	r3, [r3, #8]
 8008dd2:	f003 0306 	and.w	r3, r3, #6
 8008dd6:	60fb      	str	r3, [r7, #12]
 8008dd8:	68fb      	ldr	r3, [r7, #12]
 8008dda:	2b00      	cmp	r3, #0
 8008ddc:	d102      	bne.n	8008de4 <USB_GetDevSpeed+0x26>
 8008dde:	2300      	movs	r3, #0
 8008de0:	75fb      	strb	r3, [r7, #23]
 8008de2:	e00a      	b.n	8008dfa <USB_GetDevSpeed+0x3c>
 8008de4:	68fb      	ldr	r3, [r7, #12]
 8008de6:	2b02      	cmp	r3, #2
 8008de8:	d002      	beq.n	8008df0 <USB_GetDevSpeed+0x32>
 8008dea:	68fb      	ldr	r3, [r7, #12]
 8008dec:	2b06      	cmp	r3, #6
 8008dee:	d102      	bne.n	8008df6 <USB_GetDevSpeed+0x38>
 8008df0:	2302      	movs	r3, #2
 8008df2:	75fb      	strb	r3, [r7, #23]
 8008df4:	e001      	b.n	8008dfa <USB_GetDevSpeed+0x3c>
 8008df6:	230f      	movs	r3, #15
 8008df8:	75fb      	strb	r3, [r7, #23]
 8008dfa:	7dfb      	ldrb	r3, [r7, #23]
 8008dfc:	4618      	mov	r0, r3
 8008dfe:	371c      	adds	r7, #28
 8008e00:	46bd      	mov	sp, r7
 8008e02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e06:	4770      	bx	lr

08008e08 <USB_ActivateEndpoint>:
 8008e08:	b480      	push	{r7}
 8008e0a:	b085      	sub	sp, #20
 8008e0c:	af00      	add	r7, sp, #0
 8008e0e:	6078      	str	r0, [r7, #4]
 8008e10:	6039      	str	r1, [r7, #0]
 8008e12:	687b      	ldr	r3, [r7, #4]
 8008e14:	60fb      	str	r3, [r7, #12]
 8008e16:	683b      	ldr	r3, [r7, #0]
 8008e18:	781b      	ldrb	r3, [r3, #0]
 8008e1a:	60bb      	str	r3, [r7, #8]
 8008e1c:	683b      	ldr	r3, [r7, #0]
 8008e1e:	785b      	ldrb	r3, [r3, #1]
 8008e20:	2b01      	cmp	r3, #1
 8008e22:	d13a      	bne.n	8008e9a <USB_ActivateEndpoint+0x92>
 8008e24:	68fb      	ldr	r3, [r7, #12]
 8008e26:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008e2a:	69da      	ldr	r2, [r3, #28]
 8008e2c:	683b      	ldr	r3, [r7, #0]
 8008e2e:	781b      	ldrb	r3, [r3, #0]
 8008e30:	f003 030f 	and.w	r3, r3, #15
 8008e34:	2101      	movs	r1, #1
 8008e36:	fa01 f303 	lsl.w	r3, r1, r3
 8008e3a:	b29b      	uxth	r3, r3
 8008e3c:	68f9      	ldr	r1, [r7, #12]
 8008e3e:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008e42:	4313      	orrs	r3, r2
 8008e44:	61cb      	str	r3, [r1, #28]
 8008e46:	68bb      	ldr	r3, [r7, #8]
 8008e48:	015a      	lsls	r2, r3, #5
 8008e4a:	68fb      	ldr	r3, [r7, #12]
 8008e4c:	4413      	add	r3, r2
 8008e4e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008e52:	681b      	ldr	r3, [r3, #0]
 8008e54:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8008e58:	2b00      	cmp	r3, #0
 8008e5a:	d155      	bne.n	8008f08 <USB_ActivateEndpoint+0x100>
 8008e5c:	68bb      	ldr	r3, [r7, #8]
 8008e5e:	015a      	lsls	r2, r3, #5
 8008e60:	68fb      	ldr	r3, [r7, #12]
 8008e62:	4413      	add	r3, r2
 8008e64:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008e68:	681a      	ldr	r2, [r3, #0]
 8008e6a:	683b      	ldr	r3, [r7, #0]
 8008e6c:	689b      	ldr	r3, [r3, #8]
 8008e6e:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8008e72:	683b      	ldr	r3, [r7, #0]
 8008e74:	791b      	ldrb	r3, [r3, #4]
 8008e76:	049b      	lsls	r3, r3, #18
 8008e78:	4319      	orrs	r1, r3
 8008e7a:	68bb      	ldr	r3, [r7, #8]
 8008e7c:	059b      	lsls	r3, r3, #22
 8008e7e:	430b      	orrs	r3, r1
 8008e80:	4313      	orrs	r3, r2
 8008e82:	68ba      	ldr	r2, [r7, #8]
 8008e84:	0151      	lsls	r1, r2, #5
 8008e86:	68fa      	ldr	r2, [r7, #12]
 8008e88:	440a      	add	r2, r1
 8008e8a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008e8e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008e92:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008e96:	6013      	str	r3, [r2, #0]
 8008e98:	e036      	b.n	8008f08 <USB_ActivateEndpoint+0x100>
 8008e9a:	68fb      	ldr	r3, [r7, #12]
 8008e9c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008ea0:	69da      	ldr	r2, [r3, #28]
 8008ea2:	683b      	ldr	r3, [r7, #0]
 8008ea4:	781b      	ldrb	r3, [r3, #0]
 8008ea6:	f003 030f 	and.w	r3, r3, #15
 8008eaa:	2101      	movs	r1, #1
 8008eac:	fa01 f303 	lsl.w	r3, r1, r3
 8008eb0:	041b      	lsls	r3, r3, #16
 8008eb2:	68f9      	ldr	r1, [r7, #12]
 8008eb4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008eb8:	4313      	orrs	r3, r2
 8008eba:	61cb      	str	r3, [r1, #28]
 8008ebc:	68bb      	ldr	r3, [r7, #8]
 8008ebe:	015a      	lsls	r2, r3, #5
 8008ec0:	68fb      	ldr	r3, [r7, #12]
 8008ec2:	4413      	add	r3, r2
 8008ec4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008ec8:	681b      	ldr	r3, [r3, #0]
 8008eca:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8008ece:	2b00      	cmp	r3, #0
 8008ed0:	d11a      	bne.n	8008f08 <USB_ActivateEndpoint+0x100>
 8008ed2:	68bb      	ldr	r3, [r7, #8]
 8008ed4:	015a      	lsls	r2, r3, #5
 8008ed6:	68fb      	ldr	r3, [r7, #12]
 8008ed8:	4413      	add	r3, r2
 8008eda:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008ede:	681a      	ldr	r2, [r3, #0]
 8008ee0:	683b      	ldr	r3, [r7, #0]
 8008ee2:	689b      	ldr	r3, [r3, #8]
 8008ee4:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8008ee8:	683b      	ldr	r3, [r7, #0]
 8008eea:	791b      	ldrb	r3, [r3, #4]
 8008eec:	049b      	lsls	r3, r3, #18
 8008eee:	430b      	orrs	r3, r1
 8008ef0:	4313      	orrs	r3, r2
 8008ef2:	68ba      	ldr	r2, [r7, #8]
 8008ef4:	0151      	lsls	r1, r2, #5
 8008ef6:	68fa      	ldr	r2, [r7, #12]
 8008ef8:	440a      	add	r2, r1
 8008efa:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008efe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008f02:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008f06:	6013      	str	r3, [r2, #0]
 8008f08:	2300      	movs	r3, #0
 8008f0a:	4618      	mov	r0, r3
 8008f0c:	3714      	adds	r7, #20
 8008f0e:	46bd      	mov	sp, r7
 8008f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f14:	4770      	bx	lr
	...

08008f18 <USB_DeactivateEndpoint>:
 8008f18:	b480      	push	{r7}
 8008f1a:	b085      	sub	sp, #20
 8008f1c:	af00      	add	r7, sp, #0
 8008f1e:	6078      	str	r0, [r7, #4]
 8008f20:	6039      	str	r1, [r7, #0]
 8008f22:	687b      	ldr	r3, [r7, #4]
 8008f24:	60fb      	str	r3, [r7, #12]
 8008f26:	683b      	ldr	r3, [r7, #0]
 8008f28:	781b      	ldrb	r3, [r3, #0]
 8008f2a:	60bb      	str	r3, [r7, #8]
 8008f2c:	683b      	ldr	r3, [r7, #0]
 8008f2e:	785b      	ldrb	r3, [r3, #1]
 8008f30:	2b01      	cmp	r3, #1
 8008f32:	d161      	bne.n	8008ff8 <USB_DeactivateEndpoint+0xe0>
 8008f34:	68bb      	ldr	r3, [r7, #8]
 8008f36:	015a      	lsls	r2, r3, #5
 8008f38:	68fb      	ldr	r3, [r7, #12]
 8008f3a:	4413      	add	r3, r2
 8008f3c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008f46:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008f4a:	d11f      	bne.n	8008f8c <USB_DeactivateEndpoint+0x74>
 8008f4c:	68bb      	ldr	r3, [r7, #8]
 8008f4e:	015a      	lsls	r2, r3, #5
 8008f50:	68fb      	ldr	r3, [r7, #12]
 8008f52:	4413      	add	r3, r2
 8008f54:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008f58:	681b      	ldr	r3, [r3, #0]
 8008f5a:	68ba      	ldr	r2, [r7, #8]
 8008f5c:	0151      	lsls	r1, r2, #5
 8008f5e:	68fa      	ldr	r2, [r7, #12]
 8008f60:	440a      	add	r2, r1
 8008f62:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008f66:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8008f6a:	6013      	str	r3, [r2, #0]
 8008f6c:	68bb      	ldr	r3, [r7, #8]
 8008f6e:	015a      	lsls	r2, r3, #5
 8008f70:	68fb      	ldr	r3, [r7, #12]
 8008f72:	4413      	add	r3, r2
 8008f74:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008f78:	681b      	ldr	r3, [r3, #0]
 8008f7a:	68ba      	ldr	r2, [r7, #8]
 8008f7c:	0151      	lsls	r1, r2, #5
 8008f7e:	68fa      	ldr	r2, [r7, #12]
 8008f80:	440a      	add	r2, r1
 8008f82:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8008f86:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008f8a:	6013      	str	r3, [r2, #0]
 8008f8c:	68fb      	ldr	r3, [r7, #12]
 8008f8e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008f92:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8008f94:	683b      	ldr	r3, [r7, #0]
 8008f96:	781b      	ldrb	r3, [r3, #0]
 8008f98:	f003 030f 	and.w	r3, r3, #15
 8008f9c:	2101      	movs	r1, #1
 8008f9e:	fa01 f303 	lsl.w	r3, r1, r3
 8008fa2:	b29b      	uxth	r3, r3
 8008fa4:	43db      	mvns	r3, r3
 8008fa6:	68f9      	ldr	r1, [r7, #12]
 8008fa8:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008fac:	4013      	ands	r3, r2
 8008fae:	63cb      	str	r3, [r1, #60]	; 0x3c
 8008fb0:	68fb      	ldr	r3, [r7, #12]
 8008fb2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008fb6:	69da      	ldr	r2, [r3, #28]
 8008fb8:	683b      	ldr	r3, [r7, #0]
 8008fba:	781b      	ldrb	r3, [r3, #0]
 8008fbc:	f003 030f 	and.w	r3, r3, #15
 8008fc0:	2101      	movs	r1, #1
 8008fc2:	fa01 f303 	lsl.w	r3, r1, r3
 8008fc6:	b29b      	uxth	r3, r3
 8008fc8:	43db      	mvns	r3, r3
 8008fca:	68f9      	ldr	r1, [r7, #12]
 8008fcc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8008fd0:	4013      	ands	r3, r2
 8008fd2:	61cb      	str	r3, [r1, #28]
 8008fd4:	68bb      	ldr	r3, [r7, #8]
 8008fd6:	015a      	lsls	r2, r3, #5
 8008fd8:	68fb      	ldr	r3, [r7, #12]
 8008fda:	4413      	add	r3, r2
 8008fdc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008fe0:	681a      	ldr	r2, [r3, #0]
 8008fe2:	68bb      	ldr	r3, [r7, #8]
 8008fe4:	0159      	lsls	r1, r3, #5
 8008fe6:	68fb      	ldr	r3, [r7, #12]
 8008fe8:	440b      	add	r3, r1
 8008fea:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008fee:	4619      	mov	r1, r3
 8008ff0:	4b35      	ldr	r3, [pc, #212]	; (80090c8 <USB_DeactivateEndpoint+0x1b0>)
 8008ff2:	4013      	ands	r3, r2
 8008ff4:	600b      	str	r3, [r1, #0]
 8008ff6:	e060      	b.n	80090ba <USB_DeactivateEndpoint+0x1a2>
 8008ff8:	68bb      	ldr	r3, [r7, #8]
 8008ffa:	015a      	lsls	r2, r3, #5
 8008ffc:	68fb      	ldr	r3, [r7, #12]
 8008ffe:	4413      	add	r3, r2
 8009000:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009004:	681b      	ldr	r3, [r3, #0]
 8009006:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800900a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800900e:	d11f      	bne.n	8009050 <USB_DeactivateEndpoint+0x138>
 8009010:	68bb      	ldr	r3, [r7, #8]
 8009012:	015a      	lsls	r2, r3, #5
 8009014:	68fb      	ldr	r3, [r7, #12]
 8009016:	4413      	add	r3, r2
 8009018:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800901c:	681b      	ldr	r3, [r3, #0]
 800901e:	68ba      	ldr	r2, [r7, #8]
 8009020:	0151      	lsls	r1, r2, #5
 8009022:	68fa      	ldr	r2, [r7, #12]
 8009024:	440a      	add	r2, r1
 8009026:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800902a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800902e:	6013      	str	r3, [r2, #0]
 8009030:	68bb      	ldr	r3, [r7, #8]
 8009032:	015a      	lsls	r2, r3, #5
 8009034:	68fb      	ldr	r3, [r7, #12]
 8009036:	4413      	add	r3, r2
 8009038:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800903c:	681b      	ldr	r3, [r3, #0]
 800903e:	68ba      	ldr	r2, [r7, #8]
 8009040:	0151      	lsls	r1, r2, #5
 8009042:	68fa      	ldr	r2, [r7, #12]
 8009044:	440a      	add	r2, r1
 8009046:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800904a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800904e:	6013      	str	r3, [r2, #0]
 8009050:	68fb      	ldr	r3, [r7, #12]
 8009052:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009056:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009058:	683b      	ldr	r3, [r7, #0]
 800905a:	781b      	ldrb	r3, [r3, #0]
 800905c:	f003 030f 	and.w	r3, r3, #15
 8009060:	2101      	movs	r1, #1
 8009062:	fa01 f303 	lsl.w	r3, r1, r3
 8009066:	041b      	lsls	r3, r3, #16
 8009068:	43db      	mvns	r3, r3
 800906a:	68f9      	ldr	r1, [r7, #12]
 800906c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8009070:	4013      	ands	r3, r2
 8009072:	63cb      	str	r3, [r1, #60]	; 0x3c
 8009074:	68fb      	ldr	r3, [r7, #12]
 8009076:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800907a:	69da      	ldr	r2, [r3, #28]
 800907c:	683b      	ldr	r3, [r7, #0]
 800907e:	781b      	ldrb	r3, [r3, #0]
 8009080:	f003 030f 	and.w	r3, r3, #15
 8009084:	2101      	movs	r1, #1
 8009086:	fa01 f303 	lsl.w	r3, r1, r3
 800908a:	041b      	lsls	r3, r3, #16
 800908c:	43db      	mvns	r3, r3
 800908e:	68f9      	ldr	r1, [r7, #12]
 8009090:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8009094:	4013      	ands	r3, r2
 8009096:	61cb      	str	r3, [r1, #28]
 8009098:	68bb      	ldr	r3, [r7, #8]
 800909a:	015a      	lsls	r2, r3, #5
 800909c:	68fb      	ldr	r3, [r7, #12]
 800909e:	4413      	add	r3, r2
 80090a0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80090a4:	681a      	ldr	r2, [r3, #0]
 80090a6:	68bb      	ldr	r3, [r7, #8]
 80090a8:	0159      	lsls	r1, r3, #5
 80090aa:	68fb      	ldr	r3, [r7, #12]
 80090ac:	440b      	add	r3, r1
 80090ae:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80090b2:	4619      	mov	r1, r3
 80090b4:	4b05      	ldr	r3, [pc, #20]	; (80090cc <USB_DeactivateEndpoint+0x1b4>)
 80090b6:	4013      	ands	r3, r2
 80090b8:	600b      	str	r3, [r1, #0]
 80090ba:	2300      	movs	r3, #0
 80090bc:	4618      	mov	r0, r3
 80090be:	3714      	adds	r7, #20
 80090c0:	46bd      	mov	sp, r7
 80090c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090c6:	4770      	bx	lr
 80090c8:	ec337800 	.word	0xec337800
 80090cc:	eff37800 	.word	0xeff37800

080090d0 <USB_EPStartXfer>:
 80090d0:	b580      	push	{r7, lr}
 80090d2:	b08a      	sub	sp, #40	; 0x28
 80090d4:	af02      	add	r7, sp, #8
 80090d6:	60f8      	str	r0, [r7, #12]
 80090d8:	60b9      	str	r1, [r7, #8]
 80090da:	4613      	mov	r3, r2
 80090dc:	71fb      	strb	r3, [r7, #7]
 80090de:	68fb      	ldr	r3, [r7, #12]
 80090e0:	61fb      	str	r3, [r7, #28]
 80090e2:	68bb      	ldr	r3, [r7, #8]
 80090e4:	781b      	ldrb	r3, [r3, #0]
 80090e6:	61bb      	str	r3, [r7, #24]
 80090e8:	68bb      	ldr	r3, [r7, #8]
 80090ea:	785b      	ldrb	r3, [r3, #1]
 80090ec:	2b01      	cmp	r3, #1
 80090ee:	f040 817a 	bne.w	80093e6 <USB_EPStartXfer+0x316>
 80090f2:	68bb      	ldr	r3, [r7, #8]
 80090f4:	691b      	ldr	r3, [r3, #16]
 80090f6:	2b00      	cmp	r3, #0
 80090f8:	d132      	bne.n	8009160 <USB_EPStartXfer+0x90>
 80090fa:	69bb      	ldr	r3, [r7, #24]
 80090fc:	015a      	lsls	r2, r3, #5
 80090fe:	69fb      	ldr	r3, [r7, #28]
 8009100:	4413      	add	r3, r2
 8009102:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009106:	691b      	ldr	r3, [r3, #16]
 8009108:	69ba      	ldr	r2, [r7, #24]
 800910a:	0151      	lsls	r1, r2, #5
 800910c:	69fa      	ldr	r2, [r7, #28]
 800910e:	440a      	add	r2, r1
 8009110:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009114:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8009118:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 800911c:	6113      	str	r3, [r2, #16]
 800911e:	69bb      	ldr	r3, [r7, #24]
 8009120:	015a      	lsls	r2, r3, #5
 8009122:	69fb      	ldr	r3, [r7, #28]
 8009124:	4413      	add	r3, r2
 8009126:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800912a:	691b      	ldr	r3, [r3, #16]
 800912c:	69ba      	ldr	r2, [r7, #24]
 800912e:	0151      	lsls	r1, r2, #5
 8009130:	69fa      	ldr	r2, [r7, #28]
 8009132:	440a      	add	r2, r1
 8009134:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009138:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800913c:	6113      	str	r3, [r2, #16]
 800913e:	69bb      	ldr	r3, [r7, #24]
 8009140:	015a      	lsls	r2, r3, #5
 8009142:	69fb      	ldr	r3, [r7, #28]
 8009144:	4413      	add	r3, r2
 8009146:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800914a:	691b      	ldr	r3, [r3, #16]
 800914c:	69ba      	ldr	r2, [r7, #24]
 800914e:	0151      	lsls	r1, r2, #5
 8009150:	69fa      	ldr	r2, [r7, #28]
 8009152:	440a      	add	r2, r1
 8009154:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009158:	0cdb      	lsrs	r3, r3, #19
 800915a:	04db      	lsls	r3, r3, #19
 800915c:	6113      	str	r3, [r2, #16]
 800915e:	e092      	b.n	8009286 <USB_EPStartXfer+0x1b6>
 8009160:	69bb      	ldr	r3, [r7, #24]
 8009162:	015a      	lsls	r2, r3, #5
 8009164:	69fb      	ldr	r3, [r7, #28]
 8009166:	4413      	add	r3, r2
 8009168:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800916c:	691b      	ldr	r3, [r3, #16]
 800916e:	69ba      	ldr	r2, [r7, #24]
 8009170:	0151      	lsls	r1, r2, #5
 8009172:	69fa      	ldr	r2, [r7, #28]
 8009174:	440a      	add	r2, r1
 8009176:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800917a:	0cdb      	lsrs	r3, r3, #19
 800917c:	04db      	lsls	r3, r3, #19
 800917e:	6113      	str	r3, [r2, #16]
 8009180:	69bb      	ldr	r3, [r7, #24]
 8009182:	015a      	lsls	r2, r3, #5
 8009184:	69fb      	ldr	r3, [r7, #28]
 8009186:	4413      	add	r3, r2
 8009188:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800918c:	691b      	ldr	r3, [r3, #16]
 800918e:	69ba      	ldr	r2, [r7, #24]
 8009190:	0151      	lsls	r1, r2, #5
 8009192:	69fa      	ldr	r2, [r7, #28]
 8009194:	440a      	add	r2, r1
 8009196:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800919a:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800919e:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80091a2:	6113      	str	r3, [r2, #16]
 80091a4:	69bb      	ldr	r3, [r7, #24]
 80091a6:	2b00      	cmp	r3, #0
 80091a8:	d11a      	bne.n	80091e0 <USB_EPStartXfer+0x110>
 80091aa:	68bb      	ldr	r3, [r7, #8]
 80091ac:	691a      	ldr	r2, [r3, #16]
 80091ae:	68bb      	ldr	r3, [r7, #8]
 80091b0:	689b      	ldr	r3, [r3, #8]
 80091b2:	429a      	cmp	r2, r3
 80091b4:	d903      	bls.n	80091be <USB_EPStartXfer+0xee>
 80091b6:	68bb      	ldr	r3, [r7, #8]
 80091b8:	689a      	ldr	r2, [r3, #8]
 80091ba:	68bb      	ldr	r3, [r7, #8]
 80091bc:	611a      	str	r2, [r3, #16]
 80091be:	69bb      	ldr	r3, [r7, #24]
 80091c0:	015a      	lsls	r2, r3, #5
 80091c2:	69fb      	ldr	r3, [r7, #28]
 80091c4:	4413      	add	r3, r2
 80091c6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80091ca:	691b      	ldr	r3, [r3, #16]
 80091cc:	69ba      	ldr	r2, [r7, #24]
 80091ce:	0151      	lsls	r1, r2, #5
 80091d0:	69fa      	ldr	r2, [r7, #28]
 80091d2:	440a      	add	r2, r1
 80091d4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80091d8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80091dc:	6113      	str	r3, [r2, #16]
 80091de:	e01b      	b.n	8009218 <USB_EPStartXfer+0x148>
 80091e0:	69bb      	ldr	r3, [r7, #24]
 80091e2:	015a      	lsls	r2, r3, #5
 80091e4:	69fb      	ldr	r3, [r7, #28]
 80091e6:	4413      	add	r3, r2
 80091e8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80091ec:	691a      	ldr	r2, [r3, #16]
 80091ee:	68bb      	ldr	r3, [r7, #8]
 80091f0:	6919      	ldr	r1, [r3, #16]
 80091f2:	68bb      	ldr	r3, [r7, #8]
 80091f4:	689b      	ldr	r3, [r3, #8]
 80091f6:	440b      	add	r3, r1
 80091f8:	1e59      	subs	r1, r3, #1
 80091fa:	68bb      	ldr	r3, [r7, #8]
 80091fc:	689b      	ldr	r3, [r3, #8]
 80091fe:	fbb1 f3f3 	udiv	r3, r1, r3
 8009202:	04d9      	lsls	r1, r3, #19
 8009204:	4ba2      	ldr	r3, [pc, #648]	; (8009490 <USB_EPStartXfer+0x3c0>)
 8009206:	400b      	ands	r3, r1
 8009208:	69b9      	ldr	r1, [r7, #24]
 800920a:	0148      	lsls	r0, r1, #5
 800920c:	69f9      	ldr	r1, [r7, #28]
 800920e:	4401      	add	r1, r0
 8009210:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8009214:	4313      	orrs	r3, r2
 8009216:	610b      	str	r3, [r1, #16]
 8009218:	69bb      	ldr	r3, [r7, #24]
 800921a:	015a      	lsls	r2, r3, #5
 800921c:	69fb      	ldr	r3, [r7, #28]
 800921e:	4413      	add	r3, r2
 8009220:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009224:	691a      	ldr	r2, [r3, #16]
 8009226:	68bb      	ldr	r3, [r7, #8]
 8009228:	691b      	ldr	r3, [r3, #16]
 800922a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800922e:	69b9      	ldr	r1, [r7, #24]
 8009230:	0148      	lsls	r0, r1, #5
 8009232:	69f9      	ldr	r1, [r7, #28]
 8009234:	4401      	add	r1, r0
 8009236:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 800923a:	4313      	orrs	r3, r2
 800923c:	610b      	str	r3, [r1, #16]
 800923e:	68bb      	ldr	r3, [r7, #8]
 8009240:	791b      	ldrb	r3, [r3, #4]
 8009242:	2b01      	cmp	r3, #1
 8009244:	d11f      	bne.n	8009286 <USB_EPStartXfer+0x1b6>
 8009246:	69bb      	ldr	r3, [r7, #24]
 8009248:	015a      	lsls	r2, r3, #5
 800924a:	69fb      	ldr	r3, [r7, #28]
 800924c:	4413      	add	r3, r2
 800924e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009252:	691b      	ldr	r3, [r3, #16]
 8009254:	69ba      	ldr	r2, [r7, #24]
 8009256:	0151      	lsls	r1, r2, #5
 8009258:	69fa      	ldr	r2, [r7, #28]
 800925a:	440a      	add	r2, r1
 800925c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009260:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 8009264:	6113      	str	r3, [r2, #16]
 8009266:	69bb      	ldr	r3, [r7, #24]
 8009268:	015a      	lsls	r2, r3, #5
 800926a:	69fb      	ldr	r3, [r7, #28]
 800926c:	4413      	add	r3, r2
 800926e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009272:	691b      	ldr	r3, [r3, #16]
 8009274:	69ba      	ldr	r2, [r7, #24]
 8009276:	0151      	lsls	r1, r2, #5
 8009278:	69fa      	ldr	r2, [r7, #28]
 800927a:	440a      	add	r2, r1
 800927c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009280:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8009284:	6113      	str	r3, [r2, #16]
 8009286:	79fb      	ldrb	r3, [r7, #7]
 8009288:	2b01      	cmp	r3, #1
 800928a:	d14b      	bne.n	8009324 <USB_EPStartXfer+0x254>
 800928c:	68bb      	ldr	r3, [r7, #8]
 800928e:	69db      	ldr	r3, [r3, #28]
 8009290:	2b00      	cmp	r3, #0
 8009292:	d009      	beq.n	80092a8 <USB_EPStartXfer+0x1d8>
 8009294:	69bb      	ldr	r3, [r7, #24]
 8009296:	015a      	lsls	r2, r3, #5
 8009298:	69fb      	ldr	r3, [r7, #28]
 800929a:	4413      	add	r3, r2
 800929c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80092a0:	461a      	mov	r2, r3
 80092a2:	68bb      	ldr	r3, [r7, #8]
 80092a4:	69db      	ldr	r3, [r3, #28]
 80092a6:	6153      	str	r3, [r2, #20]
 80092a8:	68bb      	ldr	r3, [r7, #8]
 80092aa:	791b      	ldrb	r3, [r3, #4]
 80092ac:	2b01      	cmp	r3, #1
 80092ae:	d128      	bne.n	8009302 <USB_EPStartXfer+0x232>
 80092b0:	69fb      	ldr	r3, [r7, #28]
 80092b2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80092b6:	689b      	ldr	r3, [r3, #8]
 80092b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80092bc:	2b00      	cmp	r3, #0
 80092be:	d110      	bne.n	80092e2 <USB_EPStartXfer+0x212>
 80092c0:	69bb      	ldr	r3, [r7, #24]
 80092c2:	015a      	lsls	r2, r3, #5
 80092c4:	69fb      	ldr	r3, [r7, #28]
 80092c6:	4413      	add	r3, r2
 80092c8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80092cc:	681b      	ldr	r3, [r3, #0]
 80092ce:	69ba      	ldr	r2, [r7, #24]
 80092d0:	0151      	lsls	r1, r2, #5
 80092d2:	69fa      	ldr	r2, [r7, #28]
 80092d4:	440a      	add	r2, r1
 80092d6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80092da:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80092de:	6013      	str	r3, [r2, #0]
 80092e0:	e00f      	b.n	8009302 <USB_EPStartXfer+0x232>
 80092e2:	69bb      	ldr	r3, [r7, #24]
 80092e4:	015a      	lsls	r2, r3, #5
 80092e6:	69fb      	ldr	r3, [r7, #28]
 80092e8:	4413      	add	r3, r2
 80092ea:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	69ba      	ldr	r2, [r7, #24]
 80092f2:	0151      	lsls	r1, r2, #5
 80092f4:	69fa      	ldr	r2, [r7, #28]
 80092f6:	440a      	add	r2, r1
 80092f8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80092fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009300:	6013      	str	r3, [r2, #0]
 8009302:	69bb      	ldr	r3, [r7, #24]
 8009304:	015a      	lsls	r2, r3, #5
 8009306:	69fb      	ldr	r3, [r7, #28]
 8009308:	4413      	add	r3, r2
 800930a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800930e:	681b      	ldr	r3, [r3, #0]
 8009310:	69ba      	ldr	r2, [r7, #24]
 8009312:	0151      	lsls	r1, r2, #5
 8009314:	69fa      	ldr	r2, [r7, #28]
 8009316:	440a      	add	r2, r1
 8009318:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800931c:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8009320:	6013      	str	r3, [r2, #0]
 8009322:	e165      	b.n	80095f0 <USB_EPStartXfer+0x520>
 8009324:	69bb      	ldr	r3, [r7, #24]
 8009326:	015a      	lsls	r2, r3, #5
 8009328:	69fb      	ldr	r3, [r7, #28]
 800932a:	4413      	add	r3, r2
 800932c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009330:	681b      	ldr	r3, [r3, #0]
 8009332:	69ba      	ldr	r2, [r7, #24]
 8009334:	0151      	lsls	r1, r2, #5
 8009336:	69fa      	ldr	r2, [r7, #28]
 8009338:	440a      	add	r2, r1
 800933a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800933e:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8009342:	6013      	str	r3, [r2, #0]
 8009344:	68bb      	ldr	r3, [r7, #8]
 8009346:	791b      	ldrb	r3, [r3, #4]
 8009348:	2b01      	cmp	r3, #1
 800934a:	d015      	beq.n	8009378 <USB_EPStartXfer+0x2a8>
 800934c:	68bb      	ldr	r3, [r7, #8]
 800934e:	691b      	ldr	r3, [r3, #16]
 8009350:	2b00      	cmp	r3, #0
 8009352:	f000 814d 	beq.w	80095f0 <USB_EPStartXfer+0x520>
 8009356:	69fb      	ldr	r3, [r7, #28]
 8009358:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800935c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800935e:	68bb      	ldr	r3, [r7, #8]
 8009360:	781b      	ldrb	r3, [r3, #0]
 8009362:	f003 030f 	and.w	r3, r3, #15
 8009366:	2101      	movs	r1, #1
 8009368:	fa01 f303 	lsl.w	r3, r1, r3
 800936c:	69f9      	ldr	r1, [r7, #28]
 800936e:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8009372:	4313      	orrs	r3, r2
 8009374:	634b      	str	r3, [r1, #52]	; 0x34
 8009376:	e13b      	b.n	80095f0 <USB_EPStartXfer+0x520>
 8009378:	69fb      	ldr	r3, [r7, #28]
 800937a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800937e:	689b      	ldr	r3, [r3, #8]
 8009380:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009384:	2b00      	cmp	r3, #0
 8009386:	d110      	bne.n	80093aa <USB_EPStartXfer+0x2da>
 8009388:	69bb      	ldr	r3, [r7, #24]
 800938a:	015a      	lsls	r2, r3, #5
 800938c:	69fb      	ldr	r3, [r7, #28]
 800938e:	4413      	add	r3, r2
 8009390:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009394:	681b      	ldr	r3, [r3, #0]
 8009396:	69ba      	ldr	r2, [r7, #24]
 8009398:	0151      	lsls	r1, r2, #5
 800939a:	69fa      	ldr	r2, [r7, #28]
 800939c:	440a      	add	r2, r1
 800939e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80093a2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80093a6:	6013      	str	r3, [r2, #0]
 80093a8:	e00f      	b.n	80093ca <USB_EPStartXfer+0x2fa>
 80093aa:	69bb      	ldr	r3, [r7, #24]
 80093ac:	015a      	lsls	r2, r3, #5
 80093ae:	69fb      	ldr	r3, [r7, #28]
 80093b0:	4413      	add	r3, r2
 80093b2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80093b6:	681b      	ldr	r3, [r3, #0]
 80093b8:	69ba      	ldr	r2, [r7, #24]
 80093ba:	0151      	lsls	r1, r2, #5
 80093bc:	69fa      	ldr	r2, [r7, #28]
 80093be:	440a      	add	r2, r1
 80093c0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80093c4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80093c8:	6013      	str	r3, [r2, #0]
 80093ca:	68bb      	ldr	r3, [r7, #8]
 80093cc:	68d9      	ldr	r1, [r3, #12]
 80093ce:	68bb      	ldr	r3, [r7, #8]
 80093d0:	781a      	ldrb	r2, [r3, #0]
 80093d2:	68bb      	ldr	r3, [r7, #8]
 80093d4:	691b      	ldr	r3, [r3, #16]
 80093d6:	b298      	uxth	r0, r3
 80093d8:	79fb      	ldrb	r3, [r7, #7]
 80093da:	9300      	str	r3, [sp, #0]
 80093dc:	4603      	mov	r3, r0
 80093de:	68f8      	ldr	r0, [r7, #12]
 80093e0:	f000 f9b8 	bl	8009754 <USB_WritePacket>
 80093e4:	e104      	b.n	80095f0 <USB_EPStartXfer+0x520>
 80093e6:	69bb      	ldr	r3, [r7, #24]
 80093e8:	015a      	lsls	r2, r3, #5
 80093ea:	69fb      	ldr	r3, [r7, #28]
 80093ec:	4413      	add	r3, r2
 80093ee:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80093f2:	691b      	ldr	r3, [r3, #16]
 80093f4:	69ba      	ldr	r2, [r7, #24]
 80093f6:	0151      	lsls	r1, r2, #5
 80093f8:	69fa      	ldr	r2, [r7, #28]
 80093fa:	440a      	add	r2, r1
 80093fc:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009400:	0cdb      	lsrs	r3, r3, #19
 8009402:	04db      	lsls	r3, r3, #19
 8009404:	6113      	str	r3, [r2, #16]
 8009406:	69bb      	ldr	r3, [r7, #24]
 8009408:	015a      	lsls	r2, r3, #5
 800940a:	69fb      	ldr	r3, [r7, #28]
 800940c:	4413      	add	r3, r2
 800940e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009412:	691b      	ldr	r3, [r3, #16]
 8009414:	69ba      	ldr	r2, [r7, #24]
 8009416:	0151      	lsls	r1, r2, #5
 8009418:	69fa      	ldr	r2, [r7, #28]
 800941a:	440a      	add	r2, r1
 800941c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009420:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8009424:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8009428:	6113      	str	r3, [r2, #16]
 800942a:	69bb      	ldr	r3, [r7, #24]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d131      	bne.n	8009494 <USB_EPStartXfer+0x3c4>
 8009430:	68bb      	ldr	r3, [r7, #8]
 8009432:	691b      	ldr	r3, [r3, #16]
 8009434:	2b00      	cmp	r3, #0
 8009436:	d003      	beq.n	8009440 <USB_EPStartXfer+0x370>
 8009438:	68bb      	ldr	r3, [r7, #8]
 800943a:	689a      	ldr	r2, [r3, #8]
 800943c:	68bb      	ldr	r3, [r7, #8]
 800943e:	611a      	str	r2, [r3, #16]
 8009440:	68bb      	ldr	r3, [r7, #8]
 8009442:	689a      	ldr	r2, [r3, #8]
 8009444:	68bb      	ldr	r3, [r7, #8]
 8009446:	621a      	str	r2, [r3, #32]
 8009448:	69bb      	ldr	r3, [r7, #24]
 800944a:	015a      	lsls	r2, r3, #5
 800944c:	69fb      	ldr	r3, [r7, #28]
 800944e:	4413      	add	r3, r2
 8009450:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009454:	691a      	ldr	r2, [r3, #16]
 8009456:	68bb      	ldr	r3, [r7, #8]
 8009458:	6a1b      	ldr	r3, [r3, #32]
 800945a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800945e:	69b9      	ldr	r1, [r7, #24]
 8009460:	0148      	lsls	r0, r1, #5
 8009462:	69f9      	ldr	r1, [r7, #28]
 8009464:	4401      	add	r1, r0
 8009466:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800946a:	4313      	orrs	r3, r2
 800946c:	610b      	str	r3, [r1, #16]
 800946e:	69bb      	ldr	r3, [r7, #24]
 8009470:	015a      	lsls	r2, r3, #5
 8009472:	69fb      	ldr	r3, [r7, #28]
 8009474:	4413      	add	r3, r2
 8009476:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800947a:	691b      	ldr	r3, [r3, #16]
 800947c:	69ba      	ldr	r2, [r7, #24]
 800947e:	0151      	lsls	r1, r2, #5
 8009480:	69fa      	ldr	r2, [r7, #28]
 8009482:	440a      	add	r2, r1
 8009484:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009488:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800948c:	6113      	str	r3, [r2, #16]
 800948e:	e061      	b.n	8009554 <USB_EPStartXfer+0x484>
 8009490:	1ff80000 	.word	0x1ff80000
 8009494:	68bb      	ldr	r3, [r7, #8]
 8009496:	691b      	ldr	r3, [r3, #16]
 8009498:	2b00      	cmp	r3, #0
 800949a:	d123      	bne.n	80094e4 <USB_EPStartXfer+0x414>
 800949c:	69bb      	ldr	r3, [r7, #24]
 800949e:	015a      	lsls	r2, r3, #5
 80094a0:	69fb      	ldr	r3, [r7, #28]
 80094a2:	4413      	add	r3, r2
 80094a4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80094a8:	691a      	ldr	r2, [r3, #16]
 80094aa:	68bb      	ldr	r3, [r7, #8]
 80094ac:	689b      	ldr	r3, [r3, #8]
 80094ae:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80094b2:	69b9      	ldr	r1, [r7, #24]
 80094b4:	0148      	lsls	r0, r1, #5
 80094b6:	69f9      	ldr	r1, [r7, #28]
 80094b8:	4401      	add	r1, r0
 80094ba:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 80094be:	4313      	orrs	r3, r2
 80094c0:	610b      	str	r3, [r1, #16]
 80094c2:	69bb      	ldr	r3, [r7, #24]
 80094c4:	015a      	lsls	r2, r3, #5
 80094c6:	69fb      	ldr	r3, [r7, #28]
 80094c8:	4413      	add	r3, r2
 80094ca:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80094ce:	691b      	ldr	r3, [r3, #16]
 80094d0:	69ba      	ldr	r2, [r7, #24]
 80094d2:	0151      	lsls	r1, r2, #5
 80094d4:	69fa      	ldr	r2, [r7, #28]
 80094d6:	440a      	add	r2, r1
 80094d8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80094dc:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80094e0:	6113      	str	r3, [r2, #16]
 80094e2:	e037      	b.n	8009554 <USB_EPStartXfer+0x484>
 80094e4:	68bb      	ldr	r3, [r7, #8]
 80094e6:	691a      	ldr	r2, [r3, #16]
 80094e8:	68bb      	ldr	r3, [r7, #8]
 80094ea:	689b      	ldr	r3, [r3, #8]
 80094ec:	4413      	add	r3, r2
 80094ee:	1e5a      	subs	r2, r3, #1
 80094f0:	68bb      	ldr	r3, [r7, #8]
 80094f2:	689b      	ldr	r3, [r3, #8]
 80094f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80094f8:	82fb      	strh	r3, [r7, #22]
 80094fa:	68bb      	ldr	r3, [r7, #8]
 80094fc:	689b      	ldr	r3, [r3, #8]
 80094fe:	8afa      	ldrh	r2, [r7, #22]
 8009500:	fb03 f202 	mul.w	r2, r3, r2
 8009504:	68bb      	ldr	r3, [r7, #8]
 8009506:	621a      	str	r2, [r3, #32]
 8009508:	69bb      	ldr	r3, [r7, #24]
 800950a:	015a      	lsls	r2, r3, #5
 800950c:	69fb      	ldr	r3, [r7, #28]
 800950e:	4413      	add	r3, r2
 8009510:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009514:	691a      	ldr	r2, [r3, #16]
 8009516:	8afb      	ldrh	r3, [r7, #22]
 8009518:	04d9      	lsls	r1, r3, #19
 800951a:	4b38      	ldr	r3, [pc, #224]	; (80095fc <USB_EPStartXfer+0x52c>)
 800951c:	400b      	ands	r3, r1
 800951e:	69b9      	ldr	r1, [r7, #24]
 8009520:	0148      	lsls	r0, r1, #5
 8009522:	69f9      	ldr	r1, [r7, #28]
 8009524:	4401      	add	r1, r0
 8009526:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800952a:	4313      	orrs	r3, r2
 800952c:	610b      	str	r3, [r1, #16]
 800952e:	69bb      	ldr	r3, [r7, #24]
 8009530:	015a      	lsls	r2, r3, #5
 8009532:	69fb      	ldr	r3, [r7, #28]
 8009534:	4413      	add	r3, r2
 8009536:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800953a:	691a      	ldr	r2, [r3, #16]
 800953c:	68bb      	ldr	r3, [r7, #8]
 800953e:	6a1b      	ldr	r3, [r3, #32]
 8009540:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8009544:	69b9      	ldr	r1, [r7, #24]
 8009546:	0148      	lsls	r0, r1, #5
 8009548:	69f9      	ldr	r1, [r7, #28]
 800954a:	4401      	add	r1, r0
 800954c:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8009550:	4313      	orrs	r3, r2
 8009552:	610b      	str	r3, [r1, #16]
 8009554:	79fb      	ldrb	r3, [r7, #7]
 8009556:	2b01      	cmp	r3, #1
 8009558:	d10d      	bne.n	8009576 <USB_EPStartXfer+0x4a6>
 800955a:	68bb      	ldr	r3, [r7, #8]
 800955c:	68db      	ldr	r3, [r3, #12]
 800955e:	2b00      	cmp	r3, #0
 8009560:	d009      	beq.n	8009576 <USB_EPStartXfer+0x4a6>
 8009562:	68bb      	ldr	r3, [r7, #8]
 8009564:	68d9      	ldr	r1, [r3, #12]
 8009566:	69bb      	ldr	r3, [r7, #24]
 8009568:	015a      	lsls	r2, r3, #5
 800956a:	69fb      	ldr	r3, [r7, #28]
 800956c:	4413      	add	r3, r2
 800956e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009572:	460a      	mov	r2, r1
 8009574:	615a      	str	r2, [r3, #20]
 8009576:	68bb      	ldr	r3, [r7, #8]
 8009578:	791b      	ldrb	r3, [r3, #4]
 800957a:	2b01      	cmp	r3, #1
 800957c:	d128      	bne.n	80095d0 <USB_EPStartXfer+0x500>
 800957e:	69fb      	ldr	r3, [r7, #28]
 8009580:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009584:	689b      	ldr	r3, [r3, #8]
 8009586:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800958a:	2b00      	cmp	r3, #0
 800958c:	d110      	bne.n	80095b0 <USB_EPStartXfer+0x4e0>
 800958e:	69bb      	ldr	r3, [r7, #24]
 8009590:	015a      	lsls	r2, r3, #5
 8009592:	69fb      	ldr	r3, [r7, #28]
 8009594:	4413      	add	r3, r2
 8009596:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800959a:	681b      	ldr	r3, [r3, #0]
 800959c:	69ba      	ldr	r2, [r7, #24]
 800959e:	0151      	lsls	r1, r2, #5
 80095a0:	69fa      	ldr	r2, [r7, #28]
 80095a2:	440a      	add	r2, r1
 80095a4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80095a8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80095ac:	6013      	str	r3, [r2, #0]
 80095ae:	e00f      	b.n	80095d0 <USB_EPStartXfer+0x500>
 80095b0:	69bb      	ldr	r3, [r7, #24]
 80095b2:	015a      	lsls	r2, r3, #5
 80095b4:	69fb      	ldr	r3, [r7, #28]
 80095b6:	4413      	add	r3, r2
 80095b8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80095bc:	681b      	ldr	r3, [r3, #0]
 80095be:	69ba      	ldr	r2, [r7, #24]
 80095c0:	0151      	lsls	r1, r2, #5
 80095c2:	69fa      	ldr	r2, [r7, #28]
 80095c4:	440a      	add	r2, r1
 80095c6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80095ca:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80095ce:	6013      	str	r3, [r2, #0]
 80095d0:	69bb      	ldr	r3, [r7, #24]
 80095d2:	015a      	lsls	r2, r3, #5
 80095d4:	69fb      	ldr	r3, [r7, #28]
 80095d6:	4413      	add	r3, r2
 80095d8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80095dc:	681b      	ldr	r3, [r3, #0]
 80095de:	69ba      	ldr	r2, [r7, #24]
 80095e0:	0151      	lsls	r1, r2, #5
 80095e2:	69fa      	ldr	r2, [r7, #28]
 80095e4:	440a      	add	r2, r1
 80095e6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80095ea:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80095ee:	6013      	str	r3, [r2, #0]
 80095f0:	2300      	movs	r3, #0
 80095f2:	4618      	mov	r0, r3
 80095f4:	3720      	adds	r7, #32
 80095f6:	46bd      	mov	sp, r7
 80095f8:	bd80      	pop	{r7, pc}
 80095fa:	bf00      	nop
 80095fc:	1ff80000 	.word	0x1ff80000

08009600 <USB_EPStopXfer>:
 8009600:	b480      	push	{r7}
 8009602:	b087      	sub	sp, #28
 8009604:	af00      	add	r7, sp, #0
 8009606:	6078      	str	r0, [r7, #4]
 8009608:	6039      	str	r1, [r7, #0]
 800960a:	2300      	movs	r3, #0
 800960c:	60fb      	str	r3, [r7, #12]
 800960e:	2300      	movs	r3, #0
 8009610:	75fb      	strb	r3, [r7, #23]
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	613b      	str	r3, [r7, #16]
 8009616:	683b      	ldr	r3, [r7, #0]
 8009618:	785b      	ldrb	r3, [r3, #1]
 800961a:	2b01      	cmp	r3, #1
 800961c:	d14a      	bne.n	80096b4 <USB_EPStopXfer+0xb4>
 800961e:	683b      	ldr	r3, [r7, #0]
 8009620:	781b      	ldrb	r3, [r3, #0]
 8009622:	015a      	lsls	r2, r3, #5
 8009624:	693b      	ldr	r3, [r7, #16]
 8009626:	4413      	add	r3, r2
 8009628:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800962c:	681b      	ldr	r3, [r3, #0]
 800962e:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8009632:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8009636:	f040 8086 	bne.w	8009746 <USB_EPStopXfer+0x146>
 800963a:	683b      	ldr	r3, [r7, #0]
 800963c:	781b      	ldrb	r3, [r3, #0]
 800963e:	015a      	lsls	r2, r3, #5
 8009640:	693b      	ldr	r3, [r7, #16]
 8009642:	4413      	add	r3, r2
 8009644:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009648:	681b      	ldr	r3, [r3, #0]
 800964a:	683a      	ldr	r2, [r7, #0]
 800964c:	7812      	ldrb	r2, [r2, #0]
 800964e:	0151      	lsls	r1, r2, #5
 8009650:	693a      	ldr	r2, [r7, #16]
 8009652:	440a      	add	r2, r1
 8009654:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009658:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800965c:	6013      	str	r3, [r2, #0]
 800965e:	683b      	ldr	r3, [r7, #0]
 8009660:	781b      	ldrb	r3, [r3, #0]
 8009662:	015a      	lsls	r2, r3, #5
 8009664:	693b      	ldr	r3, [r7, #16]
 8009666:	4413      	add	r3, r2
 8009668:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800966c:	681b      	ldr	r3, [r3, #0]
 800966e:	683a      	ldr	r2, [r7, #0]
 8009670:	7812      	ldrb	r2, [r2, #0]
 8009672:	0151      	lsls	r1, r2, #5
 8009674:	693a      	ldr	r2, [r7, #16]
 8009676:	440a      	add	r2, r1
 8009678:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800967c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8009680:	6013      	str	r3, [r2, #0]
 8009682:	68fb      	ldr	r3, [r7, #12]
 8009684:	3301      	adds	r3, #1
 8009686:	60fb      	str	r3, [r7, #12]
 8009688:	68fb      	ldr	r3, [r7, #12]
 800968a:	f242 7210 	movw	r2, #10000	; 0x2710
 800968e:	4293      	cmp	r3, r2
 8009690:	d902      	bls.n	8009698 <USB_EPStopXfer+0x98>
 8009692:	2301      	movs	r3, #1
 8009694:	75fb      	strb	r3, [r7, #23]
 8009696:	e056      	b.n	8009746 <USB_EPStopXfer+0x146>
 8009698:	683b      	ldr	r3, [r7, #0]
 800969a:	781b      	ldrb	r3, [r3, #0]
 800969c:	015a      	lsls	r2, r3, #5
 800969e:	693b      	ldr	r3, [r7, #16]
 80096a0:	4413      	add	r3, r2
 80096a2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80096a6:	681b      	ldr	r3, [r3, #0]
 80096a8:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80096ac:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80096b0:	d0e7      	beq.n	8009682 <USB_EPStopXfer+0x82>
 80096b2:	e048      	b.n	8009746 <USB_EPStopXfer+0x146>
 80096b4:	683b      	ldr	r3, [r7, #0]
 80096b6:	781b      	ldrb	r3, [r3, #0]
 80096b8:	015a      	lsls	r2, r3, #5
 80096ba:	693b      	ldr	r3, [r7, #16]
 80096bc:	4413      	add	r3, r2
 80096be:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80096c2:	681b      	ldr	r3, [r3, #0]
 80096c4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80096c8:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80096cc:	d13b      	bne.n	8009746 <USB_EPStopXfer+0x146>
 80096ce:	683b      	ldr	r3, [r7, #0]
 80096d0:	781b      	ldrb	r3, [r3, #0]
 80096d2:	015a      	lsls	r2, r3, #5
 80096d4:	693b      	ldr	r3, [r7, #16]
 80096d6:	4413      	add	r3, r2
 80096d8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80096dc:	681b      	ldr	r3, [r3, #0]
 80096de:	683a      	ldr	r2, [r7, #0]
 80096e0:	7812      	ldrb	r2, [r2, #0]
 80096e2:	0151      	lsls	r1, r2, #5
 80096e4:	693a      	ldr	r2, [r7, #16]
 80096e6:	440a      	add	r2, r1
 80096e8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80096ec:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80096f0:	6013      	str	r3, [r2, #0]
 80096f2:	683b      	ldr	r3, [r7, #0]
 80096f4:	781b      	ldrb	r3, [r3, #0]
 80096f6:	015a      	lsls	r2, r3, #5
 80096f8:	693b      	ldr	r3, [r7, #16]
 80096fa:	4413      	add	r3, r2
 80096fc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009700:	681b      	ldr	r3, [r3, #0]
 8009702:	683a      	ldr	r2, [r7, #0]
 8009704:	7812      	ldrb	r2, [r2, #0]
 8009706:	0151      	lsls	r1, r2, #5
 8009708:	693a      	ldr	r2, [r7, #16]
 800970a:	440a      	add	r2, r1
 800970c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009710:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8009714:	6013      	str	r3, [r2, #0]
 8009716:	68fb      	ldr	r3, [r7, #12]
 8009718:	3301      	adds	r3, #1
 800971a:	60fb      	str	r3, [r7, #12]
 800971c:	68fb      	ldr	r3, [r7, #12]
 800971e:	f242 7210 	movw	r2, #10000	; 0x2710
 8009722:	4293      	cmp	r3, r2
 8009724:	d902      	bls.n	800972c <USB_EPStopXfer+0x12c>
 8009726:	2301      	movs	r3, #1
 8009728:	75fb      	strb	r3, [r7, #23]
 800972a:	e00c      	b.n	8009746 <USB_EPStopXfer+0x146>
 800972c:	683b      	ldr	r3, [r7, #0]
 800972e:	781b      	ldrb	r3, [r3, #0]
 8009730:	015a      	lsls	r2, r3, #5
 8009732:	693b      	ldr	r3, [r7, #16]
 8009734:	4413      	add	r3, r2
 8009736:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800973a:	681b      	ldr	r3, [r3, #0]
 800973c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8009740:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8009744:	d0e7      	beq.n	8009716 <USB_EPStopXfer+0x116>
 8009746:	7dfb      	ldrb	r3, [r7, #23]
 8009748:	4618      	mov	r0, r3
 800974a:	371c      	adds	r7, #28
 800974c:	46bd      	mov	sp, r7
 800974e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009752:	4770      	bx	lr

08009754 <USB_WritePacket>:
 8009754:	b480      	push	{r7}
 8009756:	b089      	sub	sp, #36	; 0x24
 8009758:	af00      	add	r7, sp, #0
 800975a:	60f8      	str	r0, [r7, #12]
 800975c:	60b9      	str	r1, [r7, #8]
 800975e:	4611      	mov	r1, r2
 8009760:	461a      	mov	r2, r3
 8009762:	460b      	mov	r3, r1
 8009764:	71fb      	strb	r3, [r7, #7]
 8009766:	4613      	mov	r3, r2
 8009768:	80bb      	strh	r3, [r7, #4]
 800976a:	68fb      	ldr	r3, [r7, #12]
 800976c:	617b      	str	r3, [r7, #20]
 800976e:	68bb      	ldr	r3, [r7, #8]
 8009770:	61fb      	str	r3, [r7, #28]
 8009772:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009776:	2b00      	cmp	r3, #0
 8009778:	d123      	bne.n	80097c2 <USB_WritePacket+0x6e>
 800977a:	88bb      	ldrh	r3, [r7, #4]
 800977c:	3303      	adds	r3, #3
 800977e:	089b      	lsrs	r3, r3, #2
 8009780:	613b      	str	r3, [r7, #16]
 8009782:	2300      	movs	r3, #0
 8009784:	61bb      	str	r3, [r7, #24]
 8009786:	e018      	b.n	80097ba <USB_WritePacket+0x66>
 8009788:	79fb      	ldrb	r3, [r7, #7]
 800978a:	031a      	lsls	r2, r3, #12
 800978c:	697b      	ldr	r3, [r7, #20]
 800978e:	4413      	add	r3, r2
 8009790:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8009794:	461a      	mov	r2, r3
 8009796:	69fb      	ldr	r3, [r7, #28]
 8009798:	681b      	ldr	r3, [r3, #0]
 800979a:	6013      	str	r3, [r2, #0]
 800979c:	69fb      	ldr	r3, [r7, #28]
 800979e:	3301      	adds	r3, #1
 80097a0:	61fb      	str	r3, [r7, #28]
 80097a2:	69fb      	ldr	r3, [r7, #28]
 80097a4:	3301      	adds	r3, #1
 80097a6:	61fb      	str	r3, [r7, #28]
 80097a8:	69fb      	ldr	r3, [r7, #28]
 80097aa:	3301      	adds	r3, #1
 80097ac:	61fb      	str	r3, [r7, #28]
 80097ae:	69fb      	ldr	r3, [r7, #28]
 80097b0:	3301      	adds	r3, #1
 80097b2:	61fb      	str	r3, [r7, #28]
 80097b4:	69bb      	ldr	r3, [r7, #24]
 80097b6:	3301      	adds	r3, #1
 80097b8:	61bb      	str	r3, [r7, #24]
 80097ba:	69ba      	ldr	r2, [r7, #24]
 80097bc:	693b      	ldr	r3, [r7, #16]
 80097be:	429a      	cmp	r2, r3
 80097c0:	d3e2      	bcc.n	8009788 <USB_WritePacket+0x34>
 80097c2:	2300      	movs	r3, #0
 80097c4:	4618      	mov	r0, r3
 80097c6:	3724      	adds	r7, #36	; 0x24
 80097c8:	46bd      	mov	sp, r7
 80097ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ce:	4770      	bx	lr

080097d0 <USB_ReadPacket>:
 80097d0:	b480      	push	{r7}
 80097d2:	b08b      	sub	sp, #44	; 0x2c
 80097d4:	af00      	add	r7, sp, #0
 80097d6:	60f8      	str	r0, [r7, #12]
 80097d8:	60b9      	str	r1, [r7, #8]
 80097da:	4613      	mov	r3, r2
 80097dc:	80fb      	strh	r3, [r7, #6]
 80097de:	68fb      	ldr	r3, [r7, #12]
 80097e0:	61bb      	str	r3, [r7, #24]
 80097e2:	68bb      	ldr	r3, [r7, #8]
 80097e4:	627b      	str	r3, [r7, #36]	; 0x24
 80097e6:	88fb      	ldrh	r3, [r7, #6]
 80097e8:	089b      	lsrs	r3, r3, #2
 80097ea:	b29b      	uxth	r3, r3
 80097ec:	617b      	str	r3, [r7, #20]
 80097ee:	88fb      	ldrh	r3, [r7, #6]
 80097f0:	f003 0303 	and.w	r3, r3, #3
 80097f4:	83fb      	strh	r3, [r7, #30]
 80097f6:	2300      	movs	r3, #0
 80097f8:	623b      	str	r3, [r7, #32]
 80097fa:	e014      	b.n	8009826 <USB_ReadPacket+0x56>
 80097fc:	69bb      	ldr	r3, [r7, #24]
 80097fe:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8009802:	681a      	ldr	r2, [r3, #0]
 8009804:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009806:	601a      	str	r2, [r3, #0]
 8009808:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800980a:	3301      	adds	r3, #1
 800980c:	627b      	str	r3, [r7, #36]	; 0x24
 800980e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009810:	3301      	adds	r3, #1
 8009812:	627b      	str	r3, [r7, #36]	; 0x24
 8009814:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009816:	3301      	adds	r3, #1
 8009818:	627b      	str	r3, [r7, #36]	; 0x24
 800981a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800981c:	3301      	adds	r3, #1
 800981e:	627b      	str	r3, [r7, #36]	; 0x24
 8009820:	6a3b      	ldr	r3, [r7, #32]
 8009822:	3301      	adds	r3, #1
 8009824:	623b      	str	r3, [r7, #32]
 8009826:	6a3a      	ldr	r2, [r7, #32]
 8009828:	697b      	ldr	r3, [r7, #20]
 800982a:	429a      	cmp	r2, r3
 800982c:	d3e6      	bcc.n	80097fc <USB_ReadPacket+0x2c>
 800982e:	8bfb      	ldrh	r3, [r7, #30]
 8009830:	2b00      	cmp	r3, #0
 8009832:	d01e      	beq.n	8009872 <USB_ReadPacket+0xa2>
 8009834:	2300      	movs	r3, #0
 8009836:	623b      	str	r3, [r7, #32]
 8009838:	69bb      	ldr	r3, [r7, #24]
 800983a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800983e:	461a      	mov	r2, r3
 8009840:	f107 0310 	add.w	r3, r7, #16
 8009844:	6812      	ldr	r2, [r2, #0]
 8009846:	601a      	str	r2, [r3, #0]
 8009848:	693a      	ldr	r2, [r7, #16]
 800984a:	6a3b      	ldr	r3, [r7, #32]
 800984c:	b2db      	uxtb	r3, r3
 800984e:	00db      	lsls	r3, r3, #3
 8009850:	fa22 f303 	lsr.w	r3, r2, r3
 8009854:	b2da      	uxtb	r2, r3
 8009856:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009858:	701a      	strb	r2, [r3, #0]
 800985a:	6a3b      	ldr	r3, [r7, #32]
 800985c:	3301      	adds	r3, #1
 800985e:	623b      	str	r3, [r7, #32]
 8009860:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009862:	3301      	adds	r3, #1
 8009864:	627b      	str	r3, [r7, #36]	; 0x24
 8009866:	8bfb      	ldrh	r3, [r7, #30]
 8009868:	3b01      	subs	r3, #1
 800986a:	83fb      	strh	r3, [r7, #30]
 800986c:	8bfb      	ldrh	r3, [r7, #30]
 800986e:	2b00      	cmp	r3, #0
 8009870:	d1ea      	bne.n	8009848 <USB_ReadPacket+0x78>
 8009872:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009874:	4618      	mov	r0, r3
 8009876:	372c      	adds	r7, #44	; 0x2c
 8009878:	46bd      	mov	sp, r7
 800987a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800987e:	4770      	bx	lr

08009880 <USB_EPSetStall>:
 8009880:	b480      	push	{r7}
 8009882:	b085      	sub	sp, #20
 8009884:	af00      	add	r7, sp, #0
 8009886:	6078      	str	r0, [r7, #4]
 8009888:	6039      	str	r1, [r7, #0]
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	60fb      	str	r3, [r7, #12]
 800988e:	683b      	ldr	r3, [r7, #0]
 8009890:	781b      	ldrb	r3, [r3, #0]
 8009892:	60bb      	str	r3, [r7, #8]
 8009894:	683b      	ldr	r3, [r7, #0]
 8009896:	785b      	ldrb	r3, [r3, #1]
 8009898:	2b01      	cmp	r3, #1
 800989a:	d12c      	bne.n	80098f6 <USB_EPSetStall+0x76>
 800989c:	68bb      	ldr	r3, [r7, #8]
 800989e:	015a      	lsls	r2, r3, #5
 80098a0:	68fb      	ldr	r3, [r7, #12]
 80098a2:	4413      	add	r3, r2
 80098a4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80098a8:	681b      	ldr	r3, [r3, #0]
 80098aa:	2b00      	cmp	r3, #0
 80098ac:	db12      	blt.n	80098d4 <USB_EPSetStall+0x54>
 80098ae:	68bb      	ldr	r3, [r7, #8]
 80098b0:	2b00      	cmp	r3, #0
 80098b2:	d00f      	beq.n	80098d4 <USB_EPSetStall+0x54>
 80098b4:	68bb      	ldr	r3, [r7, #8]
 80098b6:	015a      	lsls	r2, r3, #5
 80098b8:	68fb      	ldr	r3, [r7, #12]
 80098ba:	4413      	add	r3, r2
 80098bc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	68ba      	ldr	r2, [r7, #8]
 80098c4:	0151      	lsls	r1, r2, #5
 80098c6:	68fa      	ldr	r2, [r7, #12]
 80098c8:	440a      	add	r2, r1
 80098ca:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80098ce:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80098d2:	6013      	str	r3, [r2, #0]
 80098d4:	68bb      	ldr	r3, [r7, #8]
 80098d6:	015a      	lsls	r2, r3, #5
 80098d8:	68fb      	ldr	r3, [r7, #12]
 80098da:	4413      	add	r3, r2
 80098dc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80098e0:	681b      	ldr	r3, [r3, #0]
 80098e2:	68ba      	ldr	r2, [r7, #8]
 80098e4:	0151      	lsls	r1, r2, #5
 80098e6:	68fa      	ldr	r2, [r7, #12]
 80098e8:	440a      	add	r2, r1
 80098ea:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80098ee:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80098f2:	6013      	str	r3, [r2, #0]
 80098f4:	e02b      	b.n	800994e <USB_EPSetStall+0xce>
 80098f6:	68bb      	ldr	r3, [r7, #8]
 80098f8:	015a      	lsls	r2, r3, #5
 80098fa:	68fb      	ldr	r3, [r7, #12]
 80098fc:	4413      	add	r3, r2
 80098fe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009902:	681b      	ldr	r3, [r3, #0]
 8009904:	2b00      	cmp	r3, #0
 8009906:	db12      	blt.n	800992e <USB_EPSetStall+0xae>
 8009908:	68bb      	ldr	r3, [r7, #8]
 800990a:	2b00      	cmp	r3, #0
 800990c:	d00f      	beq.n	800992e <USB_EPSetStall+0xae>
 800990e:	68bb      	ldr	r3, [r7, #8]
 8009910:	015a      	lsls	r2, r3, #5
 8009912:	68fb      	ldr	r3, [r7, #12]
 8009914:	4413      	add	r3, r2
 8009916:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800991a:	681b      	ldr	r3, [r3, #0]
 800991c:	68ba      	ldr	r2, [r7, #8]
 800991e:	0151      	lsls	r1, r2, #5
 8009920:	68fa      	ldr	r2, [r7, #12]
 8009922:	440a      	add	r2, r1
 8009924:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009928:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800992c:	6013      	str	r3, [r2, #0]
 800992e:	68bb      	ldr	r3, [r7, #8]
 8009930:	015a      	lsls	r2, r3, #5
 8009932:	68fb      	ldr	r3, [r7, #12]
 8009934:	4413      	add	r3, r2
 8009936:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800993a:	681b      	ldr	r3, [r3, #0]
 800993c:	68ba      	ldr	r2, [r7, #8]
 800993e:	0151      	lsls	r1, r2, #5
 8009940:	68fa      	ldr	r2, [r7, #12]
 8009942:	440a      	add	r2, r1
 8009944:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009948:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800994c:	6013      	str	r3, [r2, #0]
 800994e:	2300      	movs	r3, #0
 8009950:	4618      	mov	r0, r3
 8009952:	3714      	adds	r7, #20
 8009954:	46bd      	mov	sp, r7
 8009956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800995a:	4770      	bx	lr

0800995c <USB_EPClearStall>:
 800995c:	b480      	push	{r7}
 800995e:	b085      	sub	sp, #20
 8009960:	af00      	add	r7, sp, #0
 8009962:	6078      	str	r0, [r7, #4]
 8009964:	6039      	str	r1, [r7, #0]
 8009966:	687b      	ldr	r3, [r7, #4]
 8009968:	60fb      	str	r3, [r7, #12]
 800996a:	683b      	ldr	r3, [r7, #0]
 800996c:	781b      	ldrb	r3, [r3, #0]
 800996e:	60bb      	str	r3, [r7, #8]
 8009970:	683b      	ldr	r3, [r7, #0]
 8009972:	785b      	ldrb	r3, [r3, #1]
 8009974:	2b01      	cmp	r3, #1
 8009976:	d128      	bne.n	80099ca <USB_EPClearStall+0x6e>
 8009978:	68bb      	ldr	r3, [r7, #8]
 800997a:	015a      	lsls	r2, r3, #5
 800997c:	68fb      	ldr	r3, [r7, #12]
 800997e:	4413      	add	r3, r2
 8009980:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009984:	681b      	ldr	r3, [r3, #0]
 8009986:	68ba      	ldr	r2, [r7, #8]
 8009988:	0151      	lsls	r1, r2, #5
 800998a:	68fa      	ldr	r2, [r7, #12]
 800998c:	440a      	add	r2, r1
 800998e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009992:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8009996:	6013      	str	r3, [r2, #0]
 8009998:	683b      	ldr	r3, [r7, #0]
 800999a:	791b      	ldrb	r3, [r3, #4]
 800999c:	2b03      	cmp	r3, #3
 800999e:	d003      	beq.n	80099a8 <USB_EPClearStall+0x4c>
 80099a0:	683b      	ldr	r3, [r7, #0]
 80099a2:	791b      	ldrb	r3, [r3, #4]
 80099a4:	2b02      	cmp	r3, #2
 80099a6:	d138      	bne.n	8009a1a <USB_EPClearStall+0xbe>
 80099a8:	68bb      	ldr	r3, [r7, #8]
 80099aa:	015a      	lsls	r2, r3, #5
 80099ac:	68fb      	ldr	r3, [r7, #12]
 80099ae:	4413      	add	r3, r2
 80099b0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80099b4:	681b      	ldr	r3, [r3, #0]
 80099b6:	68ba      	ldr	r2, [r7, #8]
 80099b8:	0151      	lsls	r1, r2, #5
 80099ba:	68fa      	ldr	r2, [r7, #12]
 80099bc:	440a      	add	r2, r1
 80099be:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80099c2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80099c6:	6013      	str	r3, [r2, #0]
 80099c8:	e027      	b.n	8009a1a <USB_EPClearStall+0xbe>
 80099ca:	68bb      	ldr	r3, [r7, #8]
 80099cc:	015a      	lsls	r2, r3, #5
 80099ce:	68fb      	ldr	r3, [r7, #12]
 80099d0:	4413      	add	r3, r2
 80099d2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80099d6:	681b      	ldr	r3, [r3, #0]
 80099d8:	68ba      	ldr	r2, [r7, #8]
 80099da:	0151      	lsls	r1, r2, #5
 80099dc:	68fa      	ldr	r2, [r7, #12]
 80099de:	440a      	add	r2, r1
 80099e0:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80099e4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80099e8:	6013      	str	r3, [r2, #0]
 80099ea:	683b      	ldr	r3, [r7, #0]
 80099ec:	791b      	ldrb	r3, [r3, #4]
 80099ee:	2b03      	cmp	r3, #3
 80099f0:	d003      	beq.n	80099fa <USB_EPClearStall+0x9e>
 80099f2:	683b      	ldr	r3, [r7, #0]
 80099f4:	791b      	ldrb	r3, [r3, #4]
 80099f6:	2b02      	cmp	r3, #2
 80099f8:	d10f      	bne.n	8009a1a <USB_EPClearStall+0xbe>
 80099fa:	68bb      	ldr	r3, [r7, #8]
 80099fc:	015a      	lsls	r2, r3, #5
 80099fe:	68fb      	ldr	r3, [r7, #12]
 8009a00:	4413      	add	r3, r2
 8009a02:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009a06:	681b      	ldr	r3, [r3, #0]
 8009a08:	68ba      	ldr	r2, [r7, #8]
 8009a0a:	0151      	lsls	r1, r2, #5
 8009a0c:	68fa      	ldr	r2, [r7, #12]
 8009a0e:	440a      	add	r2, r1
 8009a10:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009a14:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009a18:	6013      	str	r3, [r2, #0]
 8009a1a:	2300      	movs	r3, #0
 8009a1c:	4618      	mov	r0, r3
 8009a1e:	3714      	adds	r7, #20
 8009a20:	46bd      	mov	sp, r7
 8009a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a26:	4770      	bx	lr

08009a28 <USB_SetDevAddress>:
 8009a28:	b480      	push	{r7}
 8009a2a:	b085      	sub	sp, #20
 8009a2c:	af00      	add	r7, sp, #0
 8009a2e:	6078      	str	r0, [r7, #4]
 8009a30:	460b      	mov	r3, r1
 8009a32:	70fb      	strb	r3, [r7, #3]
 8009a34:	687b      	ldr	r3, [r7, #4]
 8009a36:	60fb      	str	r3, [r7, #12]
 8009a38:	68fb      	ldr	r3, [r7, #12]
 8009a3a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009a3e:	681b      	ldr	r3, [r3, #0]
 8009a40:	68fa      	ldr	r2, [r7, #12]
 8009a42:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009a46:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8009a4a:	6013      	str	r3, [r2, #0]
 8009a4c:	68fb      	ldr	r3, [r7, #12]
 8009a4e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009a52:	681a      	ldr	r2, [r3, #0]
 8009a54:	78fb      	ldrb	r3, [r7, #3]
 8009a56:	011b      	lsls	r3, r3, #4
 8009a58:	f403 63fe 	and.w	r3, r3, #2032	; 0x7f0
 8009a5c:	68f9      	ldr	r1, [r7, #12]
 8009a5e:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8009a62:	4313      	orrs	r3, r2
 8009a64:	600b      	str	r3, [r1, #0]
 8009a66:	2300      	movs	r3, #0
 8009a68:	4618      	mov	r0, r3
 8009a6a:	3714      	adds	r7, #20
 8009a6c:	46bd      	mov	sp, r7
 8009a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a72:	4770      	bx	lr

08009a74 <USB_DevConnect>:
 8009a74:	b480      	push	{r7}
 8009a76:	b085      	sub	sp, #20
 8009a78:	af00      	add	r7, sp, #0
 8009a7a:	6078      	str	r0, [r7, #4]
 8009a7c:	687b      	ldr	r3, [r7, #4]
 8009a7e:	60fb      	str	r3, [r7, #12]
 8009a80:	68fb      	ldr	r3, [r7, #12]
 8009a82:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8009a86:	681b      	ldr	r3, [r3, #0]
 8009a88:	68fa      	ldr	r2, [r7, #12]
 8009a8a:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8009a8e:	f023 0303 	bic.w	r3, r3, #3
 8009a92:	6013      	str	r3, [r2, #0]
 8009a94:	68fb      	ldr	r3, [r7, #12]
 8009a96:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009a9a:	685b      	ldr	r3, [r3, #4]
 8009a9c:	68fa      	ldr	r2, [r7, #12]
 8009a9e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009aa2:	f023 0302 	bic.w	r3, r3, #2
 8009aa6:	6053      	str	r3, [r2, #4]
 8009aa8:	2300      	movs	r3, #0
 8009aaa:	4618      	mov	r0, r3
 8009aac:	3714      	adds	r7, #20
 8009aae:	46bd      	mov	sp, r7
 8009ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ab4:	4770      	bx	lr

08009ab6 <USB_DevDisconnect>:
 8009ab6:	b480      	push	{r7}
 8009ab8:	b085      	sub	sp, #20
 8009aba:	af00      	add	r7, sp, #0
 8009abc:	6078      	str	r0, [r7, #4]
 8009abe:	687b      	ldr	r3, [r7, #4]
 8009ac0:	60fb      	str	r3, [r7, #12]
 8009ac2:	68fb      	ldr	r3, [r7, #12]
 8009ac4:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8009ac8:	681b      	ldr	r3, [r3, #0]
 8009aca:	68fa      	ldr	r2, [r7, #12]
 8009acc:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8009ad0:	f023 0303 	bic.w	r3, r3, #3
 8009ad4:	6013      	str	r3, [r2, #0]
 8009ad6:	68fb      	ldr	r3, [r7, #12]
 8009ad8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009adc:	685b      	ldr	r3, [r3, #4]
 8009ade:	68fa      	ldr	r2, [r7, #12]
 8009ae0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009ae4:	f043 0302 	orr.w	r3, r3, #2
 8009ae8:	6053      	str	r3, [r2, #4]
 8009aea:	2300      	movs	r3, #0
 8009aec:	4618      	mov	r0, r3
 8009aee:	3714      	adds	r7, #20
 8009af0:	46bd      	mov	sp, r7
 8009af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af6:	4770      	bx	lr

08009af8 <USB_ReadInterrupts>:
 8009af8:	b480      	push	{r7}
 8009afa:	b085      	sub	sp, #20
 8009afc:	af00      	add	r7, sp, #0
 8009afe:	6078      	str	r0, [r7, #4]
 8009b00:	687b      	ldr	r3, [r7, #4]
 8009b02:	695b      	ldr	r3, [r3, #20]
 8009b04:	60fb      	str	r3, [r7, #12]
 8009b06:	687b      	ldr	r3, [r7, #4]
 8009b08:	699b      	ldr	r3, [r3, #24]
 8009b0a:	68fa      	ldr	r2, [r7, #12]
 8009b0c:	4013      	ands	r3, r2
 8009b0e:	60fb      	str	r3, [r7, #12]
 8009b10:	68fb      	ldr	r3, [r7, #12]
 8009b12:	4618      	mov	r0, r3
 8009b14:	3714      	adds	r7, #20
 8009b16:	46bd      	mov	sp, r7
 8009b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b1c:	4770      	bx	lr

08009b1e <USB_ReadDevAllOutEpInterrupt>:
 8009b1e:	b480      	push	{r7}
 8009b20:	b085      	sub	sp, #20
 8009b22:	af00      	add	r7, sp, #0
 8009b24:	6078      	str	r0, [r7, #4]
 8009b26:	687b      	ldr	r3, [r7, #4]
 8009b28:	60fb      	str	r3, [r7, #12]
 8009b2a:	68fb      	ldr	r3, [r7, #12]
 8009b2c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009b30:	699b      	ldr	r3, [r3, #24]
 8009b32:	60bb      	str	r3, [r7, #8]
 8009b34:	68fb      	ldr	r3, [r7, #12]
 8009b36:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009b3a:	69db      	ldr	r3, [r3, #28]
 8009b3c:	68ba      	ldr	r2, [r7, #8]
 8009b3e:	4013      	ands	r3, r2
 8009b40:	60bb      	str	r3, [r7, #8]
 8009b42:	68bb      	ldr	r3, [r7, #8]
 8009b44:	0c1b      	lsrs	r3, r3, #16
 8009b46:	4618      	mov	r0, r3
 8009b48:	3714      	adds	r7, #20
 8009b4a:	46bd      	mov	sp, r7
 8009b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b50:	4770      	bx	lr

08009b52 <USB_ReadDevAllInEpInterrupt>:
 8009b52:	b480      	push	{r7}
 8009b54:	b085      	sub	sp, #20
 8009b56:	af00      	add	r7, sp, #0
 8009b58:	6078      	str	r0, [r7, #4]
 8009b5a:	687b      	ldr	r3, [r7, #4]
 8009b5c:	60fb      	str	r3, [r7, #12]
 8009b5e:	68fb      	ldr	r3, [r7, #12]
 8009b60:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009b64:	699b      	ldr	r3, [r3, #24]
 8009b66:	60bb      	str	r3, [r7, #8]
 8009b68:	68fb      	ldr	r3, [r7, #12]
 8009b6a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009b6e:	69db      	ldr	r3, [r3, #28]
 8009b70:	68ba      	ldr	r2, [r7, #8]
 8009b72:	4013      	ands	r3, r2
 8009b74:	60bb      	str	r3, [r7, #8]
 8009b76:	68bb      	ldr	r3, [r7, #8]
 8009b78:	b29b      	uxth	r3, r3
 8009b7a:	4618      	mov	r0, r3
 8009b7c:	3714      	adds	r7, #20
 8009b7e:	46bd      	mov	sp, r7
 8009b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b84:	4770      	bx	lr

08009b86 <USB_ReadDevOutEPInterrupt>:
 8009b86:	b480      	push	{r7}
 8009b88:	b085      	sub	sp, #20
 8009b8a:	af00      	add	r7, sp, #0
 8009b8c:	6078      	str	r0, [r7, #4]
 8009b8e:	460b      	mov	r3, r1
 8009b90:	70fb      	strb	r3, [r7, #3]
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	60fb      	str	r3, [r7, #12]
 8009b96:	78fb      	ldrb	r3, [r7, #3]
 8009b98:	015a      	lsls	r2, r3, #5
 8009b9a:	68fb      	ldr	r3, [r7, #12]
 8009b9c:	4413      	add	r3, r2
 8009b9e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009ba2:	689b      	ldr	r3, [r3, #8]
 8009ba4:	60bb      	str	r3, [r7, #8]
 8009ba6:	68fb      	ldr	r3, [r7, #12]
 8009ba8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009bac:	695b      	ldr	r3, [r3, #20]
 8009bae:	68ba      	ldr	r2, [r7, #8]
 8009bb0:	4013      	ands	r3, r2
 8009bb2:	60bb      	str	r3, [r7, #8]
 8009bb4:	68bb      	ldr	r3, [r7, #8]
 8009bb6:	4618      	mov	r0, r3
 8009bb8:	3714      	adds	r7, #20
 8009bba:	46bd      	mov	sp, r7
 8009bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bc0:	4770      	bx	lr

08009bc2 <USB_ReadDevInEPInterrupt>:
 8009bc2:	b480      	push	{r7}
 8009bc4:	b087      	sub	sp, #28
 8009bc6:	af00      	add	r7, sp, #0
 8009bc8:	6078      	str	r0, [r7, #4]
 8009bca:	460b      	mov	r3, r1
 8009bcc:	70fb      	strb	r3, [r7, #3]
 8009bce:	687b      	ldr	r3, [r7, #4]
 8009bd0:	617b      	str	r3, [r7, #20]
 8009bd2:	697b      	ldr	r3, [r7, #20]
 8009bd4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009bd8:	691b      	ldr	r3, [r3, #16]
 8009bda:	613b      	str	r3, [r7, #16]
 8009bdc:	697b      	ldr	r3, [r7, #20]
 8009bde:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009be2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009be4:	60fb      	str	r3, [r7, #12]
 8009be6:	78fb      	ldrb	r3, [r7, #3]
 8009be8:	f003 030f 	and.w	r3, r3, #15
 8009bec:	68fa      	ldr	r2, [r7, #12]
 8009bee:	fa22 f303 	lsr.w	r3, r2, r3
 8009bf2:	01db      	lsls	r3, r3, #7
 8009bf4:	b2db      	uxtb	r3, r3
 8009bf6:	693a      	ldr	r2, [r7, #16]
 8009bf8:	4313      	orrs	r3, r2
 8009bfa:	613b      	str	r3, [r7, #16]
 8009bfc:	78fb      	ldrb	r3, [r7, #3]
 8009bfe:	015a      	lsls	r2, r3, #5
 8009c00:	697b      	ldr	r3, [r7, #20]
 8009c02:	4413      	add	r3, r2
 8009c04:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009c08:	689b      	ldr	r3, [r3, #8]
 8009c0a:	693a      	ldr	r2, [r7, #16]
 8009c0c:	4013      	ands	r3, r2
 8009c0e:	60bb      	str	r3, [r7, #8]
 8009c10:	68bb      	ldr	r3, [r7, #8]
 8009c12:	4618      	mov	r0, r3
 8009c14:	371c      	adds	r7, #28
 8009c16:	46bd      	mov	sp, r7
 8009c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c1c:	4770      	bx	lr

08009c1e <USB_GetMode>:
 8009c1e:	b480      	push	{r7}
 8009c20:	b083      	sub	sp, #12
 8009c22:	af00      	add	r7, sp, #0
 8009c24:	6078      	str	r0, [r7, #4]
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	695b      	ldr	r3, [r3, #20]
 8009c2a:	f003 0301 	and.w	r3, r3, #1
 8009c2e:	4618      	mov	r0, r3
 8009c30:	370c      	adds	r7, #12
 8009c32:	46bd      	mov	sp, r7
 8009c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c38:	4770      	bx	lr

08009c3a <USB_ActivateSetup>:
 8009c3a:	b480      	push	{r7}
 8009c3c:	b085      	sub	sp, #20
 8009c3e:	af00      	add	r7, sp, #0
 8009c40:	6078      	str	r0, [r7, #4]
 8009c42:	687b      	ldr	r3, [r7, #4]
 8009c44:	60fb      	str	r3, [r7, #12]
 8009c46:	68fb      	ldr	r3, [r7, #12]
 8009c48:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009c4c:	681b      	ldr	r3, [r3, #0]
 8009c4e:	68fa      	ldr	r2, [r7, #12]
 8009c50:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009c54:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8009c58:	f023 0307 	bic.w	r3, r3, #7
 8009c5c:	6013      	str	r3, [r2, #0]
 8009c5e:	68fb      	ldr	r3, [r7, #12]
 8009c60:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009c64:	685b      	ldr	r3, [r3, #4]
 8009c66:	68fa      	ldr	r2, [r7, #12]
 8009c68:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009c6c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009c70:	6053      	str	r3, [r2, #4]
 8009c72:	2300      	movs	r3, #0
 8009c74:	4618      	mov	r0, r3
 8009c76:	3714      	adds	r7, #20
 8009c78:	46bd      	mov	sp, r7
 8009c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c7e:	4770      	bx	lr

08009c80 <USB_EP0_OutStart>:
 8009c80:	b480      	push	{r7}
 8009c82:	b087      	sub	sp, #28
 8009c84:	af00      	add	r7, sp, #0
 8009c86:	60f8      	str	r0, [r7, #12]
 8009c88:	460b      	mov	r3, r1
 8009c8a:	607a      	str	r2, [r7, #4]
 8009c8c:	72fb      	strb	r3, [r7, #11]
 8009c8e:	68fb      	ldr	r3, [r7, #12]
 8009c90:	617b      	str	r3, [r7, #20]
 8009c92:	68fb      	ldr	r3, [r7, #12]
 8009c94:	333c      	adds	r3, #60	; 0x3c
 8009c96:	3304      	adds	r3, #4
 8009c98:	681b      	ldr	r3, [r3, #0]
 8009c9a:	613b      	str	r3, [r7, #16]
 8009c9c:	693b      	ldr	r3, [r7, #16]
 8009c9e:	4a26      	ldr	r2, [pc, #152]	; (8009d38 <USB_EP0_OutStart+0xb8>)
 8009ca0:	4293      	cmp	r3, r2
 8009ca2:	d90a      	bls.n	8009cba <USB_EP0_OutStart+0x3a>
 8009ca4:	697b      	ldr	r3, [r7, #20]
 8009ca6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009caa:	681b      	ldr	r3, [r3, #0]
 8009cac:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8009cb0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8009cb4:	d101      	bne.n	8009cba <USB_EP0_OutStart+0x3a>
 8009cb6:	2300      	movs	r3, #0
 8009cb8:	e037      	b.n	8009d2a <USB_EP0_OutStart+0xaa>
 8009cba:	697b      	ldr	r3, [r7, #20]
 8009cbc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009cc0:	461a      	mov	r2, r3
 8009cc2:	2300      	movs	r3, #0
 8009cc4:	6113      	str	r3, [r2, #16]
 8009cc6:	697b      	ldr	r3, [r7, #20]
 8009cc8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009ccc:	691b      	ldr	r3, [r3, #16]
 8009cce:	697a      	ldr	r2, [r7, #20]
 8009cd0:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009cd4:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8009cd8:	6113      	str	r3, [r2, #16]
 8009cda:	697b      	ldr	r3, [r7, #20]
 8009cdc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009ce0:	691b      	ldr	r3, [r3, #16]
 8009ce2:	697a      	ldr	r2, [r7, #20]
 8009ce4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009ce8:	f043 0318 	orr.w	r3, r3, #24
 8009cec:	6113      	str	r3, [r2, #16]
 8009cee:	697b      	ldr	r3, [r7, #20]
 8009cf0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009cf4:	691b      	ldr	r3, [r3, #16]
 8009cf6:	697a      	ldr	r2, [r7, #20]
 8009cf8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009cfc:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 8009d00:	6113      	str	r3, [r2, #16]
 8009d02:	7afb      	ldrb	r3, [r7, #11]
 8009d04:	2b01      	cmp	r3, #1
 8009d06:	d10f      	bne.n	8009d28 <USB_EP0_OutStart+0xa8>
 8009d08:	697b      	ldr	r3, [r7, #20]
 8009d0a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009d0e:	461a      	mov	r2, r3
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	6153      	str	r3, [r2, #20]
 8009d14:	697b      	ldr	r3, [r7, #20]
 8009d16:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009d1a:	681b      	ldr	r3, [r3, #0]
 8009d1c:	697a      	ldr	r2, [r7, #20]
 8009d1e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009d22:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 8009d26:	6013      	str	r3, [r2, #0]
 8009d28:	2300      	movs	r3, #0
 8009d2a:	4618      	mov	r0, r3
 8009d2c:	371c      	adds	r7, #28
 8009d2e:	46bd      	mov	sp, r7
 8009d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d34:	4770      	bx	lr
 8009d36:	bf00      	nop
 8009d38:	4f54300a 	.word	0x4f54300a

08009d3c <USB_CoreReset>:
 8009d3c:	b480      	push	{r7}
 8009d3e:	b085      	sub	sp, #20
 8009d40:	af00      	add	r7, sp, #0
 8009d42:	6078      	str	r0, [r7, #4]
 8009d44:	2300      	movs	r3, #0
 8009d46:	60fb      	str	r3, [r7, #12]
 8009d48:	68fb      	ldr	r3, [r7, #12]
 8009d4a:	3301      	adds	r3, #1
 8009d4c:	60fb      	str	r3, [r7, #12]
 8009d4e:	68fb      	ldr	r3, [r7, #12]
 8009d50:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8009d54:	d901      	bls.n	8009d5a <USB_CoreReset+0x1e>
 8009d56:	2303      	movs	r3, #3
 8009d58:	e01b      	b.n	8009d92 <USB_CoreReset+0x56>
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	691b      	ldr	r3, [r3, #16]
 8009d5e:	2b00      	cmp	r3, #0
 8009d60:	daf2      	bge.n	8009d48 <USB_CoreReset+0xc>
 8009d62:	2300      	movs	r3, #0
 8009d64:	60fb      	str	r3, [r7, #12]
 8009d66:	687b      	ldr	r3, [r7, #4]
 8009d68:	691b      	ldr	r3, [r3, #16]
 8009d6a:	f043 0201 	orr.w	r2, r3, #1
 8009d6e:	687b      	ldr	r3, [r7, #4]
 8009d70:	611a      	str	r2, [r3, #16]
 8009d72:	68fb      	ldr	r3, [r7, #12]
 8009d74:	3301      	adds	r3, #1
 8009d76:	60fb      	str	r3, [r7, #12]
 8009d78:	68fb      	ldr	r3, [r7, #12]
 8009d7a:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8009d7e:	d901      	bls.n	8009d84 <USB_CoreReset+0x48>
 8009d80:	2303      	movs	r3, #3
 8009d82:	e006      	b.n	8009d92 <USB_CoreReset+0x56>
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	691b      	ldr	r3, [r3, #16]
 8009d88:	f003 0301 	and.w	r3, r3, #1
 8009d8c:	2b01      	cmp	r3, #1
 8009d8e:	d0f0      	beq.n	8009d72 <USB_CoreReset+0x36>
 8009d90:	2300      	movs	r3, #0
 8009d92:	4618      	mov	r0, r3
 8009d94:	3714      	adds	r7, #20
 8009d96:	46bd      	mov	sp, r7
 8009d98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d9c:	4770      	bx	lr
	...

08009da0 <USBD_CDC_Init>:
 8009da0:	b580      	push	{r7, lr}
 8009da2:	b084      	sub	sp, #16
 8009da4:	af00      	add	r7, sp, #0
 8009da6:	6078      	str	r0, [r7, #4]
 8009da8:	460b      	mov	r3, r1
 8009daa:	70fb      	strb	r3, [r7, #3]
 8009dac:	f44f 7007 	mov.w	r0, #540	; 0x21c
 8009db0:	f002 fc9a 	bl	800c6e8 <USBD_static_malloc>
 8009db4:	60f8      	str	r0, [r7, #12]
 8009db6:	68fb      	ldr	r3, [r7, #12]
 8009db8:	2b00      	cmp	r3, #0
 8009dba:	d109      	bne.n	8009dd0 <USBD_CDC_Init+0x30>
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009dc2:	687b      	ldr	r3, [r7, #4]
 8009dc4:	32b0      	adds	r2, #176	; 0xb0
 8009dc6:	2100      	movs	r1, #0
 8009dc8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8009dcc:	2302      	movs	r3, #2
 8009dce:	e0d4      	b.n	8009f7a <USBD_CDC_Init+0x1da>
 8009dd0:	f44f 7207 	mov.w	r2, #540	; 0x21c
 8009dd4:	2100      	movs	r1, #0
 8009dd6:	68f8      	ldr	r0, [r7, #12]
 8009dd8:	f002 ff46 	bl	800cc68 <memset>
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009de2:	687b      	ldr	r3, [r7, #4]
 8009de4:	32b0      	adds	r2, #176	; 0xb0
 8009de6:	68f9      	ldr	r1, [r7, #12]
 8009de8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009df2:	687b      	ldr	r3, [r7, #4]
 8009df4:	32b0      	adds	r2, #176	; 0xb0
 8009df6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	7c1b      	ldrb	r3, [r3, #16]
 8009e04:	2b00      	cmp	r3, #0
 8009e06:	d138      	bne.n	8009e7a <USBD_CDC_Init+0xda>
 8009e08:	4b5e      	ldr	r3, [pc, #376]	; (8009f84 <USBD_CDC_Init+0x1e4>)
 8009e0a:	7819      	ldrb	r1, [r3, #0]
 8009e0c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009e10:	2202      	movs	r2, #2
 8009e12:	6878      	ldr	r0, [r7, #4]
 8009e14:	f002 fb45 	bl	800c4a2 <USBD_LL_OpenEP>
 8009e18:	4b5a      	ldr	r3, [pc, #360]	; (8009f84 <USBD_CDC_Init+0x1e4>)
 8009e1a:	781b      	ldrb	r3, [r3, #0]
 8009e1c:	f003 020f 	and.w	r2, r3, #15
 8009e20:	6879      	ldr	r1, [r7, #4]
 8009e22:	4613      	mov	r3, r2
 8009e24:	009b      	lsls	r3, r3, #2
 8009e26:	4413      	add	r3, r2
 8009e28:	009b      	lsls	r3, r3, #2
 8009e2a:	440b      	add	r3, r1
 8009e2c:	3324      	adds	r3, #36	; 0x24
 8009e2e:	2201      	movs	r2, #1
 8009e30:	801a      	strh	r2, [r3, #0]
 8009e32:	4b55      	ldr	r3, [pc, #340]	; (8009f88 <USBD_CDC_Init+0x1e8>)
 8009e34:	7819      	ldrb	r1, [r3, #0]
 8009e36:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009e3a:	2202      	movs	r2, #2
 8009e3c:	6878      	ldr	r0, [r7, #4]
 8009e3e:	f002 fb30 	bl	800c4a2 <USBD_LL_OpenEP>
 8009e42:	4b51      	ldr	r3, [pc, #324]	; (8009f88 <USBD_CDC_Init+0x1e8>)
 8009e44:	781b      	ldrb	r3, [r3, #0]
 8009e46:	f003 020f 	and.w	r2, r3, #15
 8009e4a:	6879      	ldr	r1, [r7, #4]
 8009e4c:	4613      	mov	r3, r2
 8009e4e:	009b      	lsls	r3, r3, #2
 8009e50:	4413      	add	r3, r2
 8009e52:	009b      	lsls	r3, r3, #2
 8009e54:	440b      	add	r3, r1
 8009e56:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8009e5a:	2201      	movs	r2, #1
 8009e5c:	801a      	strh	r2, [r3, #0]
 8009e5e:	4b4b      	ldr	r3, [pc, #300]	; (8009f8c <USBD_CDC_Init+0x1ec>)
 8009e60:	781b      	ldrb	r3, [r3, #0]
 8009e62:	f003 020f 	and.w	r2, r3, #15
 8009e66:	6879      	ldr	r1, [r7, #4]
 8009e68:	4613      	mov	r3, r2
 8009e6a:	009b      	lsls	r3, r3, #2
 8009e6c:	4413      	add	r3, r2
 8009e6e:	009b      	lsls	r3, r3, #2
 8009e70:	440b      	add	r3, r1
 8009e72:	3326      	adds	r3, #38	; 0x26
 8009e74:	2210      	movs	r2, #16
 8009e76:	801a      	strh	r2, [r3, #0]
 8009e78:	e035      	b.n	8009ee6 <USBD_CDC_Init+0x146>
 8009e7a:	4b42      	ldr	r3, [pc, #264]	; (8009f84 <USBD_CDC_Init+0x1e4>)
 8009e7c:	7819      	ldrb	r1, [r3, #0]
 8009e7e:	2340      	movs	r3, #64	; 0x40
 8009e80:	2202      	movs	r2, #2
 8009e82:	6878      	ldr	r0, [r7, #4]
 8009e84:	f002 fb0d 	bl	800c4a2 <USBD_LL_OpenEP>
 8009e88:	4b3e      	ldr	r3, [pc, #248]	; (8009f84 <USBD_CDC_Init+0x1e4>)
 8009e8a:	781b      	ldrb	r3, [r3, #0]
 8009e8c:	f003 020f 	and.w	r2, r3, #15
 8009e90:	6879      	ldr	r1, [r7, #4]
 8009e92:	4613      	mov	r3, r2
 8009e94:	009b      	lsls	r3, r3, #2
 8009e96:	4413      	add	r3, r2
 8009e98:	009b      	lsls	r3, r3, #2
 8009e9a:	440b      	add	r3, r1
 8009e9c:	3324      	adds	r3, #36	; 0x24
 8009e9e:	2201      	movs	r2, #1
 8009ea0:	801a      	strh	r2, [r3, #0]
 8009ea2:	4b39      	ldr	r3, [pc, #228]	; (8009f88 <USBD_CDC_Init+0x1e8>)
 8009ea4:	7819      	ldrb	r1, [r3, #0]
 8009ea6:	2340      	movs	r3, #64	; 0x40
 8009ea8:	2202      	movs	r2, #2
 8009eaa:	6878      	ldr	r0, [r7, #4]
 8009eac:	f002 faf9 	bl	800c4a2 <USBD_LL_OpenEP>
 8009eb0:	4b35      	ldr	r3, [pc, #212]	; (8009f88 <USBD_CDC_Init+0x1e8>)
 8009eb2:	781b      	ldrb	r3, [r3, #0]
 8009eb4:	f003 020f 	and.w	r2, r3, #15
 8009eb8:	6879      	ldr	r1, [r7, #4]
 8009eba:	4613      	mov	r3, r2
 8009ebc:	009b      	lsls	r3, r3, #2
 8009ebe:	4413      	add	r3, r2
 8009ec0:	009b      	lsls	r3, r3, #2
 8009ec2:	440b      	add	r3, r1
 8009ec4:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8009ec8:	2201      	movs	r2, #1
 8009eca:	801a      	strh	r2, [r3, #0]
 8009ecc:	4b2f      	ldr	r3, [pc, #188]	; (8009f8c <USBD_CDC_Init+0x1ec>)
 8009ece:	781b      	ldrb	r3, [r3, #0]
 8009ed0:	f003 020f 	and.w	r2, r3, #15
 8009ed4:	6879      	ldr	r1, [r7, #4]
 8009ed6:	4613      	mov	r3, r2
 8009ed8:	009b      	lsls	r3, r3, #2
 8009eda:	4413      	add	r3, r2
 8009edc:	009b      	lsls	r3, r3, #2
 8009ede:	440b      	add	r3, r1
 8009ee0:	3326      	adds	r3, #38	; 0x26
 8009ee2:	2210      	movs	r2, #16
 8009ee4:	801a      	strh	r2, [r3, #0]
 8009ee6:	4b29      	ldr	r3, [pc, #164]	; (8009f8c <USBD_CDC_Init+0x1ec>)
 8009ee8:	7819      	ldrb	r1, [r3, #0]
 8009eea:	2308      	movs	r3, #8
 8009eec:	2203      	movs	r2, #3
 8009eee:	6878      	ldr	r0, [r7, #4]
 8009ef0:	f002 fad7 	bl	800c4a2 <USBD_LL_OpenEP>
 8009ef4:	4b25      	ldr	r3, [pc, #148]	; (8009f8c <USBD_CDC_Init+0x1ec>)
 8009ef6:	781b      	ldrb	r3, [r3, #0]
 8009ef8:	f003 020f 	and.w	r2, r3, #15
 8009efc:	6879      	ldr	r1, [r7, #4]
 8009efe:	4613      	mov	r3, r2
 8009f00:	009b      	lsls	r3, r3, #2
 8009f02:	4413      	add	r3, r2
 8009f04:	009b      	lsls	r3, r3, #2
 8009f06:	440b      	add	r3, r1
 8009f08:	3324      	adds	r3, #36	; 0x24
 8009f0a:	2201      	movs	r2, #1
 8009f0c:	801a      	strh	r2, [r3, #0]
 8009f0e:	68fb      	ldr	r3, [r7, #12]
 8009f10:	2200      	movs	r2, #0
 8009f12:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009f16:	687b      	ldr	r3, [r7, #4]
 8009f18:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8009f1c:	687a      	ldr	r2, [r7, #4]
 8009f1e:	33b0      	adds	r3, #176	; 0xb0
 8009f20:	009b      	lsls	r3, r3, #2
 8009f22:	4413      	add	r3, r2
 8009f24:	685b      	ldr	r3, [r3, #4]
 8009f26:	681b      	ldr	r3, [r3, #0]
 8009f28:	4798      	blx	r3
 8009f2a:	68fb      	ldr	r3, [r7, #12]
 8009f2c:	2200      	movs	r2, #0
 8009f2e:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8009f32:	68fb      	ldr	r3, [r7, #12]
 8009f34:	2200      	movs	r2, #0
 8009f36:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
 8009f3a:	68fb      	ldr	r3, [r7, #12]
 8009f3c:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 8009f40:	2b00      	cmp	r3, #0
 8009f42:	d101      	bne.n	8009f48 <USBD_CDC_Init+0x1a8>
 8009f44:	2302      	movs	r3, #2
 8009f46:	e018      	b.n	8009f7a <USBD_CDC_Init+0x1da>
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	7c1b      	ldrb	r3, [r3, #16]
 8009f4c:	2b00      	cmp	r3, #0
 8009f4e:	d10a      	bne.n	8009f66 <USBD_CDC_Init+0x1c6>
 8009f50:	4b0d      	ldr	r3, [pc, #52]	; (8009f88 <USBD_CDC_Init+0x1e8>)
 8009f52:	7819      	ldrb	r1, [r3, #0]
 8009f54:	68fb      	ldr	r3, [r7, #12]
 8009f56:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009f5a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009f5e:	6878      	ldr	r0, [r7, #4]
 8009f60:	f002 fb8e 	bl	800c680 <USBD_LL_PrepareReceive>
 8009f64:	e008      	b.n	8009f78 <USBD_CDC_Init+0x1d8>
 8009f66:	4b08      	ldr	r3, [pc, #32]	; (8009f88 <USBD_CDC_Init+0x1e8>)
 8009f68:	7819      	ldrb	r1, [r3, #0]
 8009f6a:	68fb      	ldr	r3, [r7, #12]
 8009f6c:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009f70:	2340      	movs	r3, #64	; 0x40
 8009f72:	6878      	ldr	r0, [r7, #4]
 8009f74:	f002 fb84 	bl	800c680 <USBD_LL_PrepareReceive>
 8009f78:	2300      	movs	r3, #0
 8009f7a:	4618      	mov	r0, r3
 8009f7c:	3710      	adds	r7, #16
 8009f7e:	46bd      	mov	sp, r7
 8009f80:	bd80      	pop	{r7, pc}
 8009f82:	bf00      	nop
 8009f84:	200000a7 	.word	0x200000a7
 8009f88:	200000a8 	.word	0x200000a8
 8009f8c:	200000a9 	.word	0x200000a9

08009f90 <USBD_CDC_DeInit>:
 8009f90:	b580      	push	{r7, lr}
 8009f92:	b082      	sub	sp, #8
 8009f94:	af00      	add	r7, sp, #0
 8009f96:	6078      	str	r0, [r7, #4]
 8009f98:	460b      	mov	r3, r1
 8009f9a:	70fb      	strb	r3, [r7, #3]
 8009f9c:	4b3a      	ldr	r3, [pc, #232]	; (800a088 <USBD_CDC_DeInit+0xf8>)
 8009f9e:	781b      	ldrb	r3, [r3, #0]
 8009fa0:	4619      	mov	r1, r3
 8009fa2:	6878      	ldr	r0, [r7, #4]
 8009fa4:	f002 faa3 	bl	800c4ee <USBD_LL_CloseEP>
 8009fa8:	4b37      	ldr	r3, [pc, #220]	; (800a088 <USBD_CDC_DeInit+0xf8>)
 8009faa:	781b      	ldrb	r3, [r3, #0]
 8009fac:	f003 020f 	and.w	r2, r3, #15
 8009fb0:	6879      	ldr	r1, [r7, #4]
 8009fb2:	4613      	mov	r3, r2
 8009fb4:	009b      	lsls	r3, r3, #2
 8009fb6:	4413      	add	r3, r2
 8009fb8:	009b      	lsls	r3, r3, #2
 8009fba:	440b      	add	r3, r1
 8009fbc:	3324      	adds	r3, #36	; 0x24
 8009fbe:	2200      	movs	r2, #0
 8009fc0:	801a      	strh	r2, [r3, #0]
 8009fc2:	4b32      	ldr	r3, [pc, #200]	; (800a08c <USBD_CDC_DeInit+0xfc>)
 8009fc4:	781b      	ldrb	r3, [r3, #0]
 8009fc6:	4619      	mov	r1, r3
 8009fc8:	6878      	ldr	r0, [r7, #4]
 8009fca:	f002 fa90 	bl	800c4ee <USBD_LL_CloseEP>
 8009fce:	4b2f      	ldr	r3, [pc, #188]	; (800a08c <USBD_CDC_DeInit+0xfc>)
 8009fd0:	781b      	ldrb	r3, [r3, #0]
 8009fd2:	f003 020f 	and.w	r2, r3, #15
 8009fd6:	6879      	ldr	r1, [r7, #4]
 8009fd8:	4613      	mov	r3, r2
 8009fda:	009b      	lsls	r3, r3, #2
 8009fdc:	4413      	add	r3, r2
 8009fde:	009b      	lsls	r3, r3, #2
 8009fe0:	440b      	add	r3, r1
 8009fe2:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8009fe6:	2200      	movs	r2, #0
 8009fe8:	801a      	strh	r2, [r3, #0]
 8009fea:	4b29      	ldr	r3, [pc, #164]	; (800a090 <USBD_CDC_DeInit+0x100>)
 8009fec:	781b      	ldrb	r3, [r3, #0]
 8009fee:	4619      	mov	r1, r3
 8009ff0:	6878      	ldr	r0, [r7, #4]
 8009ff2:	f002 fa7c 	bl	800c4ee <USBD_LL_CloseEP>
 8009ff6:	4b26      	ldr	r3, [pc, #152]	; (800a090 <USBD_CDC_DeInit+0x100>)
 8009ff8:	781b      	ldrb	r3, [r3, #0]
 8009ffa:	f003 020f 	and.w	r2, r3, #15
 8009ffe:	6879      	ldr	r1, [r7, #4]
 800a000:	4613      	mov	r3, r2
 800a002:	009b      	lsls	r3, r3, #2
 800a004:	4413      	add	r3, r2
 800a006:	009b      	lsls	r3, r3, #2
 800a008:	440b      	add	r3, r1
 800a00a:	3324      	adds	r3, #36	; 0x24
 800a00c:	2200      	movs	r2, #0
 800a00e:	801a      	strh	r2, [r3, #0]
 800a010:	4b1f      	ldr	r3, [pc, #124]	; (800a090 <USBD_CDC_DeInit+0x100>)
 800a012:	781b      	ldrb	r3, [r3, #0]
 800a014:	f003 020f 	and.w	r2, r3, #15
 800a018:	6879      	ldr	r1, [r7, #4]
 800a01a:	4613      	mov	r3, r2
 800a01c:	009b      	lsls	r3, r3, #2
 800a01e:	4413      	add	r3, r2
 800a020:	009b      	lsls	r3, r3, #2
 800a022:	440b      	add	r3, r1
 800a024:	3326      	adds	r3, #38	; 0x26
 800a026:	2200      	movs	r2, #0
 800a028:	801a      	strh	r2, [r3, #0]
 800a02a:	687b      	ldr	r3, [r7, #4]
 800a02c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a030:	687b      	ldr	r3, [r7, #4]
 800a032:	32b0      	adds	r2, #176	; 0xb0
 800a034:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a038:	2b00      	cmp	r3, #0
 800a03a:	d01f      	beq.n	800a07c <USBD_CDC_DeInit+0xec>
 800a03c:	687b      	ldr	r3, [r7, #4]
 800a03e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a042:	687a      	ldr	r2, [r7, #4]
 800a044:	33b0      	adds	r3, #176	; 0xb0
 800a046:	009b      	lsls	r3, r3, #2
 800a048:	4413      	add	r3, r2
 800a04a:	685b      	ldr	r3, [r3, #4]
 800a04c:	685b      	ldr	r3, [r3, #4]
 800a04e:	4798      	blx	r3
 800a050:	687b      	ldr	r3, [r7, #4]
 800a052:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a056:	687b      	ldr	r3, [r7, #4]
 800a058:	32b0      	adds	r2, #176	; 0xb0
 800a05a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a05e:	4618      	mov	r0, r3
 800a060:	f002 fb50 	bl	800c704 <USBD_static_free>
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a06a:	687b      	ldr	r3, [r7, #4]
 800a06c:	32b0      	adds	r2, #176	; 0xb0
 800a06e:	2100      	movs	r1, #0
 800a070:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800a074:	687b      	ldr	r3, [r7, #4]
 800a076:	2200      	movs	r2, #0
 800a078:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 800a07c:	2300      	movs	r3, #0
 800a07e:	4618      	mov	r0, r3
 800a080:	3708      	adds	r7, #8
 800a082:	46bd      	mov	sp, r7
 800a084:	bd80      	pop	{r7, pc}
 800a086:	bf00      	nop
 800a088:	200000a7 	.word	0x200000a7
 800a08c:	200000a8 	.word	0x200000a8
 800a090:	200000a9 	.word	0x200000a9

0800a094 <USBD_CDC_Setup>:
 800a094:	b580      	push	{r7, lr}
 800a096:	b086      	sub	sp, #24
 800a098:	af00      	add	r7, sp, #0
 800a09a:	6078      	str	r0, [r7, #4]
 800a09c:	6039      	str	r1, [r7, #0]
 800a09e:	687b      	ldr	r3, [r7, #4]
 800a0a0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	32b0      	adds	r2, #176	; 0xb0
 800a0a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a0ac:	613b      	str	r3, [r7, #16]
 800a0ae:	2300      	movs	r3, #0
 800a0b0:	737b      	strb	r3, [r7, #13]
 800a0b2:	2300      	movs	r3, #0
 800a0b4:	817b      	strh	r3, [r7, #10]
 800a0b6:	2300      	movs	r3, #0
 800a0b8:	75fb      	strb	r3, [r7, #23]
 800a0ba:	693b      	ldr	r3, [r7, #16]
 800a0bc:	2b00      	cmp	r3, #0
 800a0be:	d101      	bne.n	800a0c4 <USBD_CDC_Setup+0x30>
 800a0c0:	2303      	movs	r3, #3
 800a0c2:	e0bf      	b.n	800a244 <USBD_CDC_Setup+0x1b0>
 800a0c4:	683b      	ldr	r3, [r7, #0]
 800a0c6:	781b      	ldrb	r3, [r3, #0]
 800a0c8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a0cc:	2b00      	cmp	r3, #0
 800a0ce:	d050      	beq.n	800a172 <USBD_CDC_Setup+0xde>
 800a0d0:	2b20      	cmp	r3, #32
 800a0d2:	f040 80af 	bne.w	800a234 <USBD_CDC_Setup+0x1a0>
 800a0d6:	683b      	ldr	r3, [r7, #0]
 800a0d8:	88db      	ldrh	r3, [r3, #6]
 800a0da:	2b00      	cmp	r3, #0
 800a0dc:	d03a      	beq.n	800a154 <USBD_CDC_Setup+0xc0>
 800a0de:	683b      	ldr	r3, [r7, #0]
 800a0e0:	781b      	ldrb	r3, [r3, #0]
 800a0e2:	b25b      	sxtb	r3, r3
 800a0e4:	2b00      	cmp	r3, #0
 800a0e6:	da1b      	bge.n	800a120 <USBD_CDC_Setup+0x8c>
 800a0e8:	687b      	ldr	r3, [r7, #4]
 800a0ea:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a0ee:	687a      	ldr	r2, [r7, #4]
 800a0f0:	33b0      	adds	r3, #176	; 0xb0
 800a0f2:	009b      	lsls	r3, r3, #2
 800a0f4:	4413      	add	r3, r2
 800a0f6:	685b      	ldr	r3, [r3, #4]
 800a0f8:	689b      	ldr	r3, [r3, #8]
 800a0fa:	683a      	ldr	r2, [r7, #0]
 800a0fc:	7850      	ldrb	r0, [r2, #1]
 800a0fe:	6939      	ldr	r1, [r7, #16]
 800a100:	683a      	ldr	r2, [r7, #0]
 800a102:	88d2      	ldrh	r2, [r2, #6]
 800a104:	4798      	blx	r3
 800a106:	683b      	ldr	r3, [r7, #0]
 800a108:	88db      	ldrh	r3, [r3, #6]
 800a10a:	2b07      	cmp	r3, #7
 800a10c:	bf28      	it	cs
 800a10e:	2307      	movcs	r3, #7
 800a110:	81fb      	strh	r3, [r7, #14]
 800a112:	693b      	ldr	r3, [r7, #16]
 800a114:	89fa      	ldrh	r2, [r7, #14]
 800a116:	4619      	mov	r1, r3
 800a118:	6878      	ldr	r0, [r7, #4]
 800a11a:	f001 fd89 	bl	800bc30 <USBD_CtlSendData>
 800a11e:	e090      	b.n	800a242 <USBD_CDC_Setup+0x1ae>
 800a120:	683b      	ldr	r3, [r7, #0]
 800a122:	785a      	ldrb	r2, [r3, #1]
 800a124:	693b      	ldr	r3, [r7, #16]
 800a126:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 800a12a:	683b      	ldr	r3, [r7, #0]
 800a12c:	88db      	ldrh	r3, [r3, #6]
 800a12e:	2b3f      	cmp	r3, #63	; 0x3f
 800a130:	d803      	bhi.n	800a13a <USBD_CDC_Setup+0xa6>
 800a132:	683b      	ldr	r3, [r7, #0]
 800a134:	88db      	ldrh	r3, [r3, #6]
 800a136:	b2da      	uxtb	r2, r3
 800a138:	e000      	b.n	800a13c <USBD_CDC_Setup+0xa8>
 800a13a:	2240      	movs	r2, #64	; 0x40
 800a13c:	693b      	ldr	r3, [r7, #16]
 800a13e:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
 800a142:	6939      	ldr	r1, [r7, #16]
 800a144:	693b      	ldr	r3, [r7, #16]
 800a146:	f893 3201 	ldrb.w	r3, [r3, #513]	; 0x201
 800a14a:	461a      	mov	r2, r3
 800a14c:	6878      	ldr	r0, [r7, #4]
 800a14e:	f001 fd9b 	bl	800bc88 <USBD_CtlPrepareRx>
 800a152:	e076      	b.n	800a242 <USBD_CDC_Setup+0x1ae>
 800a154:	687b      	ldr	r3, [r7, #4]
 800a156:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a15a:	687a      	ldr	r2, [r7, #4]
 800a15c:	33b0      	adds	r3, #176	; 0xb0
 800a15e:	009b      	lsls	r3, r3, #2
 800a160:	4413      	add	r3, r2
 800a162:	685b      	ldr	r3, [r3, #4]
 800a164:	689b      	ldr	r3, [r3, #8]
 800a166:	683a      	ldr	r2, [r7, #0]
 800a168:	7850      	ldrb	r0, [r2, #1]
 800a16a:	2200      	movs	r2, #0
 800a16c:	6839      	ldr	r1, [r7, #0]
 800a16e:	4798      	blx	r3
 800a170:	e067      	b.n	800a242 <USBD_CDC_Setup+0x1ae>
 800a172:	683b      	ldr	r3, [r7, #0]
 800a174:	785b      	ldrb	r3, [r3, #1]
 800a176:	2b0b      	cmp	r3, #11
 800a178:	d851      	bhi.n	800a21e <USBD_CDC_Setup+0x18a>
 800a17a:	a201      	add	r2, pc, #4	; (adr r2, 800a180 <USBD_CDC_Setup+0xec>)
 800a17c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a180:	0800a1b1 	.word	0x0800a1b1
 800a184:	0800a22d 	.word	0x0800a22d
 800a188:	0800a21f 	.word	0x0800a21f
 800a18c:	0800a21f 	.word	0x0800a21f
 800a190:	0800a21f 	.word	0x0800a21f
 800a194:	0800a21f 	.word	0x0800a21f
 800a198:	0800a21f 	.word	0x0800a21f
 800a19c:	0800a21f 	.word	0x0800a21f
 800a1a0:	0800a21f 	.word	0x0800a21f
 800a1a4:	0800a21f 	.word	0x0800a21f
 800a1a8:	0800a1db 	.word	0x0800a1db
 800a1ac:	0800a205 	.word	0x0800a205
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a1b6:	b2db      	uxtb	r3, r3
 800a1b8:	2b03      	cmp	r3, #3
 800a1ba:	d107      	bne.n	800a1cc <USBD_CDC_Setup+0x138>
 800a1bc:	f107 030a 	add.w	r3, r7, #10
 800a1c0:	2202      	movs	r2, #2
 800a1c2:	4619      	mov	r1, r3
 800a1c4:	6878      	ldr	r0, [r7, #4]
 800a1c6:	f001 fd33 	bl	800bc30 <USBD_CtlSendData>
 800a1ca:	e032      	b.n	800a232 <USBD_CDC_Setup+0x19e>
 800a1cc:	6839      	ldr	r1, [r7, #0]
 800a1ce:	6878      	ldr	r0, [r7, #4]
 800a1d0:	f001 fcbd 	bl	800bb4e <USBD_CtlError>
 800a1d4:	2303      	movs	r3, #3
 800a1d6:	75fb      	strb	r3, [r7, #23]
 800a1d8:	e02b      	b.n	800a232 <USBD_CDC_Setup+0x19e>
 800a1da:	687b      	ldr	r3, [r7, #4]
 800a1dc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a1e0:	b2db      	uxtb	r3, r3
 800a1e2:	2b03      	cmp	r3, #3
 800a1e4:	d107      	bne.n	800a1f6 <USBD_CDC_Setup+0x162>
 800a1e6:	f107 030d 	add.w	r3, r7, #13
 800a1ea:	2201      	movs	r2, #1
 800a1ec:	4619      	mov	r1, r3
 800a1ee:	6878      	ldr	r0, [r7, #4]
 800a1f0:	f001 fd1e 	bl	800bc30 <USBD_CtlSendData>
 800a1f4:	e01d      	b.n	800a232 <USBD_CDC_Setup+0x19e>
 800a1f6:	6839      	ldr	r1, [r7, #0]
 800a1f8:	6878      	ldr	r0, [r7, #4]
 800a1fa:	f001 fca8 	bl	800bb4e <USBD_CtlError>
 800a1fe:	2303      	movs	r3, #3
 800a200:	75fb      	strb	r3, [r7, #23]
 800a202:	e016      	b.n	800a232 <USBD_CDC_Setup+0x19e>
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a20a:	b2db      	uxtb	r3, r3
 800a20c:	2b03      	cmp	r3, #3
 800a20e:	d00f      	beq.n	800a230 <USBD_CDC_Setup+0x19c>
 800a210:	6839      	ldr	r1, [r7, #0]
 800a212:	6878      	ldr	r0, [r7, #4]
 800a214:	f001 fc9b 	bl	800bb4e <USBD_CtlError>
 800a218:	2303      	movs	r3, #3
 800a21a:	75fb      	strb	r3, [r7, #23]
 800a21c:	e008      	b.n	800a230 <USBD_CDC_Setup+0x19c>
 800a21e:	6839      	ldr	r1, [r7, #0]
 800a220:	6878      	ldr	r0, [r7, #4]
 800a222:	f001 fc94 	bl	800bb4e <USBD_CtlError>
 800a226:	2303      	movs	r3, #3
 800a228:	75fb      	strb	r3, [r7, #23]
 800a22a:	e002      	b.n	800a232 <USBD_CDC_Setup+0x19e>
 800a22c:	bf00      	nop
 800a22e:	e008      	b.n	800a242 <USBD_CDC_Setup+0x1ae>
 800a230:	bf00      	nop
 800a232:	e006      	b.n	800a242 <USBD_CDC_Setup+0x1ae>
 800a234:	6839      	ldr	r1, [r7, #0]
 800a236:	6878      	ldr	r0, [r7, #4]
 800a238:	f001 fc89 	bl	800bb4e <USBD_CtlError>
 800a23c:	2303      	movs	r3, #3
 800a23e:	75fb      	strb	r3, [r7, #23]
 800a240:	bf00      	nop
 800a242:	7dfb      	ldrb	r3, [r7, #23]
 800a244:	4618      	mov	r0, r3
 800a246:	3718      	adds	r7, #24
 800a248:	46bd      	mov	sp, r7
 800a24a:	bd80      	pop	{r7, pc}

0800a24c <USBD_CDC_DataIn>:
 800a24c:	b580      	push	{r7, lr}
 800a24e:	b084      	sub	sp, #16
 800a250:	af00      	add	r7, sp, #0
 800a252:	6078      	str	r0, [r7, #4]
 800a254:	460b      	mov	r3, r1
 800a256:	70fb      	strb	r3, [r7, #3]
 800a258:	687b      	ldr	r3, [r7, #4]
 800a25a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800a25e:	60fb      	str	r3, [r7, #12]
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	32b0      	adds	r2, #176	; 0xb0
 800a26a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a26e:	2b00      	cmp	r3, #0
 800a270:	d101      	bne.n	800a276 <USBD_CDC_DataIn+0x2a>
 800a272:	2303      	movs	r3, #3
 800a274:	e065      	b.n	800a342 <USBD_CDC_DataIn+0xf6>
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	32b0      	adds	r2, #176	; 0xb0
 800a280:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a284:	60bb      	str	r3, [r7, #8]
 800a286:	78fb      	ldrb	r3, [r7, #3]
 800a288:	f003 020f 	and.w	r2, r3, #15
 800a28c:	6879      	ldr	r1, [r7, #4]
 800a28e:	4613      	mov	r3, r2
 800a290:	009b      	lsls	r3, r3, #2
 800a292:	4413      	add	r3, r2
 800a294:	009b      	lsls	r3, r3, #2
 800a296:	440b      	add	r3, r1
 800a298:	3318      	adds	r3, #24
 800a29a:	681b      	ldr	r3, [r3, #0]
 800a29c:	2b00      	cmp	r3, #0
 800a29e:	d02f      	beq.n	800a300 <USBD_CDC_DataIn+0xb4>
 800a2a0:	78fb      	ldrb	r3, [r7, #3]
 800a2a2:	f003 020f 	and.w	r2, r3, #15
 800a2a6:	6879      	ldr	r1, [r7, #4]
 800a2a8:	4613      	mov	r3, r2
 800a2aa:	009b      	lsls	r3, r3, #2
 800a2ac:	4413      	add	r3, r2
 800a2ae:	009b      	lsls	r3, r3, #2
 800a2b0:	440b      	add	r3, r1
 800a2b2:	3318      	adds	r3, #24
 800a2b4:	681a      	ldr	r2, [r3, #0]
 800a2b6:	78fb      	ldrb	r3, [r7, #3]
 800a2b8:	f003 010f 	and.w	r1, r3, #15
 800a2bc:	68f8      	ldr	r0, [r7, #12]
 800a2be:	460b      	mov	r3, r1
 800a2c0:	00db      	lsls	r3, r3, #3
 800a2c2:	440b      	add	r3, r1
 800a2c4:	009b      	lsls	r3, r3, #2
 800a2c6:	4403      	add	r3, r0
 800a2c8:	331c      	adds	r3, #28
 800a2ca:	681b      	ldr	r3, [r3, #0]
 800a2cc:	fbb2 f1f3 	udiv	r1, r2, r3
 800a2d0:	fb01 f303 	mul.w	r3, r1, r3
 800a2d4:	1ad3      	subs	r3, r2, r3
 800a2d6:	2b00      	cmp	r3, #0
 800a2d8:	d112      	bne.n	800a300 <USBD_CDC_DataIn+0xb4>
 800a2da:	78fb      	ldrb	r3, [r7, #3]
 800a2dc:	f003 020f 	and.w	r2, r3, #15
 800a2e0:	6879      	ldr	r1, [r7, #4]
 800a2e2:	4613      	mov	r3, r2
 800a2e4:	009b      	lsls	r3, r3, #2
 800a2e6:	4413      	add	r3, r2
 800a2e8:	009b      	lsls	r3, r3, #2
 800a2ea:	440b      	add	r3, r1
 800a2ec:	3318      	adds	r3, #24
 800a2ee:	2200      	movs	r2, #0
 800a2f0:	601a      	str	r2, [r3, #0]
 800a2f2:	78f9      	ldrb	r1, [r7, #3]
 800a2f4:	2300      	movs	r3, #0
 800a2f6:	2200      	movs	r2, #0
 800a2f8:	6878      	ldr	r0, [r7, #4]
 800a2fa:	f002 f9a0 	bl	800c63e <USBD_LL_Transmit>
 800a2fe:	e01f      	b.n	800a340 <USBD_CDC_DataIn+0xf4>
 800a300:	68bb      	ldr	r3, [r7, #8]
 800a302:	2200      	movs	r2, #0
 800a304:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800a308:	687b      	ldr	r3, [r7, #4]
 800a30a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a30e:	687a      	ldr	r2, [r7, #4]
 800a310:	33b0      	adds	r3, #176	; 0xb0
 800a312:	009b      	lsls	r3, r3, #2
 800a314:	4413      	add	r3, r2
 800a316:	685b      	ldr	r3, [r3, #4]
 800a318:	691b      	ldr	r3, [r3, #16]
 800a31a:	2b00      	cmp	r3, #0
 800a31c:	d010      	beq.n	800a340 <USBD_CDC_DataIn+0xf4>
 800a31e:	687b      	ldr	r3, [r7, #4]
 800a320:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a324:	687a      	ldr	r2, [r7, #4]
 800a326:	33b0      	adds	r3, #176	; 0xb0
 800a328:	009b      	lsls	r3, r3, #2
 800a32a:	4413      	add	r3, r2
 800a32c:	685b      	ldr	r3, [r3, #4]
 800a32e:	691b      	ldr	r3, [r3, #16]
 800a330:	68ba      	ldr	r2, [r7, #8]
 800a332:	f8d2 0208 	ldr.w	r0, [r2, #520]	; 0x208
 800a336:	68ba      	ldr	r2, [r7, #8]
 800a338:	f502 7104 	add.w	r1, r2, #528	; 0x210
 800a33c:	78fa      	ldrb	r2, [r7, #3]
 800a33e:	4798      	blx	r3
 800a340:	2300      	movs	r3, #0
 800a342:	4618      	mov	r0, r3
 800a344:	3710      	adds	r7, #16
 800a346:	46bd      	mov	sp, r7
 800a348:	bd80      	pop	{r7, pc}

0800a34a <USBD_CDC_DataOut>:
 800a34a:	b580      	push	{r7, lr}
 800a34c:	b084      	sub	sp, #16
 800a34e:	af00      	add	r7, sp, #0
 800a350:	6078      	str	r0, [r7, #4]
 800a352:	460b      	mov	r3, r1
 800a354:	70fb      	strb	r3, [r7, #3]
 800a356:	687b      	ldr	r3, [r7, #4]
 800a358:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a35c:	687b      	ldr	r3, [r7, #4]
 800a35e:	32b0      	adds	r2, #176	; 0xb0
 800a360:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a364:	60fb      	str	r3, [r7, #12]
 800a366:	687b      	ldr	r3, [r7, #4]
 800a368:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a36c:	687b      	ldr	r3, [r7, #4]
 800a36e:	32b0      	adds	r2, #176	; 0xb0
 800a370:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a374:	2b00      	cmp	r3, #0
 800a376:	d101      	bne.n	800a37c <USBD_CDC_DataOut+0x32>
 800a378:	2303      	movs	r3, #3
 800a37a:	e01a      	b.n	800a3b2 <USBD_CDC_DataOut+0x68>
 800a37c:	78fb      	ldrb	r3, [r7, #3]
 800a37e:	4619      	mov	r1, r3
 800a380:	6878      	ldr	r0, [r7, #4]
 800a382:	f002 f99e 	bl	800c6c2 <USBD_LL_GetRxDataSize>
 800a386:	4602      	mov	r2, r0
 800a388:	68fb      	ldr	r3, [r7, #12]
 800a38a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800a38e:	687b      	ldr	r3, [r7, #4]
 800a390:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a394:	687a      	ldr	r2, [r7, #4]
 800a396:	33b0      	adds	r3, #176	; 0xb0
 800a398:	009b      	lsls	r3, r3, #2
 800a39a:	4413      	add	r3, r2
 800a39c:	685b      	ldr	r3, [r3, #4]
 800a39e:	68db      	ldr	r3, [r3, #12]
 800a3a0:	68fa      	ldr	r2, [r7, #12]
 800a3a2:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 800a3a6:	68fa      	ldr	r2, [r7, #12]
 800a3a8:	f502 7203 	add.w	r2, r2, #524	; 0x20c
 800a3ac:	4611      	mov	r1, r2
 800a3ae:	4798      	blx	r3
 800a3b0:	2300      	movs	r3, #0
 800a3b2:	4618      	mov	r0, r3
 800a3b4:	3710      	adds	r7, #16
 800a3b6:	46bd      	mov	sp, r7
 800a3b8:	bd80      	pop	{r7, pc}

0800a3ba <USBD_CDC_EP0_RxReady>:
 800a3ba:	b580      	push	{r7, lr}
 800a3bc:	b084      	sub	sp, #16
 800a3be:	af00      	add	r7, sp, #0
 800a3c0:	6078      	str	r0, [r7, #4]
 800a3c2:	687b      	ldr	r3, [r7, #4]
 800a3c4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a3c8:	687b      	ldr	r3, [r7, #4]
 800a3ca:	32b0      	adds	r2, #176	; 0xb0
 800a3cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a3d0:	60fb      	str	r3, [r7, #12]
 800a3d2:	68fb      	ldr	r3, [r7, #12]
 800a3d4:	2b00      	cmp	r3, #0
 800a3d6:	d101      	bne.n	800a3dc <USBD_CDC_EP0_RxReady+0x22>
 800a3d8:	2303      	movs	r3, #3
 800a3da:	e025      	b.n	800a428 <USBD_CDC_EP0_RxReady+0x6e>
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a3e2:	687a      	ldr	r2, [r7, #4]
 800a3e4:	33b0      	adds	r3, #176	; 0xb0
 800a3e6:	009b      	lsls	r3, r3, #2
 800a3e8:	4413      	add	r3, r2
 800a3ea:	685b      	ldr	r3, [r3, #4]
 800a3ec:	2b00      	cmp	r3, #0
 800a3ee:	d01a      	beq.n	800a426 <USBD_CDC_EP0_RxReady+0x6c>
 800a3f0:	68fb      	ldr	r3, [r7, #12]
 800a3f2:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
 800a3f6:	2bff      	cmp	r3, #255	; 0xff
 800a3f8:	d015      	beq.n	800a426 <USBD_CDC_EP0_RxReady+0x6c>
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a400:	687a      	ldr	r2, [r7, #4]
 800a402:	33b0      	adds	r3, #176	; 0xb0
 800a404:	009b      	lsls	r3, r3, #2
 800a406:	4413      	add	r3, r2
 800a408:	685b      	ldr	r3, [r3, #4]
 800a40a:	689b      	ldr	r3, [r3, #8]
 800a40c:	68fa      	ldr	r2, [r7, #12]
 800a40e:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
 800a412:	68f9      	ldr	r1, [r7, #12]
 800a414:	68fa      	ldr	r2, [r7, #12]
 800a416:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
 800a41a:	b292      	uxth	r2, r2
 800a41c:	4798      	blx	r3
 800a41e:	68fb      	ldr	r3, [r7, #12]
 800a420:	22ff      	movs	r2, #255	; 0xff
 800a422:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 800a426:	2300      	movs	r3, #0
 800a428:	4618      	mov	r0, r3
 800a42a:	3710      	adds	r7, #16
 800a42c:	46bd      	mov	sp, r7
 800a42e:	bd80      	pop	{r7, pc}

0800a430 <USBD_CDC_GetFSCfgDesc>:
 800a430:	b580      	push	{r7, lr}
 800a432:	b086      	sub	sp, #24
 800a434:	af00      	add	r7, sp, #0
 800a436:	6078      	str	r0, [r7, #4]
 800a438:	2182      	movs	r1, #130	; 0x82
 800a43a:	4818      	ldr	r0, [pc, #96]	; (800a49c <USBD_CDC_GetFSCfgDesc+0x6c>)
 800a43c:	f000 fd4f 	bl	800aede <USBD_GetEpDesc>
 800a440:	6178      	str	r0, [r7, #20]
 800a442:	2101      	movs	r1, #1
 800a444:	4815      	ldr	r0, [pc, #84]	; (800a49c <USBD_CDC_GetFSCfgDesc+0x6c>)
 800a446:	f000 fd4a 	bl	800aede <USBD_GetEpDesc>
 800a44a:	6138      	str	r0, [r7, #16]
 800a44c:	2181      	movs	r1, #129	; 0x81
 800a44e:	4813      	ldr	r0, [pc, #76]	; (800a49c <USBD_CDC_GetFSCfgDesc+0x6c>)
 800a450:	f000 fd45 	bl	800aede <USBD_GetEpDesc>
 800a454:	60f8      	str	r0, [r7, #12]
 800a456:	697b      	ldr	r3, [r7, #20]
 800a458:	2b00      	cmp	r3, #0
 800a45a:	d002      	beq.n	800a462 <USBD_CDC_GetFSCfgDesc+0x32>
 800a45c:	697b      	ldr	r3, [r7, #20]
 800a45e:	2210      	movs	r2, #16
 800a460:	719a      	strb	r2, [r3, #6]
 800a462:	693b      	ldr	r3, [r7, #16]
 800a464:	2b00      	cmp	r3, #0
 800a466:	d006      	beq.n	800a476 <USBD_CDC_GetFSCfgDesc+0x46>
 800a468:	693b      	ldr	r3, [r7, #16]
 800a46a:	2200      	movs	r2, #0
 800a46c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a470:	711a      	strb	r2, [r3, #4]
 800a472:	2200      	movs	r2, #0
 800a474:	715a      	strb	r2, [r3, #5]
 800a476:	68fb      	ldr	r3, [r7, #12]
 800a478:	2b00      	cmp	r3, #0
 800a47a:	d006      	beq.n	800a48a <USBD_CDC_GetFSCfgDesc+0x5a>
 800a47c:	68fb      	ldr	r3, [r7, #12]
 800a47e:	2200      	movs	r2, #0
 800a480:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a484:	711a      	strb	r2, [r3, #4]
 800a486:	2200      	movs	r2, #0
 800a488:	715a      	strb	r2, [r3, #5]
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	2243      	movs	r2, #67	; 0x43
 800a48e:	801a      	strh	r2, [r3, #0]
 800a490:	4b02      	ldr	r3, [pc, #8]	; (800a49c <USBD_CDC_GetFSCfgDesc+0x6c>)
 800a492:	4618      	mov	r0, r3
 800a494:	3718      	adds	r7, #24
 800a496:	46bd      	mov	sp, r7
 800a498:	bd80      	pop	{r7, pc}
 800a49a:	bf00      	nop
 800a49c:	20000064 	.word	0x20000064

0800a4a0 <USBD_CDC_GetHSCfgDesc>:
 800a4a0:	b580      	push	{r7, lr}
 800a4a2:	b086      	sub	sp, #24
 800a4a4:	af00      	add	r7, sp, #0
 800a4a6:	6078      	str	r0, [r7, #4]
 800a4a8:	2182      	movs	r1, #130	; 0x82
 800a4aa:	4818      	ldr	r0, [pc, #96]	; (800a50c <USBD_CDC_GetHSCfgDesc+0x6c>)
 800a4ac:	f000 fd17 	bl	800aede <USBD_GetEpDesc>
 800a4b0:	6178      	str	r0, [r7, #20]
 800a4b2:	2101      	movs	r1, #1
 800a4b4:	4815      	ldr	r0, [pc, #84]	; (800a50c <USBD_CDC_GetHSCfgDesc+0x6c>)
 800a4b6:	f000 fd12 	bl	800aede <USBD_GetEpDesc>
 800a4ba:	6138      	str	r0, [r7, #16]
 800a4bc:	2181      	movs	r1, #129	; 0x81
 800a4be:	4813      	ldr	r0, [pc, #76]	; (800a50c <USBD_CDC_GetHSCfgDesc+0x6c>)
 800a4c0:	f000 fd0d 	bl	800aede <USBD_GetEpDesc>
 800a4c4:	60f8      	str	r0, [r7, #12]
 800a4c6:	697b      	ldr	r3, [r7, #20]
 800a4c8:	2b00      	cmp	r3, #0
 800a4ca:	d002      	beq.n	800a4d2 <USBD_CDC_GetHSCfgDesc+0x32>
 800a4cc:	697b      	ldr	r3, [r7, #20]
 800a4ce:	2210      	movs	r2, #16
 800a4d0:	719a      	strb	r2, [r3, #6]
 800a4d2:	693b      	ldr	r3, [r7, #16]
 800a4d4:	2b00      	cmp	r3, #0
 800a4d6:	d006      	beq.n	800a4e6 <USBD_CDC_GetHSCfgDesc+0x46>
 800a4d8:	693b      	ldr	r3, [r7, #16]
 800a4da:	2200      	movs	r2, #0
 800a4dc:	711a      	strb	r2, [r3, #4]
 800a4de:	2200      	movs	r2, #0
 800a4e0:	f042 0202 	orr.w	r2, r2, #2
 800a4e4:	715a      	strb	r2, [r3, #5]
 800a4e6:	68fb      	ldr	r3, [r7, #12]
 800a4e8:	2b00      	cmp	r3, #0
 800a4ea:	d006      	beq.n	800a4fa <USBD_CDC_GetHSCfgDesc+0x5a>
 800a4ec:	68fb      	ldr	r3, [r7, #12]
 800a4ee:	2200      	movs	r2, #0
 800a4f0:	711a      	strb	r2, [r3, #4]
 800a4f2:	2200      	movs	r2, #0
 800a4f4:	f042 0202 	orr.w	r2, r2, #2
 800a4f8:	715a      	strb	r2, [r3, #5]
 800a4fa:	687b      	ldr	r3, [r7, #4]
 800a4fc:	2243      	movs	r2, #67	; 0x43
 800a4fe:	801a      	strh	r2, [r3, #0]
 800a500:	4b02      	ldr	r3, [pc, #8]	; (800a50c <USBD_CDC_GetHSCfgDesc+0x6c>)
 800a502:	4618      	mov	r0, r3
 800a504:	3718      	adds	r7, #24
 800a506:	46bd      	mov	sp, r7
 800a508:	bd80      	pop	{r7, pc}
 800a50a:	bf00      	nop
 800a50c:	20000064 	.word	0x20000064

0800a510 <USBD_CDC_GetOtherSpeedCfgDesc>:
 800a510:	b580      	push	{r7, lr}
 800a512:	b086      	sub	sp, #24
 800a514:	af00      	add	r7, sp, #0
 800a516:	6078      	str	r0, [r7, #4]
 800a518:	2182      	movs	r1, #130	; 0x82
 800a51a:	4818      	ldr	r0, [pc, #96]	; (800a57c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800a51c:	f000 fcdf 	bl	800aede <USBD_GetEpDesc>
 800a520:	6178      	str	r0, [r7, #20]
 800a522:	2101      	movs	r1, #1
 800a524:	4815      	ldr	r0, [pc, #84]	; (800a57c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800a526:	f000 fcda 	bl	800aede <USBD_GetEpDesc>
 800a52a:	6138      	str	r0, [r7, #16]
 800a52c:	2181      	movs	r1, #129	; 0x81
 800a52e:	4813      	ldr	r0, [pc, #76]	; (800a57c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800a530:	f000 fcd5 	bl	800aede <USBD_GetEpDesc>
 800a534:	60f8      	str	r0, [r7, #12]
 800a536:	697b      	ldr	r3, [r7, #20]
 800a538:	2b00      	cmp	r3, #0
 800a53a:	d002      	beq.n	800a542 <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 800a53c:	697b      	ldr	r3, [r7, #20]
 800a53e:	2210      	movs	r2, #16
 800a540:	719a      	strb	r2, [r3, #6]
 800a542:	693b      	ldr	r3, [r7, #16]
 800a544:	2b00      	cmp	r3, #0
 800a546:	d006      	beq.n	800a556 <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 800a548:	693b      	ldr	r3, [r7, #16]
 800a54a:	2200      	movs	r2, #0
 800a54c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a550:	711a      	strb	r2, [r3, #4]
 800a552:	2200      	movs	r2, #0
 800a554:	715a      	strb	r2, [r3, #5]
 800a556:	68fb      	ldr	r3, [r7, #12]
 800a558:	2b00      	cmp	r3, #0
 800a55a:	d006      	beq.n	800a56a <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 800a55c:	68fb      	ldr	r3, [r7, #12]
 800a55e:	2200      	movs	r2, #0
 800a560:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a564:	711a      	strb	r2, [r3, #4]
 800a566:	2200      	movs	r2, #0
 800a568:	715a      	strb	r2, [r3, #5]
 800a56a:	687b      	ldr	r3, [r7, #4]
 800a56c:	2243      	movs	r2, #67	; 0x43
 800a56e:	801a      	strh	r2, [r3, #0]
 800a570:	4b02      	ldr	r3, [pc, #8]	; (800a57c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800a572:	4618      	mov	r0, r3
 800a574:	3718      	adds	r7, #24
 800a576:	46bd      	mov	sp, r7
 800a578:	bd80      	pop	{r7, pc}
 800a57a:	bf00      	nop
 800a57c:	20000064 	.word	0x20000064

0800a580 <USBD_CDC_GetDeviceQualifierDescriptor>:
 800a580:	b480      	push	{r7}
 800a582:	b083      	sub	sp, #12
 800a584:	af00      	add	r7, sp, #0
 800a586:	6078      	str	r0, [r7, #4]
 800a588:	687b      	ldr	r3, [r7, #4]
 800a58a:	220a      	movs	r2, #10
 800a58c:	801a      	strh	r2, [r3, #0]
 800a58e:	4b03      	ldr	r3, [pc, #12]	; (800a59c <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 800a590:	4618      	mov	r0, r3
 800a592:	370c      	adds	r7, #12
 800a594:	46bd      	mov	sp, r7
 800a596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a59a:	4770      	bx	lr
 800a59c:	20000020 	.word	0x20000020

0800a5a0 <USBD_CDC_RegisterInterface>:
 800a5a0:	b480      	push	{r7}
 800a5a2:	b083      	sub	sp, #12
 800a5a4:	af00      	add	r7, sp, #0
 800a5a6:	6078      	str	r0, [r7, #4]
 800a5a8:	6039      	str	r1, [r7, #0]
 800a5aa:	683b      	ldr	r3, [r7, #0]
 800a5ac:	2b00      	cmp	r3, #0
 800a5ae:	d101      	bne.n	800a5b4 <USBD_CDC_RegisterInterface+0x14>
 800a5b0:	2303      	movs	r3, #3
 800a5b2:	e009      	b.n	800a5c8 <USBD_CDC_RegisterInterface+0x28>
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800a5ba:	687a      	ldr	r2, [r7, #4]
 800a5bc:	33b0      	adds	r3, #176	; 0xb0
 800a5be:	009b      	lsls	r3, r3, #2
 800a5c0:	4413      	add	r3, r2
 800a5c2:	683a      	ldr	r2, [r7, #0]
 800a5c4:	605a      	str	r2, [r3, #4]
 800a5c6:	2300      	movs	r3, #0
 800a5c8:	4618      	mov	r0, r3
 800a5ca:	370c      	adds	r7, #12
 800a5cc:	46bd      	mov	sp, r7
 800a5ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5d2:	4770      	bx	lr

0800a5d4 <USBD_CDC_SetTxBuffer>:
 800a5d4:	b480      	push	{r7}
 800a5d6:	b087      	sub	sp, #28
 800a5d8:	af00      	add	r7, sp, #0
 800a5da:	60f8      	str	r0, [r7, #12]
 800a5dc:	60b9      	str	r1, [r7, #8]
 800a5de:	607a      	str	r2, [r7, #4]
 800a5e0:	68fb      	ldr	r3, [r7, #12]
 800a5e2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a5e6:	68fb      	ldr	r3, [r7, #12]
 800a5e8:	32b0      	adds	r2, #176	; 0xb0
 800a5ea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a5ee:	617b      	str	r3, [r7, #20]
 800a5f0:	697b      	ldr	r3, [r7, #20]
 800a5f2:	2b00      	cmp	r3, #0
 800a5f4:	d101      	bne.n	800a5fa <USBD_CDC_SetTxBuffer+0x26>
 800a5f6:	2303      	movs	r3, #3
 800a5f8:	e008      	b.n	800a60c <USBD_CDC_SetTxBuffer+0x38>
 800a5fa:	697b      	ldr	r3, [r7, #20]
 800a5fc:	68ba      	ldr	r2, [r7, #8]
 800a5fe:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 800a602:	697b      	ldr	r3, [r7, #20]
 800a604:	687a      	ldr	r2, [r7, #4]
 800a606:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 800a60a:	2300      	movs	r3, #0
 800a60c:	4618      	mov	r0, r3
 800a60e:	371c      	adds	r7, #28
 800a610:	46bd      	mov	sp, r7
 800a612:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a616:	4770      	bx	lr

0800a618 <USBD_CDC_SetRxBuffer>:
 800a618:	b480      	push	{r7}
 800a61a:	b085      	sub	sp, #20
 800a61c:	af00      	add	r7, sp, #0
 800a61e:	6078      	str	r0, [r7, #4]
 800a620:	6039      	str	r1, [r7, #0]
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a628:	687b      	ldr	r3, [r7, #4]
 800a62a:	32b0      	adds	r2, #176	; 0xb0
 800a62c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a630:	60fb      	str	r3, [r7, #12]
 800a632:	68fb      	ldr	r3, [r7, #12]
 800a634:	2b00      	cmp	r3, #0
 800a636:	d101      	bne.n	800a63c <USBD_CDC_SetRxBuffer+0x24>
 800a638:	2303      	movs	r3, #3
 800a63a:	e004      	b.n	800a646 <USBD_CDC_SetRxBuffer+0x2e>
 800a63c:	68fb      	ldr	r3, [r7, #12]
 800a63e:	683a      	ldr	r2, [r7, #0]
 800a640:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800a644:	2300      	movs	r3, #0
 800a646:	4618      	mov	r0, r3
 800a648:	3714      	adds	r7, #20
 800a64a:	46bd      	mov	sp, r7
 800a64c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a650:	4770      	bx	lr
	...

0800a654 <USBD_CDC_TransmitPacket>:
 800a654:	b580      	push	{r7, lr}
 800a656:	b084      	sub	sp, #16
 800a658:	af00      	add	r7, sp, #0
 800a65a:	6078      	str	r0, [r7, #4]
 800a65c:	687b      	ldr	r3, [r7, #4]
 800a65e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a662:	687b      	ldr	r3, [r7, #4]
 800a664:	32b0      	adds	r2, #176	; 0xb0
 800a666:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a66a:	60bb      	str	r3, [r7, #8]
 800a66c:	2301      	movs	r3, #1
 800a66e:	73fb      	strb	r3, [r7, #15]
 800a670:	68bb      	ldr	r3, [r7, #8]
 800a672:	2b00      	cmp	r3, #0
 800a674:	d101      	bne.n	800a67a <USBD_CDC_TransmitPacket+0x26>
 800a676:	2303      	movs	r3, #3
 800a678:	e025      	b.n	800a6c6 <USBD_CDC_TransmitPacket+0x72>
 800a67a:	68bb      	ldr	r3, [r7, #8]
 800a67c:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a680:	2b00      	cmp	r3, #0
 800a682:	d11f      	bne.n	800a6c4 <USBD_CDC_TransmitPacket+0x70>
 800a684:	68bb      	ldr	r3, [r7, #8]
 800a686:	2201      	movs	r2, #1
 800a688:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800a68c:	4b10      	ldr	r3, [pc, #64]	; (800a6d0 <USBD_CDC_TransmitPacket+0x7c>)
 800a68e:	781b      	ldrb	r3, [r3, #0]
 800a690:	f003 020f 	and.w	r2, r3, #15
 800a694:	68bb      	ldr	r3, [r7, #8]
 800a696:	f8d3 1210 	ldr.w	r1, [r3, #528]	; 0x210
 800a69a:	6878      	ldr	r0, [r7, #4]
 800a69c:	4613      	mov	r3, r2
 800a69e:	009b      	lsls	r3, r3, #2
 800a6a0:	4413      	add	r3, r2
 800a6a2:	009b      	lsls	r3, r3, #2
 800a6a4:	4403      	add	r3, r0
 800a6a6:	3318      	adds	r3, #24
 800a6a8:	6019      	str	r1, [r3, #0]
 800a6aa:	4b09      	ldr	r3, [pc, #36]	; (800a6d0 <USBD_CDC_TransmitPacket+0x7c>)
 800a6ac:	7819      	ldrb	r1, [r3, #0]
 800a6ae:	68bb      	ldr	r3, [r7, #8]
 800a6b0:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
 800a6b4:	68bb      	ldr	r3, [r7, #8]
 800a6b6:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 800a6ba:	6878      	ldr	r0, [r7, #4]
 800a6bc:	f001 ffbf 	bl	800c63e <USBD_LL_Transmit>
 800a6c0:	2300      	movs	r3, #0
 800a6c2:	73fb      	strb	r3, [r7, #15]
 800a6c4:	7bfb      	ldrb	r3, [r7, #15]
 800a6c6:	4618      	mov	r0, r3
 800a6c8:	3710      	adds	r7, #16
 800a6ca:	46bd      	mov	sp, r7
 800a6cc:	bd80      	pop	{r7, pc}
 800a6ce:	bf00      	nop
 800a6d0:	200000a7 	.word	0x200000a7

0800a6d4 <USBD_CDC_ReceivePacket>:
 800a6d4:	b580      	push	{r7, lr}
 800a6d6:	b084      	sub	sp, #16
 800a6d8:	af00      	add	r7, sp, #0
 800a6da:	6078      	str	r0, [r7, #4]
 800a6dc:	687b      	ldr	r3, [r7, #4]
 800a6de:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a6e2:	687b      	ldr	r3, [r7, #4]
 800a6e4:	32b0      	adds	r2, #176	; 0xb0
 800a6e6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a6ea:	60fb      	str	r3, [r7, #12]
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a6f2:	687b      	ldr	r3, [r7, #4]
 800a6f4:	32b0      	adds	r2, #176	; 0xb0
 800a6f6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a6fa:	2b00      	cmp	r3, #0
 800a6fc:	d101      	bne.n	800a702 <USBD_CDC_ReceivePacket+0x2e>
 800a6fe:	2303      	movs	r3, #3
 800a700:	e018      	b.n	800a734 <USBD_CDC_ReceivePacket+0x60>
 800a702:	687b      	ldr	r3, [r7, #4]
 800a704:	7c1b      	ldrb	r3, [r3, #16]
 800a706:	2b00      	cmp	r3, #0
 800a708:	d10a      	bne.n	800a720 <USBD_CDC_ReceivePacket+0x4c>
 800a70a:	4b0c      	ldr	r3, [pc, #48]	; (800a73c <USBD_CDC_ReceivePacket+0x68>)
 800a70c:	7819      	ldrb	r1, [r3, #0]
 800a70e:	68fb      	ldr	r3, [r7, #12]
 800a710:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800a714:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a718:	6878      	ldr	r0, [r7, #4]
 800a71a:	f001 ffb1 	bl	800c680 <USBD_LL_PrepareReceive>
 800a71e:	e008      	b.n	800a732 <USBD_CDC_ReceivePacket+0x5e>
 800a720:	4b06      	ldr	r3, [pc, #24]	; (800a73c <USBD_CDC_ReceivePacket+0x68>)
 800a722:	7819      	ldrb	r1, [r3, #0]
 800a724:	68fb      	ldr	r3, [r7, #12]
 800a726:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800a72a:	2340      	movs	r3, #64	; 0x40
 800a72c:	6878      	ldr	r0, [r7, #4]
 800a72e:	f001 ffa7 	bl	800c680 <USBD_LL_PrepareReceive>
 800a732:	2300      	movs	r3, #0
 800a734:	4618      	mov	r0, r3
 800a736:	3710      	adds	r7, #16
 800a738:	46bd      	mov	sp, r7
 800a73a:	bd80      	pop	{r7, pc}
 800a73c:	200000a8 	.word	0x200000a8

0800a740 <USBD_Init>:
 800a740:	b580      	push	{r7, lr}
 800a742:	b086      	sub	sp, #24
 800a744:	af00      	add	r7, sp, #0
 800a746:	60f8      	str	r0, [r7, #12]
 800a748:	60b9      	str	r1, [r7, #8]
 800a74a:	4613      	mov	r3, r2
 800a74c:	71fb      	strb	r3, [r7, #7]
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	2b00      	cmp	r3, #0
 800a752:	d101      	bne.n	800a758 <USBD_Init+0x18>
 800a754:	2303      	movs	r3, #3
 800a756:	e01f      	b.n	800a798 <USBD_Init+0x58>
 800a758:	68fb      	ldr	r3, [r7, #12]
 800a75a:	2200      	movs	r2, #0
 800a75c:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 800a760:	68fb      	ldr	r3, [r7, #12]
 800a762:	2200      	movs	r2, #0
 800a764:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
 800a768:	68fb      	ldr	r3, [r7, #12]
 800a76a:	2200      	movs	r2, #0
 800a76c:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 800a770:	68bb      	ldr	r3, [r7, #8]
 800a772:	2b00      	cmp	r3, #0
 800a774:	d003      	beq.n	800a77e <USBD_Init+0x3e>
 800a776:	68fb      	ldr	r3, [r7, #12]
 800a778:	68ba      	ldr	r2, [r7, #8]
 800a77a:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
 800a77e:	68fb      	ldr	r3, [r7, #12]
 800a780:	2201      	movs	r2, #1
 800a782:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800a786:	68fb      	ldr	r3, [r7, #12]
 800a788:	79fa      	ldrb	r2, [r7, #7]
 800a78a:	701a      	strb	r2, [r3, #0]
 800a78c:	68f8      	ldr	r0, [r7, #12]
 800a78e:	f001 fe21 	bl	800c3d4 <USBD_LL_Init>
 800a792:	4603      	mov	r3, r0
 800a794:	75fb      	strb	r3, [r7, #23]
 800a796:	7dfb      	ldrb	r3, [r7, #23]
 800a798:	4618      	mov	r0, r3
 800a79a:	3718      	adds	r7, #24
 800a79c:	46bd      	mov	sp, r7
 800a79e:	bd80      	pop	{r7, pc}

0800a7a0 <USBD_RegisterClass>:
 800a7a0:	b580      	push	{r7, lr}
 800a7a2:	b084      	sub	sp, #16
 800a7a4:	af00      	add	r7, sp, #0
 800a7a6:	6078      	str	r0, [r7, #4]
 800a7a8:	6039      	str	r1, [r7, #0]
 800a7aa:	2300      	movs	r3, #0
 800a7ac:	81fb      	strh	r3, [r7, #14]
 800a7ae:	683b      	ldr	r3, [r7, #0]
 800a7b0:	2b00      	cmp	r3, #0
 800a7b2:	d101      	bne.n	800a7b8 <USBD_RegisterClass+0x18>
 800a7b4:	2303      	movs	r3, #3
 800a7b6:	e025      	b.n	800a804 <USBD_RegisterClass+0x64>
 800a7b8:	687b      	ldr	r3, [r7, #4]
 800a7ba:	683a      	ldr	r2, [r7, #0]
 800a7bc:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 800a7c0:	687b      	ldr	r3, [r7, #4]
 800a7c2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a7c6:	687b      	ldr	r3, [r7, #4]
 800a7c8:	32ae      	adds	r2, #174	; 0xae
 800a7ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a7ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7d0:	2b00      	cmp	r3, #0
 800a7d2:	d00f      	beq.n	800a7f4 <USBD_RegisterClass+0x54>
 800a7d4:	687b      	ldr	r3, [r7, #4]
 800a7d6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	32ae      	adds	r2, #174	; 0xae
 800a7de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a7e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7e4:	f107 020e 	add.w	r2, r7, #14
 800a7e8:	4610      	mov	r0, r2
 800a7ea:	4798      	blx	r3
 800a7ec:	4602      	mov	r2, r0
 800a7ee:	687b      	ldr	r3, [r7, #4]
 800a7f0:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 800a7f4:	687b      	ldr	r3, [r7, #4]
 800a7f6:	f8d3 32d8 	ldr.w	r3, [r3, #728]	; 0x2d8
 800a7fa:	1c5a      	adds	r2, r3, #1
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
 800a802:	2300      	movs	r3, #0
 800a804:	4618      	mov	r0, r3
 800a806:	3710      	adds	r7, #16
 800a808:	46bd      	mov	sp, r7
 800a80a:	bd80      	pop	{r7, pc}

0800a80c <USBD_Start>:
 800a80c:	b580      	push	{r7, lr}
 800a80e:	b082      	sub	sp, #8
 800a810:	af00      	add	r7, sp, #0
 800a812:	6078      	str	r0, [r7, #4]
 800a814:	6878      	ldr	r0, [r7, #4]
 800a816:	f001 fe29 	bl	800c46c <USBD_LL_Start>
 800a81a:	4603      	mov	r3, r0
 800a81c:	4618      	mov	r0, r3
 800a81e:	3708      	adds	r7, #8
 800a820:	46bd      	mov	sp, r7
 800a822:	bd80      	pop	{r7, pc}

0800a824 <USBD_RunTestMode>:
 800a824:	b480      	push	{r7}
 800a826:	b083      	sub	sp, #12
 800a828:	af00      	add	r7, sp, #0
 800a82a:	6078      	str	r0, [r7, #4]
 800a82c:	2300      	movs	r3, #0
 800a82e:	4618      	mov	r0, r3
 800a830:	370c      	adds	r7, #12
 800a832:	46bd      	mov	sp, r7
 800a834:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a838:	4770      	bx	lr

0800a83a <USBD_SetClassConfig>:
 800a83a:	b580      	push	{r7, lr}
 800a83c:	b084      	sub	sp, #16
 800a83e:	af00      	add	r7, sp, #0
 800a840:	6078      	str	r0, [r7, #4]
 800a842:	460b      	mov	r3, r1
 800a844:	70fb      	strb	r3, [r7, #3]
 800a846:	2300      	movs	r3, #0
 800a848:	73fb      	strb	r3, [r7, #15]
 800a84a:	687b      	ldr	r3, [r7, #4]
 800a84c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a850:	2b00      	cmp	r3, #0
 800a852:	d009      	beq.n	800a868 <USBD_SetClassConfig+0x2e>
 800a854:	687b      	ldr	r3, [r7, #4]
 800a856:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	78fa      	ldrb	r2, [r7, #3]
 800a85e:	4611      	mov	r1, r2
 800a860:	6878      	ldr	r0, [r7, #4]
 800a862:	4798      	blx	r3
 800a864:	4603      	mov	r3, r0
 800a866:	73fb      	strb	r3, [r7, #15]
 800a868:	7bfb      	ldrb	r3, [r7, #15]
 800a86a:	4618      	mov	r0, r3
 800a86c:	3710      	adds	r7, #16
 800a86e:	46bd      	mov	sp, r7
 800a870:	bd80      	pop	{r7, pc}

0800a872 <USBD_ClrClassConfig>:
 800a872:	b580      	push	{r7, lr}
 800a874:	b084      	sub	sp, #16
 800a876:	af00      	add	r7, sp, #0
 800a878:	6078      	str	r0, [r7, #4]
 800a87a:	460b      	mov	r3, r1
 800a87c:	70fb      	strb	r3, [r7, #3]
 800a87e:	2300      	movs	r3, #0
 800a880:	73fb      	strb	r3, [r7, #15]
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800a888:	685b      	ldr	r3, [r3, #4]
 800a88a:	78fa      	ldrb	r2, [r7, #3]
 800a88c:	4611      	mov	r1, r2
 800a88e:	6878      	ldr	r0, [r7, #4]
 800a890:	4798      	blx	r3
 800a892:	4603      	mov	r3, r0
 800a894:	2b00      	cmp	r3, #0
 800a896:	d001      	beq.n	800a89c <USBD_ClrClassConfig+0x2a>
 800a898:	2303      	movs	r3, #3
 800a89a:	73fb      	strb	r3, [r7, #15]
 800a89c:	7bfb      	ldrb	r3, [r7, #15]
 800a89e:	4618      	mov	r0, r3
 800a8a0:	3710      	adds	r7, #16
 800a8a2:	46bd      	mov	sp, r7
 800a8a4:	bd80      	pop	{r7, pc}

0800a8a6 <USBD_LL_SetupStage>:
 800a8a6:	b580      	push	{r7, lr}
 800a8a8:	b084      	sub	sp, #16
 800a8aa:	af00      	add	r7, sp, #0
 800a8ac:	6078      	str	r0, [r7, #4]
 800a8ae:	6039      	str	r1, [r7, #0]
 800a8b0:	687b      	ldr	r3, [r7, #4]
 800a8b2:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800a8b6:	6839      	ldr	r1, [r7, #0]
 800a8b8:	4618      	mov	r0, r3
 800a8ba:	f001 f90e 	bl	800bada <USBD_ParseSetupRequest>
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	2201      	movs	r2, #1
 800a8c2:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	; 0x2b0
 800a8cc:	461a      	mov	r2, r3
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 800a8d4:	687b      	ldr	r3, [r7, #4]
 800a8d6:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800a8da:	f003 031f 	and.w	r3, r3, #31
 800a8de:	2b02      	cmp	r3, #2
 800a8e0:	d01a      	beq.n	800a918 <USBD_LL_SetupStage+0x72>
 800a8e2:	2b02      	cmp	r3, #2
 800a8e4:	d822      	bhi.n	800a92c <USBD_LL_SetupStage+0x86>
 800a8e6:	2b00      	cmp	r3, #0
 800a8e8:	d002      	beq.n	800a8f0 <USBD_LL_SetupStage+0x4a>
 800a8ea:	2b01      	cmp	r3, #1
 800a8ec:	d00a      	beq.n	800a904 <USBD_LL_SetupStage+0x5e>
 800a8ee:	e01d      	b.n	800a92c <USBD_LL_SetupStage+0x86>
 800a8f0:	687b      	ldr	r3, [r7, #4]
 800a8f2:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800a8f6:	4619      	mov	r1, r3
 800a8f8:	6878      	ldr	r0, [r7, #4]
 800a8fa:	f000 fb65 	bl	800afc8 <USBD_StdDevReq>
 800a8fe:	4603      	mov	r3, r0
 800a900:	73fb      	strb	r3, [r7, #15]
 800a902:	e020      	b.n	800a946 <USBD_LL_SetupStage+0xa0>
 800a904:	687b      	ldr	r3, [r7, #4]
 800a906:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800a90a:	4619      	mov	r1, r3
 800a90c:	6878      	ldr	r0, [r7, #4]
 800a90e:	f000 fbcd 	bl	800b0ac <USBD_StdItfReq>
 800a912:	4603      	mov	r3, r0
 800a914:	73fb      	strb	r3, [r7, #15]
 800a916:	e016      	b.n	800a946 <USBD_LL_SetupStage+0xa0>
 800a918:	687b      	ldr	r3, [r7, #4]
 800a91a:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800a91e:	4619      	mov	r1, r3
 800a920:	6878      	ldr	r0, [r7, #4]
 800a922:	f000 fc2f 	bl	800b184 <USBD_StdEPReq>
 800a926:	4603      	mov	r3, r0
 800a928:	73fb      	strb	r3, [r7, #15]
 800a92a:	e00c      	b.n	800a946 <USBD_LL_SetupStage+0xa0>
 800a92c:	687b      	ldr	r3, [r7, #4]
 800a92e:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800a932:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800a936:	b2db      	uxtb	r3, r3
 800a938:	4619      	mov	r1, r3
 800a93a:	6878      	ldr	r0, [r7, #4]
 800a93c:	f001 fdf6 	bl	800c52c <USBD_LL_StallEP>
 800a940:	4603      	mov	r3, r0
 800a942:	73fb      	strb	r3, [r7, #15]
 800a944:	bf00      	nop
 800a946:	7bfb      	ldrb	r3, [r7, #15]
 800a948:	4618      	mov	r0, r3
 800a94a:	3710      	adds	r7, #16
 800a94c:	46bd      	mov	sp, r7
 800a94e:	bd80      	pop	{r7, pc}

0800a950 <USBD_LL_DataOutStage>:
 800a950:	b580      	push	{r7, lr}
 800a952:	b086      	sub	sp, #24
 800a954:	af00      	add	r7, sp, #0
 800a956:	60f8      	str	r0, [r7, #12]
 800a958:	460b      	mov	r3, r1
 800a95a:	607a      	str	r2, [r7, #4]
 800a95c:	72fb      	strb	r3, [r7, #11]
 800a95e:	2300      	movs	r3, #0
 800a960:	75fb      	strb	r3, [r7, #23]
 800a962:	7afb      	ldrb	r3, [r7, #11]
 800a964:	2b00      	cmp	r3, #0
 800a966:	d16e      	bne.n	800aa46 <USBD_LL_DataOutStage+0xf6>
 800a968:	68fb      	ldr	r3, [r7, #12]
 800a96a:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 800a96e:	613b      	str	r3, [r7, #16]
 800a970:	68fb      	ldr	r3, [r7, #12]
 800a972:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800a976:	2b03      	cmp	r3, #3
 800a978:	f040 8098 	bne.w	800aaac <USBD_LL_DataOutStage+0x15c>
 800a97c:	693b      	ldr	r3, [r7, #16]
 800a97e:	689a      	ldr	r2, [r3, #8]
 800a980:	693b      	ldr	r3, [r7, #16]
 800a982:	68db      	ldr	r3, [r3, #12]
 800a984:	429a      	cmp	r2, r3
 800a986:	d913      	bls.n	800a9b0 <USBD_LL_DataOutStage+0x60>
 800a988:	693b      	ldr	r3, [r7, #16]
 800a98a:	689a      	ldr	r2, [r3, #8]
 800a98c:	693b      	ldr	r3, [r7, #16]
 800a98e:	68db      	ldr	r3, [r3, #12]
 800a990:	1ad2      	subs	r2, r2, r3
 800a992:	693b      	ldr	r3, [r7, #16]
 800a994:	609a      	str	r2, [r3, #8]
 800a996:	693b      	ldr	r3, [r7, #16]
 800a998:	68da      	ldr	r2, [r3, #12]
 800a99a:	693b      	ldr	r3, [r7, #16]
 800a99c:	689b      	ldr	r3, [r3, #8]
 800a99e:	4293      	cmp	r3, r2
 800a9a0:	bf28      	it	cs
 800a9a2:	4613      	movcs	r3, r2
 800a9a4:	461a      	mov	r2, r3
 800a9a6:	6879      	ldr	r1, [r7, #4]
 800a9a8:	68f8      	ldr	r0, [r7, #12]
 800a9aa:	f001 f98a 	bl	800bcc2 <USBD_CtlContinueRx>
 800a9ae:	e07d      	b.n	800aaac <USBD_LL_DataOutStage+0x15c>
 800a9b0:	68fb      	ldr	r3, [r7, #12]
 800a9b2:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800a9b6:	f003 031f 	and.w	r3, r3, #31
 800a9ba:	2b02      	cmp	r3, #2
 800a9bc:	d014      	beq.n	800a9e8 <USBD_LL_DataOutStage+0x98>
 800a9be:	2b02      	cmp	r3, #2
 800a9c0:	d81d      	bhi.n	800a9fe <USBD_LL_DataOutStage+0xae>
 800a9c2:	2b00      	cmp	r3, #0
 800a9c4:	d002      	beq.n	800a9cc <USBD_LL_DataOutStage+0x7c>
 800a9c6:	2b01      	cmp	r3, #1
 800a9c8:	d003      	beq.n	800a9d2 <USBD_LL_DataOutStage+0x82>
 800a9ca:	e018      	b.n	800a9fe <USBD_LL_DataOutStage+0xae>
 800a9cc:	2300      	movs	r3, #0
 800a9ce:	75bb      	strb	r3, [r7, #22]
 800a9d0:	e018      	b.n	800aa04 <USBD_LL_DataOutStage+0xb4>
 800a9d2:	68fb      	ldr	r3, [r7, #12]
 800a9d4:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 800a9d8:	b2db      	uxtb	r3, r3
 800a9da:	4619      	mov	r1, r3
 800a9dc:	68f8      	ldr	r0, [r7, #12]
 800a9de:	f000 fa64 	bl	800aeaa <USBD_CoreFindIF>
 800a9e2:	4603      	mov	r3, r0
 800a9e4:	75bb      	strb	r3, [r7, #22]
 800a9e6:	e00d      	b.n	800aa04 <USBD_LL_DataOutStage+0xb4>
 800a9e8:	68fb      	ldr	r3, [r7, #12]
 800a9ea:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 800a9ee:	b2db      	uxtb	r3, r3
 800a9f0:	4619      	mov	r1, r3
 800a9f2:	68f8      	ldr	r0, [r7, #12]
 800a9f4:	f000 fa66 	bl	800aec4 <USBD_CoreFindEP>
 800a9f8:	4603      	mov	r3, r0
 800a9fa:	75bb      	strb	r3, [r7, #22]
 800a9fc:	e002      	b.n	800aa04 <USBD_LL_DataOutStage+0xb4>
 800a9fe:	2300      	movs	r3, #0
 800aa00:	75bb      	strb	r3, [r7, #22]
 800aa02:	bf00      	nop
 800aa04:	7dbb      	ldrb	r3, [r7, #22]
 800aa06:	2b00      	cmp	r3, #0
 800aa08:	d119      	bne.n	800aa3e <USBD_LL_DataOutStage+0xee>
 800aa0a:	68fb      	ldr	r3, [r7, #12]
 800aa0c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800aa10:	b2db      	uxtb	r3, r3
 800aa12:	2b03      	cmp	r3, #3
 800aa14:	d113      	bne.n	800aa3e <USBD_LL_DataOutStage+0xee>
 800aa16:	7dba      	ldrb	r2, [r7, #22]
 800aa18:	68fb      	ldr	r3, [r7, #12]
 800aa1a:	32ae      	adds	r2, #174	; 0xae
 800aa1c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aa20:	691b      	ldr	r3, [r3, #16]
 800aa22:	2b00      	cmp	r3, #0
 800aa24:	d00b      	beq.n	800aa3e <USBD_LL_DataOutStage+0xee>
 800aa26:	7dba      	ldrb	r2, [r7, #22]
 800aa28:	68fb      	ldr	r3, [r7, #12]
 800aa2a:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800aa2e:	7dba      	ldrb	r2, [r7, #22]
 800aa30:	68fb      	ldr	r3, [r7, #12]
 800aa32:	32ae      	adds	r2, #174	; 0xae
 800aa34:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aa38:	691b      	ldr	r3, [r3, #16]
 800aa3a:	68f8      	ldr	r0, [r7, #12]
 800aa3c:	4798      	blx	r3
 800aa3e:	68f8      	ldr	r0, [r7, #12]
 800aa40:	f001 f950 	bl	800bce4 <USBD_CtlSendStatus>
 800aa44:	e032      	b.n	800aaac <USBD_LL_DataOutStage+0x15c>
 800aa46:	7afb      	ldrb	r3, [r7, #11]
 800aa48:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800aa4c:	b2db      	uxtb	r3, r3
 800aa4e:	4619      	mov	r1, r3
 800aa50:	68f8      	ldr	r0, [r7, #12]
 800aa52:	f000 fa37 	bl	800aec4 <USBD_CoreFindEP>
 800aa56:	4603      	mov	r3, r0
 800aa58:	75bb      	strb	r3, [r7, #22]
 800aa5a:	7dbb      	ldrb	r3, [r7, #22]
 800aa5c:	2bff      	cmp	r3, #255	; 0xff
 800aa5e:	d025      	beq.n	800aaac <USBD_LL_DataOutStage+0x15c>
 800aa60:	7dbb      	ldrb	r3, [r7, #22]
 800aa62:	2b00      	cmp	r3, #0
 800aa64:	d122      	bne.n	800aaac <USBD_LL_DataOutStage+0x15c>
 800aa66:	68fb      	ldr	r3, [r7, #12]
 800aa68:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800aa6c:	b2db      	uxtb	r3, r3
 800aa6e:	2b03      	cmp	r3, #3
 800aa70:	d117      	bne.n	800aaa2 <USBD_LL_DataOutStage+0x152>
 800aa72:	7dba      	ldrb	r2, [r7, #22]
 800aa74:	68fb      	ldr	r3, [r7, #12]
 800aa76:	32ae      	adds	r2, #174	; 0xae
 800aa78:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aa7c:	699b      	ldr	r3, [r3, #24]
 800aa7e:	2b00      	cmp	r3, #0
 800aa80:	d00f      	beq.n	800aaa2 <USBD_LL_DataOutStage+0x152>
 800aa82:	7dba      	ldrb	r2, [r7, #22]
 800aa84:	68fb      	ldr	r3, [r7, #12]
 800aa86:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800aa8a:	7dba      	ldrb	r2, [r7, #22]
 800aa8c:	68fb      	ldr	r3, [r7, #12]
 800aa8e:	32ae      	adds	r2, #174	; 0xae
 800aa90:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aa94:	699b      	ldr	r3, [r3, #24]
 800aa96:	7afa      	ldrb	r2, [r7, #11]
 800aa98:	4611      	mov	r1, r2
 800aa9a:	68f8      	ldr	r0, [r7, #12]
 800aa9c:	4798      	blx	r3
 800aa9e:	4603      	mov	r3, r0
 800aaa0:	75fb      	strb	r3, [r7, #23]
 800aaa2:	7dfb      	ldrb	r3, [r7, #23]
 800aaa4:	2b00      	cmp	r3, #0
 800aaa6:	d001      	beq.n	800aaac <USBD_LL_DataOutStage+0x15c>
 800aaa8:	7dfb      	ldrb	r3, [r7, #23]
 800aaaa:	e000      	b.n	800aaae <USBD_LL_DataOutStage+0x15e>
 800aaac:	2300      	movs	r3, #0
 800aaae:	4618      	mov	r0, r3
 800aab0:	3718      	adds	r7, #24
 800aab2:	46bd      	mov	sp, r7
 800aab4:	bd80      	pop	{r7, pc}

0800aab6 <USBD_LL_DataInStage>:
 800aab6:	b580      	push	{r7, lr}
 800aab8:	b086      	sub	sp, #24
 800aaba:	af00      	add	r7, sp, #0
 800aabc:	60f8      	str	r0, [r7, #12]
 800aabe:	460b      	mov	r3, r1
 800aac0:	607a      	str	r2, [r7, #4]
 800aac2:	72fb      	strb	r3, [r7, #11]
 800aac4:	7afb      	ldrb	r3, [r7, #11]
 800aac6:	2b00      	cmp	r3, #0
 800aac8:	d16f      	bne.n	800abaa <USBD_LL_DataInStage+0xf4>
 800aaca:	68fb      	ldr	r3, [r7, #12]
 800aacc:	3314      	adds	r3, #20
 800aace:	613b      	str	r3, [r7, #16]
 800aad0:	68fb      	ldr	r3, [r7, #12]
 800aad2:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800aad6:	2b02      	cmp	r3, #2
 800aad8:	d15a      	bne.n	800ab90 <USBD_LL_DataInStage+0xda>
 800aada:	693b      	ldr	r3, [r7, #16]
 800aadc:	689a      	ldr	r2, [r3, #8]
 800aade:	693b      	ldr	r3, [r7, #16]
 800aae0:	68db      	ldr	r3, [r3, #12]
 800aae2:	429a      	cmp	r2, r3
 800aae4:	d914      	bls.n	800ab10 <USBD_LL_DataInStage+0x5a>
 800aae6:	693b      	ldr	r3, [r7, #16]
 800aae8:	689a      	ldr	r2, [r3, #8]
 800aaea:	693b      	ldr	r3, [r7, #16]
 800aaec:	68db      	ldr	r3, [r3, #12]
 800aaee:	1ad2      	subs	r2, r2, r3
 800aaf0:	693b      	ldr	r3, [r7, #16]
 800aaf2:	609a      	str	r2, [r3, #8]
 800aaf4:	693b      	ldr	r3, [r7, #16]
 800aaf6:	689b      	ldr	r3, [r3, #8]
 800aaf8:	461a      	mov	r2, r3
 800aafa:	6879      	ldr	r1, [r7, #4]
 800aafc:	68f8      	ldr	r0, [r7, #12]
 800aafe:	f001 f8b2 	bl	800bc66 <USBD_CtlContinueSendData>
 800ab02:	2300      	movs	r3, #0
 800ab04:	2200      	movs	r2, #0
 800ab06:	2100      	movs	r1, #0
 800ab08:	68f8      	ldr	r0, [r7, #12]
 800ab0a:	f001 fdb9 	bl	800c680 <USBD_LL_PrepareReceive>
 800ab0e:	e03f      	b.n	800ab90 <USBD_LL_DataInStage+0xda>
 800ab10:	693b      	ldr	r3, [r7, #16]
 800ab12:	68da      	ldr	r2, [r3, #12]
 800ab14:	693b      	ldr	r3, [r7, #16]
 800ab16:	689b      	ldr	r3, [r3, #8]
 800ab18:	429a      	cmp	r2, r3
 800ab1a:	d11c      	bne.n	800ab56 <USBD_LL_DataInStage+0xa0>
 800ab1c:	693b      	ldr	r3, [r7, #16]
 800ab1e:	685a      	ldr	r2, [r3, #4]
 800ab20:	693b      	ldr	r3, [r7, #16]
 800ab22:	68db      	ldr	r3, [r3, #12]
 800ab24:	429a      	cmp	r2, r3
 800ab26:	d316      	bcc.n	800ab56 <USBD_LL_DataInStage+0xa0>
 800ab28:	693b      	ldr	r3, [r7, #16]
 800ab2a:	685a      	ldr	r2, [r3, #4]
 800ab2c:	68fb      	ldr	r3, [r7, #12]
 800ab2e:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
 800ab32:	429a      	cmp	r2, r3
 800ab34:	d20f      	bcs.n	800ab56 <USBD_LL_DataInStage+0xa0>
 800ab36:	2200      	movs	r2, #0
 800ab38:	2100      	movs	r1, #0
 800ab3a:	68f8      	ldr	r0, [r7, #12]
 800ab3c:	f001 f893 	bl	800bc66 <USBD_CtlContinueSendData>
 800ab40:	68fb      	ldr	r3, [r7, #12]
 800ab42:	2200      	movs	r2, #0
 800ab44:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 800ab48:	2300      	movs	r3, #0
 800ab4a:	2200      	movs	r2, #0
 800ab4c:	2100      	movs	r1, #0
 800ab4e:	68f8      	ldr	r0, [r7, #12]
 800ab50:	f001 fd96 	bl	800c680 <USBD_LL_PrepareReceive>
 800ab54:	e01c      	b.n	800ab90 <USBD_LL_DataInStage+0xda>
 800ab56:	68fb      	ldr	r3, [r7, #12]
 800ab58:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ab5c:	b2db      	uxtb	r3, r3
 800ab5e:	2b03      	cmp	r3, #3
 800ab60:	d10f      	bne.n	800ab82 <USBD_LL_DataInStage+0xcc>
 800ab62:	68fb      	ldr	r3, [r7, #12]
 800ab64:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ab68:	68db      	ldr	r3, [r3, #12]
 800ab6a:	2b00      	cmp	r3, #0
 800ab6c:	d009      	beq.n	800ab82 <USBD_LL_DataInStage+0xcc>
 800ab6e:	68fb      	ldr	r3, [r7, #12]
 800ab70:	2200      	movs	r2, #0
 800ab72:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800ab76:	68fb      	ldr	r3, [r7, #12]
 800ab78:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ab7c:	68db      	ldr	r3, [r3, #12]
 800ab7e:	68f8      	ldr	r0, [r7, #12]
 800ab80:	4798      	blx	r3
 800ab82:	2180      	movs	r1, #128	; 0x80
 800ab84:	68f8      	ldr	r0, [r7, #12]
 800ab86:	f001 fcd1 	bl	800c52c <USBD_LL_StallEP>
 800ab8a:	68f8      	ldr	r0, [r7, #12]
 800ab8c:	f001 f8bd 	bl	800bd0a <USBD_CtlReceiveStatus>
 800ab90:	68fb      	ldr	r3, [r7, #12]
 800ab92:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 800ab96:	2b00      	cmp	r3, #0
 800ab98:	d03a      	beq.n	800ac10 <USBD_LL_DataInStage+0x15a>
 800ab9a:	68f8      	ldr	r0, [r7, #12]
 800ab9c:	f7ff fe42 	bl	800a824 <USBD_RunTestMode>
 800aba0:	68fb      	ldr	r3, [r7, #12]
 800aba2:	2200      	movs	r2, #0
 800aba4:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800aba8:	e032      	b.n	800ac10 <USBD_LL_DataInStage+0x15a>
 800abaa:	7afb      	ldrb	r3, [r7, #11]
 800abac:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800abb0:	b2db      	uxtb	r3, r3
 800abb2:	4619      	mov	r1, r3
 800abb4:	68f8      	ldr	r0, [r7, #12]
 800abb6:	f000 f985 	bl	800aec4 <USBD_CoreFindEP>
 800abba:	4603      	mov	r3, r0
 800abbc:	75fb      	strb	r3, [r7, #23]
 800abbe:	7dfb      	ldrb	r3, [r7, #23]
 800abc0:	2bff      	cmp	r3, #255	; 0xff
 800abc2:	d025      	beq.n	800ac10 <USBD_LL_DataInStage+0x15a>
 800abc4:	7dfb      	ldrb	r3, [r7, #23]
 800abc6:	2b00      	cmp	r3, #0
 800abc8:	d122      	bne.n	800ac10 <USBD_LL_DataInStage+0x15a>
 800abca:	68fb      	ldr	r3, [r7, #12]
 800abcc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800abd0:	b2db      	uxtb	r3, r3
 800abd2:	2b03      	cmp	r3, #3
 800abd4:	d11c      	bne.n	800ac10 <USBD_LL_DataInStage+0x15a>
 800abd6:	7dfa      	ldrb	r2, [r7, #23]
 800abd8:	68fb      	ldr	r3, [r7, #12]
 800abda:	32ae      	adds	r2, #174	; 0xae
 800abdc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800abe0:	695b      	ldr	r3, [r3, #20]
 800abe2:	2b00      	cmp	r3, #0
 800abe4:	d014      	beq.n	800ac10 <USBD_LL_DataInStage+0x15a>
 800abe6:	7dfa      	ldrb	r2, [r7, #23]
 800abe8:	68fb      	ldr	r3, [r7, #12]
 800abea:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800abee:	7dfa      	ldrb	r2, [r7, #23]
 800abf0:	68fb      	ldr	r3, [r7, #12]
 800abf2:	32ae      	adds	r2, #174	; 0xae
 800abf4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800abf8:	695b      	ldr	r3, [r3, #20]
 800abfa:	7afa      	ldrb	r2, [r7, #11]
 800abfc:	4611      	mov	r1, r2
 800abfe:	68f8      	ldr	r0, [r7, #12]
 800ac00:	4798      	blx	r3
 800ac02:	4603      	mov	r3, r0
 800ac04:	75bb      	strb	r3, [r7, #22]
 800ac06:	7dbb      	ldrb	r3, [r7, #22]
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	d001      	beq.n	800ac10 <USBD_LL_DataInStage+0x15a>
 800ac0c:	7dbb      	ldrb	r3, [r7, #22]
 800ac0e:	e000      	b.n	800ac12 <USBD_LL_DataInStage+0x15c>
 800ac10:	2300      	movs	r3, #0
 800ac12:	4618      	mov	r0, r3
 800ac14:	3718      	adds	r7, #24
 800ac16:	46bd      	mov	sp, r7
 800ac18:	bd80      	pop	{r7, pc}

0800ac1a <USBD_LL_Reset>:
 800ac1a:	b580      	push	{r7, lr}
 800ac1c:	b084      	sub	sp, #16
 800ac1e:	af00      	add	r7, sp, #0
 800ac20:	6078      	str	r0, [r7, #4]
 800ac22:	2300      	movs	r3, #0
 800ac24:	73fb      	strb	r3, [r7, #15]
 800ac26:	687b      	ldr	r3, [r7, #4]
 800ac28:	2201      	movs	r2, #1
 800ac2a:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	2200      	movs	r2, #0
 800ac32:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800ac36:	687b      	ldr	r3, [r7, #4]
 800ac38:	2200      	movs	r2, #0
 800ac3a:	605a      	str	r2, [r3, #4]
 800ac3c:	687b      	ldr	r3, [r7, #4]
 800ac3e:	2200      	movs	r2, #0
 800ac40:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 800ac44:	687b      	ldr	r3, [r7, #4]
 800ac46:	2200      	movs	r2, #0
 800ac48:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ac52:	2b00      	cmp	r3, #0
 800ac54:	d014      	beq.n	800ac80 <USBD_LL_Reset+0x66>
 800ac56:	687b      	ldr	r3, [r7, #4]
 800ac58:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ac5c:	685b      	ldr	r3, [r3, #4]
 800ac5e:	2b00      	cmp	r3, #0
 800ac60:	d00e      	beq.n	800ac80 <USBD_LL_Reset+0x66>
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ac68:	685b      	ldr	r3, [r3, #4]
 800ac6a:	687a      	ldr	r2, [r7, #4]
 800ac6c:	6852      	ldr	r2, [r2, #4]
 800ac6e:	b2d2      	uxtb	r2, r2
 800ac70:	4611      	mov	r1, r2
 800ac72:	6878      	ldr	r0, [r7, #4]
 800ac74:	4798      	blx	r3
 800ac76:	4603      	mov	r3, r0
 800ac78:	2b00      	cmp	r3, #0
 800ac7a:	d001      	beq.n	800ac80 <USBD_LL_Reset+0x66>
 800ac7c:	2303      	movs	r3, #3
 800ac7e:	73fb      	strb	r3, [r7, #15]
 800ac80:	2340      	movs	r3, #64	; 0x40
 800ac82:	2200      	movs	r2, #0
 800ac84:	2100      	movs	r1, #0
 800ac86:	6878      	ldr	r0, [r7, #4]
 800ac88:	f001 fc0b 	bl	800c4a2 <USBD_LL_OpenEP>
 800ac8c:	687b      	ldr	r3, [r7, #4]
 800ac8e:	2201      	movs	r2, #1
 800ac90:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164
 800ac94:	687b      	ldr	r3, [r7, #4]
 800ac96:	2240      	movs	r2, #64	; 0x40
 800ac98:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160
 800ac9c:	2340      	movs	r3, #64	; 0x40
 800ac9e:	2200      	movs	r2, #0
 800aca0:	2180      	movs	r1, #128	; 0x80
 800aca2:	6878      	ldr	r0, [r7, #4]
 800aca4:	f001 fbfd 	bl	800c4a2 <USBD_LL_OpenEP>
 800aca8:	687b      	ldr	r3, [r7, #4]
 800acaa:	2201      	movs	r2, #1
 800acac:	849a      	strh	r2, [r3, #36]	; 0x24
 800acae:	687b      	ldr	r3, [r7, #4]
 800acb0:	2240      	movs	r2, #64	; 0x40
 800acb2:	621a      	str	r2, [r3, #32]
 800acb4:	7bfb      	ldrb	r3, [r7, #15]
 800acb6:	4618      	mov	r0, r3
 800acb8:	3710      	adds	r7, #16
 800acba:	46bd      	mov	sp, r7
 800acbc:	bd80      	pop	{r7, pc}

0800acbe <USBD_LL_SetSpeed>:
 800acbe:	b480      	push	{r7}
 800acc0:	b083      	sub	sp, #12
 800acc2:	af00      	add	r7, sp, #0
 800acc4:	6078      	str	r0, [r7, #4]
 800acc6:	460b      	mov	r3, r1
 800acc8:	70fb      	strb	r3, [r7, #3]
 800acca:	687b      	ldr	r3, [r7, #4]
 800accc:	78fa      	ldrb	r2, [r7, #3]
 800acce:	741a      	strb	r2, [r3, #16]
 800acd0:	2300      	movs	r3, #0
 800acd2:	4618      	mov	r0, r3
 800acd4:	370c      	adds	r7, #12
 800acd6:	46bd      	mov	sp, r7
 800acd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acdc:	4770      	bx	lr

0800acde <USBD_LL_Suspend>:
 800acde:	b480      	push	{r7}
 800ace0:	b083      	sub	sp, #12
 800ace2:	af00      	add	r7, sp, #0
 800ace4:	6078      	str	r0, [r7, #4]
 800ace6:	687b      	ldr	r3, [r7, #4]
 800ace8:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800acec:	b2db      	uxtb	r3, r3
 800acee:	2b04      	cmp	r3, #4
 800acf0:	d006      	beq.n	800ad00 <USBD_LL_Suspend+0x22>
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800acf8:	b2da      	uxtb	r2, r3
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
 800ad00:	687b      	ldr	r3, [r7, #4]
 800ad02:	2204      	movs	r2, #4
 800ad04:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800ad08:	2300      	movs	r3, #0
 800ad0a:	4618      	mov	r0, r3
 800ad0c:	370c      	adds	r7, #12
 800ad0e:	46bd      	mov	sp, r7
 800ad10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad14:	4770      	bx	lr

0800ad16 <USBD_LL_Resume>:
 800ad16:	b480      	push	{r7}
 800ad18:	b083      	sub	sp, #12
 800ad1a:	af00      	add	r7, sp, #0
 800ad1c:	6078      	str	r0, [r7, #4]
 800ad1e:	687b      	ldr	r3, [r7, #4]
 800ad20:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ad24:	b2db      	uxtb	r3, r3
 800ad26:	2b04      	cmp	r3, #4
 800ad28:	d106      	bne.n	800ad38 <USBD_LL_Resume+0x22>
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	f893 329d 	ldrb.w	r3, [r3, #669]	; 0x29d
 800ad30:	b2da      	uxtb	r2, r3
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800ad38:	2300      	movs	r3, #0
 800ad3a:	4618      	mov	r0, r3
 800ad3c:	370c      	adds	r7, #12
 800ad3e:	46bd      	mov	sp, r7
 800ad40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad44:	4770      	bx	lr

0800ad46 <USBD_LL_SOF>:
 800ad46:	b580      	push	{r7, lr}
 800ad48:	b082      	sub	sp, #8
 800ad4a:	af00      	add	r7, sp, #0
 800ad4c:	6078      	str	r0, [r7, #4]
 800ad4e:	687b      	ldr	r3, [r7, #4]
 800ad50:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ad54:	b2db      	uxtb	r3, r3
 800ad56:	2b03      	cmp	r3, #3
 800ad58:	d110      	bne.n	800ad7c <USBD_LL_SOF+0x36>
 800ad5a:	687b      	ldr	r3, [r7, #4]
 800ad5c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ad60:	2b00      	cmp	r3, #0
 800ad62:	d00b      	beq.n	800ad7c <USBD_LL_SOF+0x36>
 800ad64:	687b      	ldr	r3, [r7, #4]
 800ad66:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ad6a:	69db      	ldr	r3, [r3, #28]
 800ad6c:	2b00      	cmp	r3, #0
 800ad6e:	d005      	beq.n	800ad7c <USBD_LL_SOF+0x36>
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ad76:	69db      	ldr	r3, [r3, #28]
 800ad78:	6878      	ldr	r0, [r7, #4]
 800ad7a:	4798      	blx	r3
 800ad7c:	2300      	movs	r3, #0
 800ad7e:	4618      	mov	r0, r3
 800ad80:	3708      	adds	r7, #8
 800ad82:	46bd      	mov	sp, r7
 800ad84:	bd80      	pop	{r7, pc}

0800ad86 <USBD_LL_IsoINIncomplete>:
 800ad86:	b580      	push	{r7, lr}
 800ad88:	b082      	sub	sp, #8
 800ad8a:	af00      	add	r7, sp, #0
 800ad8c:	6078      	str	r0, [r7, #4]
 800ad8e:	460b      	mov	r3, r1
 800ad90:	70fb      	strb	r3, [r7, #3]
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	32ae      	adds	r2, #174	; 0xae
 800ad9c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ada0:	2b00      	cmp	r3, #0
 800ada2:	d101      	bne.n	800ada8 <USBD_LL_IsoINIncomplete+0x22>
 800ada4:	2303      	movs	r3, #3
 800ada6:	e01c      	b.n	800ade2 <USBD_LL_IsoINIncomplete+0x5c>
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800adae:	b2db      	uxtb	r3, r3
 800adb0:	2b03      	cmp	r3, #3
 800adb2:	d115      	bne.n	800ade0 <USBD_LL_IsoINIncomplete+0x5a>
 800adb4:	687b      	ldr	r3, [r7, #4]
 800adb6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800adba:	687b      	ldr	r3, [r7, #4]
 800adbc:	32ae      	adds	r2, #174	; 0xae
 800adbe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800adc2:	6a1b      	ldr	r3, [r3, #32]
 800adc4:	2b00      	cmp	r3, #0
 800adc6:	d00b      	beq.n	800ade0 <USBD_LL_IsoINIncomplete+0x5a>
 800adc8:	687b      	ldr	r3, [r7, #4]
 800adca:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800adce:	687b      	ldr	r3, [r7, #4]
 800add0:	32ae      	adds	r2, #174	; 0xae
 800add2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800add6:	6a1b      	ldr	r3, [r3, #32]
 800add8:	78fa      	ldrb	r2, [r7, #3]
 800adda:	4611      	mov	r1, r2
 800addc:	6878      	ldr	r0, [r7, #4]
 800adde:	4798      	blx	r3
 800ade0:	2300      	movs	r3, #0
 800ade2:	4618      	mov	r0, r3
 800ade4:	3708      	adds	r7, #8
 800ade6:	46bd      	mov	sp, r7
 800ade8:	bd80      	pop	{r7, pc}

0800adea <USBD_LL_IsoOUTIncomplete>:
 800adea:	b580      	push	{r7, lr}
 800adec:	b082      	sub	sp, #8
 800adee:	af00      	add	r7, sp, #0
 800adf0:	6078      	str	r0, [r7, #4]
 800adf2:	460b      	mov	r3, r1
 800adf4:	70fb      	strb	r3, [r7, #3]
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800adfc:	687b      	ldr	r3, [r7, #4]
 800adfe:	32ae      	adds	r2, #174	; 0xae
 800ae00:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ae04:	2b00      	cmp	r3, #0
 800ae06:	d101      	bne.n	800ae0c <USBD_LL_IsoOUTIncomplete+0x22>
 800ae08:	2303      	movs	r3, #3
 800ae0a:	e01c      	b.n	800ae46 <USBD_LL_IsoOUTIncomplete+0x5c>
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ae12:	b2db      	uxtb	r3, r3
 800ae14:	2b03      	cmp	r3, #3
 800ae16:	d115      	bne.n	800ae44 <USBD_LL_IsoOUTIncomplete+0x5a>
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800ae1e:	687b      	ldr	r3, [r7, #4]
 800ae20:	32ae      	adds	r2, #174	; 0xae
 800ae22:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ae26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ae28:	2b00      	cmp	r3, #0
 800ae2a:	d00b      	beq.n	800ae44 <USBD_LL_IsoOUTIncomplete+0x5a>
 800ae2c:	687b      	ldr	r3, [r7, #4]
 800ae2e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800ae32:	687b      	ldr	r3, [r7, #4]
 800ae34:	32ae      	adds	r2, #174	; 0xae
 800ae36:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ae3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ae3c:	78fa      	ldrb	r2, [r7, #3]
 800ae3e:	4611      	mov	r1, r2
 800ae40:	6878      	ldr	r0, [r7, #4]
 800ae42:	4798      	blx	r3
 800ae44:	2300      	movs	r3, #0
 800ae46:	4618      	mov	r0, r3
 800ae48:	3708      	adds	r7, #8
 800ae4a:	46bd      	mov	sp, r7
 800ae4c:	bd80      	pop	{r7, pc}

0800ae4e <USBD_LL_DevConnected>:
 800ae4e:	b480      	push	{r7}
 800ae50:	b083      	sub	sp, #12
 800ae52:	af00      	add	r7, sp, #0
 800ae54:	6078      	str	r0, [r7, #4]
 800ae56:	2300      	movs	r3, #0
 800ae58:	4618      	mov	r0, r3
 800ae5a:	370c      	adds	r7, #12
 800ae5c:	46bd      	mov	sp, r7
 800ae5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae62:	4770      	bx	lr

0800ae64 <USBD_LL_DevDisconnected>:
 800ae64:	b580      	push	{r7, lr}
 800ae66:	b084      	sub	sp, #16
 800ae68:	af00      	add	r7, sp, #0
 800ae6a:	6078      	str	r0, [r7, #4]
 800ae6c:	2300      	movs	r3, #0
 800ae6e:	73fb      	strb	r3, [r7, #15]
 800ae70:	687b      	ldr	r3, [r7, #4]
 800ae72:	2201      	movs	r2, #1
 800ae74:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800ae78:	687b      	ldr	r3, [r7, #4]
 800ae7a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ae7e:	2b00      	cmp	r3, #0
 800ae80:	d00e      	beq.n	800aea0 <USBD_LL_DevDisconnected+0x3c>
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ae88:	685b      	ldr	r3, [r3, #4]
 800ae8a:	687a      	ldr	r2, [r7, #4]
 800ae8c:	6852      	ldr	r2, [r2, #4]
 800ae8e:	b2d2      	uxtb	r2, r2
 800ae90:	4611      	mov	r1, r2
 800ae92:	6878      	ldr	r0, [r7, #4]
 800ae94:	4798      	blx	r3
 800ae96:	4603      	mov	r3, r0
 800ae98:	2b00      	cmp	r3, #0
 800ae9a:	d001      	beq.n	800aea0 <USBD_LL_DevDisconnected+0x3c>
 800ae9c:	2303      	movs	r3, #3
 800ae9e:	73fb      	strb	r3, [r7, #15]
 800aea0:	7bfb      	ldrb	r3, [r7, #15]
 800aea2:	4618      	mov	r0, r3
 800aea4:	3710      	adds	r7, #16
 800aea6:	46bd      	mov	sp, r7
 800aea8:	bd80      	pop	{r7, pc}

0800aeaa <USBD_CoreFindIF>:
 800aeaa:	b480      	push	{r7}
 800aeac:	b083      	sub	sp, #12
 800aeae:	af00      	add	r7, sp, #0
 800aeb0:	6078      	str	r0, [r7, #4]
 800aeb2:	460b      	mov	r3, r1
 800aeb4:	70fb      	strb	r3, [r7, #3]
 800aeb6:	2300      	movs	r3, #0
 800aeb8:	4618      	mov	r0, r3
 800aeba:	370c      	adds	r7, #12
 800aebc:	46bd      	mov	sp, r7
 800aebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aec2:	4770      	bx	lr

0800aec4 <USBD_CoreFindEP>:
 800aec4:	b480      	push	{r7}
 800aec6:	b083      	sub	sp, #12
 800aec8:	af00      	add	r7, sp, #0
 800aeca:	6078      	str	r0, [r7, #4]
 800aecc:	460b      	mov	r3, r1
 800aece:	70fb      	strb	r3, [r7, #3]
 800aed0:	2300      	movs	r3, #0
 800aed2:	4618      	mov	r0, r3
 800aed4:	370c      	adds	r7, #12
 800aed6:	46bd      	mov	sp, r7
 800aed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aedc:	4770      	bx	lr

0800aede <USBD_GetEpDesc>:
 800aede:	b580      	push	{r7, lr}
 800aee0:	b086      	sub	sp, #24
 800aee2:	af00      	add	r7, sp, #0
 800aee4:	6078      	str	r0, [r7, #4]
 800aee6:	460b      	mov	r3, r1
 800aee8:	70fb      	strb	r3, [r7, #3]
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	617b      	str	r3, [r7, #20]
 800aeee:	687b      	ldr	r3, [r7, #4]
 800aef0:	60fb      	str	r3, [r7, #12]
 800aef2:	2300      	movs	r3, #0
 800aef4:	613b      	str	r3, [r7, #16]
 800aef6:	68fb      	ldr	r3, [r7, #12]
 800aef8:	885b      	ldrh	r3, [r3, #2]
 800aefa:	b29a      	uxth	r2, r3
 800aefc:	68fb      	ldr	r3, [r7, #12]
 800aefe:	781b      	ldrb	r3, [r3, #0]
 800af00:	b29b      	uxth	r3, r3
 800af02:	429a      	cmp	r2, r3
 800af04:	d920      	bls.n	800af48 <USBD_GetEpDesc+0x6a>
 800af06:	68fb      	ldr	r3, [r7, #12]
 800af08:	781b      	ldrb	r3, [r3, #0]
 800af0a:	b29b      	uxth	r3, r3
 800af0c:	817b      	strh	r3, [r7, #10]
 800af0e:	e013      	b.n	800af38 <USBD_GetEpDesc+0x5a>
 800af10:	f107 030a 	add.w	r3, r7, #10
 800af14:	4619      	mov	r1, r3
 800af16:	6978      	ldr	r0, [r7, #20]
 800af18:	f000 f81b 	bl	800af52 <USBD_GetNextDesc>
 800af1c:	6178      	str	r0, [r7, #20]
 800af1e:	697b      	ldr	r3, [r7, #20]
 800af20:	785b      	ldrb	r3, [r3, #1]
 800af22:	2b05      	cmp	r3, #5
 800af24:	d108      	bne.n	800af38 <USBD_GetEpDesc+0x5a>
 800af26:	697b      	ldr	r3, [r7, #20]
 800af28:	613b      	str	r3, [r7, #16]
 800af2a:	693b      	ldr	r3, [r7, #16]
 800af2c:	789b      	ldrb	r3, [r3, #2]
 800af2e:	78fa      	ldrb	r2, [r7, #3]
 800af30:	429a      	cmp	r2, r3
 800af32:	d008      	beq.n	800af46 <USBD_GetEpDesc+0x68>
 800af34:	2300      	movs	r3, #0
 800af36:	613b      	str	r3, [r7, #16]
 800af38:	68fb      	ldr	r3, [r7, #12]
 800af3a:	885b      	ldrh	r3, [r3, #2]
 800af3c:	b29a      	uxth	r2, r3
 800af3e:	897b      	ldrh	r3, [r7, #10]
 800af40:	429a      	cmp	r2, r3
 800af42:	d8e5      	bhi.n	800af10 <USBD_GetEpDesc+0x32>
 800af44:	e000      	b.n	800af48 <USBD_GetEpDesc+0x6a>
 800af46:	bf00      	nop
 800af48:	693b      	ldr	r3, [r7, #16]
 800af4a:	4618      	mov	r0, r3
 800af4c:	3718      	adds	r7, #24
 800af4e:	46bd      	mov	sp, r7
 800af50:	bd80      	pop	{r7, pc}

0800af52 <USBD_GetNextDesc>:
 800af52:	b480      	push	{r7}
 800af54:	b085      	sub	sp, #20
 800af56:	af00      	add	r7, sp, #0
 800af58:	6078      	str	r0, [r7, #4]
 800af5a:	6039      	str	r1, [r7, #0]
 800af5c:	687b      	ldr	r3, [r7, #4]
 800af5e:	60fb      	str	r3, [r7, #12]
 800af60:	683b      	ldr	r3, [r7, #0]
 800af62:	881a      	ldrh	r2, [r3, #0]
 800af64:	68fb      	ldr	r3, [r7, #12]
 800af66:	781b      	ldrb	r3, [r3, #0]
 800af68:	b29b      	uxth	r3, r3
 800af6a:	4413      	add	r3, r2
 800af6c:	b29a      	uxth	r2, r3
 800af6e:	683b      	ldr	r3, [r7, #0]
 800af70:	801a      	strh	r2, [r3, #0]
 800af72:	68fb      	ldr	r3, [r7, #12]
 800af74:	781b      	ldrb	r3, [r3, #0]
 800af76:	461a      	mov	r2, r3
 800af78:	687b      	ldr	r3, [r7, #4]
 800af7a:	4413      	add	r3, r2
 800af7c:	60fb      	str	r3, [r7, #12]
 800af7e:	68fb      	ldr	r3, [r7, #12]
 800af80:	4618      	mov	r0, r3
 800af82:	3714      	adds	r7, #20
 800af84:	46bd      	mov	sp, r7
 800af86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af8a:	4770      	bx	lr

0800af8c <SWAPBYTE>:
 800af8c:	b480      	push	{r7}
 800af8e:	b087      	sub	sp, #28
 800af90:	af00      	add	r7, sp, #0
 800af92:	6078      	str	r0, [r7, #4]
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	617b      	str	r3, [r7, #20]
 800af98:	697b      	ldr	r3, [r7, #20]
 800af9a:	781b      	ldrb	r3, [r3, #0]
 800af9c:	827b      	strh	r3, [r7, #18]
 800af9e:	697b      	ldr	r3, [r7, #20]
 800afa0:	3301      	adds	r3, #1
 800afa2:	617b      	str	r3, [r7, #20]
 800afa4:	697b      	ldr	r3, [r7, #20]
 800afa6:	781b      	ldrb	r3, [r3, #0]
 800afa8:	823b      	strh	r3, [r7, #16]
 800afaa:	8a3b      	ldrh	r3, [r7, #16]
 800afac:	021b      	lsls	r3, r3, #8
 800afae:	b21a      	sxth	r2, r3
 800afb0:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800afb4:	4313      	orrs	r3, r2
 800afb6:	b21b      	sxth	r3, r3
 800afb8:	81fb      	strh	r3, [r7, #14]
 800afba:	89fb      	ldrh	r3, [r7, #14]
 800afbc:	4618      	mov	r0, r3
 800afbe:	371c      	adds	r7, #28
 800afc0:	46bd      	mov	sp, r7
 800afc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc6:	4770      	bx	lr

0800afc8 <USBD_StdDevReq>:
 800afc8:	b580      	push	{r7, lr}
 800afca:	b084      	sub	sp, #16
 800afcc:	af00      	add	r7, sp, #0
 800afce:	6078      	str	r0, [r7, #4]
 800afd0:	6039      	str	r1, [r7, #0]
 800afd2:	2300      	movs	r3, #0
 800afd4:	73fb      	strb	r3, [r7, #15]
 800afd6:	683b      	ldr	r3, [r7, #0]
 800afd8:	781b      	ldrb	r3, [r3, #0]
 800afda:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800afde:	2b40      	cmp	r3, #64	; 0x40
 800afe0:	d005      	beq.n	800afee <USBD_StdDevReq+0x26>
 800afe2:	2b40      	cmp	r3, #64	; 0x40
 800afe4:	d857      	bhi.n	800b096 <USBD_StdDevReq+0xce>
 800afe6:	2b00      	cmp	r3, #0
 800afe8:	d00f      	beq.n	800b00a <USBD_StdDevReq+0x42>
 800afea:	2b20      	cmp	r3, #32
 800afec:	d153      	bne.n	800b096 <USBD_StdDevReq+0xce>
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	32ae      	adds	r2, #174	; 0xae
 800aff8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800affc:	689b      	ldr	r3, [r3, #8]
 800affe:	6839      	ldr	r1, [r7, #0]
 800b000:	6878      	ldr	r0, [r7, #4]
 800b002:	4798      	blx	r3
 800b004:	4603      	mov	r3, r0
 800b006:	73fb      	strb	r3, [r7, #15]
 800b008:	e04a      	b.n	800b0a0 <USBD_StdDevReq+0xd8>
 800b00a:	683b      	ldr	r3, [r7, #0]
 800b00c:	785b      	ldrb	r3, [r3, #1]
 800b00e:	2b09      	cmp	r3, #9
 800b010:	d83b      	bhi.n	800b08a <USBD_StdDevReq+0xc2>
 800b012:	a201      	add	r2, pc, #4	; (adr r2, 800b018 <USBD_StdDevReq+0x50>)
 800b014:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b018:	0800b06d 	.word	0x0800b06d
 800b01c:	0800b081 	.word	0x0800b081
 800b020:	0800b08b 	.word	0x0800b08b
 800b024:	0800b077 	.word	0x0800b077
 800b028:	0800b08b 	.word	0x0800b08b
 800b02c:	0800b04b 	.word	0x0800b04b
 800b030:	0800b041 	.word	0x0800b041
 800b034:	0800b08b 	.word	0x0800b08b
 800b038:	0800b063 	.word	0x0800b063
 800b03c:	0800b055 	.word	0x0800b055
 800b040:	6839      	ldr	r1, [r7, #0]
 800b042:	6878      	ldr	r0, [r7, #4]
 800b044:	f000 fa3c 	bl	800b4c0 <USBD_GetDescriptor>
 800b048:	e024      	b.n	800b094 <USBD_StdDevReq+0xcc>
 800b04a:	6839      	ldr	r1, [r7, #0]
 800b04c:	6878      	ldr	r0, [r7, #4]
 800b04e:	f000 fba1 	bl	800b794 <USBD_SetAddress>
 800b052:	e01f      	b.n	800b094 <USBD_StdDevReq+0xcc>
 800b054:	6839      	ldr	r1, [r7, #0]
 800b056:	6878      	ldr	r0, [r7, #4]
 800b058:	f000 fbe0 	bl	800b81c <USBD_SetConfig>
 800b05c:	4603      	mov	r3, r0
 800b05e:	73fb      	strb	r3, [r7, #15]
 800b060:	e018      	b.n	800b094 <USBD_StdDevReq+0xcc>
 800b062:	6839      	ldr	r1, [r7, #0]
 800b064:	6878      	ldr	r0, [r7, #4]
 800b066:	f000 fc83 	bl	800b970 <USBD_GetConfig>
 800b06a:	e013      	b.n	800b094 <USBD_StdDevReq+0xcc>
 800b06c:	6839      	ldr	r1, [r7, #0]
 800b06e:	6878      	ldr	r0, [r7, #4]
 800b070:	f000 fcb4 	bl	800b9dc <USBD_GetStatus>
 800b074:	e00e      	b.n	800b094 <USBD_StdDevReq+0xcc>
 800b076:	6839      	ldr	r1, [r7, #0]
 800b078:	6878      	ldr	r0, [r7, #4]
 800b07a:	f000 fce3 	bl	800ba44 <USBD_SetFeature>
 800b07e:	e009      	b.n	800b094 <USBD_StdDevReq+0xcc>
 800b080:	6839      	ldr	r1, [r7, #0]
 800b082:	6878      	ldr	r0, [r7, #4]
 800b084:	f000 fd07 	bl	800ba96 <USBD_ClrFeature>
 800b088:	e004      	b.n	800b094 <USBD_StdDevReq+0xcc>
 800b08a:	6839      	ldr	r1, [r7, #0]
 800b08c:	6878      	ldr	r0, [r7, #4]
 800b08e:	f000 fd5e 	bl	800bb4e <USBD_CtlError>
 800b092:	bf00      	nop
 800b094:	e004      	b.n	800b0a0 <USBD_StdDevReq+0xd8>
 800b096:	6839      	ldr	r1, [r7, #0]
 800b098:	6878      	ldr	r0, [r7, #4]
 800b09a:	f000 fd58 	bl	800bb4e <USBD_CtlError>
 800b09e:	bf00      	nop
 800b0a0:	7bfb      	ldrb	r3, [r7, #15]
 800b0a2:	4618      	mov	r0, r3
 800b0a4:	3710      	adds	r7, #16
 800b0a6:	46bd      	mov	sp, r7
 800b0a8:	bd80      	pop	{r7, pc}
 800b0aa:	bf00      	nop

0800b0ac <USBD_StdItfReq>:
 800b0ac:	b580      	push	{r7, lr}
 800b0ae:	b084      	sub	sp, #16
 800b0b0:	af00      	add	r7, sp, #0
 800b0b2:	6078      	str	r0, [r7, #4]
 800b0b4:	6039      	str	r1, [r7, #0]
 800b0b6:	2300      	movs	r3, #0
 800b0b8:	73fb      	strb	r3, [r7, #15]
 800b0ba:	683b      	ldr	r3, [r7, #0]
 800b0bc:	781b      	ldrb	r3, [r3, #0]
 800b0be:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800b0c2:	2b40      	cmp	r3, #64	; 0x40
 800b0c4:	d005      	beq.n	800b0d2 <USBD_StdItfReq+0x26>
 800b0c6:	2b40      	cmp	r3, #64	; 0x40
 800b0c8:	d852      	bhi.n	800b170 <USBD_StdItfReq+0xc4>
 800b0ca:	2b00      	cmp	r3, #0
 800b0cc:	d001      	beq.n	800b0d2 <USBD_StdItfReq+0x26>
 800b0ce:	2b20      	cmp	r3, #32
 800b0d0:	d14e      	bne.n	800b170 <USBD_StdItfReq+0xc4>
 800b0d2:	687b      	ldr	r3, [r7, #4]
 800b0d4:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b0d8:	b2db      	uxtb	r3, r3
 800b0da:	3b01      	subs	r3, #1
 800b0dc:	2b02      	cmp	r3, #2
 800b0de:	d840      	bhi.n	800b162 <USBD_StdItfReq+0xb6>
 800b0e0:	683b      	ldr	r3, [r7, #0]
 800b0e2:	889b      	ldrh	r3, [r3, #4]
 800b0e4:	b2db      	uxtb	r3, r3
 800b0e6:	2b01      	cmp	r3, #1
 800b0e8:	d836      	bhi.n	800b158 <USBD_StdItfReq+0xac>
 800b0ea:	683b      	ldr	r3, [r7, #0]
 800b0ec:	889b      	ldrh	r3, [r3, #4]
 800b0ee:	b2db      	uxtb	r3, r3
 800b0f0:	4619      	mov	r1, r3
 800b0f2:	6878      	ldr	r0, [r7, #4]
 800b0f4:	f7ff fed9 	bl	800aeaa <USBD_CoreFindIF>
 800b0f8:	4603      	mov	r3, r0
 800b0fa:	73bb      	strb	r3, [r7, #14]
 800b0fc:	7bbb      	ldrb	r3, [r7, #14]
 800b0fe:	2bff      	cmp	r3, #255	; 0xff
 800b100:	d01d      	beq.n	800b13e <USBD_StdItfReq+0x92>
 800b102:	7bbb      	ldrb	r3, [r7, #14]
 800b104:	2b00      	cmp	r3, #0
 800b106:	d11a      	bne.n	800b13e <USBD_StdItfReq+0x92>
 800b108:	7bba      	ldrb	r2, [r7, #14]
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	32ae      	adds	r2, #174	; 0xae
 800b10e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b112:	689b      	ldr	r3, [r3, #8]
 800b114:	2b00      	cmp	r3, #0
 800b116:	d00f      	beq.n	800b138 <USBD_StdItfReq+0x8c>
 800b118:	7bba      	ldrb	r2, [r7, #14]
 800b11a:	687b      	ldr	r3, [r7, #4]
 800b11c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800b120:	7bba      	ldrb	r2, [r7, #14]
 800b122:	687b      	ldr	r3, [r7, #4]
 800b124:	32ae      	adds	r2, #174	; 0xae
 800b126:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b12a:	689b      	ldr	r3, [r3, #8]
 800b12c:	6839      	ldr	r1, [r7, #0]
 800b12e:	6878      	ldr	r0, [r7, #4]
 800b130:	4798      	blx	r3
 800b132:	4603      	mov	r3, r0
 800b134:	73fb      	strb	r3, [r7, #15]
 800b136:	e004      	b.n	800b142 <USBD_StdItfReq+0x96>
 800b138:	2303      	movs	r3, #3
 800b13a:	73fb      	strb	r3, [r7, #15]
 800b13c:	e001      	b.n	800b142 <USBD_StdItfReq+0x96>
 800b13e:	2303      	movs	r3, #3
 800b140:	73fb      	strb	r3, [r7, #15]
 800b142:	683b      	ldr	r3, [r7, #0]
 800b144:	88db      	ldrh	r3, [r3, #6]
 800b146:	2b00      	cmp	r3, #0
 800b148:	d110      	bne.n	800b16c <USBD_StdItfReq+0xc0>
 800b14a:	7bfb      	ldrb	r3, [r7, #15]
 800b14c:	2b00      	cmp	r3, #0
 800b14e:	d10d      	bne.n	800b16c <USBD_StdItfReq+0xc0>
 800b150:	6878      	ldr	r0, [r7, #4]
 800b152:	f000 fdc7 	bl	800bce4 <USBD_CtlSendStatus>
 800b156:	e009      	b.n	800b16c <USBD_StdItfReq+0xc0>
 800b158:	6839      	ldr	r1, [r7, #0]
 800b15a:	6878      	ldr	r0, [r7, #4]
 800b15c:	f000 fcf7 	bl	800bb4e <USBD_CtlError>
 800b160:	e004      	b.n	800b16c <USBD_StdItfReq+0xc0>
 800b162:	6839      	ldr	r1, [r7, #0]
 800b164:	6878      	ldr	r0, [r7, #4]
 800b166:	f000 fcf2 	bl	800bb4e <USBD_CtlError>
 800b16a:	e000      	b.n	800b16e <USBD_StdItfReq+0xc2>
 800b16c:	bf00      	nop
 800b16e:	e004      	b.n	800b17a <USBD_StdItfReq+0xce>
 800b170:	6839      	ldr	r1, [r7, #0]
 800b172:	6878      	ldr	r0, [r7, #4]
 800b174:	f000 fceb 	bl	800bb4e <USBD_CtlError>
 800b178:	bf00      	nop
 800b17a:	7bfb      	ldrb	r3, [r7, #15]
 800b17c:	4618      	mov	r0, r3
 800b17e:	3710      	adds	r7, #16
 800b180:	46bd      	mov	sp, r7
 800b182:	bd80      	pop	{r7, pc}

0800b184 <USBD_StdEPReq>:
 800b184:	b580      	push	{r7, lr}
 800b186:	b084      	sub	sp, #16
 800b188:	af00      	add	r7, sp, #0
 800b18a:	6078      	str	r0, [r7, #4]
 800b18c:	6039      	str	r1, [r7, #0]
 800b18e:	2300      	movs	r3, #0
 800b190:	73fb      	strb	r3, [r7, #15]
 800b192:	683b      	ldr	r3, [r7, #0]
 800b194:	889b      	ldrh	r3, [r3, #4]
 800b196:	73bb      	strb	r3, [r7, #14]
 800b198:	683b      	ldr	r3, [r7, #0]
 800b19a:	781b      	ldrb	r3, [r3, #0]
 800b19c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800b1a0:	2b40      	cmp	r3, #64	; 0x40
 800b1a2:	d007      	beq.n	800b1b4 <USBD_StdEPReq+0x30>
 800b1a4:	2b40      	cmp	r3, #64	; 0x40
 800b1a6:	f200 817f 	bhi.w	800b4a8 <USBD_StdEPReq+0x324>
 800b1aa:	2b00      	cmp	r3, #0
 800b1ac:	d02a      	beq.n	800b204 <USBD_StdEPReq+0x80>
 800b1ae:	2b20      	cmp	r3, #32
 800b1b0:	f040 817a 	bne.w	800b4a8 <USBD_StdEPReq+0x324>
 800b1b4:	7bbb      	ldrb	r3, [r7, #14]
 800b1b6:	4619      	mov	r1, r3
 800b1b8:	6878      	ldr	r0, [r7, #4]
 800b1ba:	f7ff fe83 	bl	800aec4 <USBD_CoreFindEP>
 800b1be:	4603      	mov	r3, r0
 800b1c0:	737b      	strb	r3, [r7, #13]
 800b1c2:	7b7b      	ldrb	r3, [r7, #13]
 800b1c4:	2bff      	cmp	r3, #255	; 0xff
 800b1c6:	f000 8174 	beq.w	800b4b2 <USBD_StdEPReq+0x32e>
 800b1ca:	7b7b      	ldrb	r3, [r7, #13]
 800b1cc:	2b00      	cmp	r3, #0
 800b1ce:	f040 8170 	bne.w	800b4b2 <USBD_StdEPReq+0x32e>
 800b1d2:	7b7a      	ldrb	r2, [r7, #13]
 800b1d4:	687b      	ldr	r3, [r7, #4]
 800b1d6:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800b1da:	7b7a      	ldrb	r2, [r7, #13]
 800b1dc:	687b      	ldr	r3, [r7, #4]
 800b1de:	32ae      	adds	r2, #174	; 0xae
 800b1e0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b1e4:	689b      	ldr	r3, [r3, #8]
 800b1e6:	2b00      	cmp	r3, #0
 800b1e8:	f000 8163 	beq.w	800b4b2 <USBD_StdEPReq+0x32e>
 800b1ec:	7b7a      	ldrb	r2, [r7, #13]
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	32ae      	adds	r2, #174	; 0xae
 800b1f2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b1f6:	689b      	ldr	r3, [r3, #8]
 800b1f8:	6839      	ldr	r1, [r7, #0]
 800b1fa:	6878      	ldr	r0, [r7, #4]
 800b1fc:	4798      	blx	r3
 800b1fe:	4603      	mov	r3, r0
 800b200:	73fb      	strb	r3, [r7, #15]
 800b202:	e156      	b.n	800b4b2 <USBD_StdEPReq+0x32e>
 800b204:	683b      	ldr	r3, [r7, #0]
 800b206:	785b      	ldrb	r3, [r3, #1]
 800b208:	2b03      	cmp	r3, #3
 800b20a:	d008      	beq.n	800b21e <USBD_StdEPReq+0x9a>
 800b20c:	2b03      	cmp	r3, #3
 800b20e:	f300 8145 	bgt.w	800b49c <USBD_StdEPReq+0x318>
 800b212:	2b00      	cmp	r3, #0
 800b214:	f000 809b 	beq.w	800b34e <USBD_StdEPReq+0x1ca>
 800b218:	2b01      	cmp	r3, #1
 800b21a:	d03c      	beq.n	800b296 <USBD_StdEPReq+0x112>
 800b21c:	e13e      	b.n	800b49c <USBD_StdEPReq+0x318>
 800b21e:	687b      	ldr	r3, [r7, #4]
 800b220:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b224:	b2db      	uxtb	r3, r3
 800b226:	2b02      	cmp	r3, #2
 800b228:	d002      	beq.n	800b230 <USBD_StdEPReq+0xac>
 800b22a:	2b03      	cmp	r3, #3
 800b22c:	d016      	beq.n	800b25c <USBD_StdEPReq+0xd8>
 800b22e:	e02c      	b.n	800b28a <USBD_StdEPReq+0x106>
 800b230:	7bbb      	ldrb	r3, [r7, #14]
 800b232:	2b00      	cmp	r3, #0
 800b234:	d00d      	beq.n	800b252 <USBD_StdEPReq+0xce>
 800b236:	7bbb      	ldrb	r3, [r7, #14]
 800b238:	2b80      	cmp	r3, #128	; 0x80
 800b23a:	d00a      	beq.n	800b252 <USBD_StdEPReq+0xce>
 800b23c:	7bbb      	ldrb	r3, [r7, #14]
 800b23e:	4619      	mov	r1, r3
 800b240:	6878      	ldr	r0, [r7, #4]
 800b242:	f001 f973 	bl	800c52c <USBD_LL_StallEP>
 800b246:	2180      	movs	r1, #128	; 0x80
 800b248:	6878      	ldr	r0, [r7, #4]
 800b24a:	f001 f96f 	bl	800c52c <USBD_LL_StallEP>
 800b24e:	bf00      	nop
 800b250:	e020      	b.n	800b294 <USBD_StdEPReq+0x110>
 800b252:	6839      	ldr	r1, [r7, #0]
 800b254:	6878      	ldr	r0, [r7, #4]
 800b256:	f000 fc7a 	bl	800bb4e <USBD_CtlError>
 800b25a:	e01b      	b.n	800b294 <USBD_StdEPReq+0x110>
 800b25c:	683b      	ldr	r3, [r7, #0]
 800b25e:	885b      	ldrh	r3, [r3, #2]
 800b260:	2b00      	cmp	r3, #0
 800b262:	d10e      	bne.n	800b282 <USBD_StdEPReq+0xfe>
 800b264:	7bbb      	ldrb	r3, [r7, #14]
 800b266:	2b00      	cmp	r3, #0
 800b268:	d00b      	beq.n	800b282 <USBD_StdEPReq+0xfe>
 800b26a:	7bbb      	ldrb	r3, [r7, #14]
 800b26c:	2b80      	cmp	r3, #128	; 0x80
 800b26e:	d008      	beq.n	800b282 <USBD_StdEPReq+0xfe>
 800b270:	683b      	ldr	r3, [r7, #0]
 800b272:	88db      	ldrh	r3, [r3, #6]
 800b274:	2b00      	cmp	r3, #0
 800b276:	d104      	bne.n	800b282 <USBD_StdEPReq+0xfe>
 800b278:	7bbb      	ldrb	r3, [r7, #14]
 800b27a:	4619      	mov	r1, r3
 800b27c:	6878      	ldr	r0, [r7, #4]
 800b27e:	f001 f955 	bl	800c52c <USBD_LL_StallEP>
 800b282:	6878      	ldr	r0, [r7, #4]
 800b284:	f000 fd2e 	bl	800bce4 <USBD_CtlSendStatus>
 800b288:	e004      	b.n	800b294 <USBD_StdEPReq+0x110>
 800b28a:	6839      	ldr	r1, [r7, #0]
 800b28c:	6878      	ldr	r0, [r7, #4]
 800b28e:	f000 fc5e 	bl	800bb4e <USBD_CtlError>
 800b292:	bf00      	nop
 800b294:	e107      	b.n	800b4a6 <USBD_StdEPReq+0x322>
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b29c:	b2db      	uxtb	r3, r3
 800b29e:	2b02      	cmp	r3, #2
 800b2a0:	d002      	beq.n	800b2a8 <USBD_StdEPReq+0x124>
 800b2a2:	2b03      	cmp	r3, #3
 800b2a4:	d016      	beq.n	800b2d4 <USBD_StdEPReq+0x150>
 800b2a6:	e04b      	b.n	800b340 <USBD_StdEPReq+0x1bc>
 800b2a8:	7bbb      	ldrb	r3, [r7, #14]
 800b2aa:	2b00      	cmp	r3, #0
 800b2ac:	d00d      	beq.n	800b2ca <USBD_StdEPReq+0x146>
 800b2ae:	7bbb      	ldrb	r3, [r7, #14]
 800b2b0:	2b80      	cmp	r3, #128	; 0x80
 800b2b2:	d00a      	beq.n	800b2ca <USBD_StdEPReq+0x146>
 800b2b4:	7bbb      	ldrb	r3, [r7, #14]
 800b2b6:	4619      	mov	r1, r3
 800b2b8:	6878      	ldr	r0, [r7, #4]
 800b2ba:	f001 f937 	bl	800c52c <USBD_LL_StallEP>
 800b2be:	2180      	movs	r1, #128	; 0x80
 800b2c0:	6878      	ldr	r0, [r7, #4]
 800b2c2:	f001 f933 	bl	800c52c <USBD_LL_StallEP>
 800b2c6:	bf00      	nop
 800b2c8:	e040      	b.n	800b34c <USBD_StdEPReq+0x1c8>
 800b2ca:	6839      	ldr	r1, [r7, #0]
 800b2cc:	6878      	ldr	r0, [r7, #4]
 800b2ce:	f000 fc3e 	bl	800bb4e <USBD_CtlError>
 800b2d2:	e03b      	b.n	800b34c <USBD_StdEPReq+0x1c8>
 800b2d4:	683b      	ldr	r3, [r7, #0]
 800b2d6:	885b      	ldrh	r3, [r3, #2]
 800b2d8:	2b00      	cmp	r3, #0
 800b2da:	d136      	bne.n	800b34a <USBD_StdEPReq+0x1c6>
 800b2dc:	7bbb      	ldrb	r3, [r7, #14]
 800b2de:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b2e2:	2b00      	cmp	r3, #0
 800b2e4:	d004      	beq.n	800b2f0 <USBD_StdEPReq+0x16c>
 800b2e6:	7bbb      	ldrb	r3, [r7, #14]
 800b2e8:	4619      	mov	r1, r3
 800b2ea:	6878      	ldr	r0, [r7, #4]
 800b2ec:	f001 f93d 	bl	800c56a <USBD_LL_ClearStallEP>
 800b2f0:	6878      	ldr	r0, [r7, #4]
 800b2f2:	f000 fcf7 	bl	800bce4 <USBD_CtlSendStatus>
 800b2f6:	7bbb      	ldrb	r3, [r7, #14]
 800b2f8:	4619      	mov	r1, r3
 800b2fa:	6878      	ldr	r0, [r7, #4]
 800b2fc:	f7ff fde2 	bl	800aec4 <USBD_CoreFindEP>
 800b300:	4603      	mov	r3, r0
 800b302:	737b      	strb	r3, [r7, #13]
 800b304:	7b7b      	ldrb	r3, [r7, #13]
 800b306:	2bff      	cmp	r3, #255	; 0xff
 800b308:	d01f      	beq.n	800b34a <USBD_StdEPReq+0x1c6>
 800b30a:	7b7b      	ldrb	r3, [r7, #13]
 800b30c:	2b00      	cmp	r3, #0
 800b30e:	d11c      	bne.n	800b34a <USBD_StdEPReq+0x1c6>
 800b310:	7b7a      	ldrb	r2, [r7, #13]
 800b312:	687b      	ldr	r3, [r7, #4]
 800b314:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800b318:	7b7a      	ldrb	r2, [r7, #13]
 800b31a:	687b      	ldr	r3, [r7, #4]
 800b31c:	32ae      	adds	r2, #174	; 0xae
 800b31e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b322:	689b      	ldr	r3, [r3, #8]
 800b324:	2b00      	cmp	r3, #0
 800b326:	d010      	beq.n	800b34a <USBD_StdEPReq+0x1c6>
 800b328:	7b7a      	ldrb	r2, [r7, #13]
 800b32a:	687b      	ldr	r3, [r7, #4]
 800b32c:	32ae      	adds	r2, #174	; 0xae
 800b32e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b332:	689b      	ldr	r3, [r3, #8]
 800b334:	6839      	ldr	r1, [r7, #0]
 800b336:	6878      	ldr	r0, [r7, #4]
 800b338:	4798      	blx	r3
 800b33a:	4603      	mov	r3, r0
 800b33c:	73fb      	strb	r3, [r7, #15]
 800b33e:	e004      	b.n	800b34a <USBD_StdEPReq+0x1c6>
 800b340:	6839      	ldr	r1, [r7, #0]
 800b342:	6878      	ldr	r0, [r7, #4]
 800b344:	f000 fc03 	bl	800bb4e <USBD_CtlError>
 800b348:	e000      	b.n	800b34c <USBD_StdEPReq+0x1c8>
 800b34a:	bf00      	nop
 800b34c:	e0ab      	b.n	800b4a6 <USBD_StdEPReq+0x322>
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b354:	b2db      	uxtb	r3, r3
 800b356:	2b02      	cmp	r3, #2
 800b358:	d002      	beq.n	800b360 <USBD_StdEPReq+0x1dc>
 800b35a:	2b03      	cmp	r3, #3
 800b35c:	d032      	beq.n	800b3c4 <USBD_StdEPReq+0x240>
 800b35e:	e097      	b.n	800b490 <USBD_StdEPReq+0x30c>
 800b360:	7bbb      	ldrb	r3, [r7, #14]
 800b362:	2b00      	cmp	r3, #0
 800b364:	d007      	beq.n	800b376 <USBD_StdEPReq+0x1f2>
 800b366:	7bbb      	ldrb	r3, [r7, #14]
 800b368:	2b80      	cmp	r3, #128	; 0x80
 800b36a:	d004      	beq.n	800b376 <USBD_StdEPReq+0x1f2>
 800b36c:	6839      	ldr	r1, [r7, #0]
 800b36e:	6878      	ldr	r0, [r7, #4]
 800b370:	f000 fbed 	bl	800bb4e <USBD_CtlError>
 800b374:	e091      	b.n	800b49a <USBD_StdEPReq+0x316>
 800b376:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b37a:	2b00      	cmp	r3, #0
 800b37c:	da0b      	bge.n	800b396 <USBD_StdEPReq+0x212>
 800b37e:	7bbb      	ldrb	r3, [r7, #14]
 800b380:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800b384:	4613      	mov	r3, r2
 800b386:	009b      	lsls	r3, r3, #2
 800b388:	4413      	add	r3, r2
 800b38a:	009b      	lsls	r3, r3, #2
 800b38c:	3310      	adds	r3, #16
 800b38e:	687a      	ldr	r2, [r7, #4]
 800b390:	4413      	add	r3, r2
 800b392:	3304      	adds	r3, #4
 800b394:	e00b      	b.n	800b3ae <USBD_StdEPReq+0x22a>
 800b396:	7bbb      	ldrb	r3, [r7, #14]
 800b398:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800b39c:	4613      	mov	r3, r2
 800b39e:	009b      	lsls	r3, r3, #2
 800b3a0:	4413      	add	r3, r2
 800b3a2:	009b      	lsls	r3, r3, #2
 800b3a4:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800b3a8:	687a      	ldr	r2, [r7, #4]
 800b3aa:	4413      	add	r3, r2
 800b3ac:	3304      	adds	r3, #4
 800b3ae:	60bb      	str	r3, [r7, #8]
 800b3b0:	68bb      	ldr	r3, [r7, #8]
 800b3b2:	2200      	movs	r2, #0
 800b3b4:	601a      	str	r2, [r3, #0]
 800b3b6:	68bb      	ldr	r3, [r7, #8]
 800b3b8:	2202      	movs	r2, #2
 800b3ba:	4619      	mov	r1, r3
 800b3bc:	6878      	ldr	r0, [r7, #4]
 800b3be:	f000 fc37 	bl	800bc30 <USBD_CtlSendData>
 800b3c2:	e06a      	b.n	800b49a <USBD_StdEPReq+0x316>
 800b3c4:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b3c8:	2b00      	cmp	r3, #0
 800b3ca:	da11      	bge.n	800b3f0 <USBD_StdEPReq+0x26c>
 800b3cc:	7bbb      	ldrb	r3, [r7, #14]
 800b3ce:	f003 020f 	and.w	r2, r3, #15
 800b3d2:	6879      	ldr	r1, [r7, #4]
 800b3d4:	4613      	mov	r3, r2
 800b3d6:	009b      	lsls	r3, r3, #2
 800b3d8:	4413      	add	r3, r2
 800b3da:	009b      	lsls	r3, r3, #2
 800b3dc:	440b      	add	r3, r1
 800b3de:	3324      	adds	r3, #36	; 0x24
 800b3e0:	881b      	ldrh	r3, [r3, #0]
 800b3e2:	2b00      	cmp	r3, #0
 800b3e4:	d117      	bne.n	800b416 <USBD_StdEPReq+0x292>
 800b3e6:	6839      	ldr	r1, [r7, #0]
 800b3e8:	6878      	ldr	r0, [r7, #4]
 800b3ea:	f000 fbb0 	bl	800bb4e <USBD_CtlError>
 800b3ee:	e054      	b.n	800b49a <USBD_StdEPReq+0x316>
 800b3f0:	7bbb      	ldrb	r3, [r7, #14]
 800b3f2:	f003 020f 	and.w	r2, r3, #15
 800b3f6:	6879      	ldr	r1, [r7, #4]
 800b3f8:	4613      	mov	r3, r2
 800b3fa:	009b      	lsls	r3, r3, #2
 800b3fc:	4413      	add	r3, r2
 800b3fe:	009b      	lsls	r3, r3, #2
 800b400:	440b      	add	r3, r1
 800b402:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800b406:	881b      	ldrh	r3, [r3, #0]
 800b408:	2b00      	cmp	r3, #0
 800b40a:	d104      	bne.n	800b416 <USBD_StdEPReq+0x292>
 800b40c:	6839      	ldr	r1, [r7, #0]
 800b40e:	6878      	ldr	r0, [r7, #4]
 800b410:	f000 fb9d 	bl	800bb4e <USBD_CtlError>
 800b414:	e041      	b.n	800b49a <USBD_StdEPReq+0x316>
 800b416:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b41a:	2b00      	cmp	r3, #0
 800b41c:	da0b      	bge.n	800b436 <USBD_StdEPReq+0x2b2>
 800b41e:	7bbb      	ldrb	r3, [r7, #14]
 800b420:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800b424:	4613      	mov	r3, r2
 800b426:	009b      	lsls	r3, r3, #2
 800b428:	4413      	add	r3, r2
 800b42a:	009b      	lsls	r3, r3, #2
 800b42c:	3310      	adds	r3, #16
 800b42e:	687a      	ldr	r2, [r7, #4]
 800b430:	4413      	add	r3, r2
 800b432:	3304      	adds	r3, #4
 800b434:	e00b      	b.n	800b44e <USBD_StdEPReq+0x2ca>
 800b436:	7bbb      	ldrb	r3, [r7, #14]
 800b438:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800b43c:	4613      	mov	r3, r2
 800b43e:	009b      	lsls	r3, r3, #2
 800b440:	4413      	add	r3, r2
 800b442:	009b      	lsls	r3, r3, #2
 800b444:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800b448:	687a      	ldr	r2, [r7, #4]
 800b44a:	4413      	add	r3, r2
 800b44c:	3304      	adds	r3, #4
 800b44e:	60bb      	str	r3, [r7, #8]
 800b450:	7bbb      	ldrb	r3, [r7, #14]
 800b452:	2b00      	cmp	r3, #0
 800b454:	d002      	beq.n	800b45c <USBD_StdEPReq+0x2d8>
 800b456:	7bbb      	ldrb	r3, [r7, #14]
 800b458:	2b80      	cmp	r3, #128	; 0x80
 800b45a:	d103      	bne.n	800b464 <USBD_StdEPReq+0x2e0>
 800b45c:	68bb      	ldr	r3, [r7, #8]
 800b45e:	2200      	movs	r2, #0
 800b460:	601a      	str	r2, [r3, #0]
 800b462:	e00e      	b.n	800b482 <USBD_StdEPReq+0x2fe>
 800b464:	7bbb      	ldrb	r3, [r7, #14]
 800b466:	4619      	mov	r1, r3
 800b468:	6878      	ldr	r0, [r7, #4]
 800b46a:	f001 f89d 	bl	800c5a8 <USBD_LL_IsStallEP>
 800b46e:	4603      	mov	r3, r0
 800b470:	2b00      	cmp	r3, #0
 800b472:	d003      	beq.n	800b47c <USBD_StdEPReq+0x2f8>
 800b474:	68bb      	ldr	r3, [r7, #8]
 800b476:	2201      	movs	r2, #1
 800b478:	601a      	str	r2, [r3, #0]
 800b47a:	e002      	b.n	800b482 <USBD_StdEPReq+0x2fe>
 800b47c:	68bb      	ldr	r3, [r7, #8]
 800b47e:	2200      	movs	r2, #0
 800b480:	601a      	str	r2, [r3, #0]
 800b482:	68bb      	ldr	r3, [r7, #8]
 800b484:	2202      	movs	r2, #2
 800b486:	4619      	mov	r1, r3
 800b488:	6878      	ldr	r0, [r7, #4]
 800b48a:	f000 fbd1 	bl	800bc30 <USBD_CtlSendData>
 800b48e:	e004      	b.n	800b49a <USBD_StdEPReq+0x316>
 800b490:	6839      	ldr	r1, [r7, #0]
 800b492:	6878      	ldr	r0, [r7, #4]
 800b494:	f000 fb5b 	bl	800bb4e <USBD_CtlError>
 800b498:	bf00      	nop
 800b49a:	e004      	b.n	800b4a6 <USBD_StdEPReq+0x322>
 800b49c:	6839      	ldr	r1, [r7, #0]
 800b49e:	6878      	ldr	r0, [r7, #4]
 800b4a0:	f000 fb55 	bl	800bb4e <USBD_CtlError>
 800b4a4:	bf00      	nop
 800b4a6:	e005      	b.n	800b4b4 <USBD_StdEPReq+0x330>
 800b4a8:	6839      	ldr	r1, [r7, #0]
 800b4aa:	6878      	ldr	r0, [r7, #4]
 800b4ac:	f000 fb4f 	bl	800bb4e <USBD_CtlError>
 800b4b0:	e000      	b.n	800b4b4 <USBD_StdEPReq+0x330>
 800b4b2:	bf00      	nop
 800b4b4:	7bfb      	ldrb	r3, [r7, #15]
 800b4b6:	4618      	mov	r0, r3
 800b4b8:	3710      	adds	r7, #16
 800b4ba:	46bd      	mov	sp, r7
 800b4bc:	bd80      	pop	{r7, pc}
	...

0800b4c0 <USBD_GetDescriptor>:
 800b4c0:	b580      	push	{r7, lr}
 800b4c2:	b084      	sub	sp, #16
 800b4c4:	af00      	add	r7, sp, #0
 800b4c6:	6078      	str	r0, [r7, #4]
 800b4c8:	6039      	str	r1, [r7, #0]
 800b4ca:	2300      	movs	r3, #0
 800b4cc:	813b      	strh	r3, [r7, #8]
 800b4ce:	2300      	movs	r3, #0
 800b4d0:	60fb      	str	r3, [r7, #12]
 800b4d2:	2300      	movs	r3, #0
 800b4d4:	72fb      	strb	r3, [r7, #11]
 800b4d6:	683b      	ldr	r3, [r7, #0]
 800b4d8:	885b      	ldrh	r3, [r3, #2]
 800b4da:	0a1b      	lsrs	r3, r3, #8
 800b4dc:	b29b      	uxth	r3, r3
 800b4de:	3b01      	subs	r3, #1
 800b4e0:	2b06      	cmp	r3, #6
 800b4e2:	f200 8128 	bhi.w	800b736 <USBD_GetDescriptor+0x276>
 800b4e6:	a201      	add	r2, pc, #4	; (adr r2, 800b4ec <USBD_GetDescriptor+0x2c>)
 800b4e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b4ec:	0800b509 	.word	0x0800b509
 800b4f0:	0800b521 	.word	0x0800b521
 800b4f4:	0800b561 	.word	0x0800b561
 800b4f8:	0800b737 	.word	0x0800b737
 800b4fc:	0800b737 	.word	0x0800b737
 800b500:	0800b6d7 	.word	0x0800b6d7
 800b504:	0800b703 	.word	0x0800b703
 800b508:	687b      	ldr	r3, [r7, #4]
 800b50a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b50e:	681b      	ldr	r3, [r3, #0]
 800b510:	687a      	ldr	r2, [r7, #4]
 800b512:	7c12      	ldrb	r2, [r2, #16]
 800b514:	f107 0108 	add.w	r1, r7, #8
 800b518:	4610      	mov	r0, r2
 800b51a:	4798      	blx	r3
 800b51c:	60f8      	str	r0, [r7, #12]
 800b51e:	e112      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b520:	687b      	ldr	r3, [r7, #4]
 800b522:	7c1b      	ldrb	r3, [r3, #16]
 800b524:	2b00      	cmp	r3, #0
 800b526:	d10d      	bne.n	800b544 <USBD_GetDescriptor+0x84>
 800b528:	687b      	ldr	r3, [r7, #4]
 800b52a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800b52e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b530:	f107 0208 	add.w	r2, r7, #8
 800b534:	4610      	mov	r0, r2
 800b536:	4798      	blx	r3
 800b538:	60f8      	str	r0, [r7, #12]
 800b53a:	68fb      	ldr	r3, [r7, #12]
 800b53c:	3301      	adds	r3, #1
 800b53e:	2202      	movs	r2, #2
 800b540:	701a      	strb	r2, [r3, #0]
 800b542:	e100      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800b54a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b54c:	f107 0208 	add.w	r2, r7, #8
 800b550:	4610      	mov	r0, r2
 800b552:	4798      	blx	r3
 800b554:	60f8      	str	r0, [r7, #12]
 800b556:	68fb      	ldr	r3, [r7, #12]
 800b558:	3301      	adds	r3, #1
 800b55a:	2202      	movs	r2, #2
 800b55c:	701a      	strb	r2, [r3, #0]
 800b55e:	e0f2      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b560:	683b      	ldr	r3, [r7, #0]
 800b562:	885b      	ldrh	r3, [r3, #2]
 800b564:	b2db      	uxtb	r3, r3
 800b566:	2b05      	cmp	r3, #5
 800b568:	f200 80ac 	bhi.w	800b6c4 <USBD_GetDescriptor+0x204>
 800b56c:	a201      	add	r2, pc, #4	; (adr r2, 800b574 <USBD_GetDescriptor+0xb4>)
 800b56e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b572:	bf00      	nop
 800b574:	0800b58d 	.word	0x0800b58d
 800b578:	0800b5c1 	.word	0x0800b5c1
 800b57c:	0800b5f5 	.word	0x0800b5f5
 800b580:	0800b629 	.word	0x0800b629
 800b584:	0800b65d 	.word	0x0800b65d
 800b588:	0800b691 	.word	0x0800b691
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b592:	685b      	ldr	r3, [r3, #4]
 800b594:	2b00      	cmp	r3, #0
 800b596:	d00b      	beq.n	800b5b0 <USBD_GetDescriptor+0xf0>
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b59e:	685b      	ldr	r3, [r3, #4]
 800b5a0:	687a      	ldr	r2, [r7, #4]
 800b5a2:	7c12      	ldrb	r2, [r2, #16]
 800b5a4:	f107 0108 	add.w	r1, r7, #8
 800b5a8:	4610      	mov	r0, r2
 800b5aa:	4798      	blx	r3
 800b5ac:	60f8      	str	r0, [r7, #12]
 800b5ae:	e091      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b5b0:	6839      	ldr	r1, [r7, #0]
 800b5b2:	6878      	ldr	r0, [r7, #4]
 800b5b4:	f000 facb 	bl	800bb4e <USBD_CtlError>
 800b5b8:	7afb      	ldrb	r3, [r7, #11]
 800b5ba:	3301      	adds	r3, #1
 800b5bc:	72fb      	strb	r3, [r7, #11]
 800b5be:	e089      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b5c0:	687b      	ldr	r3, [r7, #4]
 800b5c2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b5c6:	689b      	ldr	r3, [r3, #8]
 800b5c8:	2b00      	cmp	r3, #0
 800b5ca:	d00b      	beq.n	800b5e4 <USBD_GetDescriptor+0x124>
 800b5cc:	687b      	ldr	r3, [r7, #4]
 800b5ce:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b5d2:	689b      	ldr	r3, [r3, #8]
 800b5d4:	687a      	ldr	r2, [r7, #4]
 800b5d6:	7c12      	ldrb	r2, [r2, #16]
 800b5d8:	f107 0108 	add.w	r1, r7, #8
 800b5dc:	4610      	mov	r0, r2
 800b5de:	4798      	blx	r3
 800b5e0:	60f8      	str	r0, [r7, #12]
 800b5e2:	e077      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b5e4:	6839      	ldr	r1, [r7, #0]
 800b5e6:	6878      	ldr	r0, [r7, #4]
 800b5e8:	f000 fab1 	bl	800bb4e <USBD_CtlError>
 800b5ec:	7afb      	ldrb	r3, [r7, #11]
 800b5ee:	3301      	adds	r3, #1
 800b5f0:	72fb      	strb	r3, [r7, #11]
 800b5f2:	e06f      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b5f4:	687b      	ldr	r3, [r7, #4]
 800b5f6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b5fa:	68db      	ldr	r3, [r3, #12]
 800b5fc:	2b00      	cmp	r3, #0
 800b5fe:	d00b      	beq.n	800b618 <USBD_GetDescriptor+0x158>
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b606:	68db      	ldr	r3, [r3, #12]
 800b608:	687a      	ldr	r2, [r7, #4]
 800b60a:	7c12      	ldrb	r2, [r2, #16]
 800b60c:	f107 0108 	add.w	r1, r7, #8
 800b610:	4610      	mov	r0, r2
 800b612:	4798      	blx	r3
 800b614:	60f8      	str	r0, [r7, #12]
 800b616:	e05d      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b618:	6839      	ldr	r1, [r7, #0]
 800b61a:	6878      	ldr	r0, [r7, #4]
 800b61c:	f000 fa97 	bl	800bb4e <USBD_CtlError>
 800b620:	7afb      	ldrb	r3, [r7, #11]
 800b622:	3301      	adds	r3, #1
 800b624:	72fb      	strb	r3, [r7, #11]
 800b626:	e055      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b628:	687b      	ldr	r3, [r7, #4]
 800b62a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b62e:	691b      	ldr	r3, [r3, #16]
 800b630:	2b00      	cmp	r3, #0
 800b632:	d00b      	beq.n	800b64c <USBD_GetDescriptor+0x18c>
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b63a:	691b      	ldr	r3, [r3, #16]
 800b63c:	687a      	ldr	r2, [r7, #4]
 800b63e:	7c12      	ldrb	r2, [r2, #16]
 800b640:	f107 0108 	add.w	r1, r7, #8
 800b644:	4610      	mov	r0, r2
 800b646:	4798      	blx	r3
 800b648:	60f8      	str	r0, [r7, #12]
 800b64a:	e043      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b64c:	6839      	ldr	r1, [r7, #0]
 800b64e:	6878      	ldr	r0, [r7, #4]
 800b650:	f000 fa7d 	bl	800bb4e <USBD_CtlError>
 800b654:	7afb      	ldrb	r3, [r7, #11]
 800b656:	3301      	adds	r3, #1
 800b658:	72fb      	strb	r3, [r7, #11]
 800b65a:	e03b      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b662:	695b      	ldr	r3, [r3, #20]
 800b664:	2b00      	cmp	r3, #0
 800b666:	d00b      	beq.n	800b680 <USBD_GetDescriptor+0x1c0>
 800b668:	687b      	ldr	r3, [r7, #4]
 800b66a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b66e:	695b      	ldr	r3, [r3, #20]
 800b670:	687a      	ldr	r2, [r7, #4]
 800b672:	7c12      	ldrb	r2, [r2, #16]
 800b674:	f107 0108 	add.w	r1, r7, #8
 800b678:	4610      	mov	r0, r2
 800b67a:	4798      	blx	r3
 800b67c:	60f8      	str	r0, [r7, #12]
 800b67e:	e029      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b680:	6839      	ldr	r1, [r7, #0]
 800b682:	6878      	ldr	r0, [r7, #4]
 800b684:	f000 fa63 	bl	800bb4e <USBD_CtlError>
 800b688:	7afb      	ldrb	r3, [r7, #11]
 800b68a:	3301      	adds	r3, #1
 800b68c:	72fb      	strb	r3, [r7, #11]
 800b68e:	e021      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b696:	699b      	ldr	r3, [r3, #24]
 800b698:	2b00      	cmp	r3, #0
 800b69a:	d00b      	beq.n	800b6b4 <USBD_GetDescriptor+0x1f4>
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800b6a2:	699b      	ldr	r3, [r3, #24]
 800b6a4:	687a      	ldr	r2, [r7, #4]
 800b6a6:	7c12      	ldrb	r2, [r2, #16]
 800b6a8:	f107 0108 	add.w	r1, r7, #8
 800b6ac:	4610      	mov	r0, r2
 800b6ae:	4798      	blx	r3
 800b6b0:	60f8      	str	r0, [r7, #12]
 800b6b2:	e00f      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b6b4:	6839      	ldr	r1, [r7, #0]
 800b6b6:	6878      	ldr	r0, [r7, #4]
 800b6b8:	f000 fa49 	bl	800bb4e <USBD_CtlError>
 800b6bc:	7afb      	ldrb	r3, [r7, #11]
 800b6be:	3301      	adds	r3, #1
 800b6c0:	72fb      	strb	r3, [r7, #11]
 800b6c2:	e007      	b.n	800b6d4 <USBD_GetDescriptor+0x214>
 800b6c4:	6839      	ldr	r1, [r7, #0]
 800b6c6:	6878      	ldr	r0, [r7, #4]
 800b6c8:	f000 fa41 	bl	800bb4e <USBD_CtlError>
 800b6cc:	7afb      	ldrb	r3, [r7, #11]
 800b6ce:	3301      	adds	r3, #1
 800b6d0:	72fb      	strb	r3, [r7, #11]
 800b6d2:	bf00      	nop
 800b6d4:	e037      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b6d6:	687b      	ldr	r3, [r7, #4]
 800b6d8:	7c1b      	ldrb	r3, [r3, #16]
 800b6da:	2b00      	cmp	r3, #0
 800b6dc:	d109      	bne.n	800b6f2 <USBD_GetDescriptor+0x232>
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800b6e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b6e6:	f107 0208 	add.w	r2, r7, #8
 800b6ea:	4610      	mov	r0, r2
 800b6ec:	4798      	blx	r3
 800b6ee:	60f8      	str	r0, [r7, #12]
 800b6f0:	e029      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b6f2:	6839      	ldr	r1, [r7, #0]
 800b6f4:	6878      	ldr	r0, [r7, #4]
 800b6f6:	f000 fa2a 	bl	800bb4e <USBD_CtlError>
 800b6fa:	7afb      	ldrb	r3, [r7, #11]
 800b6fc:	3301      	adds	r3, #1
 800b6fe:	72fb      	strb	r3, [r7, #11]
 800b700:	e021      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	7c1b      	ldrb	r3, [r3, #16]
 800b706:	2b00      	cmp	r3, #0
 800b708:	d10d      	bne.n	800b726 <USBD_GetDescriptor+0x266>
 800b70a:	687b      	ldr	r3, [r7, #4]
 800b70c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800b710:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b712:	f107 0208 	add.w	r2, r7, #8
 800b716:	4610      	mov	r0, r2
 800b718:	4798      	blx	r3
 800b71a:	60f8      	str	r0, [r7, #12]
 800b71c:	68fb      	ldr	r3, [r7, #12]
 800b71e:	3301      	adds	r3, #1
 800b720:	2207      	movs	r2, #7
 800b722:	701a      	strb	r2, [r3, #0]
 800b724:	e00f      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b726:	6839      	ldr	r1, [r7, #0]
 800b728:	6878      	ldr	r0, [r7, #4]
 800b72a:	f000 fa10 	bl	800bb4e <USBD_CtlError>
 800b72e:	7afb      	ldrb	r3, [r7, #11]
 800b730:	3301      	adds	r3, #1
 800b732:	72fb      	strb	r3, [r7, #11]
 800b734:	e007      	b.n	800b746 <USBD_GetDescriptor+0x286>
 800b736:	6839      	ldr	r1, [r7, #0]
 800b738:	6878      	ldr	r0, [r7, #4]
 800b73a:	f000 fa08 	bl	800bb4e <USBD_CtlError>
 800b73e:	7afb      	ldrb	r3, [r7, #11]
 800b740:	3301      	adds	r3, #1
 800b742:	72fb      	strb	r3, [r7, #11]
 800b744:	bf00      	nop
 800b746:	7afb      	ldrb	r3, [r7, #11]
 800b748:	2b00      	cmp	r3, #0
 800b74a:	d11e      	bne.n	800b78a <USBD_GetDescriptor+0x2ca>
 800b74c:	683b      	ldr	r3, [r7, #0]
 800b74e:	88db      	ldrh	r3, [r3, #6]
 800b750:	2b00      	cmp	r3, #0
 800b752:	d016      	beq.n	800b782 <USBD_GetDescriptor+0x2c2>
 800b754:	893b      	ldrh	r3, [r7, #8]
 800b756:	2b00      	cmp	r3, #0
 800b758:	d00e      	beq.n	800b778 <USBD_GetDescriptor+0x2b8>
 800b75a:	683b      	ldr	r3, [r7, #0]
 800b75c:	88da      	ldrh	r2, [r3, #6]
 800b75e:	893b      	ldrh	r3, [r7, #8]
 800b760:	4293      	cmp	r3, r2
 800b762:	bf28      	it	cs
 800b764:	4613      	movcs	r3, r2
 800b766:	b29b      	uxth	r3, r3
 800b768:	813b      	strh	r3, [r7, #8]
 800b76a:	893b      	ldrh	r3, [r7, #8]
 800b76c:	461a      	mov	r2, r3
 800b76e:	68f9      	ldr	r1, [r7, #12]
 800b770:	6878      	ldr	r0, [r7, #4]
 800b772:	f000 fa5d 	bl	800bc30 <USBD_CtlSendData>
 800b776:	e009      	b.n	800b78c <USBD_GetDescriptor+0x2cc>
 800b778:	6839      	ldr	r1, [r7, #0]
 800b77a:	6878      	ldr	r0, [r7, #4]
 800b77c:	f000 f9e7 	bl	800bb4e <USBD_CtlError>
 800b780:	e004      	b.n	800b78c <USBD_GetDescriptor+0x2cc>
 800b782:	6878      	ldr	r0, [r7, #4]
 800b784:	f000 faae 	bl	800bce4 <USBD_CtlSendStatus>
 800b788:	e000      	b.n	800b78c <USBD_GetDescriptor+0x2cc>
 800b78a:	bf00      	nop
 800b78c:	3710      	adds	r7, #16
 800b78e:	46bd      	mov	sp, r7
 800b790:	bd80      	pop	{r7, pc}
 800b792:	bf00      	nop

0800b794 <USBD_SetAddress>:
 800b794:	b580      	push	{r7, lr}
 800b796:	b084      	sub	sp, #16
 800b798:	af00      	add	r7, sp, #0
 800b79a:	6078      	str	r0, [r7, #4]
 800b79c:	6039      	str	r1, [r7, #0]
 800b79e:	683b      	ldr	r3, [r7, #0]
 800b7a0:	889b      	ldrh	r3, [r3, #4]
 800b7a2:	2b00      	cmp	r3, #0
 800b7a4:	d131      	bne.n	800b80a <USBD_SetAddress+0x76>
 800b7a6:	683b      	ldr	r3, [r7, #0]
 800b7a8:	88db      	ldrh	r3, [r3, #6]
 800b7aa:	2b00      	cmp	r3, #0
 800b7ac:	d12d      	bne.n	800b80a <USBD_SetAddress+0x76>
 800b7ae:	683b      	ldr	r3, [r7, #0]
 800b7b0:	885b      	ldrh	r3, [r3, #2]
 800b7b2:	2b7f      	cmp	r3, #127	; 0x7f
 800b7b4:	d829      	bhi.n	800b80a <USBD_SetAddress+0x76>
 800b7b6:	683b      	ldr	r3, [r7, #0]
 800b7b8:	885b      	ldrh	r3, [r3, #2]
 800b7ba:	b2db      	uxtb	r3, r3
 800b7bc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b7c0:	73fb      	strb	r3, [r7, #15]
 800b7c2:	687b      	ldr	r3, [r7, #4]
 800b7c4:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b7c8:	b2db      	uxtb	r3, r3
 800b7ca:	2b03      	cmp	r3, #3
 800b7cc:	d104      	bne.n	800b7d8 <USBD_SetAddress+0x44>
 800b7ce:	6839      	ldr	r1, [r7, #0]
 800b7d0:	6878      	ldr	r0, [r7, #4]
 800b7d2:	f000 f9bc 	bl	800bb4e <USBD_CtlError>
 800b7d6:	e01d      	b.n	800b814 <USBD_SetAddress+0x80>
 800b7d8:	687b      	ldr	r3, [r7, #4]
 800b7da:	7bfa      	ldrb	r2, [r7, #15]
 800b7dc:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
 800b7e0:	7bfb      	ldrb	r3, [r7, #15]
 800b7e2:	4619      	mov	r1, r3
 800b7e4:	6878      	ldr	r0, [r7, #4]
 800b7e6:	f000 ff0b 	bl	800c600 <USBD_LL_SetUSBAddress>
 800b7ea:	6878      	ldr	r0, [r7, #4]
 800b7ec:	f000 fa7a 	bl	800bce4 <USBD_CtlSendStatus>
 800b7f0:	7bfb      	ldrb	r3, [r7, #15]
 800b7f2:	2b00      	cmp	r3, #0
 800b7f4:	d004      	beq.n	800b800 <USBD_SetAddress+0x6c>
 800b7f6:	687b      	ldr	r3, [r7, #4]
 800b7f8:	2202      	movs	r2, #2
 800b7fa:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800b7fe:	e009      	b.n	800b814 <USBD_SetAddress+0x80>
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	2201      	movs	r2, #1
 800b804:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800b808:	e004      	b.n	800b814 <USBD_SetAddress+0x80>
 800b80a:	6839      	ldr	r1, [r7, #0]
 800b80c:	6878      	ldr	r0, [r7, #4]
 800b80e:	f000 f99e 	bl	800bb4e <USBD_CtlError>
 800b812:	bf00      	nop
 800b814:	bf00      	nop
 800b816:	3710      	adds	r7, #16
 800b818:	46bd      	mov	sp, r7
 800b81a:	bd80      	pop	{r7, pc}

0800b81c <USBD_SetConfig>:
 800b81c:	b580      	push	{r7, lr}
 800b81e:	b084      	sub	sp, #16
 800b820:	af00      	add	r7, sp, #0
 800b822:	6078      	str	r0, [r7, #4]
 800b824:	6039      	str	r1, [r7, #0]
 800b826:	2300      	movs	r3, #0
 800b828:	73fb      	strb	r3, [r7, #15]
 800b82a:	683b      	ldr	r3, [r7, #0]
 800b82c:	885b      	ldrh	r3, [r3, #2]
 800b82e:	b2da      	uxtb	r2, r3
 800b830:	4b4e      	ldr	r3, [pc, #312]	; (800b96c <USBD_SetConfig+0x150>)
 800b832:	701a      	strb	r2, [r3, #0]
 800b834:	4b4d      	ldr	r3, [pc, #308]	; (800b96c <USBD_SetConfig+0x150>)
 800b836:	781b      	ldrb	r3, [r3, #0]
 800b838:	2b01      	cmp	r3, #1
 800b83a:	d905      	bls.n	800b848 <USBD_SetConfig+0x2c>
 800b83c:	6839      	ldr	r1, [r7, #0]
 800b83e:	6878      	ldr	r0, [r7, #4]
 800b840:	f000 f985 	bl	800bb4e <USBD_CtlError>
 800b844:	2303      	movs	r3, #3
 800b846:	e08c      	b.n	800b962 <USBD_SetConfig+0x146>
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b84e:	b2db      	uxtb	r3, r3
 800b850:	2b02      	cmp	r3, #2
 800b852:	d002      	beq.n	800b85a <USBD_SetConfig+0x3e>
 800b854:	2b03      	cmp	r3, #3
 800b856:	d029      	beq.n	800b8ac <USBD_SetConfig+0x90>
 800b858:	e075      	b.n	800b946 <USBD_SetConfig+0x12a>
 800b85a:	4b44      	ldr	r3, [pc, #272]	; (800b96c <USBD_SetConfig+0x150>)
 800b85c:	781b      	ldrb	r3, [r3, #0]
 800b85e:	2b00      	cmp	r3, #0
 800b860:	d020      	beq.n	800b8a4 <USBD_SetConfig+0x88>
 800b862:	4b42      	ldr	r3, [pc, #264]	; (800b96c <USBD_SetConfig+0x150>)
 800b864:	781b      	ldrb	r3, [r3, #0]
 800b866:	461a      	mov	r2, r3
 800b868:	687b      	ldr	r3, [r7, #4]
 800b86a:	605a      	str	r2, [r3, #4]
 800b86c:	4b3f      	ldr	r3, [pc, #252]	; (800b96c <USBD_SetConfig+0x150>)
 800b86e:	781b      	ldrb	r3, [r3, #0]
 800b870:	4619      	mov	r1, r3
 800b872:	6878      	ldr	r0, [r7, #4]
 800b874:	f7fe ffe1 	bl	800a83a <USBD_SetClassConfig>
 800b878:	4603      	mov	r3, r0
 800b87a:	73fb      	strb	r3, [r7, #15]
 800b87c:	7bfb      	ldrb	r3, [r7, #15]
 800b87e:	2b00      	cmp	r3, #0
 800b880:	d008      	beq.n	800b894 <USBD_SetConfig+0x78>
 800b882:	6839      	ldr	r1, [r7, #0]
 800b884:	6878      	ldr	r0, [r7, #4]
 800b886:	f000 f962 	bl	800bb4e <USBD_CtlError>
 800b88a:	687b      	ldr	r3, [r7, #4]
 800b88c:	2202      	movs	r2, #2
 800b88e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800b892:	e065      	b.n	800b960 <USBD_SetConfig+0x144>
 800b894:	6878      	ldr	r0, [r7, #4]
 800b896:	f000 fa25 	bl	800bce4 <USBD_CtlSendStatus>
 800b89a:	687b      	ldr	r3, [r7, #4]
 800b89c:	2203      	movs	r2, #3
 800b89e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800b8a2:	e05d      	b.n	800b960 <USBD_SetConfig+0x144>
 800b8a4:	6878      	ldr	r0, [r7, #4]
 800b8a6:	f000 fa1d 	bl	800bce4 <USBD_CtlSendStatus>
 800b8aa:	e059      	b.n	800b960 <USBD_SetConfig+0x144>
 800b8ac:	4b2f      	ldr	r3, [pc, #188]	; (800b96c <USBD_SetConfig+0x150>)
 800b8ae:	781b      	ldrb	r3, [r3, #0]
 800b8b0:	2b00      	cmp	r3, #0
 800b8b2:	d112      	bne.n	800b8da <USBD_SetConfig+0xbe>
 800b8b4:	687b      	ldr	r3, [r7, #4]
 800b8b6:	2202      	movs	r2, #2
 800b8b8:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800b8bc:	4b2b      	ldr	r3, [pc, #172]	; (800b96c <USBD_SetConfig+0x150>)
 800b8be:	781b      	ldrb	r3, [r3, #0]
 800b8c0:	461a      	mov	r2, r3
 800b8c2:	687b      	ldr	r3, [r7, #4]
 800b8c4:	605a      	str	r2, [r3, #4]
 800b8c6:	4b29      	ldr	r3, [pc, #164]	; (800b96c <USBD_SetConfig+0x150>)
 800b8c8:	781b      	ldrb	r3, [r3, #0]
 800b8ca:	4619      	mov	r1, r3
 800b8cc:	6878      	ldr	r0, [r7, #4]
 800b8ce:	f7fe ffd0 	bl	800a872 <USBD_ClrClassConfig>
 800b8d2:	6878      	ldr	r0, [r7, #4]
 800b8d4:	f000 fa06 	bl	800bce4 <USBD_CtlSendStatus>
 800b8d8:	e042      	b.n	800b960 <USBD_SetConfig+0x144>
 800b8da:	4b24      	ldr	r3, [pc, #144]	; (800b96c <USBD_SetConfig+0x150>)
 800b8dc:	781b      	ldrb	r3, [r3, #0]
 800b8de:	461a      	mov	r2, r3
 800b8e0:	687b      	ldr	r3, [r7, #4]
 800b8e2:	685b      	ldr	r3, [r3, #4]
 800b8e4:	429a      	cmp	r2, r3
 800b8e6:	d02a      	beq.n	800b93e <USBD_SetConfig+0x122>
 800b8e8:	687b      	ldr	r3, [r7, #4]
 800b8ea:	685b      	ldr	r3, [r3, #4]
 800b8ec:	b2db      	uxtb	r3, r3
 800b8ee:	4619      	mov	r1, r3
 800b8f0:	6878      	ldr	r0, [r7, #4]
 800b8f2:	f7fe ffbe 	bl	800a872 <USBD_ClrClassConfig>
 800b8f6:	4b1d      	ldr	r3, [pc, #116]	; (800b96c <USBD_SetConfig+0x150>)
 800b8f8:	781b      	ldrb	r3, [r3, #0]
 800b8fa:	461a      	mov	r2, r3
 800b8fc:	687b      	ldr	r3, [r7, #4]
 800b8fe:	605a      	str	r2, [r3, #4]
 800b900:	4b1a      	ldr	r3, [pc, #104]	; (800b96c <USBD_SetConfig+0x150>)
 800b902:	781b      	ldrb	r3, [r3, #0]
 800b904:	4619      	mov	r1, r3
 800b906:	6878      	ldr	r0, [r7, #4]
 800b908:	f7fe ff97 	bl	800a83a <USBD_SetClassConfig>
 800b90c:	4603      	mov	r3, r0
 800b90e:	73fb      	strb	r3, [r7, #15]
 800b910:	7bfb      	ldrb	r3, [r7, #15]
 800b912:	2b00      	cmp	r3, #0
 800b914:	d00f      	beq.n	800b936 <USBD_SetConfig+0x11a>
 800b916:	6839      	ldr	r1, [r7, #0]
 800b918:	6878      	ldr	r0, [r7, #4]
 800b91a:	f000 f918 	bl	800bb4e <USBD_CtlError>
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	685b      	ldr	r3, [r3, #4]
 800b922:	b2db      	uxtb	r3, r3
 800b924:	4619      	mov	r1, r3
 800b926:	6878      	ldr	r0, [r7, #4]
 800b928:	f7fe ffa3 	bl	800a872 <USBD_ClrClassConfig>
 800b92c:	687b      	ldr	r3, [r7, #4]
 800b92e:	2202      	movs	r2, #2
 800b930:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800b934:	e014      	b.n	800b960 <USBD_SetConfig+0x144>
 800b936:	6878      	ldr	r0, [r7, #4]
 800b938:	f000 f9d4 	bl	800bce4 <USBD_CtlSendStatus>
 800b93c:	e010      	b.n	800b960 <USBD_SetConfig+0x144>
 800b93e:	6878      	ldr	r0, [r7, #4]
 800b940:	f000 f9d0 	bl	800bce4 <USBD_CtlSendStatus>
 800b944:	e00c      	b.n	800b960 <USBD_SetConfig+0x144>
 800b946:	6839      	ldr	r1, [r7, #0]
 800b948:	6878      	ldr	r0, [r7, #4]
 800b94a:	f000 f900 	bl	800bb4e <USBD_CtlError>
 800b94e:	4b07      	ldr	r3, [pc, #28]	; (800b96c <USBD_SetConfig+0x150>)
 800b950:	781b      	ldrb	r3, [r3, #0]
 800b952:	4619      	mov	r1, r3
 800b954:	6878      	ldr	r0, [r7, #4]
 800b956:	f7fe ff8c 	bl	800a872 <USBD_ClrClassConfig>
 800b95a:	2303      	movs	r3, #3
 800b95c:	73fb      	strb	r3, [r7, #15]
 800b95e:	bf00      	nop
 800b960:	7bfb      	ldrb	r3, [r7, #15]
 800b962:	4618      	mov	r0, r3
 800b964:	3710      	adds	r7, #16
 800b966:	46bd      	mov	sp, r7
 800b968:	bd80      	pop	{r7, pc}
 800b96a:	bf00      	nop
 800b96c:	200006fc 	.word	0x200006fc

0800b970 <USBD_GetConfig>:
 800b970:	b580      	push	{r7, lr}
 800b972:	b082      	sub	sp, #8
 800b974:	af00      	add	r7, sp, #0
 800b976:	6078      	str	r0, [r7, #4]
 800b978:	6039      	str	r1, [r7, #0]
 800b97a:	683b      	ldr	r3, [r7, #0]
 800b97c:	88db      	ldrh	r3, [r3, #6]
 800b97e:	2b01      	cmp	r3, #1
 800b980:	d004      	beq.n	800b98c <USBD_GetConfig+0x1c>
 800b982:	6839      	ldr	r1, [r7, #0]
 800b984:	6878      	ldr	r0, [r7, #4]
 800b986:	f000 f8e2 	bl	800bb4e <USBD_CtlError>
 800b98a:	e023      	b.n	800b9d4 <USBD_GetConfig+0x64>
 800b98c:	687b      	ldr	r3, [r7, #4]
 800b98e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b992:	b2db      	uxtb	r3, r3
 800b994:	2b02      	cmp	r3, #2
 800b996:	dc02      	bgt.n	800b99e <USBD_GetConfig+0x2e>
 800b998:	2b00      	cmp	r3, #0
 800b99a:	dc03      	bgt.n	800b9a4 <USBD_GetConfig+0x34>
 800b99c:	e015      	b.n	800b9ca <USBD_GetConfig+0x5a>
 800b99e:	2b03      	cmp	r3, #3
 800b9a0:	d00b      	beq.n	800b9ba <USBD_GetConfig+0x4a>
 800b9a2:	e012      	b.n	800b9ca <USBD_GetConfig+0x5a>
 800b9a4:	687b      	ldr	r3, [r7, #4]
 800b9a6:	2200      	movs	r2, #0
 800b9a8:	609a      	str	r2, [r3, #8]
 800b9aa:	687b      	ldr	r3, [r7, #4]
 800b9ac:	3308      	adds	r3, #8
 800b9ae:	2201      	movs	r2, #1
 800b9b0:	4619      	mov	r1, r3
 800b9b2:	6878      	ldr	r0, [r7, #4]
 800b9b4:	f000 f93c 	bl	800bc30 <USBD_CtlSendData>
 800b9b8:	e00c      	b.n	800b9d4 <USBD_GetConfig+0x64>
 800b9ba:	687b      	ldr	r3, [r7, #4]
 800b9bc:	3304      	adds	r3, #4
 800b9be:	2201      	movs	r2, #1
 800b9c0:	4619      	mov	r1, r3
 800b9c2:	6878      	ldr	r0, [r7, #4]
 800b9c4:	f000 f934 	bl	800bc30 <USBD_CtlSendData>
 800b9c8:	e004      	b.n	800b9d4 <USBD_GetConfig+0x64>
 800b9ca:	6839      	ldr	r1, [r7, #0]
 800b9cc:	6878      	ldr	r0, [r7, #4]
 800b9ce:	f000 f8be 	bl	800bb4e <USBD_CtlError>
 800b9d2:	bf00      	nop
 800b9d4:	bf00      	nop
 800b9d6:	3708      	adds	r7, #8
 800b9d8:	46bd      	mov	sp, r7
 800b9da:	bd80      	pop	{r7, pc}

0800b9dc <USBD_GetStatus>:
 800b9dc:	b580      	push	{r7, lr}
 800b9de:	b082      	sub	sp, #8
 800b9e0:	af00      	add	r7, sp, #0
 800b9e2:	6078      	str	r0, [r7, #4]
 800b9e4:	6039      	str	r1, [r7, #0]
 800b9e6:	687b      	ldr	r3, [r7, #4]
 800b9e8:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800b9ec:	b2db      	uxtb	r3, r3
 800b9ee:	3b01      	subs	r3, #1
 800b9f0:	2b02      	cmp	r3, #2
 800b9f2:	d81e      	bhi.n	800ba32 <USBD_GetStatus+0x56>
 800b9f4:	683b      	ldr	r3, [r7, #0]
 800b9f6:	88db      	ldrh	r3, [r3, #6]
 800b9f8:	2b02      	cmp	r3, #2
 800b9fa:	d004      	beq.n	800ba06 <USBD_GetStatus+0x2a>
 800b9fc:	6839      	ldr	r1, [r7, #0]
 800b9fe:	6878      	ldr	r0, [r7, #4]
 800ba00:	f000 f8a5 	bl	800bb4e <USBD_CtlError>
 800ba04:	e01a      	b.n	800ba3c <USBD_GetStatus+0x60>
 800ba06:	687b      	ldr	r3, [r7, #4]
 800ba08:	2201      	movs	r2, #1
 800ba0a:	60da      	str	r2, [r3, #12]
 800ba0c:	687b      	ldr	r3, [r7, #4]
 800ba0e:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 800ba12:	2b00      	cmp	r3, #0
 800ba14:	d005      	beq.n	800ba22 <USBD_GetStatus+0x46>
 800ba16:	687b      	ldr	r3, [r7, #4]
 800ba18:	68db      	ldr	r3, [r3, #12]
 800ba1a:	f043 0202 	orr.w	r2, r3, #2
 800ba1e:	687b      	ldr	r3, [r7, #4]
 800ba20:	60da      	str	r2, [r3, #12]
 800ba22:	687b      	ldr	r3, [r7, #4]
 800ba24:	330c      	adds	r3, #12
 800ba26:	2202      	movs	r2, #2
 800ba28:	4619      	mov	r1, r3
 800ba2a:	6878      	ldr	r0, [r7, #4]
 800ba2c:	f000 f900 	bl	800bc30 <USBD_CtlSendData>
 800ba30:	e004      	b.n	800ba3c <USBD_GetStatus+0x60>
 800ba32:	6839      	ldr	r1, [r7, #0]
 800ba34:	6878      	ldr	r0, [r7, #4]
 800ba36:	f000 f88a 	bl	800bb4e <USBD_CtlError>
 800ba3a:	bf00      	nop
 800ba3c:	bf00      	nop
 800ba3e:	3708      	adds	r7, #8
 800ba40:	46bd      	mov	sp, r7
 800ba42:	bd80      	pop	{r7, pc}

0800ba44 <USBD_SetFeature>:
 800ba44:	b580      	push	{r7, lr}
 800ba46:	b082      	sub	sp, #8
 800ba48:	af00      	add	r7, sp, #0
 800ba4a:	6078      	str	r0, [r7, #4]
 800ba4c:	6039      	str	r1, [r7, #0]
 800ba4e:	683b      	ldr	r3, [r7, #0]
 800ba50:	885b      	ldrh	r3, [r3, #2]
 800ba52:	2b01      	cmp	r3, #1
 800ba54:	d107      	bne.n	800ba66 <USBD_SetFeature+0x22>
 800ba56:	687b      	ldr	r3, [r7, #4]
 800ba58:	2201      	movs	r2, #1
 800ba5a:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 800ba5e:	6878      	ldr	r0, [r7, #4]
 800ba60:	f000 f940 	bl	800bce4 <USBD_CtlSendStatus>
 800ba64:	e013      	b.n	800ba8e <USBD_SetFeature+0x4a>
 800ba66:	683b      	ldr	r3, [r7, #0]
 800ba68:	885b      	ldrh	r3, [r3, #2]
 800ba6a:	2b02      	cmp	r3, #2
 800ba6c:	d10b      	bne.n	800ba86 <USBD_SetFeature+0x42>
 800ba6e:	683b      	ldr	r3, [r7, #0]
 800ba70:	889b      	ldrh	r3, [r3, #4]
 800ba72:	0a1b      	lsrs	r3, r3, #8
 800ba74:	b29b      	uxth	r3, r3
 800ba76:	b2da      	uxtb	r2, r3
 800ba78:	687b      	ldr	r3, [r7, #4]
 800ba7a:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800ba7e:	6878      	ldr	r0, [r7, #4]
 800ba80:	f000 f930 	bl	800bce4 <USBD_CtlSendStatus>
 800ba84:	e003      	b.n	800ba8e <USBD_SetFeature+0x4a>
 800ba86:	6839      	ldr	r1, [r7, #0]
 800ba88:	6878      	ldr	r0, [r7, #4]
 800ba8a:	f000 f860 	bl	800bb4e <USBD_CtlError>
 800ba8e:	bf00      	nop
 800ba90:	3708      	adds	r7, #8
 800ba92:	46bd      	mov	sp, r7
 800ba94:	bd80      	pop	{r7, pc}

0800ba96 <USBD_ClrFeature>:
 800ba96:	b580      	push	{r7, lr}
 800ba98:	b082      	sub	sp, #8
 800ba9a:	af00      	add	r7, sp, #0
 800ba9c:	6078      	str	r0, [r7, #4]
 800ba9e:	6039      	str	r1, [r7, #0]
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800baa6:	b2db      	uxtb	r3, r3
 800baa8:	3b01      	subs	r3, #1
 800baaa:	2b02      	cmp	r3, #2
 800baac:	d80b      	bhi.n	800bac6 <USBD_ClrFeature+0x30>
 800baae:	683b      	ldr	r3, [r7, #0]
 800bab0:	885b      	ldrh	r3, [r3, #2]
 800bab2:	2b01      	cmp	r3, #1
 800bab4:	d10c      	bne.n	800bad0 <USBD_ClrFeature+0x3a>
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	2200      	movs	r2, #0
 800baba:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 800babe:	6878      	ldr	r0, [r7, #4]
 800bac0:	f000 f910 	bl	800bce4 <USBD_CtlSendStatus>
 800bac4:	e004      	b.n	800bad0 <USBD_ClrFeature+0x3a>
 800bac6:	6839      	ldr	r1, [r7, #0]
 800bac8:	6878      	ldr	r0, [r7, #4]
 800baca:	f000 f840 	bl	800bb4e <USBD_CtlError>
 800bace:	e000      	b.n	800bad2 <USBD_ClrFeature+0x3c>
 800bad0:	bf00      	nop
 800bad2:	bf00      	nop
 800bad4:	3708      	adds	r7, #8
 800bad6:	46bd      	mov	sp, r7
 800bad8:	bd80      	pop	{r7, pc}

0800bada <USBD_ParseSetupRequest>:
 800bada:	b580      	push	{r7, lr}
 800badc:	b084      	sub	sp, #16
 800bade:	af00      	add	r7, sp, #0
 800bae0:	6078      	str	r0, [r7, #4]
 800bae2:	6039      	str	r1, [r7, #0]
 800bae4:	683b      	ldr	r3, [r7, #0]
 800bae6:	60fb      	str	r3, [r7, #12]
 800bae8:	68fb      	ldr	r3, [r7, #12]
 800baea:	781a      	ldrb	r2, [r3, #0]
 800baec:	687b      	ldr	r3, [r7, #4]
 800baee:	701a      	strb	r2, [r3, #0]
 800baf0:	68fb      	ldr	r3, [r7, #12]
 800baf2:	3301      	adds	r3, #1
 800baf4:	60fb      	str	r3, [r7, #12]
 800baf6:	68fb      	ldr	r3, [r7, #12]
 800baf8:	781a      	ldrb	r2, [r3, #0]
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	705a      	strb	r2, [r3, #1]
 800bafe:	68fb      	ldr	r3, [r7, #12]
 800bb00:	3301      	adds	r3, #1
 800bb02:	60fb      	str	r3, [r7, #12]
 800bb04:	68f8      	ldr	r0, [r7, #12]
 800bb06:	f7ff fa41 	bl	800af8c <SWAPBYTE>
 800bb0a:	4603      	mov	r3, r0
 800bb0c:	461a      	mov	r2, r3
 800bb0e:	687b      	ldr	r3, [r7, #4]
 800bb10:	805a      	strh	r2, [r3, #2]
 800bb12:	68fb      	ldr	r3, [r7, #12]
 800bb14:	3301      	adds	r3, #1
 800bb16:	60fb      	str	r3, [r7, #12]
 800bb18:	68fb      	ldr	r3, [r7, #12]
 800bb1a:	3301      	adds	r3, #1
 800bb1c:	60fb      	str	r3, [r7, #12]
 800bb1e:	68f8      	ldr	r0, [r7, #12]
 800bb20:	f7ff fa34 	bl	800af8c <SWAPBYTE>
 800bb24:	4603      	mov	r3, r0
 800bb26:	461a      	mov	r2, r3
 800bb28:	687b      	ldr	r3, [r7, #4]
 800bb2a:	809a      	strh	r2, [r3, #4]
 800bb2c:	68fb      	ldr	r3, [r7, #12]
 800bb2e:	3301      	adds	r3, #1
 800bb30:	60fb      	str	r3, [r7, #12]
 800bb32:	68fb      	ldr	r3, [r7, #12]
 800bb34:	3301      	adds	r3, #1
 800bb36:	60fb      	str	r3, [r7, #12]
 800bb38:	68f8      	ldr	r0, [r7, #12]
 800bb3a:	f7ff fa27 	bl	800af8c <SWAPBYTE>
 800bb3e:	4603      	mov	r3, r0
 800bb40:	461a      	mov	r2, r3
 800bb42:	687b      	ldr	r3, [r7, #4]
 800bb44:	80da      	strh	r2, [r3, #6]
 800bb46:	bf00      	nop
 800bb48:	3710      	adds	r7, #16
 800bb4a:	46bd      	mov	sp, r7
 800bb4c:	bd80      	pop	{r7, pc}

0800bb4e <USBD_CtlError>:
 800bb4e:	b580      	push	{r7, lr}
 800bb50:	b082      	sub	sp, #8
 800bb52:	af00      	add	r7, sp, #0
 800bb54:	6078      	str	r0, [r7, #4]
 800bb56:	6039      	str	r1, [r7, #0]
 800bb58:	2180      	movs	r1, #128	; 0x80
 800bb5a:	6878      	ldr	r0, [r7, #4]
 800bb5c:	f000 fce6 	bl	800c52c <USBD_LL_StallEP>
 800bb60:	2100      	movs	r1, #0
 800bb62:	6878      	ldr	r0, [r7, #4]
 800bb64:	f000 fce2 	bl	800c52c <USBD_LL_StallEP>
 800bb68:	bf00      	nop
 800bb6a:	3708      	adds	r7, #8
 800bb6c:	46bd      	mov	sp, r7
 800bb6e:	bd80      	pop	{r7, pc}

0800bb70 <USBD_GetString>:
 800bb70:	b580      	push	{r7, lr}
 800bb72:	b086      	sub	sp, #24
 800bb74:	af00      	add	r7, sp, #0
 800bb76:	60f8      	str	r0, [r7, #12]
 800bb78:	60b9      	str	r1, [r7, #8]
 800bb7a:	607a      	str	r2, [r7, #4]
 800bb7c:	2300      	movs	r3, #0
 800bb7e:	75fb      	strb	r3, [r7, #23]
 800bb80:	68fb      	ldr	r3, [r7, #12]
 800bb82:	2b00      	cmp	r3, #0
 800bb84:	d036      	beq.n	800bbf4 <USBD_GetString+0x84>
 800bb86:	68fb      	ldr	r3, [r7, #12]
 800bb88:	613b      	str	r3, [r7, #16]
 800bb8a:	6938      	ldr	r0, [r7, #16]
 800bb8c:	f000 f836 	bl	800bbfc <USBD_GetLen>
 800bb90:	4603      	mov	r3, r0
 800bb92:	3301      	adds	r3, #1
 800bb94:	b29b      	uxth	r3, r3
 800bb96:	005b      	lsls	r3, r3, #1
 800bb98:	b29a      	uxth	r2, r3
 800bb9a:	687b      	ldr	r3, [r7, #4]
 800bb9c:	801a      	strh	r2, [r3, #0]
 800bb9e:	7dfb      	ldrb	r3, [r7, #23]
 800bba0:	68ba      	ldr	r2, [r7, #8]
 800bba2:	4413      	add	r3, r2
 800bba4:	687a      	ldr	r2, [r7, #4]
 800bba6:	7812      	ldrb	r2, [r2, #0]
 800bba8:	701a      	strb	r2, [r3, #0]
 800bbaa:	7dfb      	ldrb	r3, [r7, #23]
 800bbac:	3301      	adds	r3, #1
 800bbae:	75fb      	strb	r3, [r7, #23]
 800bbb0:	7dfb      	ldrb	r3, [r7, #23]
 800bbb2:	68ba      	ldr	r2, [r7, #8]
 800bbb4:	4413      	add	r3, r2
 800bbb6:	2203      	movs	r2, #3
 800bbb8:	701a      	strb	r2, [r3, #0]
 800bbba:	7dfb      	ldrb	r3, [r7, #23]
 800bbbc:	3301      	adds	r3, #1
 800bbbe:	75fb      	strb	r3, [r7, #23]
 800bbc0:	e013      	b.n	800bbea <USBD_GetString+0x7a>
 800bbc2:	7dfb      	ldrb	r3, [r7, #23]
 800bbc4:	68ba      	ldr	r2, [r7, #8]
 800bbc6:	4413      	add	r3, r2
 800bbc8:	693a      	ldr	r2, [r7, #16]
 800bbca:	7812      	ldrb	r2, [r2, #0]
 800bbcc:	701a      	strb	r2, [r3, #0]
 800bbce:	693b      	ldr	r3, [r7, #16]
 800bbd0:	3301      	adds	r3, #1
 800bbd2:	613b      	str	r3, [r7, #16]
 800bbd4:	7dfb      	ldrb	r3, [r7, #23]
 800bbd6:	3301      	adds	r3, #1
 800bbd8:	75fb      	strb	r3, [r7, #23]
 800bbda:	7dfb      	ldrb	r3, [r7, #23]
 800bbdc:	68ba      	ldr	r2, [r7, #8]
 800bbde:	4413      	add	r3, r2
 800bbe0:	2200      	movs	r2, #0
 800bbe2:	701a      	strb	r2, [r3, #0]
 800bbe4:	7dfb      	ldrb	r3, [r7, #23]
 800bbe6:	3301      	adds	r3, #1
 800bbe8:	75fb      	strb	r3, [r7, #23]
 800bbea:	693b      	ldr	r3, [r7, #16]
 800bbec:	781b      	ldrb	r3, [r3, #0]
 800bbee:	2b00      	cmp	r3, #0
 800bbf0:	d1e7      	bne.n	800bbc2 <USBD_GetString+0x52>
 800bbf2:	e000      	b.n	800bbf6 <USBD_GetString+0x86>
 800bbf4:	bf00      	nop
 800bbf6:	3718      	adds	r7, #24
 800bbf8:	46bd      	mov	sp, r7
 800bbfa:	bd80      	pop	{r7, pc}

0800bbfc <USBD_GetLen>:
 800bbfc:	b480      	push	{r7}
 800bbfe:	b085      	sub	sp, #20
 800bc00:	af00      	add	r7, sp, #0
 800bc02:	6078      	str	r0, [r7, #4]
 800bc04:	2300      	movs	r3, #0
 800bc06:	73fb      	strb	r3, [r7, #15]
 800bc08:	687b      	ldr	r3, [r7, #4]
 800bc0a:	60bb      	str	r3, [r7, #8]
 800bc0c:	e005      	b.n	800bc1a <USBD_GetLen+0x1e>
 800bc0e:	7bfb      	ldrb	r3, [r7, #15]
 800bc10:	3301      	adds	r3, #1
 800bc12:	73fb      	strb	r3, [r7, #15]
 800bc14:	68bb      	ldr	r3, [r7, #8]
 800bc16:	3301      	adds	r3, #1
 800bc18:	60bb      	str	r3, [r7, #8]
 800bc1a:	68bb      	ldr	r3, [r7, #8]
 800bc1c:	781b      	ldrb	r3, [r3, #0]
 800bc1e:	2b00      	cmp	r3, #0
 800bc20:	d1f5      	bne.n	800bc0e <USBD_GetLen+0x12>
 800bc22:	7bfb      	ldrb	r3, [r7, #15]
 800bc24:	4618      	mov	r0, r3
 800bc26:	3714      	adds	r7, #20
 800bc28:	46bd      	mov	sp, r7
 800bc2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc2e:	4770      	bx	lr

0800bc30 <USBD_CtlSendData>:
 800bc30:	b580      	push	{r7, lr}
 800bc32:	b084      	sub	sp, #16
 800bc34:	af00      	add	r7, sp, #0
 800bc36:	60f8      	str	r0, [r7, #12]
 800bc38:	60b9      	str	r1, [r7, #8]
 800bc3a:	607a      	str	r2, [r7, #4]
 800bc3c:	68fb      	ldr	r3, [r7, #12]
 800bc3e:	2202      	movs	r2, #2
 800bc40:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800bc44:	68fb      	ldr	r3, [r7, #12]
 800bc46:	687a      	ldr	r2, [r7, #4]
 800bc48:	619a      	str	r2, [r3, #24]
 800bc4a:	68fb      	ldr	r3, [r7, #12]
 800bc4c:	687a      	ldr	r2, [r7, #4]
 800bc4e:	61da      	str	r2, [r3, #28]
 800bc50:	687b      	ldr	r3, [r7, #4]
 800bc52:	68ba      	ldr	r2, [r7, #8]
 800bc54:	2100      	movs	r1, #0
 800bc56:	68f8      	ldr	r0, [r7, #12]
 800bc58:	f000 fcf1 	bl	800c63e <USBD_LL_Transmit>
 800bc5c:	2300      	movs	r3, #0
 800bc5e:	4618      	mov	r0, r3
 800bc60:	3710      	adds	r7, #16
 800bc62:	46bd      	mov	sp, r7
 800bc64:	bd80      	pop	{r7, pc}

0800bc66 <USBD_CtlContinueSendData>:
 800bc66:	b580      	push	{r7, lr}
 800bc68:	b084      	sub	sp, #16
 800bc6a:	af00      	add	r7, sp, #0
 800bc6c:	60f8      	str	r0, [r7, #12]
 800bc6e:	60b9      	str	r1, [r7, #8]
 800bc70:	607a      	str	r2, [r7, #4]
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	68ba      	ldr	r2, [r7, #8]
 800bc76:	2100      	movs	r1, #0
 800bc78:	68f8      	ldr	r0, [r7, #12]
 800bc7a:	f000 fce0 	bl	800c63e <USBD_LL_Transmit>
 800bc7e:	2300      	movs	r3, #0
 800bc80:	4618      	mov	r0, r3
 800bc82:	3710      	adds	r7, #16
 800bc84:	46bd      	mov	sp, r7
 800bc86:	bd80      	pop	{r7, pc}

0800bc88 <USBD_CtlPrepareRx>:
 800bc88:	b580      	push	{r7, lr}
 800bc8a:	b084      	sub	sp, #16
 800bc8c:	af00      	add	r7, sp, #0
 800bc8e:	60f8      	str	r0, [r7, #12]
 800bc90:	60b9      	str	r1, [r7, #8]
 800bc92:	607a      	str	r2, [r7, #4]
 800bc94:	68fb      	ldr	r3, [r7, #12]
 800bc96:	2203      	movs	r2, #3
 800bc98:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800bc9c:	68fb      	ldr	r3, [r7, #12]
 800bc9e:	687a      	ldr	r2, [r7, #4]
 800bca0:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
 800bca4:	68fb      	ldr	r3, [r7, #12]
 800bca6:	687a      	ldr	r2, [r7, #4]
 800bca8:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
 800bcac:	687b      	ldr	r3, [r7, #4]
 800bcae:	68ba      	ldr	r2, [r7, #8]
 800bcb0:	2100      	movs	r1, #0
 800bcb2:	68f8      	ldr	r0, [r7, #12]
 800bcb4:	f000 fce4 	bl	800c680 <USBD_LL_PrepareReceive>
 800bcb8:	2300      	movs	r3, #0
 800bcba:	4618      	mov	r0, r3
 800bcbc:	3710      	adds	r7, #16
 800bcbe:	46bd      	mov	sp, r7
 800bcc0:	bd80      	pop	{r7, pc}

0800bcc2 <USBD_CtlContinueRx>:
 800bcc2:	b580      	push	{r7, lr}
 800bcc4:	b084      	sub	sp, #16
 800bcc6:	af00      	add	r7, sp, #0
 800bcc8:	60f8      	str	r0, [r7, #12]
 800bcca:	60b9      	str	r1, [r7, #8]
 800bccc:	607a      	str	r2, [r7, #4]
 800bcce:	687b      	ldr	r3, [r7, #4]
 800bcd0:	68ba      	ldr	r2, [r7, #8]
 800bcd2:	2100      	movs	r1, #0
 800bcd4:	68f8      	ldr	r0, [r7, #12]
 800bcd6:	f000 fcd3 	bl	800c680 <USBD_LL_PrepareReceive>
 800bcda:	2300      	movs	r3, #0
 800bcdc:	4618      	mov	r0, r3
 800bcde:	3710      	adds	r7, #16
 800bce0:	46bd      	mov	sp, r7
 800bce2:	bd80      	pop	{r7, pc}

0800bce4 <USBD_CtlSendStatus>:
 800bce4:	b580      	push	{r7, lr}
 800bce6:	b082      	sub	sp, #8
 800bce8:	af00      	add	r7, sp, #0
 800bcea:	6078      	str	r0, [r7, #4]
 800bcec:	687b      	ldr	r3, [r7, #4]
 800bcee:	2204      	movs	r2, #4
 800bcf0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800bcf4:	2300      	movs	r3, #0
 800bcf6:	2200      	movs	r2, #0
 800bcf8:	2100      	movs	r1, #0
 800bcfa:	6878      	ldr	r0, [r7, #4]
 800bcfc:	f000 fc9f 	bl	800c63e <USBD_LL_Transmit>
 800bd00:	2300      	movs	r3, #0
 800bd02:	4618      	mov	r0, r3
 800bd04:	3708      	adds	r7, #8
 800bd06:	46bd      	mov	sp, r7
 800bd08:	bd80      	pop	{r7, pc}

0800bd0a <USBD_CtlReceiveStatus>:
 800bd0a:	b580      	push	{r7, lr}
 800bd0c:	b082      	sub	sp, #8
 800bd0e:	af00      	add	r7, sp, #0
 800bd10:	6078      	str	r0, [r7, #4]
 800bd12:	687b      	ldr	r3, [r7, #4]
 800bd14:	2205      	movs	r2, #5
 800bd16:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800bd1a:	2300      	movs	r3, #0
 800bd1c:	2200      	movs	r2, #0
 800bd1e:	2100      	movs	r1, #0
 800bd20:	6878      	ldr	r0, [r7, #4]
 800bd22:	f000 fcad 	bl	800c680 <USBD_LL_PrepareReceive>
 800bd26:	2300      	movs	r3, #0
 800bd28:	4618      	mov	r0, r3
 800bd2a:	3708      	adds	r7, #8
 800bd2c:	46bd      	mov	sp, r7
 800bd2e:	bd80      	pop	{r7, pc}

0800bd30 <MX_USB_DEVICE_Init>:
 800bd30:	b580      	push	{r7, lr}
 800bd32:	af00      	add	r7, sp, #0
 800bd34:	2200      	movs	r2, #0
 800bd36:	4912      	ldr	r1, [pc, #72]	; (800bd80 <MX_USB_DEVICE_Init+0x50>)
 800bd38:	4812      	ldr	r0, [pc, #72]	; (800bd84 <MX_USB_DEVICE_Init+0x54>)
 800bd3a:	f7fe fd01 	bl	800a740 <USBD_Init>
 800bd3e:	4603      	mov	r3, r0
 800bd40:	2b00      	cmp	r3, #0
 800bd42:	d001      	beq.n	800bd48 <MX_USB_DEVICE_Init+0x18>
 800bd44:	f7f7 fefe 	bl	8003b44 <Error_Handler>
 800bd48:	490f      	ldr	r1, [pc, #60]	; (800bd88 <MX_USB_DEVICE_Init+0x58>)
 800bd4a:	480e      	ldr	r0, [pc, #56]	; (800bd84 <MX_USB_DEVICE_Init+0x54>)
 800bd4c:	f7fe fd28 	bl	800a7a0 <USBD_RegisterClass>
 800bd50:	4603      	mov	r3, r0
 800bd52:	2b00      	cmp	r3, #0
 800bd54:	d001      	beq.n	800bd5a <MX_USB_DEVICE_Init+0x2a>
 800bd56:	f7f7 fef5 	bl	8003b44 <Error_Handler>
 800bd5a:	490c      	ldr	r1, [pc, #48]	; (800bd8c <MX_USB_DEVICE_Init+0x5c>)
 800bd5c:	4809      	ldr	r0, [pc, #36]	; (800bd84 <MX_USB_DEVICE_Init+0x54>)
 800bd5e:	f7fe fc1f 	bl	800a5a0 <USBD_CDC_RegisterInterface>
 800bd62:	4603      	mov	r3, r0
 800bd64:	2b00      	cmp	r3, #0
 800bd66:	d001      	beq.n	800bd6c <MX_USB_DEVICE_Init+0x3c>
 800bd68:	f7f7 feec 	bl	8003b44 <Error_Handler>
 800bd6c:	4805      	ldr	r0, [pc, #20]	; (800bd84 <MX_USB_DEVICE_Init+0x54>)
 800bd6e:	f7fe fd4d 	bl	800a80c <USBD_Start>
 800bd72:	4603      	mov	r3, r0
 800bd74:	2b00      	cmp	r3, #0
 800bd76:	d001      	beq.n	800bd7c <MX_USB_DEVICE_Init+0x4c>
 800bd78:	f7f7 fee4 	bl	8003b44 <Error_Handler>
 800bd7c:	bf00      	nop
 800bd7e:	bd80      	pop	{r7, pc}
 800bd80:	200000c0 	.word	0x200000c0
 800bd84:	20000700 	.word	0x20000700
 800bd88:	2000002c 	.word	0x2000002c
 800bd8c:	200000ac 	.word	0x200000ac

0800bd90 <CDC_Init_FS>:
 800bd90:	b580      	push	{r7, lr}
 800bd92:	af00      	add	r7, sp, #0
 800bd94:	2200      	movs	r2, #0
 800bd96:	4905      	ldr	r1, [pc, #20]	; (800bdac <CDC_Init_FS+0x1c>)
 800bd98:	4805      	ldr	r0, [pc, #20]	; (800bdb0 <CDC_Init_FS+0x20>)
 800bd9a:	f7fe fc1b 	bl	800a5d4 <USBD_CDC_SetTxBuffer>
 800bd9e:	4905      	ldr	r1, [pc, #20]	; (800bdb4 <CDC_Init_FS+0x24>)
 800bda0:	4803      	ldr	r0, [pc, #12]	; (800bdb0 <CDC_Init_FS+0x20>)
 800bda2:	f7fe fc39 	bl	800a618 <USBD_CDC_SetRxBuffer>
 800bda6:	2300      	movs	r3, #0
 800bda8:	4618      	mov	r0, r3
 800bdaa:	bd80      	pop	{r7, pc}
 800bdac:	200011dc 	.word	0x200011dc
 800bdb0:	20000700 	.word	0x20000700
 800bdb4:	200009dc 	.word	0x200009dc

0800bdb8 <CDC_DeInit_FS>:
 800bdb8:	b480      	push	{r7}
 800bdba:	af00      	add	r7, sp, #0
 800bdbc:	2300      	movs	r3, #0
 800bdbe:	4618      	mov	r0, r3
 800bdc0:	46bd      	mov	sp, r7
 800bdc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdc6:	4770      	bx	lr

0800bdc8 <CDC_Control_FS>:
 800bdc8:	b480      	push	{r7}
 800bdca:	b083      	sub	sp, #12
 800bdcc:	af00      	add	r7, sp, #0
 800bdce:	4603      	mov	r3, r0
 800bdd0:	6039      	str	r1, [r7, #0]
 800bdd2:	71fb      	strb	r3, [r7, #7]
 800bdd4:	4613      	mov	r3, r2
 800bdd6:	80bb      	strh	r3, [r7, #4]
 800bdd8:	79fb      	ldrb	r3, [r7, #7]
 800bdda:	2b23      	cmp	r3, #35	; 0x23
 800bddc:	d84a      	bhi.n	800be74 <CDC_Control_FS+0xac>
 800bdde:	a201      	add	r2, pc, #4	; (adr r2, 800bde4 <CDC_Control_FS+0x1c>)
 800bde0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bde4:	0800be75 	.word	0x0800be75
 800bde8:	0800be75 	.word	0x0800be75
 800bdec:	0800be75 	.word	0x0800be75
 800bdf0:	0800be75 	.word	0x0800be75
 800bdf4:	0800be75 	.word	0x0800be75
 800bdf8:	0800be75 	.word	0x0800be75
 800bdfc:	0800be75 	.word	0x0800be75
 800be00:	0800be75 	.word	0x0800be75
 800be04:	0800be75 	.word	0x0800be75
 800be08:	0800be75 	.word	0x0800be75
 800be0c:	0800be75 	.word	0x0800be75
 800be10:	0800be75 	.word	0x0800be75
 800be14:	0800be75 	.word	0x0800be75
 800be18:	0800be75 	.word	0x0800be75
 800be1c:	0800be75 	.word	0x0800be75
 800be20:	0800be75 	.word	0x0800be75
 800be24:	0800be75 	.word	0x0800be75
 800be28:	0800be75 	.word	0x0800be75
 800be2c:	0800be75 	.word	0x0800be75
 800be30:	0800be75 	.word	0x0800be75
 800be34:	0800be75 	.word	0x0800be75
 800be38:	0800be75 	.word	0x0800be75
 800be3c:	0800be75 	.word	0x0800be75
 800be40:	0800be75 	.word	0x0800be75
 800be44:	0800be75 	.word	0x0800be75
 800be48:	0800be75 	.word	0x0800be75
 800be4c:	0800be75 	.word	0x0800be75
 800be50:	0800be75 	.word	0x0800be75
 800be54:	0800be75 	.word	0x0800be75
 800be58:	0800be75 	.word	0x0800be75
 800be5c:	0800be75 	.word	0x0800be75
 800be60:	0800be75 	.word	0x0800be75
 800be64:	0800be75 	.word	0x0800be75
 800be68:	0800be75 	.word	0x0800be75
 800be6c:	0800be75 	.word	0x0800be75
 800be70:	0800be75 	.word	0x0800be75
 800be74:	bf00      	nop
 800be76:	2300      	movs	r3, #0
 800be78:	4618      	mov	r0, r3
 800be7a:	370c      	adds	r7, #12
 800be7c:	46bd      	mov	sp, r7
 800be7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be82:	4770      	bx	lr

0800be84 <CDC_Receive_FS>:
 800be84:	b580      	push	{r7, lr}
 800be86:	b082      	sub	sp, #8
 800be88:	af00      	add	r7, sp, #0
 800be8a:	6078      	str	r0, [r7, #4]
 800be8c:	6039      	str	r1, [r7, #0]
 800be8e:	6879      	ldr	r1, [r7, #4]
 800be90:	4808      	ldr	r0, [pc, #32]	; (800beb4 <CDC_Receive_FS+0x30>)
 800be92:	f7fe fbc1 	bl	800a618 <USBD_CDC_SetRxBuffer>
 800be96:	4807      	ldr	r0, [pc, #28]	; (800beb4 <CDC_Receive_FS+0x30>)
 800be98:	f7fe fc1c 	bl	800a6d4 <USBD_CDC_ReceivePacket>
 800be9c:	683b      	ldr	r3, [r7, #0]
 800be9e:	681b      	ldr	r3, [r3, #0]
 800bea0:	4619      	mov	r1, r3
 800bea2:	6878      	ldr	r0, [r7, #4]
 800bea4:	f7f7 fbc2 	bl	800362c <CDC_recieveCALLBACK>
 800bea8:	2300      	movs	r3, #0
 800beaa:	4618      	mov	r0, r3
 800beac:	3708      	adds	r7, #8
 800beae:	46bd      	mov	sp, r7
 800beb0:	bd80      	pop	{r7, pc}
 800beb2:	bf00      	nop
 800beb4:	20000700 	.word	0x20000700

0800beb8 <CDC_Transmit_FS>:
 800beb8:	b580      	push	{r7, lr}
 800beba:	b084      	sub	sp, #16
 800bebc:	af00      	add	r7, sp, #0
 800bebe:	6078      	str	r0, [r7, #4]
 800bec0:	460b      	mov	r3, r1
 800bec2:	807b      	strh	r3, [r7, #2]
 800bec4:	2300      	movs	r3, #0
 800bec6:	73fb      	strb	r3, [r7, #15]
 800bec8:	4b0d      	ldr	r3, [pc, #52]	; (800bf00 <CDC_Transmit_FS+0x48>)
 800beca:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 800bece:	60bb      	str	r3, [r7, #8]
 800bed0:	68bb      	ldr	r3, [r7, #8]
 800bed2:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800bed6:	2b00      	cmp	r3, #0
 800bed8:	d001      	beq.n	800bede <CDC_Transmit_FS+0x26>
 800beda:	2301      	movs	r3, #1
 800bedc:	e00b      	b.n	800bef6 <CDC_Transmit_FS+0x3e>
 800bede:	887b      	ldrh	r3, [r7, #2]
 800bee0:	461a      	mov	r2, r3
 800bee2:	6879      	ldr	r1, [r7, #4]
 800bee4:	4806      	ldr	r0, [pc, #24]	; (800bf00 <CDC_Transmit_FS+0x48>)
 800bee6:	f7fe fb75 	bl	800a5d4 <USBD_CDC_SetTxBuffer>
 800beea:	4805      	ldr	r0, [pc, #20]	; (800bf00 <CDC_Transmit_FS+0x48>)
 800beec:	f7fe fbb2 	bl	800a654 <USBD_CDC_TransmitPacket>
 800bef0:	4603      	mov	r3, r0
 800bef2:	73fb      	strb	r3, [r7, #15]
 800bef4:	7bfb      	ldrb	r3, [r7, #15]
 800bef6:	4618      	mov	r0, r3
 800bef8:	3710      	adds	r7, #16
 800befa:	46bd      	mov	sp, r7
 800befc:	bd80      	pop	{r7, pc}
 800befe:	bf00      	nop
 800bf00:	20000700 	.word	0x20000700

0800bf04 <CDC_TransmitCplt_FS>:
 800bf04:	b480      	push	{r7}
 800bf06:	b087      	sub	sp, #28
 800bf08:	af00      	add	r7, sp, #0
 800bf0a:	60f8      	str	r0, [r7, #12]
 800bf0c:	60b9      	str	r1, [r7, #8]
 800bf0e:	4613      	mov	r3, r2
 800bf10:	71fb      	strb	r3, [r7, #7]
 800bf12:	2300      	movs	r3, #0
 800bf14:	75fb      	strb	r3, [r7, #23]
 800bf16:	f997 3017 	ldrsb.w	r3, [r7, #23]
 800bf1a:	4618      	mov	r0, r3
 800bf1c:	371c      	adds	r7, #28
 800bf1e:	46bd      	mov	sp, r7
 800bf20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf24:	4770      	bx	lr
	...

0800bf28 <USBD_FS_DeviceDescriptor>:
 800bf28:	b480      	push	{r7}
 800bf2a:	b083      	sub	sp, #12
 800bf2c:	af00      	add	r7, sp, #0
 800bf2e:	4603      	mov	r3, r0
 800bf30:	6039      	str	r1, [r7, #0]
 800bf32:	71fb      	strb	r3, [r7, #7]
 800bf34:	683b      	ldr	r3, [r7, #0]
 800bf36:	2212      	movs	r2, #18
 800bf38:	801a      	strh	r2, [r3, #0]
 800bf3a:	4b03      	ldr	r3, [pc, #12]	; (800bf48 <USBD_FS_DeviceDescriptor+0x20>)
 800bf3c:	4618      	mov	r0, r3
 800bf3e:	370c      	adds	r7, #12
 800bf40:	46bd      	mov	sp, r7
 800bf42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf46:	4770      	bx	lr
 800bf48:	200000dc 	.word	0x200000dc

0800bf4c <USBD_FS_LangIDStrDescriptor>:
 800bf4c:	b480      	push	{r7}
 800bf4e:	b083      	sub	sp, #12
 800bf50:	af00      	add	r7, sp, #0
 800bf52:	4603      	mov	r3, r0
 800bf54:	6039      	str	r1, [r7, #0]
 800bf56:	71fb      	strb	r3, [r7, #7]
 800bf58:	683b      	ldr	r3, [r7, #0]
 800bf5a:	2204      	movs	r2, #4
 800bf5c:	801a      	strh	r2, [r3, #0]
 800bf5e:	4b03      	ldr	r3, [pc, #12]	; (800bf6c <USBD_FS_LangIDStrDescriptor+0x20>)
 800bf60:	4618      	mov	r0, r3
 800bf62:	370c      	adds	r7, #12
 800bf64:	46bd      	mov	sp, r7
 800bf66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf6a:	4770      	bx	lr
 800bf6c:	200000f0 	.word	0x200000f0

0800bf70 <USBD_FS_ProductStrDescriptor>:
 800bf70:	b580      	push	{r7, lr}
 800bf72:	b082      	sub	sp, #8
 800bf74:	af00      	add	r7, sp, #0
 800bf76:	4603      	mov	r3, r0
 800bf78:	6039      	str	r1, [r7, #0]
 800bf7a:	71fb      	strb	r3, [r7, #7]
 800bf7c:	79fb      	ldrb	r3, [r7, #7]
 800bf7e:	2b00      	cmp	r3, #0
 800bf80:	d105      	bne.n	800bf8e <USBD_FS_ProductStrDescriptor+0x1e>
 800bf82:	683a      	ldr	r2, [r7, #0]
 800bf84:	4907      	ldr	r1, [pc, #28]	; (800bfa4 <USBD_FS_ProductStrDescriptor+0x34>)
 800bf86:	4808      	ldr	r0, [pc, #32]	; (800bfa8 <USBD_FS_ProductStrDescriptor+0x38>)
 800bf88:	f7ff fdf2 	bl	800bb70 <USBD_GetString>
 800bf8c:	e004      	b.n	800bf98 <USBD_FS_ProductStrDescriptor+0x28>
 800bf8e:	683a      	ldr	r2, [r7, #0]
 800bf90:	4904      	ldr	r1, [pc, #16]	; (800bfa4 <USBD_FS_ProductStrDescriptor+0x34>)
 800bf92:	4805      	ldr	r0, [pc, #20]	; (800bfa8 <USBD_FS_ProductStrDescriptor+0x38>)
 800bf94:	f7ff fdec 	bl	800bb70 <USBD_GetString>
 800bf98:	4b02      	ldr	r3, [pc, #8]	; (800bfa4 <USBD_FS_ProductStrDescriptor+0x34>)
 800bf9a:	4618      	mov	r0, r3
 800bf9c:	3708      	adds	r7, #8
 800bf9e:	46bd      	mov	sp, r7
 800bfa0:	bd80      	pop	{r7, pc}
 800bfa2:	bf00      	nop
 800bfa4:	200019dc 	.word	0x200019dc
 800bfa8:	0800d924 	.word	0x0800d924

0800bfac <USBD_FS_ManufacturerStrDescriptor>:
 800bfac:	b580      	push	{r7, lr}
 800bfae:	b082      	sub	sp, #8
 800bfb0:	af00      	add	r7, sp, #0
 800bfb2:	4603      	mov	r3, r0
 800bfb4:	6039      	str	r1, [r7, #0]
 800bfb6:	71fb      	strb	r3, [r7, #7]
 800bfb8:	683a      	ldr	r2, [r7, #0]
 800bfba:	4904      	ldr	r1, [pc, #16]	; (800bfcc <USBD_FS_ManufacturerStrDescriptor+0x20>)
 800bfbc:	4804      	ldr	r0, [pc, #16]	; (800bfd0 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 800bfbe:	f7ff fdd7 	bl	800bb70 <USBD_GetString>
 800bfc2:	4b02      	ldr	r3, [pc, #8]	; (800bfcc <USBD_FS_ManufacturerStrDescriptor+0x20>)
 800bfc4:	4618      	mov	r0, r3
 800bfc6:	3708      	adds	r7, #8
 800bfc8:	46bd      	mov	sp, r7
 800bfca:	bd80      	pop	{r7, pc}
 800bfcc:	200019dc 	.word	0x200019dc
 800bfd0:	0800d93c 	.word	0x0800d93c

0800bfd4 <USBD_FS_SerialStrDescriptor>:
 800bfd4:	b580      	push	{r7, lr}
 800bfd6:	b082      	sub	sp, #8
 800bfd8:	af00      	add	r7, sp, #0
 800bfda:	4603      	mov	r3, r0
 800bfdc:	6039      	str	r1, [r7, #0]
 800bfde:	71fb      	strb	r3, [r7, #7]
 800bfe0:	683b      	ldr	r3, [r7, #0]
 800bfe2:	221a      	movs	r2, #26
 800bfe4:	801a      	strh	r2, [r3, #0]
 800bfe6:	f000 f843 	bl	800c070 <Get_SerialNum>
 800bfea:	4b02      	ldr	r3, [pc, #8]	; (800bff4 <USBD_FS_SerialStrDescriptor+0x20>)
 800bfec:	4618      	mov	r0, r3
 800bfee:	3708      	adds	r7, #8
 800bff0:	46bd      	mov	sp, r7
 800bff2:	bd80      	pop	{r7, pc}
 800bff4:	200000f4 	.word	0x200000f4

0800bff8 <USBD_FS_ConfigStrDescriptor>:
 800bff8:	b580      	push	{r7, lr}
 800bffa:	b082      	sub	sp, #8
 800bffc:	af00      	add	r7, sp, #0
 800bffe:	4603      	mov	r3, r0
 800c000:	6039      	str	r1, [r7, #0]
 800c002:	71fb      	strb	r3, [r7, #7]
 800c004:	79fb      	ldrb	r3, [r7, #7]
 800c006:	2b00      	cmp	r3, #0
 800c008:	d105      	bne.n	800c016 <USBD_FS_ConfigStrDescriptor+0x1e>
 800c00a:	683a      	ldr	r2, [r7, #0]
 800c00c:	4907      	ldr	r1, [pc, #28]	; (800c02c <USBD_FS_ConfigStrDescriptor+0x34>)
 800c00e:	4808      	ldr	r0, [pc, #32]	; (800c030 <USBD_FS_ConfigStrDescriptor+0x38>)
 800c010:	f7ff fdae 	bl	800bb70 <USBD_GetString>
 800c014:	e004      	b.n	800c020 <USBD_FS_ConfigStrDescriptor+0x28>
 800c016:	683a      	ldr	r2, [r7, #0]
 800c018:	4904      	ldr	r1, [pc, #16]	; (800c02c <USBD_FS_ConfigStrDescriptor+0x34>)
 800c01a:	4805      	ldr	r0, [pc, #20]	; (800c030 <USBD_FS_ConfigStrDescriptor+0x38>)
 800c01c:	f7ff fda8 	bl	800bb70 <USBD_GetString>
 800c020:	4b02      	ldr	r3, [pc, #8]	; (800c02c <USBD_FS_ConfigStrDescriptor+0x34>)
 800c022:	4618      	mov	r0, r3
 800c024:	3708      	adds	r7, #8
 800c026:	46bd      	mov	sp, r7
 800c028:	bd80      	pop	{r7, pc}
 800c02a:	bf00      	nop
 800c02c:	200019dc 	.word	0x200019dc
 800c030:	0800d950 	.word	0x0800d950

0800c034 <USBD_FS_InterfaceStrDescriptor>:
 800c034:	b580      	push	{r7, lr}
 800c036:	b082      	sub	sp, #8
 800c038:	af00      	add	r7, sp, #0
 800c03a:	4603      	mov	r3, r0
 800c03c:	6039      	str	r1, [r7, #0]
 800c03e:	71fb      	strb	r3, [r7, #7]
 800c040:	79fb      	ldrb	r3, [r7, #7]
 800c042:	2b00      	cmp	r3, #0
 800c044:	d105      	bne.n	800c052 <USBD_FS_InterfaceStrDescriptor+0x1e>
 800c046:	683a      	ldr	r2, [r7, #0]
 800c048:	4907      	ldr	r1, [pc, #28]	; (800c068 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800c04a:	4808      	ldr	r0, [pc, #32]	; (800c06c <USBD_FS_InterfaceStrDescriptor+0x38>)
 800c04c:	f7ff fd90 	bl	800bb70 <USBD_GetString>
 800c050:	e004      	b.n	800c05c <USBD_FS_InterfaceStrDescriptor+0x28>
 800c052:	683a      	ldr	r2, [r7, #0]
 800c054:	4904      	ldr	r1, [pc, #16]	; (800c068 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800c056:	4805      	ldr	r0, [pc, #20]	; (800c06c <USBD_FS_InterfaceStrDescriptor+0x38>)
 800c058:	f7ff fd8a 	bl	800bb70 <USBD_GetString>
 800c05c:	4b02      	ldr	r3, [pc, #8]	; (800c068 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800c05e:	4618      	mov	r0, r3
 800c060:	3708      	adds	r7, #8
 800c062:	46bd      	mov	sp, r7
 800c064:	bd80      	pop	{r7, pc}
 800c066:	bf00      	nop
 800c068:	200019dc 	.word	0x200019dc
 800c06c:	0800d95c 	.word	0x0800d95c

0800c070 <Get_SerialNum>:
 800c070:	b580      	push	{r7, lr}
 800c072:	b084      	sub	sp, #16
 800c074:	af00      	add	r7, sp, #0
 800c076:	4b0f      	ldr	r3, [pc, #60]	; (800c0b4 <Get_SerialNum+0x44>)
 800c078:	681b      	ldr	r3, [r3, #0]
 800c07a:	60fb      	str	r3, [r7, #12]
 800c07c:	4b0e      	ldr	r3, [pc, #56]	; (800c0b8 <Get_SerialNum+0x48>)
 800c07e:	681b      	ldr	r3, [r3, #0]
 800c080:	60bb      	str	r3, [r7, #8]
 800c082:	4b0e      	ldr	r3, [pc, #56]	; (800c0bc <Get_SerialNum+0x4c>)
 800c084:	681b      	ldr	r3, [r3, #0]
 800c086:	607b      	str	r3, [r7, #4]
 800c088:	68fa      	ldr	r2, [r7, #12]
 800c08a:	687b      	ldr	r3, [r7, #4]
 800c08c:	4413      	add	r3, r2
 800c08e:	60fb      	str	r3, [r7, #12]
 800c090:	68fb      	ldr	r3, [r7, #12]
 800c092:	2b00      	cmp	r3, #0
 800c094:	d009      	beq.n	800c0aa <Get_SerialNum+0x3a>
 800c096:	2208      	movs	r2, #8
 800c098:	4909      	ldr	r1, [pc, #36]	; (800c0c0 <Get_SerialNum+0x50>)
 800c09a:	68f8      	ldr	r0, [r7, #12]
 800c09c:	f000 f814 	bl	800c0c8 <IntToUnicode>
 800c0a0:	2204      	movs	r2, #4
 800c0a2:	4908      	ldr	r1, [pc, #32]	; (800c0c4 <Get_SerialNum+0x54>)
 800c0a4:	68b8      	ldr	r0, [r7, #8]
 800c0a6:	f000 f80f 	bl	800c0c8 <IntToUnicode>
 800c0aa:	bf00      	nop
 800c0ac:	3710      	adds	r7, #16
 800c0ae:	46bd      	mov	sp, r7
 800c0b0:	bd80      	pop	{r7, pc}
 800c0b2:	bf00      	nop
 800c0b4:	1fff7a10 	.word	0x1fff7a10
 800c0b8:	1fff7a14 	.word	0x1fff7a14
 800c0bc:	1fff7a18 	.word	0x1fff7a18
 800c0c0:	200000f6 	.word	0x200000f6
 800c0c4:	20000106 	.word	0x20000106

0800c0c8 <IntToUnicode>:
 800c0c8:	b480      	push	{r7}
 800c0ca:	b087      	sub	sp, #28
 800c0cc:	af00      	add	r7, sp, #0
 800c0ce:	60f8      	str	r0, [r7, #12]
 800c0d0:	60b9      	str	r1, [r7, #8]
 800c0d2:	4613      	mov	r3, r2
 800c0d4:	71fb      	strb	r3, [r7, #7]
 800c0d6:	2300      	movs	r3, #0
 800c0d8:	75fb      	strb	r3, [r7, #23]
 800c0da:	2300      	movs	r3, #0
 800c0dc:	75fb      	strb	r3, [r7, #23]
 800c0de:	e027      	b.n	800c130 <IntToUnicode+0x68>
 800c0e0:	68fb      	ldr	r3, [r7, #12]
 800c0e2:	0f1b      	lsrs	r3, r3, #28
 800c0e4:	2b09      	cmp	r3, #9
 800c0e6:	d80b      	bhi.n	800c100 <IntToUnicode+0x38>
 800c0e8:	68fb      	ldr	r3, [r7, #12]
 800c0ea:	0f1b      	lsrs	r3, r3, #28
 800c0ec:	b2da      	uxtb	r2, r3
 800c0ee:	7dfb      	ldrb	r3, [r7, #23]
 800c0f0:	005b      	lsls	r3, r3, #1
 800c0f2:	4619      	mov	r1, r3
 800c0f4:	68bb      	ldr	r3, [r7, #8]
 800c0f6:	440b      	add	r3, r1
 800c0f8:	3230      	adds	r2, #48	; 0x30
 800c0fa:	b2d2      	uxtb	r2, r2
 800c0fc:	701a      	strb	r2, [r3, #0]
 800c0fe:	e00a      	b.n	800c116 <IntToUnicode+0x4e>
 800c100:	68fb      	ldr	r3, [r7, #12]
 800c102:	0f1b      	lsrs	r3, r3, #28
 800c104:	b2da      	uxtb	r2, r3
 800c106:	7dfb      	ldrb	r3, [r7, #23]
 800c108:	005b      	lsls	r3, r3, #1
 800c10a:	4619      	mov	r1, r3
 800c10c:	68bb      	ldr	r3, [r7, #8]
 800c10e:	440b      	add	r3, r1
 800c110:	3237      	adds	r2, #55	; 0x37
 800c112:	b2d2      	uxtb	r2, r2
 800c114:	701a      	strb	r2, [r3, #0]
 800c116:	68fb      	ldr	r3, [r7, #12]
 800c118:	011b      	lsls	r3, r3, #4
 800c11a:	60fb      	str	r3, [r7, #12]
 800c11c:	7dfb      	ldrb	r3, [r7, #23]
 800c11e:	005b      	lsls	r3, r3, #1
 800c120:	3301      	adds	r3, #1
 800c122:	68ba      	ldr	r2, [r7, #8]
 800c124:	4413      	add	r3, r2
 800c126:	2200      	movs	r2, #0
 800c128:	701a      	strb	r2, [r3, #0]
 800c12a:	7dfb      	ldrb	r3, [r7, #23]
 800c12c:	3301      	adds	r3, #1
 800c12e:	75fb      	strb	r3, [r7, #23]
 800c130:	7dfa      	ldrb	r2, [r7, #23]
 800c132:	79fb      	ldrb	r3, [r7, #7]
 800c134:	429a      	cmp	r2, r3
 800c136:	d3d3      	bcc.n	800c0e0 <IntToUnicode+0x18>
 800c138:	bf00      	nop
 800c13a:	bf00      	nop
 800c13c:	371c      	adds	r7, #28
 800c13e:	46bd      	mov	sp, r7
 800c140:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c144:	4770      	bx	lr
	...

0800c148 <HAL_PCD_MspInit>:
 800c148:	b580      	push	{r7, lr}
 800c14a:	b08a      	sub	sp, #40	; 0x28
 800c14c:	af00      	add	r7, sp, #0
 800c14e:	6078      	str	r0, [r7, #4]
 800c150:	f107 0314 	add.w	r3, r7, #20
 800c154:	2200      	movs	r2, #0
 800c156:	601a      	str	r2, [r3, #0]
 800c158:	605a      	str	r2, [r3, #4]
 800c15a:	609a      	str	r2, [r3, #8]
 800c15c:	60da      	str	r2, [r3, #12]
 800c15e:	611a      	str	r2, [r3, #16]
 800c160:	687b      	ldr	r3, [r7, #4]
 800c162:	681b      	ldr	r3, [r3, #0]
 800c164:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800c168:	d13a      	bne.n	800c1e0 <HAL_PCD_MspInit+0x98>
 800c16a:	2300      	movs	r3, #0
 800c16c:	613b      	str	r3, [r7, #16]
 800c16e:	4b1e      	ldr	r3, [pc, #120]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c170:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c172:	4a1d      	ldr	r2, [pc, #116]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c174:	f043 0301 	orr.w	r3, r3, #1
 800c178:	6313      	str	r3, [r2, #48]	; 0x30
 800c17a:	4b1b      	ldr	r3, [pc, #108]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c17c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c17e:	f003 0301 	and.w	r3, r3, #1
 800c182:	613b      	str	r3, [r7, #16]
 800c184:	693b      	ldr	r3, [r7, #16]
 800c186:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 800c18a:	617b      	str	r3, [r7, #20]
 800c18c:	2302      	movs	r3, #2
 800c18e:	61bb      	str	r3, [r7, #24]
 800c190:	2300      	movs	r3, #0
 800c192:	61fb      	str	r3, [r7, #28]
 800c194:	2303      	movs	r3, #3
 800c196:	623b      	str	r3, [r7, #32]
 800c198:	230a      	movs	r3, #10
 800c19a:	627b      	str	r3, [r7, #36]	; 0x24
 800c19c:	f107 0314 	add.w	r3, r7, #20
 800c1a0:	4619      	mov	r1, r3
 800c1a2:	4812      	ldr	r0, [pc, #72]	; (800c1ec <HAL_PCD_MspInit+0xa4>)
 800c1a4:	f7f8 fefa 	bl	8004f9c <HAL_GPIO_Init>
 800c1a8:	4b0f      	ldr	r3, [pc, #60]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c1aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c1ac:	4a0e      	ldr	r2, [pc, #56]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c1ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c1b2:	6353      	str	r3, [r2, #52]	; 0x34
 800c1b4:	2300      	movs	r3, #0
 800c1b6:	60fb      	str	r3, [r7, #12]
 800c1b8:	4b0b      	ldr	r3, [pc, #44]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c1ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1bc:	4a0a      	ldr	r2, [pc, #40]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c1be:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c1c2:	6453      	str	r3, [r2, #68]	; 0x44
 800c1c4:	4b08      	ldr	r3, [pc, #32]	; (800c1e8 <HAL_PCD_MspInit+0xa0>)
 800c1c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1c8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800c1cc:	60fb      	str	r3, [r7, #12]
 800c1ce:	68fb      	ldr	r3, [r7, #12]
 800c1d0:	2200      	movs	r2, #0
 800c1d2:	2100      	movs	r1, #0
 800c1d4:	2043      	movs	r0, #67	; 0x43
 800c1d6:	f7f8 fc90 	bl	8004afa <HAL_NVIC_SetPriority>
 800c1da:	2043      	movs	r0, #67	; 0x43
 800c1dc:	f7f8 fca9 	bl	8004b32 <HAL_NVIC_EnableIRQ>
 800c1e0:	bf00      	nop
 800c1e2:	3728      	adds	r7, #40	; 0x28
 800c1e4:	46bd      	mov	sp, r7
 800c1e6:	bd80      	pop	{r7, pc}
 800c1e8:	40023800 	.word	0x40023800
 800c1ec:	40020000 	.word	0x40020000

0800c1f0 <HAL_PCD_SetupStageCallback>:
 800c1f0:	b580      	push	{r7, lr}
 800c1f2:	b082      	sub	sp, #8
 800c1f4:	af00      	add	r7, sp, #0
 800c1f6:	6078      	str	r0, [r7, #4]
 800c1f8:	687b      	ldr	r3, [r7, #4]
 800c1fa:	f8d3 24e0 	ldr.w	r2, [r3, #1248]	; 0x4e0
 800c1fe:	687b      	ldr	r3, [r7, #4]
 800c200:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800c204:	4619      	mov	r1, r3
 800c206:	4610      	mov	r0, r2
 800c208:	f7fe fb4d 	bl	800a8a6 <USBD_LL_SetupStage>
 800c20c:	bf00      	nop
 800c20e:	3708      	adds	r7, #8
 800c210:	46bd      	mov	sp, r7
 800c212:	bd80      	pop	{r7, pc}

0800c214 <HAL_PCD_DataOutStageCallback>:
 800c214:	b580      	push	{r7, lr}
 800c216:	b082      	sub	sp, #8
 800c218:	af00      	add	r7, sp, #0
 800c21a:	6078      	str	r0, [r7, #4]
 800c21c:	460b      	mov	r3, r1
 800c21e:	70fb      	strb	r3, [r7, #3]
 800c220:	687b      	ldr	r3, [r7, #4]
 800c222:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	; 0x4e0
 800c226:	78fa      	ldrb	r2, [r7, #3]
 800c228:	6879      	ldr	r1, [r7, #4]
 800c22a:	4613      	mov	r3, r2
 800c22c:	00db      	lsls	r3, r3, #3
 800c22e:	4413      	add	r3, r2
 800c230:	009b      	lsls	r3, r3, #2
 800c232:	440b      	add	r3, r1
 800c234:	f503 7318 	add.w	r3, r3, #608	; 0x260
 800c238:	681a      	ldr	r2, [r3, #0]
 800c23a:	78fb      	ldrb	r3, [r7, #3]
 800c23c:	4619      	mov	r1, r3
 800c23e:	f7fe fb87 	bl	800a950 <USBD_LL_DataOutStage>
 800c242:	bf00      	nop
 800c244:	3708      	adds	r7, #8
 800c246:	46bd      	mov	sp, r7
 800c248:	bd80      	pop	{r7, pc}

0800c24a <HAL_PCD_DataInStageCallback>:
 800c24a:	b580      	push	{r7, lr}
 800c24c:	b082      	sub	sp, #8
 800c24e:	af00      	add	r7, sp, #0
 800c250:	6078      	str	r0, [r7, #4]
 800c252:	460b      	mov	r3, r1
 800c254:	70fb      	strb	r3, [r7, #3]
 800c256:	687b      	ldr	r3, [r7, #4]
 800c258:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	; 0x4e0
 800c25c:	78fa      	ldrb	r2, [r7, #3]
 800c25e:	6879      	ldr	r1, [r7, #4]
 800c260:	4613      	mov	r3, r2
 800c262:	00db      	lsls	r3, r3, #3
 800c264:	4413      	add	r3, r2
 800c266:	009b      	lsls	r3, r3, #2
 800c268:	440b      	add	r3, r1
 800c26a:	3320      	adds	r3, #32
 800c26c:	681a      	ldr	r2, [r3, #0]
 800c26e:	78fb      	ldrb	r3, [r7, #3]
 800c270:	4619      	mov	r1, r3
 800c272:	f7fe fc20 	bl	800aab6 <USBD_LL_DataInStage>
 800c276:	bf00      	nop
 800c278:	3708      	adds	r7, #8
 800c27a:	46bd      	mov	sp, r7
 800c27c:	bd80      	pop	{r7, pc}

0800c27e <HAL_PCD_SOFCallback>:
 800c27e:	b580      	push	{r7, lr}
 800c280:	b082      	sub	sp, #8
 800c282:	af00      	add	r7, sp, #0
 800c284:	6078      	str	r0, [r7, #4]
 800c286:	687b      	ldr	r3, [r7, #4]
 800c288:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c28c:	4618      	mov	r0, r3
 800c28e:	f7fe fd5a 	bl	800ad46 <USBD_LL_SOF>
 800c292:	bf00      	nop
 800c294:	3708      	adds	r7, #8
 800c296:	46bd      	mov	sp, r7
 800c298:	bd80      	pop	{r7, pc}

0800c29a <HAL_PCD_ResetCallback>:
 800c29a:	b580      	push	{r7, lr}
 800c29c:	b084      	sub	sp, #16
 800c29e:	af00      	add	r7, sp, #0
 800c2a0:	6078      	str	r0, [r7, #4]
 800c2a2:	2301      	movs	r3, #1
 800c2a4:	73fb      	strb	r3, [r7, #15]
 800c2a6:	687b      	ldr	r3, [r7, #4]
 800c2a8:	79db      	ldrb	r3, [r3, #7]
 800c2aa:	2b00      	cmp	r3, #0
 800c2ac:	d102      	bne.n	800c2b4 <HAL_PCD_ResetCallback+0x1a>
 800c2ae:	2300      	movs	r3, #0
 800c2b0:	73fb      	strb	r3, [r7, #15]
 800c2b2:	e008      	b.n	800c2c6 <HAL_PCD_ResetCallback+0x2c>
 800c2b4:	687b      	ldr	r3, [r7, #4]
 800c2b6:	79db      	ldrb	r3, [r3, #7]
 800c2b8:	2b02      	cmp	r3, #2
 800c2ba:	d102      	bne.n	800c2c2 <HAL_PCD_ResetCallback+0x28>
 800c2bc:	2301      	movs	r3, #1
 800c2be:	73fb      	strb	r3, [r7, #15]
 800c2c0:	e001      	b.n	800c2c6 <HAL_PCD_ResetCallback+0x2c>
 800c2c2:	f7f7 fc3f 	bl	8003b44 <Error_Handler>
 800c2c6:	687b      	ldr	r3, [r7, #4]
 800c2c8:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c2cc:	7bfa      	ldrb	r2, [r7, #15]
 800c2ce:	4611      	mov	r1, r2
 800c2d0:	4618      	mov	r0, r3
 800c2d2:	f7fe fcf4 	bl	800acbe <USBD_LL_SetSpeed>
 800c2d6:	687b      	ldr	r3, [r7, #4]
 800c2d8:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c2dc:	4618      	mov	r0, r3
 800c2de:	f7fe fc9c 	bl	800ac1a <USBD_LL_Reset>
 800c2e2:	bf00      	nop
 800c2e4:	3710      	adds	r7, #16
 800c2e6:	46bd      	mov	sp, r7
 800c2e8:	bd80      	pop	{r7, pc}
	...

0800c2ec <HAL_PCD_SuspendCallback>:
 800c2ec:	b580      	push	{r7, lr}
 800c2ee:	b082      	sub	sp, #8
 800c2f0:	af00      	add	r7, sp, #0
 800c2f2:	6078      	str	r0, [r7, #4]
 800c2f4:	687b      	ldr	r3, [r7, #4]
 800c2f6:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c2fa:	4618      	mov	r0, r3
 800c2fc:	f7fe fcef 	bl	800acde <USBD_LL_Suspend>
 800c300:	687b      	ldr	r3, [r7, #4]
 800c302:	681b      	ldr	r3, [r3, #0]
 800c304:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800c308:	681b      	ldr	r3, [r3, #0]
 800c30a:	687a      	ldr	r2, [r7, #4]
 800c30c:	6812      	ldr	r2, [r2, #0]
 800c30e:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 800c312:	f043 0301 	orr.w	r3, r3, #1
 800c316:	6013      	str	r3, [r2, #0]
 800c318:	687b      	ldr	r3, [r7, #4]
 800c31a:	7adb      	ldrb	r3, [r3, #11]
 800c31c:	2b00      	cmp	r3, #0
 800c31e:	d005      	beq.n	800c32c <HAL_PCD_SuspendCallback+0x40>
 800c320:	4b04      	ldr	r3, [pc, #16]	; (800c334 <HAL_PCD_SuspendCallback+0x48>)
 800c322:	691b      	ldr	r3, [r3, #16]
 800c324:	4a03      	ldr	r2, [pc, #12]	; (800c334 <HAL_PCD_SuspendCallback+0x48>)
 800c326:	f043 0306 	orr.w	r3, r3, #6
 800c32a:	6113      	str	r3, [r2, #16]
 800c32c:	bf00      	nop
 800c32e:	3708      	adds	r7, #8
 800c330:	46bd      	mov	sp, r7
 800c332:	bd80      	pop	{r7, pc}
 800c334:	e000ed00 	.word	0xe000ed00

0800c338 <HAL_PCD_ResumeCallback>:
 800c338:	b580      	push	{r7, lr}
 800c33a:	b082      	sub	sp, #8
 800c33c:	af00      	add	r7, sp, #0
 800c33e:	6078      	str	r0, [r7, #4]
 800c340:	687b      	ldr	r3, [r7, #4]
 800c342:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c346:	4618      	mov	r0, r3
 800c348:	f7fe fce5 	bl	800ad16 <USBD_LL_Resume>
 800c34c:	bf00      	nop
 800c34e:	3708      	adds	r7, #8
 800c350:	46bd      	mov	sp, r7
 800c352:	bd80      	pop	{r7, pc}

0800c354 <HAL_PCD_ISOOUTIncompleteCallback>:
 800c354:	b580      	push	{r7, lr}
 800c356:	b082      	sub	sp, #8
 800c358:	af00      	add	r7, sp, #0
 800c35a:	6078      	str	r0, [r7, #4]
 800c35c:	460b      	mov	r3, r1
 800c35e:	70fb      	strb	r3, [r7, #3]
 800c360:	687b      	ldr	r3, [r7, #4]
 800c362:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c366:	78fa      	ldrb	r2, [r7, #3]
 800c368:	4611      	mov	r1, r2
 800c36a:	4618      	mov	r0, r3
 800c36c:	f7fe fd3d 	bl	800adea <USBD_LL_IsoOUTIncomplete>
 800c370:	bf00      	nop
 800c372:	3708      	adds	r7, #8
 800c374:	46bd      	mov	sp, r7
 800c376:	bd80      	pop	{r7, pc}

0800c378 <HAL_PCD_ISOINIncompleteCallback>:
 800c378:	b580      	push	{r7, lr}
 800c37a:	b082      	sub	sp, #8
 800c37c:	af00      	add	r7, sp, #0
 800c37e:	6078      	str	r0, [r7, #4]
 800c380:	460b      	mov	r3, r1
 800c382:	70fb      	strb	r3, [r7, #3]
 800c384:	687b      	ldr	r3, [r7, #4]
 800c386:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c38a:	78fa      	ldrb	r2, [r7, #3]
 800c38c:	4611      	mov	r1, r2
 800c38e:	4618      	mov	r0, r3
 800c390:	f7fe fcf9 	bl	800ad86 <USBD_LL_IsoINIncomplete>
 800c394:	bf00      	nop
 800c396:	3708      	adds	r7, #8
 800c398:	46bd      	mov	sp, r7
 800c39a:	bd80      	pop	{r7, pc}

0800c39c <HAL_PCD_ConnectCallback>:
 800c39c:	b580      	push	{r7, lr}
 800c39e:	b082      	sub	sp, #8
 800c3a0:	af00      	add	r7, sp, #0
 800c3a2:	6078      	str	r0, [r7, #4]
 800c3a4:	687b      	ldr	r3, [r7, #4]
 800c3a6:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c3aa:	4618      	mov	r0, r3
 800c3ac:	f7fe fd4f 	bl	800ae4e <USBD_LL_DevConnected>
 800c3b0:	bf00      	nop
 800c3b2:	3708      	adds	r7, #8
 800c3b4:	46bd      	mov	sp, r7
 800c3b6:	bd80      	pop	{r7, pc}

0800c3b8 <HAL_PCD_DisconnectCallback>:
 800c3b8:	b580      	push	{r7, lr}
 800c3ba:	b082      	sub	sp, #8
 800c3bc:	af00      	add	r7, sp, #0
 800c3be:	6078      	str	r0, [r7, #4]
 800c3c0:	687b      	ldr	r3, [r7, #4]
 800c3c2:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 800c3c6:	4618      	mov	r0, r3
 800c3c8:	f7fe fd4c 	bl	800ae64 <USBD_LL_DevDisconnected>
 800c3cc:	bf00      	nop
 800c3ce:	3708      	adds	r7, #8
 800c3d0:	46bd      	mov	sp, r7
 800c3d2:	bd80      	pop	{r7, pc}

0800c3d4 <USBD_LL_Init>:
 800c3d4:	b580      	push	{r7, lr}
 800c3d6:	b082      	sub	sp, #8
 800c3d8:	af00      	add	r7, sp, #0
 800c3da:	6078      	str	r0, [r7, #4]
 800c3dc:	687b      	ldr	r3, [r7, #4]
 800c3de:	781b      	ldrb	r3, [r3, #0]
 800c3e0:	2b00      	cmp	r3, #0
 800c3e2:	d13c      	bne.n	800c45e <USBD_LL_Init+0x8a>
 800c3e4:	4a20      	ldr	r2, [pc, #128]	; (800c468 <USBD_LL_Init+0x94>)
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	f8c2 34e0 	str.w	r3, [r2, #1248]	; 0x4e0
 800c3ec:	687b      	ldr	r3, [r7, #4]
 800c3ee:	4a1e      	ldr	r2, [pc, #120]	; (800c468 <USBD_LL_Init+0x94>)
 800c3f0:	f8c3 22c8 	str.w	r2, [r3, #712]	; 0x2c8
 800c3f4:	4b1c      	ldr	r3, [pc, #112]	; (800c468 <USBD_LL_Init+0x94>)
 800c3f6:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 800c3fa:	601a      	str	r2, [r3, #0]
 800c3fc:	4b1a      	ldr	r3, [pc, #104]	; (800c468 <USBD_LL_Init+0x94>)
 800c3fe:	2204      	movs	r2, #4
 800c400:	711a      	strb	r2, [r3, #4]
 800c402:	4b19      	ldr	r3, [pc, #100]	; (800c468 <USBD_LL_Init+0x94>)
 800c404:	2202      	movs	r2, #2
 800c406:	71da      	strb	r2, [r3, #7]
 800c408:	4b17      	ldr	r3, [pc, #92]	; (800c468 <USBD_LL_Init+0x94>)
 800c40a:	2200      	movs	r2, #0
 800c40c:	719a      	strb	r2, [r3, #6]
 800c40e:	4b16      	ldr	r3, [pc, #88]	; (800c468 <USBD_LL_Init+0x94>)
 800c410:	2202      	movs	r2, #2
 800c412:	725a      	strb	r2, [r3, #9]
 800c414:	4b14      	ldr	r3, [pc, #80]	; (800c468 <USBD_LL_Init+0x94>)
 800c416:	2200      	movs	r2, #0
 800c418:	729a      	strb	r2, [r3, #10]
 800c41a:	4b13      	ldr	r3, [pc, #76]	; (800c468 <USBD_LL_Init+0x94>)
 800c41c:	2200      	movs	r2, #0
 800c41e:	72da      	strb	r2, [r3, #11]
 800c420:	4b11      	ldr	r3, [pc, #68]	; (800c468 <USBD_LL_Init+0x94>)
 800c422:	2200      	movs	r2, #0
 800c424:	731a      	strb	r2, [r3, #12]
 800c426:	4b10      	ldr	r3, [pc, #64]	; (800c468 <USBD_LL_Init+0x94>)
 800c428:	2200      	movs	r2, #0
 800c42a:	739a      	strb	r2, [r3, #14]
 800c42c:	4b0e      	ldr	r3, [pc, #56]	; (800c468 <USBD_LL_Init+0x94>)
 800c42e:	2200      	movs	r2, #0
 800c430:	73da      	strb	r2, [r3, #15]
 800c432:	480d      	ldr	r0, [pc, #52]	; (800c468 <USBD_LL_Init+0x94>)
 800c434:	f7f9 fd65 	bl	8005f02 <HAL_PCD_Init>
 800c438:	4603      	mov	r3, r0
 800c43a:	2b00      	cmp	r3, #0
 800c43c:	d001      	beq.n	800c442 <USBD_LL_Init+0x6e>
 800c43e:	f7f7 fb81 	bl	8003b44 <Error_Handler>
 800c442:	2180      	movs	r1, #128	; 0x80
 800c444:	4808      	ldr	r0, [pc, #32]	; (800c468 <USBD_LL_Init+0x94>)
 800c446:	f7fa ff90 	bl	800736a <HAL_PCDEx_SetRxFiFo>
 800c44a:	2240      	movs	r2, #64	; 0x40
 800c44c:	2100      	movs	r1, #0
 800c44e:	4806      	ldr	r0, [pc, #24]	; (800c468 <USBD_LL_Init+0x94>)
 800c450:	f7fa ff44 	bl	80072dc <HAL_PCDEx_SetTxFiFo>
 800c454:	2280      	movs	r2, #128	; 0x80
 800c456:	2101      	movs	r1, #1
 800c458:	4803      	ldr	r0, [pc, #12]	; (800c468 <USBD_LL_Init+0x94>)
 800c45a:	f7fa ff3f 	bl	80072dc <HAL_PCDEx_SetTxFiFo>
 800c45e:	2300      	movs	r3, #0
 800c460:	4618      	mov	r0, r3
 800c462:	3708      	adds	r7, #8
 800c464:	46bd      	mov	sp, r7
 800c466:	bd80      	pop	{r7, pc}
 800c468:	20001bdc 	.word	0x20001bdc

0800c46c <USBD_LL_Start>:
 800c46c:	b580      	push	{r7, lr}
 800c46e:	b084      	sub	sp, #16
 800c470:	af00      	add	r7, sp, #0
 800c472:	6078      	str	r0, [r7, #4]
 800c474:	2300      	movs	r3, #0
 800c476:	73fb      	strb	r3, [r7, #15]
 800c478:	2300      	movs	r3, #0
 800c47a:	73bb      	strb	r3, [r7, #14]
 800c47c:	687b      	ldr	r3, [r7, #4]
 800c47e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c482:	4618      	mov	r0, r3
 800c484:	f7f9 fe4c 	bl	8006120 <HAL_PCD_Start>
 800c488:	4603      	mov	r3, r0
 800c48a:	73fb      	strb	r3, [r7, #15]
 800c48c:	7bfb      	ldrb	r3, [r7, #15]
 800c48e:	4618      	mov	r0, r3
 800c490:	f000 f942 	bl	800c718 <USBD_Get_USB_Status>
 800c494:	4603      	mov	r3, r0
 800c496:	73bb      	strb	r3, [r7, #14]
 800c498:	7bbb      	ldrb	r3, [r7, #14]
 800c49a:	4618      	mov	r0, r3
 800c49c:	3710      	adds	r7, #16
 800c49e:	46bd      	mov	sp, r7
 800c4a0:	bd80      	pop	{r7, pc}

0800c4a2 <USBD_LL_OpenEP>:
 800c4a2:	b580      	push	{r7, lr}
 800c4a4:	b084      	sub	sp, #16
 800c4a6:	af00      	add	r7, sp, #0
 800c4a8:	6078      	str	r0, [r7, #4]
 800c4aa:	4608      	mov	r0, r1
 800c4ac:	4611      	mov	r1, r2
 800c4ae:	461a      	mov	r2, r3
 800c4b0:	4603      	mov	r3, r0
 800c4b2:	70fb      	strb	r3, [r7, #3]
 800c4b4:	460b      	mov	r3, r1
 800c4b6:	70bb      	strb	r3, [r7, #2]
 800c4b8:	4613      	mov	r3, r2
 800c4ba:	803b      	strh	r3, [r7, #0]
 800c4bc:	2300      	movs	r3, #0
 800c4be:	73fb      	strb	r3, [r7, #15]
 800c4c0:	2300      	movs	r3, #0
 800c4c2:	73bb      	strb	r3, [r7, #14]
 800c4c4:	687b      	ldr	r3, [r7, #4]
 800c4c6:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800c4ca:	78bb      	ldrb	r3, [r7, #2]
 800c4cc:	883a      	ldrh	r2, [r7, #0]
 800c4ce:	78f9      	ldrb	r1, [r7, #3]
 800c4d0:	f7fa fb20 	bl	8006b14 <HAL_PCD_EP_Open>
 800c4d4:	4603      	mov	r3, r0
 800c4d6:	73fb      	strb	r3, [r7, #15]
 800c4d8:	7bfb      	ldrb	r3, [r7, #15]
 800c4da:	4618      	mov	r0, r3
 800c4dc:	f000 f91c 	bl	800c718 <USBD_Get_USB_Status>
 800c4e0:	4603      	mov	r3, r0
 800c4e2:	73bb      	strb	r3, [r7, #14]
 800c4e4:	7bbb      	ldrb	r3, [r7, #14]
 800c4e6:	4618      	mov	r0, r3
 800c4e8:	3710      	adds	r7, #16
 800c4ea:	46bd      	mov	sp, r7
 800c4ec:	bd80      	pop	{r7, pc}

0800c4ee <USBD_LL_CloseEP>:
 800c4ee:	b580      	push	{r7, lr}
 800c4f0:	b084      	sub	sp, #16
 800c4f2:	af00      	add	r7, sp, #0
 800c4f4:	6078      	str	r0, [r7, #4]
 800c4f6:	460b      	mov	r3, r1
 800c4f8:	70fb      	strb	r3, [r7, #3]
 800c4fa:	2300      	movs	r3, #0
 800c4fc:	73fb      	strb	r3, [r7, #15]
 800c4fe:	2300      	movs	r3, #0
 800c500:	73bb      	strb	r3, [r7, #14]
 800c502:	687b      	ldr	r3, [r7, #4]
 800c504:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c508:	78fa      	ldrb	r2, [r7, #3]
 800c50a:	4611      	mov	r1, r2
 800c50c:	4618      	mov	r0, r3
 800c50e:	f7fa fb69 	bl	8006be4 <HAL_PCD_EP_Close>
 800c512:	4603      	mov	r3, r0
 800c514:	73fb      	strb	r3, [r7, #15]
 800c516:	7bfb      	ldrb	r3, [r7, #15]
 800c518:	4618      	mov	r0, r3
 800c51a:	f000 f8fd 	bl	800c718 <USBD_Get_USB_Status>
 800c51e:	4603      	mov	r3, r0
 800c520:	73bb      	strb	r3, [r7, #14]
 800c522:	7bbb      	ldrb	r3, [r7, #14]
 800c524:	4618      	mov	r0, r3
 800c526:	3710      	adds	r7, #16
 800c528:	46bd      	mov	sp, r7
 800c52a:	bd80      	pop	{r7, pc}

0800c52c <USBD_LL_StallEP>:
 800c52c:	b580      	push	{r7, lr}
 800c52e:	b084      	sub	sp, #16
 800c530:	af00      	add	r7, sp, #0
 800c532:	6078      	str	r0, [r7, #4]
 800c534:	460b      	mov	r3, r1
 800c536:	70fb      	strb	r3, [r7, #3]
 800c538:	2300      	movs	r3, #0
 800c53a:	73fb      	strb	r3, [r7, #15]
 800c53c:	2300      	movs	r3, #0
 800c53e:	73bb      	strb	r3, [r7, #14]
 800c540:	687b      	ldr	r3, [r7, #4]
 800c542:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c546:	78fa      	ldrb	r2, [r7, #3]
 800c548:	4611      	mov	r1, r2
 800c54a:	4618      	mov	r0, r3
 800c54c:	f7fa fc21 	bl	8006d92 <HAL_PCD_EP_SetStall>
 800c550:	4603      	mov	r3, r0
 800c552:	73fb      	strb	r3, [r7, #15]
 800c554:	7bfb      	ldrb	r3, [r7, #15]
 800c556:	4618      	mov	r0, r3
 800c558:	f000 f8de 	bl	800c718 <USBD_Get_USB_Status>
 800c55c:	4603      	mov	r3, r0
 800c55e:	73bb      	strb	r3, [r7, #14]
 800c560:	7bbb      	ldrb	r3, [r7, #14]
 800c562:	4618      	mov	r0, r3
 800c564:	3710      	adds	r7, #16
 800c566:	46bd      	mov	sp, r7
 800c568:	bd80      	pop	{r7, pc}

0800c56a <USBD_LL_ClearStallEP>:
 800c56a:	b580      	push	{r7, lr}
 800c56c:	b084      	sub	sp, #16
 800c56e:	af00      	add	r7, sp, #0
 800c570:	6078      	str	r0, [r7, #4]
 800c572:	460b      	mov	r3, r1
 800c574:	70fb      	strb	r3, [r7, #3]
 800c576:	2300      	movs	r3, #0
 800c578:	73fb      	strb	r3, [r7, #15]
 800c57a:	2300      	movs	r3, #0
 800c57c:	73bb      	strb	r3, [r7, #14]
 800c57e:	687b      	ldr	r3, [r7, #4]
 800c580:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c584:	78fa      	ldrb	r2, [r7, #3]
 800c586:	4611      	mov	r1, r2
 800c588:	4618      	mov	r0, r3
 800c58a:	f7fa fc65 	bl	8006e58 <HAL_PCD_EP_ClrStall>
 800c58e:	4603      	mov	r3, r0
 800c590:	73fb      	strb	r3, [r7, #15]
 800c592:	7bfb      	ldrb	r3, [r7, #15]
 800c594:	4618      	mov	r0, r3
 800c596:	f000 f8bf 	bl	800c718 <USBD_Get_USB_Status>
 800c59a:	4603      	mov	r3, r0
 800c59c:	73bb      	strb	r3, [r7, #14]
 800c59e:	7bbb      	ldrb	r3, [r7, #14]
 800c5a0:	4618      	mov	r0, r3
 800c5a2:	3710      	adds	r7, #16
 800c5a4:	46bd      	mov	sp, r7
 800c5a6:	bd80      	pop	{r7, pc}

0800c5a8 <USBD_LL_IsStallEP>:
 800c5a8:	b480      	push	{r7}
 800c5aa:	b085      	sub	sp, #20
 800c5ac:	af00      	add	r7, sp, #0
 800c5ae:	6078      	str	r0, [r7, #4]
 800c5b0:	460b      	mov	r3, r1
 800c5b2:	70fb      	strb	r3, [r7, #3]
 800c5b4:	687b      	ldr	r3, [r7, #4]
 800c5b6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c5ba:	60fb      	str	r3, [r7, #12]
 800c5bc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800c5c0:	2b00      	cmp	r3, #0
 800c5c2:	da0b      	bge.n	800c5dc <USBD_LL_IsStallEP+0x34>
 800c5c4:	78fb      	ldrb	r3, [r7, #3]
 800c5c6:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800c5ca:	68f9      	ldr	r1, [r7, #12]
 800c5cc:	4613      	mov	r3, r2
 800c5ce:	00db      	lsls	r3, r3, #3
 800c5d0:	4413      	add	r3, r2
 800c5d2:	009b      	lsls	r3, r3, #2
 800c5d4:	440b      	add	r3, r1
 800c5d6:	3316      	adds	r3, #22
 800c5d8:	781b      	ldrb	r3, [r3, #0]
 800c5da:	e00b      	b.n	800c5f4 <USBD_LL_IsStallEP+0x4c>
 800c5dc:	78fb      	ldrb	r3, [r7, #3]
 800c5de:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800c5e2:	68f9      	ldr	r1, [r7, #12]
 800c5e4:	4613      	mov	r3, r2
 800c5e6:	00db      	lsls	r3, r3, #3
 800c5e8:	4413      	add	r3, r2
 800c5ea:	009b      	lsls	r3, r3, #2
 800c5ec:	440b      	add	r3, r1
 800c5ee:	f203 2356 	addw	r3, r3, #598	; 0x256
 800c5f2:	781b      	ldrb	r3, [r3, #0]
 800c5f4:	4618      	mov	r0, r3
 800c5f6:	3714      	adds	r7, #20
 800c5f8:	46bd      	mov	sp, r7
 800c5fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5fe:	4770      	bx	lr

0800c600 <USBD_LL_SetUSBAddress>:
 800c600:	b580      	push	{r7, lr}
 800c602:	b084      	sub	sp, #16
 800c604:	af00      	add	r7, sp, #0
 800c606:	6078      	str	r0, [r7, #4]
 800c608:	460b      	mov	r3, r1
 800c60a:	70fb      	strb	r3, [r7, #3]
 800c60c:	2300      	movs	r3, #0
 800c60e:	73fb      	strb	r3, [r7, #15]
 800c610:	2300      	movs	r3, #0
 800c612:	73bb      	strb	r3, [r7, #14]
 800c614:	687b      	ldr	r3, [r7, #4]
 800c616:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c61a:	78fa      	ldrb	r2, [r7, #3]
 800c61c:	4611      	mov	r1, r2
 800c61e:	4618      	mov	r0, r3
 800c620:	f7fa fa54 	bl	8006acc <HAL_PCD_SetAddress>
 800c624:	4603      	mov	r3, r0
 800c626:	73fb      	strb	r3, [r7, #15]
 800c628:	7bfb      	ldrb	r3, [r7, #15]
 800c62a:	4618      	mov	r0, r3
 800c62c:	f000 f874 	bl	800c718 <USBD_Get_USB_Status>
 800c630:	4603      	mov	r3, r0
 800c632:	73bb      	strb	r3, [r7, #14]
 800c634:	7bbb      	ldrb	r3, [r7, #14]
 800c636:	4618      	mov	r0, r3
 800c638:	3710      	adds	r7, #16
 800c63a:	46bd      	mov	sp, r7
 800c63c:	bd80      	pop	{r7, pc}

0800c63e <USBD_LL_Transmit>:
 800c63e:	b580      	push	{r7, lr}
 800c640:	b086      	sub	sp, #24
 800c642:	af00      	add	r7, sp, #0
 800c644:	60f8      	str	r0, [r7, #12]
 800c646:	607a      	str	r2, [r7, #4]
 800c648:	603b      	str	r3, [r7, #0]
 800c64a:	460b      	mov	r3, r1
 800c64c:	72fb      	strb	r3, [r7, #11]
 800c64e:	2300      	movs	r3, #0
 800c650:	75fb      	strb	r3, [r7, #23]
 800c652:	2300      	movs	r3, #0
 800c654:	75bb      	strb	r3, [r7, #22]
 800c656:	68fb      	ldr	r3, [r7, #12]
 800c658:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800c65c:	7af9      	ldrb	r1, [r7, #11]
 800c65e:	683b      	ldr	r3, [r7, #0]
 800c660:	687a      	ldr	r2, [r7, #4]
 800c662:	f7fa fb5c 	bl	8006d1e <HAL_PCD_EP_Transmit>
 800c666:	4603      	mov	r3, r0
 800c668:	75fb      	strb	r3, [r7, #23]
 800c66a:	7dfb      	ldrb	r3, [r7, #23]
 800c66c:	4618      	mov	r0, r3
 800c66e:	f000 f853 	bl	800c718 <USBD_Get_USB_Status>
 800c672:	4603      	mov	r3, r0
 800c674:	75bb      	strb	r3, [r7, #22]
 800c676:	7dbb      	ldrb	r3, [r7, #22]
 800c678:	4618      	mov	r0, r3
 800c67a:	3718      	adds	r7, #24
 800c67c:	46bd      	mov	sp, r7
 800c67e:	bd80      	pop	{r7, pc}

0800c680 <USBD_LL_PrepareReceive>:
 800c680:	b580      	push	{r7, lr}
 800c682:	b086      	sub	sp, #24
 800c684:	af00      	add	r7, sp, #0
 800c686:	60f8      	str	r0, [r7, #12]
 800c688:	607a      	str	r2, [r7, #4]
 800c68a:	603b      	str	r3, [r7, #0]
 800c68c:	460b      	mov	r3, r1
 800c68e:	72fb      	strb	r3, [r7, #11]
 800c690:	2300      	movs	r3, #0
 800c692:	75fb      	strb	r3, [r7, #23]
 800c694:	2300      	movs	r3, #0
 800c696:	75bb      	strb	r3, [r7, #22]
 800c698:	68fb      	ldr	r3, [r7, #12]
 800c69a:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800c69e:	7af9      	ldrb	r1, [r7, #11]
 800c6a0:	683b      	ldr	r3, [r7, #0]
 800c6a2:	687a      	ldr	r2, [r7, #4]
 800c6a4:	f7fa fae8 	bl	8006c78 <HAL_PCD_EP_Receive>
 800c6a8:	4603      	mov	r3, r0
 800c6aa:	75fb      	strb	r3, [r7, #23]
 800c6ac:	7dfb      	ldrb	r3, [r7, #23]
 800c6ae:	4618      	mov	r0, r3
 800c6b0:	f000 f832 	bl	800c718 <USBD_Get_USB_Status>
 800c6b4:	4603      	mov	r3, r0
 800c6b6:	75bb      	strb	r3, [r7, #22]
 800c6b8:	7dbb      	ldrb	r3, [r7, #22]
 800c6ba:	4618      	mov	r0, r3
 800c6bc:	3718      	adds	r7, #24
 800c6be:	46bd      	mov	sp, r7
 800c6c0:	bd80      	pop	{r7, pc}

0800c6c2 <USBD_LL_GetRxDataSize>:
 800c6c2:	b580      	push	{r7, lr}
 800c6c4:	b082      	sub	sp, #8
 800c6c6:	af00      	add	r7, sp, #0
 800c6c8:	6078      	str	r0, [r7, #4]
 800c6ca:	460b      	mov	r3, r1
 800c6cc:	70fb      	strb	r3, [r7, #3]
 800c6ce:	687b      	ldr	r3, [r7, #4]
 800c6d0:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800c6d4:	78fa      	ldrb	r2, [r7, #3]
 800c6d6:	4611      	mov	r1, r2
 800c6d8:	4618      	mov	r0, r3
 800c6da:	f7fa fb08 	bl	8006cee <HAL_PCD_EP_GetRxCount>
 800c6de:	4603      	mov	r3, r0
 800c6e0:	4618      	mov	r0, r3
 800c6e2:	3708      	adds	r7, #8
 800c6e4:	46bd      	mov	sp, r7
 800c6e6:	bd80      	pop	{r7, pc}

0800c6e8 <USBD_static_malloc>:
 800c6e8:	b480      	push	{r7}
 800c6ea:	b083      	sub	sp, #12
 800c6ec:	af00      	add	r7, sp, #0
 800c6ee:	6078      	str	r0, [r7, #4]
 800c6f0:	4b03      	ldr	r3, [pc, #12]	; (800c700 <USBD_static_malloc+0x18>)
 800c6f2:	4618      	mov	r0, r3
 800c6f4:	370c      	adds	r7, #12
 800c6f6:	46bd      	mov	sp, r7
 800c6f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6fc:	4770      	bx	lr
 800c6fe:	bf00      	nop
 800c700:	200020c0 	.word	0x200020c0

0800c704 <USBD_static_free>:
 800c704:	b480      	push	{r7}
 800c706:	b083      	sub	sp, #12
 800c708:	af00      	add	r7, sp, #0
 800c70a:	6078      	str	r0, [r7, #4]
 800c70c:	bf00      	nop
 800c70e:	370c      	adds	r7, #12
 800c710:	46bd      	mov	sp, r7
 800c712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c716:	4770      	bx	lr

0800c718 <USBD_Get_USB_Status>:
 800c718:	b480      	push	{r7}
 800c71a:	b085      	sub	sp, #20
 800c71c:	af00      	add	r7, sp, #0
 800c71e:	4603      	mov	r3, r0
 800c720:	71fb      	strb	r3, [r7, #7]
 800c722:	2300      	movs	r3, #0
 800c724:	73fb      	strb	r3, [r7, #15]
 800c726:	79fb      	ldrb	r3, [r7, #7]
 800c728:	2b03      	cmp	r3, #3
 800c72a:	d817      	bhi.n	800c75c <USBD_Get_USB_Status+0x44>
 800c72c:	a201      	add	r2, pc, #4	; (adr r2, 800c734 <USBD_Get_USB_Status+0x1c>)
 800c72e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c732:	bf00      	nop
 800c734:	0800c745 	.word	0x0800c745
 800c738:	0800c74b 	.word	0x0800c74b
 800c73c:	0800c751 	.word	0x0800c751
 800c740:	0800c757 	.word	0x0800c757
 800c744:	2300      	movs	r3, #0
 800c746:	73fb      	strb	r3, [r7, #15]
 800c748:	e00b      	b.n	800c762 <USBD_Get_USB_Status+0x4a>
 800c74a:	2303      	movs	r3, #3
 800c74c:	73fb      	strb	r3, [r7, #15]
 800c74e:	e008      	b.n	800c762 <USBD_Get_USB_Status+0x4a>
 800c750:	2301      	movs	r3, #1
 800c752:	73fb      	strb	r3, [r7, #15]
 800c754:	e005      	b.n	800c762 <USBD_Get_USB_Status+0x4a>
 800c756:	2303      	movs	r3, #3
 800c758:	73fb      	strb	r3, [r7, #15]
 800c75a:	e002      	b.n	800c762 <USBD_Get_USB_Status+0x4a>
 800c75c:	2303      	movs	r3, #3
 800c75e:	73fb      	strb	r3, [r7, #15]
 800c760:	bf00      	nop
 800c762:	7bfb      	ldrb	r3, [r7, #15]
 800c764:	4618      	mov	r0, r3
 800c766:	3714      	adds	r7, #20
 800c768:	46bd      	mov	sp, r7
 800c76a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c76e:	4770      	bx	lr

0800c770 <__itoa>:
 800c770:	1e93      	subs	r3, r2, #2
 800c772:	2b22      	cmp	r3, #34	; 0x22
 800c774:	b510      	push	{r4, lr}
 800c776:	460c      	mov	r4, r1
 800c778:	d904      	bls.n	800c784 <__itoa+0x14>
 800c77a:	2300      	movs	r3, #0
 800c77c:	700b      	strb	r3, [r1, #0]
 800c77e:	461c      	mov	r4, r3
 800c780:	4620      	mov	r0, r4
 800c782:	bd10      	pop	{r4, pc}
 800c784:	2a0a      	cmp	r2, #10
 800c786:	d109      	bne.n	800c79c <__itoa+0x2c>
 800c788:	2800      	cmp	r0, #0
 800c78a:	da07      	bge.n	800c79c <__itoa+0x2c>
 800c78c:	232d      	movs	r3, #45	; 0x2d
 800c78e:	700b      	strb	r3, [r1, #0]
 800c790:	4240      	negs	r0, r0
 800c792:	2101      	movs	r1, #1
 800c794:	4421      	add	r1, r4
 800c796:	f000 f805 	bl	800c7a4 <__utoa>
 800c79a:	e7f1      	b.n	800c780 <__itoa+0x10>
 800c79c:	2100      	movs	r1, #0
 800c79e:	e7f9      	b.n	800c794 <__itoa+0x24>

0800c7a0 <itoa>:
 800c7a0:	f7ff bfe6 	b.w	800c770 <__itoa>

0800c7a4 <__utoa>:
 800c7a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7a6:	4c1f      	ldr	r4, [pc, #124]	; (800c824 <__utoa+0x80>)
 800c7a8:	b08b      	sub	sp, #44	; 0x2c
 800c7aa:	4605      	mov	r5, r0
 800c7ac:	460b      	mov	r3, r1
 800c7ae:	466e      	mov	r6, sp
 800c7b0:	f104 0c20 	add.w	ip, r4, #32
 800c7b4:	6820      	ldr	r0, [r4, #0]
 800c7b6:	6861      	ldr	r1, [r4, #4]
 800c7b8:	4637      	mov	r7, r6
 800c7ba:	c703      	stmia	r7!, {r0, r1}
 800c7bc:	3408      	adds	r4, #8
 800c7be:	4564      	cmp	r4, ip
 800c7c0:	463e      	mov	r6, r7
 800c7c2:	d1f7      	bne.n	800c7b4 <__utoa+0x10>
 800c7c4:	7921      	ldrb	r1, [r4, #4]
 800c7c6:	7139      	strb	r1, [r7, #4]
 800c7c8:	1e91      	subs	r1, r2, #2
 800c7ca:	6820      	ldr	r0, [r4, #0]
 800c7cc:	6038      	str	r0, [r7, #0]
 800c7ce:	2922      	cmp	r1, #34	; 0x22
 800c7d0:	f04f 0100 	mov.w	r1, #0
 800c7d4:	d904      	bls.n	800c7e0 <__utoa+0x3c>
 800c7d6:	7019      	strb	r1, [r3, #0]
 800c7d8:	460b      	mov	r3, r1
 800c7da:	4618      	mov	r0, r3
 800c7dc:	b00b      	add	sp, #44	; 0x2c
 800c7de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c7e0:	1e58      	subs	r0, r3, #1
 800c7e2:	4684      	mov	ip, r0
 800c7e4:	fbb5 f7f2 	udiv	r7, r5, r2
 800c7e8:	fb02 5617 	mls	r6, r2, r7, r5
 800c7ec:	3628      	adds	r6, #40	; 0x28
 800c7ee:	446e      	add	r6, sp
 800c7f0:	460c      	mov	r4, r1
 800c7f2:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 800c7f6:	f80c 6f01 	strb.w	r6, [ip, #1]!
 800c7fa:	462e      	mov	r6, r5
 800c7fc:	42b2      	cmp	r2, r6
 800c7fe:	f101 0101 	add.w	r1, r1, #1
 800c802:	463d      	mov	r5, r7
 800c804:	d9ee      	bls.n	800c7e4 <__utoa+0x40>
 800c806:	2200      	movs	r2, #0
 800c808:	545a      	strb	r2, [r3, r1]
 800c80a:	1919      	adds	r1, r3, r4
 800c80c:	1aa5      	subs	r5, r4, r2
 800c80e:	42aa      	cmp	r2, r5
 800c810:	dae3      	bge.n	800c7da <__utoa+0x36>
 800c812:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800c816:	780e      	ldrb	r6, [r1, #0]
 800c818:	7006      	strb	r6, [r0, #0]
 800c81a:	3201      	adds	r2, #1
 800c81c:	f801 5901 	strb.w	r5, [r1], #-1
 800c820:	e7f4      	b.n	800c80c <__utoa+0x68>
 800c822:	bf00      	nop
 800c824:	0800f41c 	.word	0x0800f41c

0800c828 <std>:
 800c828:	2300      	movs	r3, #0
 800c82a:	b510      	push	{r4, lr}
 800c82c:	4604      	mov	r4, r0
 800c82e:	e9c0 3300 	strd	r3, r3, [r0]
 800c832:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c836:	6083      	str	r3, [r0, #8]
 800c838:	8181      	strh	r1, [r0, #12]
 800c83a:	6643      	str	r3, [r0, #100]	; 0x64
 800c83c:	81c2      	strh	r2, [r0, #14]
 800c83e:	6183      	str	r3, [r0, #24]
 800c840:	4619      	mov	r1, r3
 800c842:	2208      	movs	r2, #8
 800c844:	305c      	adds	r0, #92	; 0x5c
 800c846:	f000 fa0f 	bl	800cc68 <memset>
 800c84a:	4b0d      	ldr	r3, [pc, #52]	; (800c880 <std+0x58>)
 800c84c:	6263      	str	r3, [r4, #36]	; 0x24
 800c84e:	4b0d      	ldr	r3, [pc, #52]	; (800c884 <std+0x5c>)
 800c850:	62a3      	str	r3, [r4, #40]	; 0x28
 800c852:	4b0d      	ldr	r3, [pc, #52]	; (800c888 <std+0x60>)
 800c854:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c856:	4b0d      	ldr	r3, [pc, #52]	; (800c88c <std+0x64>)
 800c858:	6323      	str	r3, [r4, #48]	; 0x30
 800c85a:	4b0d      	ldr	r3, [pc, #52]	; (800c890 <std+0x68>)
 800c85c:	6224      	str	r4, [r4, #32]
 800c85e:	429c      	cmp	r4, r3
 800c860:	d006      	beq.n	800c870 <std+0x48>
 800c862:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800c866:	4294      	cmp	r4, r2
 800c868:	d002      	beq.n	800c870 <std+0x48>
 800c86a:	33d0      	adds	r3, #208	; 0xd0
 800c86c:	429c      	cmp	r4, r3
 800c86e:	d105      	bne.n	800c87c <std+0x54>
 800c870:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800c874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c878:	f000 ba6e 	b.w	800cd58 <__retarget_lock_init_recursive>
 800c87c:	bd10      	pop	{r4, pc}
 800c87e:	bf00      	nop
 800c880:	0800ca99 	.word	0x0800ca99
 800c884:	0800cabb 	.word	0x0800cabb
 800c888:	0800caf3 	.word	0x0800caf3
 800c88c:	0800cb17 	.word	0x0800cb17
 800c890:	200022e0 	.word	0x200022e0

0800c894 <stdio_exit_handler>:
 800c894:	4a02      	ldr	r2, [pc, #8]	; (800c8a0 <stdio_exit_handler+0xc>)
 800c896:	4903      	ldr	r1, [pc, #12]	; (800c8a4 <stdio_exit_handler+0x10>)
 800c898:	4803      	ldr	r0, [pc, #12]	; (800c8a8 <stdio_exit_handler+0x14>)
 800c89a:	f000 b869 	b.w	800c970 <_fwalk_sglue>
 800c89e:	bf00      	nop
 800c8a0:	20000110 	.word	0x20000110
 800c8a4:	0800d629 	.word	0x0800d629
 800c8a8:	2000011c 	.word	0x2000011c

0800c8ac <cleanup_stdio>:
 800c8ac:	6841      	ldr	r1, [r0, #4]
 800c8ae:	4b0c      	ldr	r3, [pc, #48]	; (800c8e0 <cleanup_stdio+0x34>)
 800c8b0:	4299      	cmp	r1, r3
 800c8b2:	b510      	push	{r4, lr}
 800c8b4:	4604      	mov	r4, r0
 800c8b6:	d001      	beq.n	800c8bc <cleanup_stdio+0x10>
 800c8b8:	f000 feb6 	bl	800d628 <_fflush_r>
 800c8bc:	68a1      	ldr	r1, [r4, #8]
 800c8be:	4b09      	ldr	r3, [pc, #36]	; (800c8e4 <cleanup_stdio+0x38>)
 800c8c0:	4299      	cmp	r1, r3
 800c8c2:	d002      	beq.n	800c8ca <cleanup_stdio+0x1e>
 800c8c4:	4620      	mov	r0, r4
 800c8c6:	f000 feaf 	bl	800d628 <_fflush_r>
 800c8ca:	68e1      	ldr	r1, [r4, #12]
 800c8cc:	4b06      	ldr	r3, [pc, #24]	; (800c8e8 <cleanup_stdio+0x3c>)
 800c8ce:	4299      	cmp	r1, r3
 800c8d0:	d004      	beq.n	800c8dc <cleanup_stdio+0x30>
 800c8d2:	4620      	mov	r0, r4
 800c8d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c8d8:	f000 bea6 	b.w	800d628 <_fflush_r>
 800c8dc:	bd10      	pop	{r4, pc}
 800c8de:	bf00      	nop
 800c8e0:	200022e0 	.word	0x200022e0
 800c8e4:	20002348 	.word	0x20002348
 800c8e8:	200023b0 	.word	0x200023b0

0800c8ec <global_stdio_init.part.0>:
 800c8ec:	b510      	push	{r4, lr}
 800c8ee:	4b0b      	ldr	r3, [pc, #44]	; (800c91c <global_stdio_init.part.0+0x30>)
 800c8f0:	4c0b      	ldr	r4, [pc, #44]	; (800c920 <global_stdio_init.part.0+0x34>)
 800c8f2:	4a0c      	ldr	r2, [pc, #48]	; (800c924 <global_stdio_init.part.0+0x38>)
 800c8f4:	601a      	str	r2, [r3, #0]
 800c8f6:	4620      	mov	r0, r4
 800c8f8:	2200      	movs	r2, #0
 800c8fa:	2104      	movs	r1, #4
 800c8fc:	f7ff ff94 	bl	800c828 <std>
 800c900:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800c904:	2201      	movs	r2, #1
 800c906:	2109      	movs	r1, #9
 800c908:	f7ff ff8e 	bl	800c828 <std>
 800c90c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800c910:	2202      	movs	r2, #2
 800c912:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c916:	2112      	movs	r1, #18
 800c918:	f7ff bf86 	b.w	800c828 <std>
 800c91c:	20002418 	.word	0x20002418
 800c920:	200022e0 	.word	0x200022e0
 800c924:	0800c895 	.word	0x0800c895

0800c928 <__sfp_lock_acquire>:
 800c928:	4801      	ldr	r0, [pc, #4]	; (800c930 <__sfp_lock_acquire+0x8>)
 800c92a:	f000 ba16 	b.w	800cd5a <__retarget_lock_acquire_recursive>
 800c92e:	bf00      	nop
 800c930:	20002421 	.word	0x20002421

0800c934 <__sfp_lock_release>:
 800c934:	4801      	ldr	r0, [pc, #4]	; (800c93c <__sfp_lock_release+0x8>)
 800c936:	f000 ba11 	b.w	800cd5c <__retarget_lock_release_recursive>
 800c93a:	bf00      	nop
 800c93c:	20002421 	.word	0x20002421

0800c940 <__sinit>:
 800c940:	b510      	push	{r4, lr}
 800c942:	4604      	mov	r4, r0
 800c944:	f7ff fff0 	bl	800c928 <__sfp_lock_acquire>
 800c948:	6a23      	ldr	r3, [r4, #32]
 800c94a:	b11b      	cbz	r3, 800c954 <__sinit+0x14>
 800c94c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c950:	f7ff bff0 	b.w	800c934 <__sfp_lock_release>
 800c954:	4b04      	ldr	r3, [pc, #16]	; (800c968 <__sinit+0x28>)
 800c956:	6223      	str	r3, [r4, #32]
 800c958:	4b04      	ldr	r3, [pc, #16]	; (800c96c <__sinit+0x2c>)
 800c95a:	681b      	ldr	r3, [r3, #0]
 800c95c:	2b00      	cmp	r3, #0
 800c95e:	d1f5      	bne.n	800c94c <__sinit+0xc>
 800c960:	f7ff ffc4 	bl	800c8ec <global_stdio_init.part.0>
 800c964:	e7f2      	b.n	800c94c <__sinit+0xc>
 800c966:	bf00      	nop
 800c968:	0800c8ad 	.word	0x0800c8ad
 800c96c:	20002418 	.word	0x20002418

0800c970 <_fwalk_sglue>:
 800c970:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c974:	4607      	mov	r7, r0
 800c976:	4688      	mov	r8, r1
 800c978:	4614      	mov	r4, r2
 800c97a:	2600      	movs	r6, #0
 800c97c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800c980:	f1b9 0901 	subs.w	r9, r9, #1
 800c984:	d505      	bpl.n	800c992 <_fwalk_sglue+0x22>
 800c986:	6824      	ldr	r4, [r4, #0]
 800c988:	2c00      	cmp	r4, #0
 800c98a:	d1f7      	bne.n	800c97c <_fwalk_sglue+0xc>
 800c98c:	4630      	mov	r0, r6
 800c98e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c992:	89ab      	ldrh	r3, [r5, #12]
 800c994:	2b01      	cmp	r3, #1
 800c996:	d907      	bls.n	800c9a8 <_fwalk_sglue+0x38>
 800c998:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800c99c:	3301      	adds	r3, #1
 800c99e:	d003      	beq.n	800c9a8 <_fwalk_sglue+0x38>
 800c9a0:	4629      	mov	r1, r5
 800c9a2:	4638      	mov	r0, r7
 800c9a4:	47c0      	blx	r8
 800c9a6:	4306      	orrs	r6, r0
 800c9a8:	3568      	adds	r5, #104	; 0x68
 800c9aa:	e7e9      	b.n	800c980 <_fwalk_sglue+0x10>

0800c9ac <iprintf>:
 800c9ac:	b40f      	push	{r0, r1, r2, r3}
 800c9ae:	b507      	push	{r0, r1, r2, lr}
 800c9b0:	4906      	ldr	r1, [pc, #24]	; (800c9cc <iprintf+0x20>)
 800c9b2:	ab04      	add	r3, sp, #16
 800c9b4:	6808      	ldr	r0, [r1, #0]
 800c9b6:	f853 2b04 	ldr.w	r2, [r3], #4
 800c9ba:	6881      	ldr	r1, [r0, #8]
 800c9bc:	9301      	str	r3, [sp, #4]
 800c9be:	f000 fb03 	bl	800cfc8 <_vfiprintf_r>
 800c9c2:	b003      	add	sp, #12
 800c9c4:	f85d eb04 	ldr.w	lr, [sp], #4
 800c9c8:	b004      	add	sp, #16
 800c9ca:	4770      	bx	lr
 800c9cc:	20000168 	.word	0x20000168

0800c9d0 <putchar>:
 800c9d0:	4b02      	ldr	r3, [pc, #8]	; (800c9dc <putchar+0xc>)
 800c9d2:	4601      	mov	r1, r0
 800c9d4:	6818      	ldr	r0, [r3, #0]
 800c9d6:	6882      	ldr	r2, [r0, #8]
 800c9d8:	f000 beb0 	b.w	800d73c <_putc_r>
 800c9dc:	20000168 	.word	0x20000168

0800c9e0 <_puts_r>:
 800c9e0:	6a03      	ldr	r3, [r0, #32]
 800c9e2:	b570      	push	{r4, r5, r6, lr}
 800c9e4:	6884      	ldr	r4, [r0, #8]
 800c9e6:	4605      	mov	r5, r0
 800c9e8:	460e      	mov	r6, r1
 800c9ea:	b90b      	cbnz	r3, 800c9f0 <_puts_r+0x10>
 800c9ec:	f7ff ffa8 	bl	800c940 <__sinit>
 800c9f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c9f2:	07db      	lsls	r3, r3, #31
 800c9f4:	d405      	bmi.n	800ca02 <_puts_r+0x22>
 800c9f6:	89a3      	ldrh	r3, [r4, #12]
 800c9f8:	0598      	lsls	r0, r3, #22
 800c9fa:	d402      	bmi.n	800ca02 <_puts_r+0x22>
 800c9fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c9fe:	f000 f9ac 	bl	800cd5a <__retarget_lock_acquire_recursive>
 800ca02:	89a3      	ldrh	r3, [r4, #12]
 800ca04:	0719      	lsls	r1, r3, #28
 800ca06:	d513      	bpl.n	800ca30 <_puts_r+0x50>
 800ca08:	6923      	ldr	r3, [r4, #16]
 800ca0a:	b18b      	cbz	r3, 800ca30 <_puts_r+0x50>
 800ca0c:	3e01      	subs	r6, #1
 800ca0e:	68a3      	ldr	r3, [r4, #8]
 800ca10:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800ca14:	3b01      	subs	r3, #1
 800ca16:	60a3      	str	r3, [r4, #8]
 800ca18:	b9e9      	cbnz	r1, 800ca56 <_puts_r+0x76>
 800ca1a:	2b00      	cmp	r3, #0
 800ca1c:	da2e      	bge.n	800ca7c <_puts_r+0x9c>
 800ca1e:	4622      	mov	r2, r4
 800ca20:	210a      	movs	r1, #10
 800ca22:	4628      	mov	r0, r5
 800ca24:	f000 f87b 	bl	800cb1e <__swbuf_r>
 800ca28:	3001      	adds	r0, #1
 800ca2a:	d007      	beq.n	800ca3c <_puts_r+0x5c>
 800ca2c:	250a      	movs	r5, #10
 800ca2e:	e007      	b.n	800ca40 <_puts_r+0x60>
 800ca30:	4621      	mov	r1, r4
 800ca32:	4628      	mov	r0, r5
 800ca34:	f000 f8b0 	bl	800cb98 <__swsetup_r>
 800ca38:	2800      	cmp	r0, #0
 800ca3a:	d0e7      	beq.n	800ca0c <_puts_r+0x2c>
 800ca3c:	f04f 35ff 	mov.w	r5, #4294967295
 800ca40:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ca42:	07da      	lsls	r2, r3, #31
 800ca44:	d405      	bmi.n	800ca52 <_puts_r+0x72>
 800ca46:	89a3      	ldrh	r3, [r4, #12]
 800ca48:	059b      	lsls	r3, r3, #22
 800ca4a:	d402      	bmi.n	800ca52 <_puts_r+0x72>
 800ca4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ca4e:	f000 f985 	bl	800cd5c <__retarget_lock_release_recursive>
 800ca52:	4628      	mov	r0, r5
 800ca54:	bd70      	pop	{r4, r5, r6, pc}
 800ca56:	2b00      	cmp	r3, #0
 800ca58:	da04      	bge.n	800ca64 <_puts_r+0x84>
 800ca5a:	69a2      	ldr	r2, [r4, #24]
 800ca5c:	429a      	cmp	r2, r3
 800ca5e:	dc06      	bgt.n	800ca6e <_puts_r+0x8e>
 800ca60:	290a      	cmp	r1, #10
 800ca62:	d004      	beq.n	800ca6e <_puts_r+0x8e>
 800ca64:	6823      	ldr	r3, [r4, #0]
 800ca66:	1c5a      	adds	r2, r3, #1
 800ca68:	6022      	str	r2, [r4, #0]
 800ca6a:	7019      	strb	r1, [r3, #0]
 800ca6c:	e7cf      	b.n	800ca0e <_puts_r+0x2e>
 800ca6e:	4622      	mov	r2, r4
 800ca70:	4628      	mov	r0, r5
 800ca72:	f000 f854 	bl	800cb1e <__swbuf_r>
 800ca76:	3001      	adds	r0, #1
 800ca78:	d1c9      	bne.n	800ca0e <_puts_r+0x2e>
 800ca7a:	e7df      	b.n	800ca3c <_puts_r+0x5c>
 800ca7c:	6823      	ldr	r3, [r4, #0]
 800ca7e:	250a      	movs	r5, #10
 800ca80:	1c5a      	adds	r2, r3, #1
 800ca82:	6022      	str	r2, [r4, #0]
 800ca84:	701d      	strb	r5, [r3, #0]
 800ca86:	e7db      	b.n	800ca40 <_puts_r+0x60>

0800ca88 <puts>:
 800ca88:	4b02      	ldr	r3, [pc, #8]	; (800ca94 <puts+0xc>)
 800ca8a:	4601      	mov	r1, r0
 800ca8c:	6818      	ldr	r0, [r3, #0]
 800ca8e:	f7ff bfa7 	b.w	800c9e0 <_puts_r>
 800ca92:	bf00      	nop
 800ca94:	20000168 	.word	0x20000168

0800ca98 <__sread>:
 800ca98:	b510      	push	{r4, lr}
 800ca9a:	460c      	mov	r4, r1
 800ca9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800caa0:	f000 f90c 	bl	800ccbc <_read_r>
 800caa4:	2800      	cmp	r0, #0
 800caa6:	bfab      	itete	ge
 800caa8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800caaa:	89a3      	ldrhlt	r3, [r4, #12]
 800caac:	181b      	addge	r3, r3, r0
 800caae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800cab2:	bfac      	ite	ge
 800cab4:	6563      	strge	r3, [r4, #84]	; 0x54
 800cab6:	81a3      	strhlt	r3, [r4, #12]
 800cab8:	bd10      	pop	{r4, pc}

0800caba <__swrite>:
 800caba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cabe:	461f      	mov	r7, r3
 800cac0:	898b      	ldrh	r3, [r1, #12]
 800cac2:	05db      	lsls	r3, r3, #23
 800cac4:	4605      	mov	r5, r0
 800cac6:	460c      	mov	r4, r1
 800cac8:	4616      	mov	r6, r2
 800caca:	d505      	bpl.n	800cad8 <__swrite+0x1e>
 800cacc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cad0:	2302      	movs	r3, #2
 800cad2:	2200      	movs	r2, #0
 800cad4:	f000 f8e0 	bl	800cc98 <_lseek_r>
 800cad8:	89a3      	ldrh	r3, [r4, #12]
 800cada:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800cade:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800cae2:	81a3      	strh	r3, [r4, #12]
 800cae4:	4632      	mov	r2, r6
 800cae6:	463b      	mov	r3, r7
 800cae8:	4628      	mov	r0, r5
 800caea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800caee:	f000 b8f7 	b.w	800cce0 <_write_r>

0800caf2 <__sseek>:
 800caf2:	b510      	push	{r4, lr}
 800caf4:	460c      	mov	r4, r1
 800caf6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cafa:	f000 f8cd 	bl	800cc98 <_lseek_r>
 800cafe:	1c43      	adds	r3, r0, #1
 800cb00:	89a3      	ldrh	r3, [r4, #12]
 800cb02:	bf15      	itete	ne
 800cb04:	6560      	strne	r0, [r4, #84]	; 0x54
 800cb06:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800cb0a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800cb0e:	81a3      	strheq	r3, [r4, #12]
 800cb10:	bf18      	it	ne
 800cb12:	81a3      	strhne	r3, [r4, #12]
 800cb14:	bd10      	pop	{r4, pc}

0800cb16 <__sclose>:
 800cb16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cb1a:	f000 b8ad 	b.w	800cc78 <_close_r>

0800cb1e <__swbuf_r>:
 800cb1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb20:	460e      	mov	r6, r1
 800cb22:	4614      	mov	r4, r2
 800cb24:	4605      	mov	r5, r0
 800cb26:	b118      	cbz	r0, 800cb30 <__swbuf_r+0x12>
 800cb28:	6a03      	ldr	r3, [r0, #32]
 800cb2a:	b90b      	cbnz	r3, 800cb30 <__swbuf_r+0x12>
 800cb2c:	f7ff ff08 	bl	800c940 <__sinit>
 800cb30:	69a3      	ldr	r3, [r4, #24]
 800cb32:	60a3      	str	r3, [r4, #8]
 800cb34:	89a3      	ldrh	r3, [r4, #12]
 800cb36:	071a      	lsls	r2, r3, #28
 800cb38:	d525      	bpl.n	800cb86 <__swbuf_r+0x68>
 800cb3a:	6923      	ldr	r3, [r4, #16]
 800cb3c:	b31b      	cbz	r3, 800cb86 <__swbuf_r+0x68>
 800cb3e:	6823      	ldr	r3, [r4, #0]
 800cb40:	6922      	ldr	r2, [r4, #16]
 800cb42:	1a98      	subs	r0, r3, r2
 800cb44:	6963      	ldr	r3, [r4, #20]
 800cb46:	b2f6      	uxtb	r6, r6
 800cb48:	4283      	cmp	r3, r0
 800cb4a:	4637      	mov	r7, r6
 800cb4c:	dc04      	bgt.n	800cb58 <__swbuf_r+0x3a>
 800cb4e:	4621      	mov	r1, r4
 800cb50:	4628      	mov	r0, r5
 800cb52:	f000 fd69 	bl	800d628 <_fflush_r>
 800cb56:	b9e0      	cbnz	r0, 800cb92 <__swbuf_r+0x74>
 800cb58:	68a3      	ldr	r3, [r4, #8]
 800cb5a:	3b01      	subs	r3, #1
 800cb5c:	60a3      	str	r3, [r4, #8]
 800cb5e:	6823      	ldr	r3, [r4, #0]
 800cb60:	1c5a      	adds	r2, r3, #1
 800cb62:	6022      	str	r2, [r4, #0]
 800cb64:	701e      	strb	r6, [r3, #0]
 800cb66:	6962      	ldr	r2, [r4, #20]
 800cb68:	1c43      	adds	r3, r0, #1
 800cb6a:	429a      	cmp	r2, r3
 800cb6c:	d004      	beq.n	800cb78 <__swbuf_r+0x5a>
 800cb6e:	89a3      	ldrh	r3, [r4, #12]
 800cb70:	07db      	lsls	r3, r3, #31
 800cb72:	d506      	bpl.n	800cb82 <__swbuf_r+0x64>
 800cb74:	2e0a      	cmp	r6, #10
 800cb76:	d104      	bne.n	800cb82 <__swbuf_r+0x64>
 800cb78:	4621      	mov	r1, r4
 800cb7a:	4628      	mov	r0, r5
 800cb7c:	f000 fd54 	bl	800d628 <_fflush_r>
 800cb80:	b938      	cbnz	r0, 800cb92 <__swbuf_r+0x74>
 800cb82:	4638      	mov	r0, r7
 800cb84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb86:	4621      	mov	r1, r4
 800cb88:	4628      	mov	r0, r5
 800cb8a:	f000 f805 	bl	800cb98 <__swsetup_r>
 800cb8e:	2800      	cmp	r0, #0
 800cb90:	d0d5      	beq.n	800cb3e <__swbuf_r+0x20>
 800cb92:	f04f 37ff 	mov.w	r7, #4294967295
 800cb96:	e7f4      	b.n	800cb82 <__swbuf_r+0x64>

0800cb98 <__swsetup_r>:
 800cb98:	b538      	push	{r3, r4, r5, lr}
 800cb9a:	4b2a      	ldr	r3, [pc, #168]	; (800cc44 <__swsetup_r+0xac>)
 800cb9c:	4605      	mov	r5, r0
 800cb9e:	6818      	ldr	r0, [r3, #0]
 800cba0:	460c      	mov	r4, r1
 800cba2:	b118      	cbz	r0, 800cbac <__swsetup_r+0x14>
 800cba4:	6a03      	ldr	r3, [r0, #32]
 800cba6:	b90b      	cbnz	r3, 800cbac <__swsetup_r+0x14>
 800cba8:	f7ff feca 	bl	800c940 <__sinit>
 800cbac:	89a3      	ldrh	r3, [r4, #12]
 800cbae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800cbb2:	0718      	lsls	r0, r3, #28
 800cbb4:	d422      	bmi.n	800cbfc <__swsetup_r+0x64>
 800cbb6:	06d9      	lsls	r1, r3, #27
 800cbb8:	d407      	bmi.n	800cbca <__swsetup_r+0x32>
 800cbba:	2309      	movs	r3, #9
 800cbbc:	602b      	str	r3, [r5, #0]
 800cbbe:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800cbc2:	81a3      	strh	r3, [r4, #12]
 800cbc4:	f04f 30ff 	mov.w	r0, #4294967295
 800cbc8:	e034      	b.n	800cc34 <__swsetup_r+0x9c>
 800cbca:	0758      	lsls	r0, r3, #29
 800cbcc:	d512      	bpl.n	800cbf4 <__swsetup_r+0x5c>
 800cbce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cbd0:	b141      	cbz	r1, 800cbe4 <__swsetup_r+0x4c>
 800cbd2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800cbd6:	4299      	cmp	r1, r3
 800cbd8:	d002      	beq.n	800cbe0 <__swsetup_r+0x48>
 800cbda:	4628      	mov	r0, r5
 800cbdc:	f000 f8d2 	bl	800cd84 <_free_r>
 800cbe0:	2300      	movs	r3, #0
 800cbe2:	6363      	str	r3, [r4, #52]	; 0x34
 800cbe4:	89a3      	ldrh	r3, [r4, #12]
 800cbe6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800cbea:	81a3      	strh	r3, [r4, #12]
 800cbec:	2300      	movs	r3, #0
 800cbee:	6063      	str	r3, [r4, #4]
 800cbf0:	6923      	ldr	r3, [r4, #16]
 800cbf2:	6023      	str	r3, [r4, #0]
 800cbf4:	89a3      	ldrh	r3, [r4, #12]
 800cbf6:	f043 0308 	orr.w	r3, r3, #8
 800cbfa:	81a3      	strh	r3, [r4, #12]
 800cbfc:	6923      	ldr	r3, [r4, #16]
 800cbfe:	b94b      	cbnz	r3, 800cc14 <__swsetup_r+0x7c>
 800cc00:	89a3      	ldrh	r3, [r4, #12]
 800cc02:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800cc06:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cc0a:	d003      	beq.n	800cc14 <__swsetup_r+0x7c>
 800cc0c:	4621      	mov	r1, r4
 800cc0e:	4628      	mov	r0, r5
 800cc10:	f000 fd58 	bl	800d6c4 <__smakebuf_r>
 800cc14:	89a0      	ldrh	r0, [r4, #12]
 800cc16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800cc1a:	f010 0301 	ands.w	r3, r0, #1
 800cc1e:	d00a      	beq.n	800cc36 <__swsetup_r+0x9e>
 800cc20:	2300      	movs	r3, #0
 800cc22:	60a3      	str	r3, [r4, #8]
 800cc24:	6963      	ldr	r3, [r4, #20]
 800cc26:	425b      	negs	r3, r3
 800cc28:	61a3      	str	r3, [r4, #24]
 800cc2a:	6923      	ldr	r3, [r4, #16]
 800cc2c:	b943      	cbnz	r3, 800cc40 <__swsetup_r+0xa8>
 800cc2e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800cc32:	d1c4      	bne.n	800cbbe <__swsetup_r+0x26>
 800cc34:	bd38      	pop	{r3, r4, r5, pc}
 800cc36:	0781      	lsls	r1, r0, #30
 800cc38:	bf58      	it	pl
 800cc3a:	6963      	ldrpl	r3, [r4, #20]
 800cc3c:	60a3      	str	r3, [r4, #8]
 800cc3e:	e7f4      	b.n	800cc2a <__swsetup_r+0x92>
 800cc40:	2000      	movs	r0, #0
 800cc42:	e7f7      	b.n	800cc34 <__swsetup_r+0x9c>
 800cc44:	20000168 	.word	0x20000168

0800cc48 <memcmp>:
 800cc48:	b510      	push	{r4, lr}
 800cc4a:	3901      	subs	r1, #1
 800cc4c:	4402      	add	r2, r0
 800cc4e:	4290      	cmp	r0, r2
 800cc50:	d101      	bne.n	800cc56 <memcmp+0xe>
 800cc52:	2000      	movs	r0, #0
 800cc54:	e005      	b.n	800cc62 <memcmp+0x1a>
 800cc56:	7803      	ldrb	r3, [r0, #0]
 800cc58:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800cc5c:	42a3      	cmp	r3, r4
 800cc5e:	d001      	beq.n	800cc64 <memcmp+0x1c>
 800cc60:	1b18      	subs	r0, r3, r4
 800cc62:	bd10      	pop	{r4, pc}
 800cc64:	3001      	adds	r0, #1
 800cc66:	e7f2      	b.n	800cc4e <memcmp+0x6>

0800cc68 <memset>:
 800cc68:	4402      	add	r2, r0
 800cc6a:	4603      	mov	r3, r0
 800cc6c:	4293      	cmp	r3, r2
 800cc6e:	d100      	bne.n	800cc72 <memset+0xa>
 800cc70:	4770      	bx	lr
 800cc72:	f803 1b01 	strb.w	r1, [r3], #1
 800cc76:	e7f9      	b.n	800cc6c <memset+0x4>

0800cc78 <_close_r>:
 800cc78:	b538      	push	{r3, r4, r5, lr}
 800cc7a:	4d06      	ldr	r5, [pc, #24]	; (800cc94 <_close_r+0x1c>)
 800cc7c:	2300      	movs	r3, #0
 800cc7e:	4604      	mov	r4, r0
 800cc80:	4608      	mov	r0, r1
 800cc82:	602b      	str	r3, [r5, #0]
 800cc84:	f7f7 fd21 	bl	80046ca <_close>
 800cc88:	1c43      	adds	r3, r0, #1
 800cc8a:	d102      	bne.n	800cc92 <_close_r+0x1a>
 800cc8c:	682b      	ldr	r3, [r5, #0]
 800cc8e:	b103      	cbz	r3, 800cc92 <_close_r+0x1a>
 800cc90:	6023      	str	r3, [r4, #0]
 800cc92:	bd38      	pop	{r3, r4, r5, pc}
 800cc94:	2000241c 	.word	0x2000241c

0800cc98 <_lseek_r>:
 800cc98:	b538      	push	{r3, r4, r5, lr}
 800cc9a:	4d07      	ldr	r5, [pc, #28]	; (800ccb8 <_lseek_r+0x20>)
 800cc9c:	4604      	mov	r4, r0
 800cc9e:	4608      	mov	r0, r1
 800cca0:	4611      	mov	r1, r2
 800cca2:	2200      	movs	r2, #0
 800cca4:	602a      	str	r2, [r5, #0]
 800cca6:	461a      	mov	r2, r3
 800cca8:	f7f7 fd36 	bl	8004718 <_lseek>
 800ccac:	1c43      	adds	r3, r0, #1
 800ccae:	d102      	bne.n	800ccb6 <_lseek_r+0x1e>
 800ccb0:	682b      	ldr	r3, [r5, #0]
 800ccb2:	b103      	cbz	r3, 800ccb6 <_lseek_r+0x1e>
 800ccb4:	6023      	str	r3, [r4, #0]
 800ccb6:	bd38      	pop	{r3, r4, r5, pc}
 800ccb8:	2000241c 	.word	0x2000241c

0800ccbc <_read_r>:
 800ccbc:	b538      	push	{r3, r4, r5, lr}
 800ccbe:	4d07      	ldr	r5, [pc, #28]	; (800ccdc <_read_r+0x20>)
 800ccc0:	4604      	mov	r4, r0
 800ccc2:	4608      	mov	r0, r1
 800ccc4:	4611      	mov	r1, r2
 800ccc6:	2200      	movs	r2, #0
 800ccc8:	602a      	str	r2, [r5, #0]
 800ccca:	461a      	mov	r2, r3
 800cccc:	f7f7 fce0 	bl	8004690 <_read>
 800ccd0:	1c43      	adds	r3, r0, #1
 800ccd2:	d102      	bne.n	800ccda <_read_r+0x1e>
 800ccd4:	682b      	ldr	r3, [r5, #0]
 800ccd6:	b103      	cbz	r3, 800ccda <_read_r+0x1e>
 800ccd8:	6023      	str	r3, [r4, #0]
 800ccda:	bd38      	pop	{r3, r4, r5, pc}
 800ccdc:	2000241c 	.word	0x2000241c

0800cce0 <_write_r>:
 800cce0:	b538      	push	{r3, r4, r5, lr}
 800cce2:	4d07      	ldr	r5, [pc, #28]	; (800cd00 <_write_r+0x20>)
 800cce4:	4604      	mov	r4, r0
 800cce6:	4608      	mov	r0, r1
 800cce8:	4611      	mov	r1, r2
 800ccea:	2200      	movs	r2, #0
 800ccec:	602a      	str	r2, [r5, #0]
 800ccee:	461a      	mov	r2, r3
 800ccf0:	f7f6 fe8a 	bl	8003a08 <_write>
 800ccf4:	1c43      	adds	r3, r0, #1
 800ccf6:	d102      	bne.n	800ccfe <_write_r+0x1e>
 800ccf8:	682b      	ldr	r3, [r5, #0]
 800ccfa:	b103      	cbz	r3, 800ccfe <_write_r+0x1e>
 800ccfc:	6023      	str	r3, [r4, #0]
 800ccfe:	bd38      	pop	{r3, r4, r5, pc}
 800cd00:	2000241c 	.word	0x2000241c

0800cd04 <__errno>:
 800cd04:	4b01      	ldr	r3, [pc, #4]	; (800cd0c <__errno+0x8>)
 800cd06:	6818      	ldr	r0, [r3, #0]
 800cd08:	4770      	bx	lr
 800cd0a:	bf00      	nop
 800cd0c:	20000168 	.word	0x20000168

0800cd10 <__libc_init_array>:
 800cd10:	b570      	push	{r4, r5, r6, lr}
 800cd12:	4d0d      	ldr	r5, [pc, #52]	; (800cd48 <__libc_init_array+0x38>)
 800cd14:	4c0d      	ldr	r4, [pc, #52]	; (800cd4c <__libc_init_array+0x3c>)
 800cd16:	1b64      	subs	r4, r4, r5
 800cd18:	10a4      	asrs	r4, r4, #2
 800cd1a:	2600      	movs	r6, #0
 800cd1c:	42a6      	cmp	r6, r4
 800cd1e:	d109      	bne.n	800cd34 <__libc_init_array+0x24>
 800cd20:	4d0b      	ldr	r5, [pc, #44]	; (800cd50 <__libc_init_array+0x40>)
 800cd22:	4c0c      	ldr	r4, [pc, #48]	; (800cd54 <__libc_init_array+0x44>)
 800cd24:	f000 fd70 	bl	800d808 <_init>
 800cd28:	1b64      	subs	r4, r4, r5
 800cd2a:	10a4      	asrs	r4, r4, #2
 800cd2c:	2600      	movs	r6, #0
 800cd2e:	42a6      	cmp	r6, r4
 800cd30:	d105      	bne.n	800cd3e <__libc_init_array+0x2e>
 800cd32:	bd70      	pop	{r4, r5, r6, pc}
 800cd34:	f855 3b04 	ldr.w	r3, [r5], #4
 800cd38:	4798      	blx	r3
 800cd3a:	3601      	adds	r6, #1
 800cd3c:	e7ee      	b.n	800cd1c <__libc_init_array+0xc>
 800cd3e:	f855 3b04 	ldr.w	r3, [r5], #4
 800cd42:	4798      	blx	r3
 800cd44:	3601      	adds	r6, #1
 800cd46:	e7f2      	b.n	800cd2e <__libc_init_array+0x1e>
 800cd48:	0800fe7c 	.word	0x0800fe7c
 800cd4c:	0800fe7c 	.word	0x0800fe7c
 800cd50:	0800fe7c 	.word	0x0800fe7c
 800cd54:	0800fe80 	.word	0x0800fe80

0800cd58 <__retarget_lock_init_recursive>:
 800cd58:	4770      	bx	lr

0800cd5a <__retarget_lock_acquire_recursive>:
 800cd5a:	4770      	bx	lr

0800cd5c <__retarget_lock_release_recursive>:
 800cd5c:	4770      	bx	lr

0800cd5e <__aeabi_memcpy>:
 800cd5e:	f000 b803 	b.w	800cd68 <memcpy>

0800cd62 <__aeabi_memclr>:
 800cd62:	2200      	movs	r2, #0
 800cd64:	f7f4 bf3e 	b.w	8001be4 <__aeabi_memset>

0800cd68 <memcpy>:
 800cd68:	440a      	add	r2, r1
 800cd6a:	4291      	cmp	r1, r2
 800cd6c:	f100 33ff 	add.w	r3, r0, #4294967295
 800cd70:	d100      	bne.n	800cd74 <memcpy+0xc>
 800cd72:	4770      	bx	lr
 800cd74:	b510      	push	{r4, lr}
 800cd76:	f811 4b01 	ldrb.w	r4, [r1], #1
 800cd7a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800cd7e:	4291      	cmp	r1, r2
 800cd80:	d1f9      	bne.n	800cd76 <memcpy+0xe>
 800cd82:	bd10      	pop	{r4, pc}

0800cd84 <_free_r>:
 800cd84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd86:	2900      	cmp	r1, #0
 800cd88:	d044      	beq.n	800ce14 <_free_r+0x90>
 800cd8a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800cd8e:	9001      	str	r0, [sp, #4]
 800cd90:	2b00      	cmp	r3, #0
 800cd92:	f1a1 0404 	sub.w	r4, r1, #4
 800cd96:	bfb8      	it	lt
 800cd98:	18e4      	addlt	r4, r4, r3
 800cd9a:	f000 f8df 	bl	800cf5c <__malloc_lock>
 800cd9e:	4a1e      	ldr	r2, [pc, #120]	; (800ce18 <_free_r+0x94>)
 800cda0:	9801      	ldr	r0, [sp, #4]
 800cda2:	6813      	ldr	r3, [r2, #0]
 800cda4:	b933      	cbnz	r3, 800cdb4 <_free_r+0x30>
 800cda6:	6063      	str	r3, [r4, #4]
 800cda8:	6014      	str	r4, [r2, #0]
 800cdaa:	b003      	add	sp, #12
 800cdac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cdb0:	f000 b8da 	b.w	800cf68 <__malloc_unlock>
 800cdb4:	42a3      	cmp	r3, r4
 800cdb6:	d908      	bls.n	800cdca <_free_r+0x46>
 800cdb8:	6825      	ldr	r5, [r4, #0]
 800cdba:	1961      	adds	r1, r4, r5
 800cdbc:	428b      	cmp	r3, r1
 800cdbe:	bf01      	itttt	eq
 800cdc0:	6819      	ldreq	r1, [r3, #0]
 800cdc2:	685b      	ldreq	r3, [r3, #4]
 800cdc4:	1949      	addeq	r1, r1, r5
 800cdc6:	6021      	streq	r1, [r4, #0]
 800cdc8:	e7ed      	b.n	800cda6 <_free_r+0x22>
 800cdca:	461a      	mov	r2, r3
 800cdcc:	685b      	ldr	r3, [r3, #4]
 800cdce:	b10b      	cbz	r3, 800cdd4 <_free_r+0x50>
 800cdd0:	42a3      	cmp	r3, r4
 800cdd2:	d9fa      	bls.n	800cdca <_free_r+0x46>
 800cdd4:	6811      	ldr	r1, [r2, #0]
 800cdd6:	1855      	adds	r5, r2, r1
 800cdd8:	42a5      	cmp	r5, r4
 800cdda:	d10b      	bne.n	800cdf4 <_free_r+0x70>
 800cddc:	6824      	ldr	r4, [r4, #0]
 800cdde:	4421      	add	r1, r4
 800cde0:	1854      	adds	r4, r2, r1
 800cde2:	42a3      	cmp	r3, r4
 800cde4:	6011      	str	r1, [r2, #0]
 800cde6:	d1e0      	bne.n	800cdaa <_free_r+0x26>
 800cde8:	681c      	ldr	r4, [r3, #0]
 800cdea:	685b      	ldr	r3, [r3, #4]
 800cdec:	6053      	str	r3, [r2, #4]
 800cdee:	440c      	add	r4, r1
 800cdf0:	6014      	str	r4, [r2, #0]
 800cdf2:	e7da      	b.n	800cdaa <_free_r+0x26>
 800cdf4:	d902      	bls.n	800cdfc <_free_r+0x78>
 800cdf6:	230c      	movs	r3, #12
 800cdf8:	6003      	str	r3, [r0, #0]
 800cdfa:	e7d6      	b.n	800cdaa <_free_r+0x26>
 800cdfc:	6825      	ldr	r5, [r4, #0]
 800cdfe:	1961      	adds	r1, r4, r5
 800ce00:	428b      	cmp	r3, r1
 800ce02:	bf04      	itt	eq
 800ce04:	6819      	ldreq	r1, [r3, #0]
 800ce06:	685b      	ldreq	r3, [r3, #4]
 800ce08:	6063      	str	r3, [r4, #4]
 800ce0a:	bf04      	itt	eq
 800ce0c:	1949      	addeq	r1, r1, r5
 800ce0e:	6021      	streq	r1, [r4, #0]
 800ce10:	6054      	str	r4, [r2, #4]
 800ce12:	e7ca      	b.n	800cdaa <_free_r+0x26>
 800ce14:	b003      	add	sp, #12
 800ce16:	bd30      	pop	{r4, r5, pc}
 800ce18:	20002424 	.word	0x20002424

0800ce1c <sbrk_aligned>:
 800ce1c:	b570      	push	{r4, r5, r6, lr}
 800ce1e:	4e0e      	ldr	r6, [pc, #56]	; (800ce58 <sbrk_aligned+0x3c>)
 800ce20:	460c      	mov	r4, r1
 800ce22:	6831      	ldr	r1, [r6, #0]
 800ce24:	4605      	mov	r5, r0
 800ce26:	b911      	cbnz	r1, 800ce2e <sbrk_aligned+0x12>
 800ce28:	f000 fcde 	bl	800d7e8 <_sbrk_r>
 800ce2c:	6030      	str	r0, [r6, #0]
 800ce2e:	4621      	mov	r1, r4
 800ce30:	4628      	mov	r0, r5
 800ce32:	f000 fcd9 	bl	800d7e8 <_sbrk_r>
 800ce36:	1c43      	adds	r3, r0, #1
 800ce38:	d00a      	beq.n	800ce50 <sbrk_aligned+0x34>
 800ce3a:	1cc4      	adds	r4, r0, #3
 800ce3c:	f024 0403 	bic.w	r4, r4, #3
 800ce40:	42a0      	cmp	r0, r4
 800ce42:	d007      	beq.n	800ce54 <sbrk_aligned+0x38>
 800ce44:	1a21      	subs	r1, r4, r0
 800ce46:	4628      	mov	r0, r5
 800ce48:	f000 fcce 	bl	800d7e8 <_sbrk_r>
 800ce4c:	3001      	adds	r0, #1
 800ce4e:	d101      	bne.n	800ce54 <sbrk_aligned+0x38>
 800ce50:	f04f 34ff 	mov.w	r4, #4294967295
 800ce54:	4620      	mov	r0, r4
 800ce56:	bd70      	pop	{r4, r5, r6, pc}
 800ce58:	20002428 	.word	0x20002428

0800ce5c <_malloc_r>:
 800ce5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ce60:	1ccd      	adds	r5, r1, #3
 800ce62:	f025 0503 	bic.w	r5, r5, #3
 800ce66:	3508      	adds	r5, #8
 800ce68:	2d0c      	cmp	r5, #12
 800ce6a:	bf38      	it	cc
 800ce6c:	250c      	movcc	r5, #12
 800ce6e:	2d00      	cmp	r5, #0
 800ce70:	4607      	mov	r7, r0
 800ce72:	db01      	blt.n	800ce78 <_malloc_r+0x1c>
 800ce74:	42a9      	cmp	r1, r5
 800ce76:	d905      	bls.n	800ce84 <_malloc_r+0x28>
 800ce78:	230c      	movs	r3, #12
 800ce7a:	603b      	str	r3, [r7, #0]
 800ce7c:	2600      	movs	r6, #0
 800ce7e:	4630      	mov	r0, r6
 800ce80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ce84:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800cf58 <_malloc_r+0xfc>
 800ce88:	f000 f868 	bl	800cf5c <__malloc_lock>
 800ce8c:	f8d8 3000 	ldr.w	r3, [r8]
 800ce90:	461c      	mov	r4, r3
 800ce92:	bb5c      	cbnz	r4, 800ceec <_malloc_r+0x90>
 800ce94:	4629      	mov	r1, r5
 800ce96:	4638      	mov	r0, r7
 800ce98:	f7ff ffc0 	bl	800ce1c <sbrk_aligned>
 800ce9c:	1c43      	adds	r3, r0, #1
 800ce9e:	4604      	mov	r4, r0
 800cea0:	d155      	bne.n	800cf4e <_malloc_r+0xf2>
 800cea2:	f8d8 4000 	ldr.w	r4, [r8]
 800cea6:	4626      	mov	r6, r4
 800cea8:	2e00      	cmp	r6, #0
 800ceaa:	d145      	bne.n	800cf38 <_malloc_r+0xdc>
 800ceac:	2c00      	cmp	r4, #0
 800ceae:	d048      	beq.n	800cf42 <_malloc_r+0xe6>
 800ceb0:	6823      	ldr	r3, [r4, #0]
 800ceb2:	4631      	mov	r1, r6
 800ceb4:	4638      	mov	r0, r7
 800ceb6:	eb04 0903 	add.w	r9, r4, r3
 800ceba:	f000 fc95 	bl	800d7e8 <_sbrk_r>
 800cebe:	4581      	cmp	r9, r0
 800cec0:	d13f      	bne.n	800cf42 <_malloc_r+0xe6>
 800cec2:	6821      	ldr	r1, [r4, #0]
 800cec4:	1a6d      	subs	r5, r5, r1
 800cec6:	4629      	mov	r1, r5
 800cec8:	4638      	mov	r0, r7
 800ceca:	f7ff ffa7 	bl	800ce1c <sbrk_aligned>
 800cece:	3001      	adds	r0, #1
 800ced0:	d037      	beq.n	800cf42 <_malloc_r+0xe6>
 800ced2:	6823      	ldr	r3, [r4, #0]
 800ced4:	442b      	add	r3, r5
 800ced6:	6023      	str	r3, [r4, #0]
 800ced8:	f8d8 3000 	ldr.w	r3, [r8]
 800cedc:	2b00      	cmp	r3, #0
 800cede:	d038      	beq.n	800cf52 <_malloc_r+0xf6>
 800cee0:	685a      	ldr	r2, [r3, #4]
 800cee2:	42a2      	cmp	r2, r4
 800cee4:	d12b      	bne.n	800cf3e <_malloc_r+0xe2>
 800cee6:	2200      	movs	r2, #0
 800cee8:	605a      	str	r2, [r3, #4]
 800ceea:	e00f      	b.n	800cf0c <_malloc_r+0xb0>
 800ceec:	6822      	ldr	r2, [r4, #0]
 800ceee:	1b52      	subs	r2, r2, r5
 800cef0:	d41f      	bmi.n	800cf32 <_malloc_r+0xd6>
 800cef2:	2a0b      	cmp	r2, #11
 800cef4:	d917      	bls.n	800cf26 <_malloc_r+0xca>
 800cef6:	1961      	adds	r1, r4, r5
 800cef8:	42a3      	cmp	r3, r4
 800cefa:	6025      	str	r5, [r4, #0]
 800cefc:	bf18      	it	ne
 800cefe:	6059      	strne	r1, [r3, #4]
 800cf00:	6863      	ldr	r3, [r4, #4]
 800cf02:	bf08      	it	eq
 800cf04:	f8c8 1000 	streq.w	r1, [r8]
 800cf08:	5162      	str	r2, [r4, r5]
 800cf0a:	604b      	str	r3, [r1, #4]
 800cf0c:	4638      	mov	r0, r7
 800cf0e:	f104 060b 	add.w	r6, r4, #11
 800cf12:	f000 f829 	bl	800cf68 <__malloc_unlock>
 800cf16:	f026 0607 	bic.w	r6, r6, #7
 800cf1a:	1d23      	adds	r3, r4, #4
 800cf1c:	1af2      	subs	r2, r6, r3
 800cf1e:	d0ae      	beq.n	800ce7e <_malloc_r+0x22>
 800cf20:	1b9b      	subs	r3, r3, r6
 800cf22:	50a3      	str	r3, [r4, r2]
 800cf24:	e7ab      	b.n	800ce7e <_malloc_r+0x22>
 800cf26:	42a3      	cmp	r3, r4
 800cf28:	6862      	ldr	r2, [r4, #4]
 800cf2a:	d1dd      	bne.n	800cee8 <_malloc_r+0x8c>
 800cf2c:	f8c8 2000 	str.w	r2, [r8]
 800cf30:	e7ec      	b.n	800cf0c <_malloc_r+0xb0>
 800cf32:	4623      	mov	r3, r4
 800cf34:	6864      	ldr	r4, [r4, #4]
 800cf36:	e7ac      	b.n	800ce92 <_malloc_r+0x36>
 800cf38:	4634      	mov	r4, r6
 800cf3a:	6876      	ldr	r6, [r6, #4]
 800cf3c:	e7b4      	b.n	800cea8 <_malloc_r+0x4c>
 800cf3e:	4613      	mov	r3, r2
 800cf40:	e7cc      	b.n	800cedc <_malloc_r+0x80>
 800cf42:	230c      	movs	r3, #12
 800cf44:	603b      	str	r3, [r7, #0]
 800cf46:	4638      	mov	r0, r7
 800cf48:	f000 f80e 	bl	800cf68 <__malloc_unlock>
 800cf4c:	e797      	b.n	800ce7e <_malloc_r+0x22>
 800cf4e:	6025      	str	r5, [r4, #0]
 800cf50:	e7dc      	b.n	800cf0c <_malloc_r+0xb0>
 800cf52:	605b      	str	r3, [r3, #4]
 800cf54:	deff      	udf	#255	; 0xff
 800cf56:	bf00      	nop
 800cf58:	20002424 	.word	0x20002424

0800cf5c <__malloc_lock>:
 800cf5c:	4801      	ldr	r0, [pc, #4]	; (800cf64 <__malloc_lock+0x8>)
 800cf5e:	f7ff befc 	b.w	800cd5a <__retarget_lock_acquire_recursive>
 800cf62:	bf00      	nop
 800cf64:	20002420 	.word	0x20002420

0800cf68 <__malloc_unlock>:
 800cf68:	4801      	ldr	r0, [pc, #4]	; (800cf70 <__malloc_unlock+0x8>)
 800cf6a:	f7ff bef7 	b.w	800cd5c <__retarget_lock_release_recursive>
 800cf6e:	bf00      	nop
 800cf70:	20002420 	.word	0x20002420

0800cf74 <__sfputc_r>:
 800cf74:	6893      	ldr	r3, [r2, #8]
 800cf76:	3b01      	subs	r3, #1
 800cf78:	2b00      	cmp	r3, #0
 800cf7a:	b410      	push	{r4}
 800cf7c:	6093      	str	r3, [r2, #8]
 800cf7e:	da08      	bge.n	800cf92 <__sfputc_r+0x1e>
 800cf80:	6994      	ldr	r4, [r2, #24]
 800cf82:	42a3      	cmp	r3, r4
 800cf84:	db01      	blt.n	800cf8a <__sfputc_r+0x16>
 800cf86:	290a      	cmp	r1, #10
 800cf88:	d103      	bne.n	800cf92 <__sfputc_r+0x1e>
 800cf8a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cf8e:	f7ff bdc6 	b.w	800cb1e <__swbuf_r>
 800cf92:	6813      	ldr	r3, [r2, #0]
 800cf94:	1c58      	adds	r0, r3, #1
 800cf96:	6010      	str	r0, [r2, #0]
 800cf98:	7019      	strb	r1, [r3, #0]
 800cf9a:	4608      	mov	r0, r1
 800cf9c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cfa0:	4770      	bx	lr

0800cfa2 <__sfputs_r>:
 800cfa2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfa4:	4606      	mov	r6, r0
 800cfa6:	460f      	mov	r7, r1
 800cfa8:	4614      	mov	r4, r2
 800cfaa:	18d5      	adds	r5, r2, r3
 800cfac:	42ac      	cmp	r4, r5
 800cfae:	d101      	bne.n	800cfb4 <__sfputs_r+0x12>
 800cfb0:	2000      	movs	r0, #0
 800cfb2:	e007      	b.n	800cfc4 <__sfputs_r+0x22>
 800cfb4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800cfb8:	463a      	mov	r2, r7
 800cfba:	4630      	mov	r0, r6
 800cfbc:	f7ff ffda 	bl	800cf74 <__sfputc_r>
 800cfc0:	1c43      	adds	r3, r0, #1
 800cfc2:	d1f3      	bne.n	800cfac <__sfputs_r+0xa>
 800cfc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800cfc8 <_vfiprintf_r>:
 800cfc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfcc:	460d      	mov	r5, r1
 800cfce:	b09d      	sub	sp, #116	; 0x74
 800cfd0:	4614      	mov	r4, r2
 800cfd2:	4698      	mov	r8, r3
 800cfd4:	4606      	mov	r6, r0
 800cfd6:	b118      	cbz	r0, 800cfe0 <_vfiprintf_r+0x18>
 800cfd8:	6a03      	ldr	r3, [r0, #32]
 800cfda:	b90b      	cbnz	r3, 800cfe0 <_vfiprintf_r+0x18>
 800cfdc:	f7ff fcb0 	bl	800c940 <__sinit>
 800cfe0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800cfe2:	07d9      	lsls	r1, r3, #31
 800cfe4:	d405      	bmi.n	800cff2 <_vfiprintf_r+0x2a>
 800cfe6:	89ab      	ldrh	r3, [r5, #12]
 800cfe8:	059a      	lsls	r2, r3, #22
 800cfea:	d402      	bmi.n	800cff2 <_vfiprintf_r+0x2a>
 800cfec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800cfee:	f7ff feb4 	bl	800cd5a <__retarget_lock_acquire_recursive>
 800cff2:	89ab      	ldrh	r3, [r5, #12]
 800cff4:	071b      	lsls	r3, r3, #28
 800cff6:	d501      	bpl.n	800cffc <_vfiprintf_r+0x34>
 800cff8:	692b      	ldr	r3, [r5, #16]
 800cffa:	b99b      	cbnz	r3, 800d024 <_vfiprintf_r+0x5c>
 800cffc:	4629      	mov	r1, r5
 800cffe:	4630      	mov	r0, r6
 800d000:	f7ff fdca 	bl	800cb98 <__swsetup_r>
 800d004:	b170      	cbz	r0, 800d024 <_vfiprintf_r+0x5c>
 800d006:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d008:	07dc      	lsls	r4, r3, #31
 800d00a:	d504      	bpl.n	800d016 <_vfiprintf_r+0x4e>
 800d00c:	f04f 30ff 	mov.w	r0, #4294967295
 800d010:	b01d      	add	sp, #116	; 0x74
 800d012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d016:	89ab      	ldrh	r3, [r5, #12]
 800d018:	0598      	lsls	r0, r3, #22
 800d01a:	d4f7      	bmi.n	800d00c <_vfiprintf_r+0x44>
 800d01c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d01e:	f7ff fe9d 	bl	800cd5c <__retarget_lock_release_recursive>
 800d022:	e7f3      	b.n	800d00c <_vfiprintf_r+0x44>
 800d024:	2300      	movs	r3, #0
 800d026:	9309      	str	r3, [sp, #36]	; 0x24
 800d028:	2320      	movs	r3, #32
 800d02a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d02e:	f8cd 800c 	str.w	r8, [sp, #12]
 800d032:	2330      	movs	r3, #48	; 0x30
 800d034:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 800d1e8 <_vfiprintf_r+0x220>
 800d038:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800d03c:	f04f 0901 	mov.w	r9, #1
 800d040:	4623      	mov	r3, r4
 800d042:	469a      	mov	sl, r3
 800d044:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d048:	b10a      	cbz	r2, 800d04e <_vfiprintf_r+0x86>
 800d04a:	2a25      	cmp	r2, #37	; 0x25
 800d04c:	d1f9      	bne.n	800d042 <_vfiprintf_r+0x7a>
 800d04e:	ebba 0b04 	subs.w	fp, sl, r4
 800d052:	d00b      	beq.n	800d06c <_vfiprintf_r+0xa4>
 800d054:	465b      	mov	r3, fp
 800d056:	4622      	mov	r2, r4
 800d058:	4629      	mov	r1, r5
 800d05a:	4630      	mov	r0, r6
 800d05c:	f7ff ffa1 	bl	800cfa2 <__sfputs_r>
 800d060:	3001      	adds	r0, #1
 800d062:	f000 80a9 	beq.w	800d1b8 <_vfiprintf_r+0x1f0>
 800d066:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d068:	445a      	add	r2, fp
 800d06a:	9209      	str	r2, [sp, #36]	; 0x24
 800d06c:	f89a 3000 	ldrb.w	r3, [sl]
 800d070:	2b00      	cmp	r3, #0
 800d072:	f000 80a1 	beq.w	800d1b8 <_vfiprintf_r+0x1f0>
 800d076:	2300      	movs	r3, #0
 800d078:	f04f 32ff 	mov.w	r2, #4294967295
 800d07c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800d080:	f10a 0a01 	add.w	sl, sl, #1
 800d084:	9304      	str	r3, [sp, #16]
 800d086:	9307      	str	r3, [sp, #28]
 800d088:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800d08c:	931a      	str	r3, [sp, #104]	; 0x68
 800d08e:	4654      	mov	r4, sl
 800d090:	2205      	movs	r2, #5
 800d092:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d096:	4854      	ldr	r0, [pc, #336]	; (800d1e8 <_vfiprintf_r+0x220>)
 800d098:	f7f4 fdf2 	bl	8001c80 <memchr>
 800d09c:	9a04      	ldr	r2, [sp, #16]
 800d09e:	b9d8      	cbnz	r0, 800d0d8 <_vfiprintf_r+0x110>
 800d0a0:	06d1      	lsls	r1, r2, #27
 800d0a2:	bf44      	itt	mi
 800d0a4:	2320      	movmi	r3, #32
 800d0a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d0aa:	0713      	lsls	r3, r2, #28
 800d0ac:	bf44      	itt	mi
 800d0ae:	232b      	movmi	r3, #43	; 0x2b
 800d0b0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d0b4:	f89a 3000 	ldrb.w	r3, [sl]
 800d0b8:	2b2a      	cmp	r3, #42	; 0x2a
 800d0ba:	d015      	beq.n	800d0e8 <_vfiprintf_r+0x120>
 800d0bc:	9a07      	ldr	r2, [sp, #28]
 800d0be:	4654      	mov	r4, sl
 800d0c0:	2000      	movs	r0, #0
 800d0c2:	f04f 0c0a 	mov.w	ip, #10
 800d0c6:	4621      	mov	r1, r4
 800d0c8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d0cc:	3b30      	subs	r3, #48	; 0x30
 800d0ce:	2b09      	cmp	r3, #9
 800d0d0:	d94d      	bls.n	800d16e <_vfiprintf_r+0x1a6>
 800d0d2:	b1b0      	cbz	r0, 800d102 <_vfiprintf_r+0x13a>
 800d0d4:	9207      	str	r2, [sp, #28]
 800d0d6:	e014      	b.n	800d102 <_vfiprintf_r+0x13a>
 800d0d8:	eba0 0308 	sub.w	r3, r0, r8
 800d0dc:	fa09 f303 	lsl.w	r3, r9, r3
 800d0e0:	4313      	orrs	r3, r2
 800d0e2:	9304      	str	r3, [sp, #16]
 800d0e4:	46a2      	mov	sl, r4
 800d0e6:	e7d2      	b.n	800d08e <_vfiprintf_r+0xc6>
 800d0e8:	9b03      	ldr	r3, [sp, #12]
 800d0ea:	1d19      	adds	r1, r3, #4
 800d0ec:	681b      	ldr	r3, [r3, #0]
 800d0ee:	9103      	str	r1, [sp, #12]
 800d0f0:	2b00      	cmp	r3, #0
 800d0f2:	bfbb      	ittet	lt
 800d0f4:	425b      	neglt	r3, r3
 800d0f6:	f042 0202 	orrlt.w	r2, r2, #2
 800d0fa:	9307      	strge	r3, [sp, #28]
 800d0fc:	9307      	strlt	r3, [sp, #28]
 800d0fe:	bfb8      	it	lt
 800d100:	9204      	strlt	r2, [sp, #16]
 800d102:	7823      	ldrb	r3, [r4, #0]
 800d104:	2b2e      	cmp	r3, #46	; 0x2e
 800d106:	d10c      	bne.n	800d122 <_vfiprintf_r+0x15a>
 800d108:	7863      	ldrb	r3, [r4, #1]
 800d10a:	2b2a      	cmp	r3, #42	; 0x2a
 800d10c:	d134      	bne.n	800d178 <_vfiprintf_r+0x1b0>
 800d10e:	9b03      	ldr	r3, [sp, #12]
 800d110:	1d1a      	adds	r2, r3, #4
 800d112:	681b      	ldr	r3, [r3, #0]
 800d114:	9203      	str	r2, [sp, #12]
 800d116:	2b00      	cmp	r3, #0
 800d118:	bfb8      	it	lt
 800d11a:	f04f 33ff 	movlt.w	r3, #4294967295
 800d11e:	3402      	adds	r4, #2
 800d120:	9305      	str	r3, [sp, #20]
 800d122:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800d1f8 <_vfiprintf_r+0x230>
 800d126:	7821      	ldrb	r1, [r4, #0]
 800d128:	2203      	movs	r2, #3
 800d12a:	4650      	mov	r0, sl
 800d12c:	f7f4 fda8 	bl	8001c80 <memchr>
 800d130:	b138      	cbz	r0, 800d142 <_vfiprintf_r+0x17a>
 800d132:	9b04      	ldr	r3, [sp, #16]
 800d134:	eba0 000a 	sub.w	r0, r0, sl
 800d138:	2240      	movs	r2, #64	; 0x40
 800d13a:	4082      	lsls	r2, r0
 800d13c:	4313      	orrs	r3, r2
 800d13e:	3401      	adds	r4, #1
 800d140:	9304      	str	r3, [sp, #16]
 800d142:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d146:	4829      	ldr	r0, [pc, #164]	; (800d1ec <_vfiprintf_r+0x224>)
 800d148:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800d14c:	2206      	movs	r2, #6
 800d14e:	f7f4 fd97 	bl	8001c80 <memchr>
 800d152:	2800      	cmp	r0, #0
 800d154:	d03f      	beq.n	800d1d6 <_vfiprintf_r+0x20e>
 800d156:	4b26      	ldr	r3, [pc, #152]	; (800d1f0 <_vfiprintf_r+0x228>)
 800d158:	bb1b      	cbnz	r3, 800d1a2 <_vfiprintf_r+0x1da>
 800d15a:	9b03      	ldr	r3, [sp, #12]
 800d15c:	3307      	adds	r3, #7
 800d15e:	f023 0307 	bic.w	r3, r3, #7
 800d162:	3308      	adds	r3, #8
 800d164:	9303      	str	r3, [sp, #12]
 800d166:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d168:	443b      	add	r3, r7
 800d16a:	9309      	str	r3, [sp, #36]	; 0x24
 800d16c:	e768      	b.n	800d040 <_vfiprintf_r+0x78>
 800d16e:	fb0c 3202 	mla	r2, ip, r2, r3
 800d172:	460c      	mov	r4, r1
 800d174:	2001      	movs	r0, #1
 800d176:	e7a6      	b.n	800d0c6 <_vfiprintf_r+0xfe>
 800d178:	2300      	movs	r3, #0
 800d17a:	3401      	adds	r4, #1
 800d17c:	9305      	str	r3, [sp, #20]
 800d17e:	4619      	mov	r1, r3
 800d180:	f04f 0c0a 	mov.w	ip, #10
 800d184:	4620      	mov	r0, r4
 800d186:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d18a:	3a30      	subs	r2, #48	; 0x30
 800d18c:	2a09      	cmp	r2, #9
 800d18e:	d903      	bls.n	800d198 <_vfiprintf_r+0x1d0>
 800d190:	2b00      	cmp	r3, #0
 800d192:	d0c6      	beq.n	800d122 <_vfiprintf_r+0x15a>
 800d194:	9105      	str	r1, [sp, #20]
 800d196:	e7c4      	b.n	800d122 <_vfiprintf_r+0x15a>
 800d198:	fb0c 2101 	mla	r1, ip, r1, r2
 800d19c:	4604      	mov	r4, r0
 800d19e:	2301      	movs	r3, #1
 800d1a0:	e7f0      	b.n	800d184 <_vfiprintf_r+0x1bc>
 800d1a2:	ab03      	add	r3, sp, #12
 800d1a4:	9300      	str	r3, [sp, #0]
 800d1a6:	462a      	mov	r2, r5
 800d1a8:	4b12      	ldr	r3, [pc, #72]	; (800d1f4 <_vfiprintf_r+0x22c>)
 800d1aa:	a904      	add	r1, sp, #16
 800d1ac:	4630      	mov	r0, r6
 800d1ae:	f3af 8000 	nop.w
 800d1b2:	4607      	mov	r7, r0
 800d1b4:	1c78      	adds	r0, r7, #1
 800d1b6:	d1d6      	bne.n	800d166 <_vfiprintf_r+0x19e>
 800d1b8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d1ba:	07d9      	lsls	r1, r3, #31
 800d1bc:	d405      	bmi.n	800d1ca <_vfiprintf_r+0x202>
 800d1be:	89ab      	ldrh	r3, [r5, #12]
 800d1c0:	059a      	lsls	r2, r3, #22
 800d1c2:	d402      	bmi.n	800d1ca <_vfiprintf_r+0x202>
 800d1c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d1c6:	f7ff fdc9 	bl	800cd5c <__retarget_lock_release_recursive>
 800d1ca:	89ab      	ldrh	r3, [r5, #12]
 800d1cc:	065b      	lsls	r3, r3, #25
 800d1ce:	f53f af1d 	bmi.w	800d00c <_vfiprintf_r+0x44>
 800d1d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d1d4:	e71c      	b.n	800d010 <_vfiprintf_r+0x48>
 800d1d6:	ab03      	add	r3, sp, #12
 800d1d8:	9300      	str	r3, [sp, #0]
 800d1da:	462a      	mov	r2, r5
 800d1dc:	4b05      	ldr	r3, [pc, #20]	; (800d1f4 <_vfiprintf_r+0x22c>)
 800d1de:	a904      	add	r1, sp, #16
 800d1e0:	4630      	mov	r0, r6
 800d1e2:	f000 f879 	bl	800d2d8 <_printf_i>
 800d1e6:	e7e4      	b.n	800d1b2 <_vfiprintf_r+0x1ea>
 800d1e8:	0800f441 	.word	0x0800f441
 800d1ec:	0800f44b 	.word	0x0800f44b
 800d1f0:	00000000 	.word	0x00000000
 800d1f4:	0800cfa3 	.word	0x0800cfa3
 800d1f8:	0800f447 	.word	0x0800f447

0800d1fc <_printf_common>:
 800d1fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d200:	4616      	mov	r6, r2
 800d202:	4699      	mov	r9, r3
 800d204:	688a      	ldr	r2, [r1, #8]
 800d206:	690b      	ldr	r3, [r1, #16]
 800d208:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800d20c:	4293      	cmp	r3, r2
 800d20e:	bfb8      	it	lt
 800d210:	4613      	movlt	r3, r2
 800d212:	6033      	str	r3, [r6, #0]
 800d214:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800d218:	4607      	mov	r7, r0
 800d21a:	460c      	mov	r4, r1
 800d21c:	b10a      	cbz	r2, 800d222 <_printf_common+0x26>
 800d21e:	3301      	adds	r3, #1
 800d220:	6033      	str	r3, [r6, #0]
 800d222:	6823      	ldr	r3, [r4, #0]
 800d224:	0699      	lsls	r1, r3, #26
 800d226:	bf42      	ittt	mi
 800d228:	6833      	ldrmi	r3, [r6, #0]
 800d22a:	3302      	addmi	r3, #2
 800d22c:	6033      	strmi	r3, [r6, #0]
 800d22e:	6825      	ldr	r5, [r4, #0]
 800d230:	f015 0506 	ands.w	r5, r5, #6
 800d234:	d106      	bne.n	800d244 <_printf_common+0x48>
 800d236:	f104 0a19 	add.w	sl, r4, #25
 800d23a:	68e3      	ldr	r3, [r4, #12]
 800d23c:	6832      	ldr	r2, [r6, #0]
 800d23e:	1a9b      	subs	r3, r3, r2
 800d240:	42ab      	cmp	r3, r5
 800d242:	dc26      	bgt.n	800d292 <_printf_common+0x96>
 800d244:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800d248:	1e13      	subs	r3, r2, #0
 800d24a:	6822      	ldr	r2, [r4, #0]
 800d24c:	bf18      	it	ne
 800d24e:	2301      	movne	r3, #1
 800d250:	0692      	lsls	r2, r2, #26
 800d252:	d42b      	bmi.n	800d2ac <_printf_common+0xb0>
 800d254:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800d258:	4649      	mov	r1, r9
 800d25a:	4638      	mov	r0, r7
 800d25c:	47c0      	blx	r8
 800d25e:	3001      	adds	r0, #1
 800d260:	d01e      	beq.n	800d2a0 <_printf_common+0xa4>
 800d262:	6823      	ldr	r3, [r4, #0]
 800d264:	6922      	ldr	r2, [r4, #16]
 800d266:	f003 0306 	and.w	r3, r3, #6
 800d26a:	2b04      	cmp	r3, #4
 800d26c:	bf02      	ittt	eq
 800d26e:	68e5      	ldreq	r5, [r4, #12]
 800d270:	6833      	ldreq	r3, [r6, #0]
 800d272:	1aed      	subeq	r5, r5, r3
 800d274:	68a3      	ldr	r3, [r4, #8]
 800d276:	bf0c      	ite	eq
 800d278:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800d27c:	2500      	movne	r5, #0
 800d27e:	4293      	cmp	r3, r2
 800d280:	bfc4      	itt	gt
 800d282:	1a9b      	subgt	r3, r3, r2
 800d284:	18ed      	addgt	r5, r5, r3
 800d286:	2600      	movs	r6, #0
 800d288:	341a      	adds	r4, #26
 800d28a:	42b5      	cmp	r5, r6
 800d28c:	d11a      	bne.n	800d2c4 <_printf_common+0xc8>
 800d28e:	2000      	movs	r0, #0
 800d290:	e008      	b.n	800d2a4 <_printf_common+0xa8>
 800d292:	2301      	movs	r3, #1
 800d294:	4652      	mov	r2, sl
 800d296:	4649      	mov	r1, r9
 800d298:	4638      	mov	r0, r7
 800d29a:	47c0      	blx	r8
 800d29c:	3001      	adds	r0, #1
 800d29e:	d103      	bne.n	800d2a8 <_printf_common+0xac>
 800d2a0:	f04f 30ff 	mov.w	r0, #4294967295
 800d2a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d2a8:	3501      	adds	r5, #1
 800d2aa:	e7c6      	b.n	800d23a <_printf_common+0x3e>
 800d2ac:	18e1      	adds	r1, r4, r3
 800d2ae:	1c5a      	adds	r2, r3, #1
 800d2b0:	2030      	movs	r0, #48	; 0x30
 800d2b2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800d2b6:	4422      	add	r2, r4
 800d2b8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800d2bc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800d2c0:	3302      	adds	r3, #2
 800d2c2:	e7c7      	b.n	800d254 <_printf_common+0x58>
 800d2c4:	2301      	movs	r3, #1
 800d2c6:	4622      	mov	r2, r4
 800d2c8:	4649      	mov	r1, r9
 800d2ca:	4638      	mov	r0, r7
 800d2cc:	47c0      	blx	r8
 800d2ce:	3001      	adds	r0, #1
 800d2d0:	d0e6      	beq.n	800d2a0 <_printf_common+0xa4>
 800d2d2:	3601      	adds	r6, #1
 800d2d4:	e7d9      	b.n	800d28a <_printf_common+0x8e>
	...

0800d2d8 <_printf_i>:
 800d2d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d2dc:	7e0f      	ldrb	r7, [r1, #24]
 800d2de:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d2e0:	2f78      	cmp	r7, #120	; 0x78
 800d2e2:	4691      	mov	r9, r2
 800d2e4:	4680      	mov	r8, r0
 800d2e6:	460c      	mov	r4, r1
 800d2e8:	469a      	mov	sl, r3
 800d2ea:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800d2ee:	d807      	bhi.n	800d300 <_printf_i+0x28>
 800d2f0:	2f62      	cmp	r7, #98	; 0x62
 800d2f2:	d80a      	bhi.n	800d30a <_printf_i+0x32>
 800d2f4:	2f00      	cmp	r7, #0
 800d2f6:	f000 80d4 	beq.w	800d4a2 <_printf_i+0x1ca>
 800d2fa:	2f58      	cmp	r7, #88	; 0x58
 800d2fc:	f000 80c0 	beq.w	800d480 <_printf_i+0x1a8>
 800d300:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d304:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800d308:	e03a      	b.n	800d380 <_printf_i+0xa8>
 800d30a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800d30e:	2b15      	cmp	r3, #21
 800d310:	d8f6      	bhi.n	800d300 <_printf_i+0x28>
 800d312:	a101      	add	r1, pc, #4	; (adr r1, 800d318 <_printf_i+0x40>)
 800d314:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800d318:	0800d371 	.word	0x0800d371
 800d31c:	0800d385 	.word	0x0800d385
 800d320:	0800d301 	.word	0x0800d301
 800d324:	0800d301 	.word	0x0800d301
 800d328:	0800d301 	.word	0x0800d301
 800d32c:	0800d301 	.word	0x0800d301
 800d330:	0800d385 	.word	0x0800d385
 800d334:	0800d301 	.word	0x0800d301
 800d338:	0800d301 	.word	0x0800d301
 800d33c:	0800d301 	.word	0x0800d301
 800d340:	0800d301 	.word	0x0800d301
 800d344:	0800d489 	.word	0x0800d489
 800d348:	0800d3b1 	.word	0x0800d3b1
 800d34c:	0800d443 	.word	0x0800d443
 800d350:	0800d301 	.word	0x0800d301
 800d354:	0800d301 	.word	0x0800d301
 800d358:	0800d4ab 	.word	0x0800d4ab
 800d35c:	0800d301 	.word	0x0800d301
 800d360:	0800d3b1 	.word	0x0800d3b1
 800d364:	0800d301 	.word	0x0800d301
 800d368:	0800d301 	.word	0x0800d301
 800d36c:	0800d44b 	.word	0x0800d44b
 800d370:	682b      	ldr	r3, [r5, #0]
 800d372:	1d1a      	adds	r2, r3, #4
 800d374:	681b      	ldr	r3, [r3, #0]
 800d376:	602a      	str	r2, [r5, #0]
 800d378:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d37c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d380:	2301      	movs	r3, #1
 800d382:	e09f      	b.n	800d4c4 <_printf_i+0x1ec>
 800d384:	6820      	ldr	r0, [r4, #0]
 800d386:	682b      	ldr	r3, [r5, #0]
 800d388:	0607      	lsls	r7, r0, #24
 800d38a:	f103 0104 	add.w	r1, r3, #4
 800d38e:	6029      	str	r1, [r5, #0]
 800d390:	d501      	bpl.n	800d396 <_printf_i+0xbe>
 800d392:	681e      	ldr	r6, [r3, #0]
 800d394:	e003      	b.n	800d39e <_printf_i+0xc6>
 800d396:	0646      	lsls	r6, r0, #25
 800d398:	d5fb      	bpl.n	800d392 <_printf_i+0xba>
 800d39a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d39e:	2e00      	cmp	r6, #0
 800d3a0:	da03      	bge.n	800d3aa <_printf_i+0xd2>
 800d3a2:	232d      	movs	r3, #45	; 0x2d
 800d3a4:	4276      	negs	r6, r6
 800d3a6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d3aa:	485a      	ldr	r0, [pc, #360]	; (800d514 <_printf_i+0x23c>)
 800d3ac:	230a      	movs	r3, #10
 800d3ae:	e012      	b.n	800d3d6 <_printf_i+0xfe>
 800d3b0:	682b      	ldr	r3, [r5, #0]
 800d3b2:	6820      	ldr	r0, [r4, #0]
 800d3b4:	1d19      	adds	r1, r3, #4
 800d3b6:	6029      	str	r1, [r5, #0]
 800d3b8:	0605      	lsls	r5, r0, #24
 800d3ba:	d501      	bpl.n	800d3c0 <_printf_i+0xe8>
 800d3bc:	681e      	ldr	r6, [r3, #0]
 800d3be:	e002      	b.n	800d3c6 <_printf_i+0xee>
 800d3c0:	0641      	lsls	r1, r0, #25
 800d3c2:	d5fb      	bpl.n	800d3bc <_printf_i+0xe4>
 800d3c4:	881e      	ldrh	r6, [r3, #0]
 800d3c6:	4853      	ldr	r0, [pc, #332]	; (800d514 <_printf_i+0x23c>)
 800d3c8:	2f6f      	cmp	r7, #111	; 0x6f
 800d3ca:	bf0c      	ite	eq
 800d3cc:	2308      	moveq	r3, #8
 800d3ce:	230a      	movne	r3, #10
 800d3d0:	2100      	movs	r1, #0
 800d3d2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800d3d6:	6865      	ldr	r5, [r4, #4]
 800d3d8:	60a5      	str	r5, [r4, #8]
 800d3da:	2d00      	cmp	r5, #0
 800d3dc:	bfa2      	ittt	ge
 800d3de:	6821      	ldrge	r1, [r4, #0]
 800d3e0:	f021 0104 	bicge.w	r1, r1, #4
 800d3e4:	6021      	strge	r1, [r4, #0]
 800d3e6:	b90e      	cbnz	r6, 800d3ec <_printf_i+0x114>
 800d3e8:	2d00      	cmp	r5, #0
 800d3ea:	d04b      	beq.n	800d484 <_printf_i+0x1ac>
 800d3ec:	4615      	mov	r5, r2
 800d3ee:	fbb6 f1f3 	udiv	r1, r6, r3
 800d3f2:	fb03 6711 	mls	r7, r3, r1, r6
 800d3f6:	5dc7      	ldrb	r7, [r0, r7]
 800d3f8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800d3fc:	4637      	mov	r7, r6
 800d3fe:	42bb      	cmp	r3, r7
 800d400:	460e      	mov	r6, r1
 800d402:	d9f4      	bls.n	800d3ee <_printf_i+0x116>
 800d404:	2b08      	cmp	r3, #8
 800d406:	d10b      	bne.n	800d420 <_printf_i+0x148>
 800d408:	6823      	ldr	r3, [r4, #0]
 800d40a:	07de      	lsls	r6, r3, #31
 800d40c:	d508      	bpl.n	800d420 <_printf_i+0x148>
 800d40e:	6923      	ldr	r3, [r4, #16]
 800d410:	6861      	ldr	r1, [r4, #4]
 800d412:	4299      	cmp	r1, r3
 800d414:	bfde      	ittt	le
 800d416:	2330      	movle	r3, #48	; 0x30
 800d418:	f805 3c01 	strble.w	r3, [r5, #-1]
 800d41c:	f105 35ff 	addle.w	r5, r5, #4294967295
 800d420:	1b52      	subs	r2, r2, r5
 800d422:	6122      	str	r2, [r4, #16]
 800d424:	f8cd a000 	str.w	sl, [sp]
 800d428:	464b      	mov	r3, r9
 800d42a:	aa03      	add	r2, sp, #12
 800d42c:	4621      	mov	r1, r4
 800d42e:	4640      	mov	r0, r8
 800d430:	f7ff fee4 	bl	800d1fc <_printf_common>
 800d434:	3001      	adds	r0, #1
 800d436:	d14a      	bne.n	800d4ce <_printf_i+0x1f6>
 800d438:	f04f 30ff 	mov.w	r0, #4294967295
 800d43c:	b004      	add	sp, #16
 800d43e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d442:	6823      	ldr	r3, [r4, #0]
 800d444:	f043 0320 	orr.w	r3, r3, #32
 800d448:	6023      	str	r3, [r4, #0]
 800d44a:	4833      	ldr	r0, [pc, #204]	; (800d518 <_printf_i+0x240>)
 800d44c:	2778      	movs	r7, #120	; 0x78
 800d44e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800d452:	6823      	ldr	r3, [r4, #0]
 800d454:	6829      	ldr	r1, [r5, #0]
 800d456:	061f      	lsls	r7, r3, #24
 800d458:	f851 6b04 	ldr.w	r6, [r1], #4
 800d45c:	d402      	bmi.n	800d464 <_printf_i+0x18c>
 800d45e:	065f      	lsls	r7, r3, #25
 800d460:	bf48      	it	mi
 800d462:	b2b6      	uxthmi	r6, r6
 800d464:	07df      	lsls	r7, r3, #31
 800d466:	bf48      	it	mi
 800d468:	f043 0320 	orrmi.w	r3, r3, #32
 800d46c:	6029      	str	r1, [r5, #0]
 800d46e:	bf48      	it	mi
 800d470:	6023      	strmi	r3, [r4, #0]
 800d472:	b91e      	cbnz	r6, 800d47c <_printf_i+0x1a4>
 800d474:	6823      	ldr	r3, [r4, #0]
 800d476:	f023 0320 	bic.w	r3, r3, #32
 800d47a:	6023      	str	r3, [r4, #0]
 800d47c:	2310      	movs	r3, #16
 800d47e:	e7a7      	b.n	800d3d0 <_printf_i+0xf8>
 800d480:	4824      	ldr	r0, [pc, #144]	; (800d514 <_printf_i+0x23c>)
 800d482:	e7e4      	b.n	800d44e <_printf_i+0x176>
 800d484:	4615      	mov	r5, r2
 800d486:	e7bd      	b.n	800d404 <_printf_i+0x12c>
 800d488:	682b      	ldr	r3, [r5, #0]
 800d48a:	6826      	ldr	r6, [r4, #0]
 800d48c:	6961      	ldr	r1, [r4, #20]
 800d48e:	1d18      	adds	r0, r3, #4
 800d490:	6028      	str	r0, [r5, #0]
 800d492:	0635      	lsls	r5, r6, #24
 800d494:	681b      	ldr	r3, [r3, #0]
 800d496:	d501      	bpl.n	800d49c <_printf_i+0x1c4>
 800d498:	6019      	str	r1, [r3, #0]
 800d49a:	e002      	b.n	800d4a2 <_printf_i+0x1ca>
 800d49c:	0670      	lsls	r0, r6, #25
 800d49e:	d5fb      	bpl.n	800d498 <_printf_i+0x1c0>
 800d4a0:	8019      	strh	r1, [r3, #0]
 800d4a2:	2300      	movs	r3, #0
 800d4a4:	6123      	str	r3, [r4, #16]
 800d4a6:	4615      	mov	r5, r2
 800d4a8:	e7bc      	b.n	800d424 <_printf_i+0x14c>
 800d4aa:	682b      	ldr	r3, [r5, #0]
 800d4ac:	1d1a      	adds	r2, r3, #4
 800d4ae:	602a      	str	r2, [r5, #0]
 800d4b0:	681d      	ldr	r5, [r3, #0]
 800d4b2:	6862      	ldr	r2, [r4, #4]
 800d4b4:	2100      	movs	r1, #0
 800d4b6:	4628      	mov	r0, r5
 800d4b8:	f7f4 fbe2 	bl	8001c80 <memchr>
 800d4bc:	b108      	cbz	r0, 800d4c2 <_printf_i+0x1ea>
 800d4be:	1b40      	subs	r0, r0, r5
 800d4c0:	6060      	str	r0, [r4, #4]
 800d4c2:	6863      	ldr	r3, [r4, #4]
 800d4c4:	6123      	str	r3, [r4, #16]
 800d4c6:	2300      	movs	r3, #0
 800d4c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d4cc:	e7aa      	b.n	800d424 <_printf_i+0x14c>
 800d4ce:	6923      	ldr	r3, [r4, #16]
 800d4d0:	462a      	mov	r2, r5
 800d4d2:	4649      	mov	r1, r9
 800d4d4:	4640      	mov	r0, r8
 800d4d6:	47d0      	blx	sl
 800d4d8:	3001      	adds	r0, #1
 800d4da:	d0ad      	beq.n	800d438 <_printf_i+0x160>
 800d4dc:	6823      	ldr	r3, [r4, #0]
 800d4de:	079b      	lsls	r3, r3, #30
 800d4e0:	d413      	bmi.n	800d50a <_printf_i+0x232>
 800d4e2:	68e0      	ldr	r0, [r4, #12]
 800d4e4:	9b03      	ldr	r3, [sp, #12]
 800d4e6:	4298      	cmp	r0, r3
 800d4e8:	bfb8      	it	lt
 800d4ea:	4618      	movlt	r0, r3
 800d4ec:	e7a6      	b.n	800d43c <_printf_i+0x164>
 800d4ee:	2301      	movs	r3, #1
 800d4f0:	4632      	mov	r2, r6
 800d4f2:	4649      	mov	r1, r9
 800d4f4:	4640      	mov	r0, r8
 800d4f6:	47d0      	blx	sl
 800d4f8:	3001      	adds	r0, #1
 800d4fa:	d09d      	beq.n	800d438 <_printf_i+0x160>
 800d4fc:	3501      	adds	r5, #1
 800d4fe:	68e3      	ldr	r3, [r4, #12]
 800d500:	9903      	ldr	r1, [sp, #12]
 800d502:	1a5b      	subs	r3, r3, r1
 800d504:	42ab      	cmp	r3, r5
 800d506:	dcf2      	bgt.n	800d4ee <_printf_i+0x216>
 800d508:	e7eb      	b.n	800d4e2 <_printf_i+0x20a>
 800d50a:	2500      	movs	r5, #0
 800d50c:	f104 0619 	add.w	r6, r4, #25
 800d510:	e7f5      	b.n	800d4fe <_printf_i+0x226>
 800d512:	bf00      	nop
 800d514:	0800f452 	.word	0x0800f452
 800d518:	0800f463 	.word	0x0800f463

0800d51c <__sflush_r>:
 800d51c:	898a      	ldrh	r2, [r1, #12]
 800d51e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d522:	4605      	mov	r5, r0
 800d524:	0710      	lsls	r0, r2, #28
 800d526:	460c      	mov	r4, r1
 800d528:	d458      	bmi.n	800d5dc <__sflush_r+0xc0>
 800d52a:	684b      	ldr	r3, [r1, #4]
 800d52c:	2b00      	cmp	r3, #0
 800d52e:	dc05      	bgt.n	800d53c <__sflush_r+0x20>
 800d530:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800d532:	2b00      	cmp	r3, #0
 800d534:	dc02      	bgt.n	800d53c <__sflush_r+0x20>
 800d536:	2000      	movs	r0, #0
 800d538:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d53c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d53e:	2e00      	cmp	r6, #0
 800d540:	d0f9      	beq.n	800d536 <__sflush_r+0x1a>
 800d542:	2300      	movs	r3, #0
 800d544:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800d548:	682f      	ldr	r7, [r5, #0]
 800d54a:	6a21      	ldr	r1, [r4, #32]
 800d54c:	602b      	str	r3, [r5, #0]
 800d54e:	d032      	beq.n	800d5b6 <__sflush_r+0x9a>
 800d550:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800d552:	89a3      	ldrh	r3, [r4, #12]
 800d554:	075a      	lsls	r2, r3, #29
 800d556:	d505      	bpl.n	800d564 <__sflush_r+0x48>
 800d558:	6863      	ldr	r3, [r4, #4]
 800d55a:	1ac0      	subs	r0, r0, r3
 800d55c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d55e:	b10b      	cbz	r3, 800d564 <__sflush_r+0x48>
 800d560:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d562:	1ac0      	subs	r0, r0, r3
 800d564:	2300      	movs	r3, #0
 800d566:	4602      	mov	r2, r0
 800d568:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d56a:	6a21      	ldr	r1, [r4, #32]
 800d56c:	4628      	mov	r0, r5
 800d56e:	47b0      	blx	r6
 800d570:	1c43      	adds	r3, r0, #1
 800d572:	89a3      	ldrh	r3, [r4, #12]
 800d574:	d106      	bne.n	800d584 <__sflush_r+0x68>
 800d576:	6829      	ldr	r1, [r5, #0]
 800d578:	291d      	cmp	r1, #29
 800d57a:	d82b      	bhi.n	800d5d4 <__sflush_r+0xb8>
 800d57c:	4a29      	ldr	r2, [pc, #164]	; (800d624 <__sflush_r+0x108>)
 800d57e:	410a      	asrs	r2, r1
 800d580:	07d6      	lsls	r6, r2, #31
 800d582:	d427      	bmi.n	800d5d4 <__sflush_r+0xb8>
 800d584:	2200      	movs	r2, #0
 800d586:	6062      	str	r2, [r4, #4]
 800d588:	04d9      	lsls	r1, r3, #19
 800d58a:	6922      	ldr	r2, [r4, #16]
 800d58c:	6022      	str	r2, [r4, #0]
 800d58e:	d504      	bpl.n	800d59a <__sflush_r+0x7e>
 800d590:	1c42      	adds	r2, r0, #1
 800d592:	d101      	bne.n	800d598 <__sflush_r+0x7c>
 800d594:	682b      	ldr	r3, [r5, #0]
 800d596:	b903      	cbnz	r3, 800d59a <__sflush_r+0x7e>
 800d598:	6560      	str	r0, [r4, #84]	; 0x54
 800d59a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d59c:	602f      	str	r7, [r5, #0]
 800d59e:	2900      	cmp	r1, #0
 800d5a0:	d0c9      	beq.n	800d536 <__sflush_r+0x1a>
 800d5a2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800d5a6:	4299      	cmp	r1, r3
 800d5a8:	d002      	beq.n	800d5b0 <__sflush_r+0x94>
 800d5aa:	4628      	mov	r0, r5
 800d5ac:	f7ff fbea 	bl	800cd84 <_free_r>
 800d5b0:	2000      	movs	r0, #0
 800d5b2:	6360      	str	r0, [r4, #52]	; 0x34
 800d5b4:	e7c0      	b.n	800d538 <__sflush_r+0x1c>
 800d5b6:	2301      	movs	r3, #1
 800d5b8:	4628      	mov	r0, r5
 800d5ba:	47b0      	blx	r6
 800d5bc:	1c41      	adds	r1, r0, #1
 800d5be:	d1c8      	bne.n	800d552 <__sflush_r+0x36>
 800d5c0:	682b      	ldr	r3, [r5, #0]
 800d5c2:	2b00      	cmp	r3, #0
 800d5c4:	d0c5      	beq.n	800d552 <__sflush_r+0x36>
 800d5c6:	2b1d      	cmp	r3, #29
 800d5c8:	d001      	beq.n	800d5ce <__sflush_r+0xb2>
 800d5ca:	2b16      	cmp	r3, #22
 800d5cc:	d101      	bne.n	800d5d2 <__sflush_r+0xb6>
 800d5ce:	602f      	str	r7, [r5, #0]
 800d5d0:	e7b1      	b.n	800d536 <__sflush_r+0x1a>
 800d5d2:	89a3      	ldrh	r3, [r4, #12]
 800d5d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d5d8:	81a3      	strh	r3, [r4, #12]
 800d5da:	e7ad      	b.n	800d538 <__sflush_r+0x1c>
 800d5dc:	690f      	ldr	r7, [r1, #16]
 800d5de:	2f00      	cmp	r7, #0
 800d5e0:	d0a9      	beq.n	800d536 <__sflush_r+0x1a>
 800d5e2:	0793      	lsls	r3, r2, #30
 800d5e4:	680e      	ldr	r6, [r1, #0]
 800d5e6:	bf08      	it	eq
 800d5e8:	694b      	ldreq	r3, [r1, #20]
 800d5ea:	600f      	str	r7, [r1, #0]
 800d5ec:	bf18      	it	ne
 800d5ee:	2300      	movne	r3, #0
 800d5f0:	eba6 0807 	sub.w	r8, r6, r7
 800d5f4:	608b      	str	r3, [r1, #8]
 800d5f6:	f1b8 0f00 	cmp.w	r8, #0
 800d5fa:	dd9c      	ble.n	800d536 <__sflush_r+0x1a>
 800d5fc:	6a21      	ldr	r1, [r4, #32]
 800d5fe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800d600:	4643      	mov	r3, r8
 800d602:	463a      	mov	r2, r7
 800d604:	4628      	mov	r0, r5
 800d606:	47b0      	blx	r6
 800d608:	2800      	cmp	r0, #0
 800d60a:	dc06      	bgt.n	800d61a <__sflush_r+0xfe>
 800d60c:	89a3      	ldrh	r3, [r4, #12]
 800d60e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d612:	81a3      	strh	r3, [r4, #12]
 800d614:	f04f 30ff 	mov.w	r0, #4294967295
 800d618:	e78e      	b.n	800d538 <__sflush_r+0x1c>
 800d61a:	4407      	add	r7, r0
 800d61c:	eba8 0800 	sub.w	r8, r8, r0
 800d620:	e7e9      	b.n	800d5f6 <__sflush_r+0xda>
 800d622:	bf00      	nop
 800d624:	dfbffffe 	.word	0xdfbffffe

0800d628 <_fflush_r>:
 800d628:	b538      	push	{r3, r4, r5, lr}
 800d62a:	690b      	ldr	r3, [r1, #16]
 800d62c:	4605      	mov	r5, r0
 800d62e:	460c      	mov	r4, r1
 800d630:	b913      	cbnz	r3, 800d638 <_fflush_r+0x10>
 800d632:	2500      	movs	r5, #0
 800d634:	4628      	mov	r0, r5
 800d636:	bd38      	pop	{r3, r4, r5, pc}
 800d638:	b118      	cbz	r0, 800d642 <_fflush_r+0x1a>
 800d63a:	6a03      	ldr	r3, [r0, #32]
 800d63c:	b90b      	cbnz	r3, 800d642 <_fflush_r+0x1a>
 800d63e:	f7ff f97f 	bl	800c940 <__sinit>
 800d642:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d646:	2b00      	cmp	r3, #0
 800d648:	d0f3      	beq.n	800d632 <_fflush_r+0xa>
 800d64a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800d64c:	07d0      	lsls	r0, r2, #31
 800d64e:	d404      	bmi.n	800d65a <_fflush_r+0x32>
 800d650:	0599      	lsls	r1, r3, #22
 800d652:	d402      	bmi.n	800d65a <_fflush_r+0x32>
 800d654:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d656:	f7ff fb80 	bl	800cd5a <__retarget_lock_acquire_recursive>
 800d65a:	4628      	mov	r0, r5
 800d65c:	4621      	mov	r1, r4
 800d65e:	f7ff ff5d 	bl	800d51c <__sflush_r>
 800d662:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d664:	07da      	lsls	r2, r3, #31
 800d666:	4605      	mov	r5, r0
 800d668:	d4e4      	bmi.n	800d634 <_fflush_r+0xc>
 800d66a:	89a3      	ldrh	r3, [r4, #12]
 800d66c:	059b      	lsls	r3, r3, #22
 800d66e:	d4e1      	bmi.n	800d634 <_fflush_r+0xc>
 800d670:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d672:	f7ff fb73 	bl	800cd5c <__retarget_lock_release_recursive>
 800d676:	e7dd      	b.n	800d634 <_fflush_r+0xc>

0800d678 <__swhatbuf_r>:
 800d678:	b570      	push	{r4, r5, r6, lr}
 800d67a:	460c      	mov	r4, r1
 800d67c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d680:	2900      	cmp	r1, #0
 800d682:	b096      	sub	sp, #88	; 0x58
 800d684:	4615      	mov	r5, r2
 800d686:	461e      	mov	r6, r3
 800d688:	da0d      	bge.n	800d6a6 <__swhatbuf_r+0x2e>
 800d68a:	89a3      	ldrh	r3, [r4, #12]
 800d68c:	f013 0f80 	tst.w	r3, #128	; 0x80
 800d690:	f04f 0100 	mov.w	r1, #0
 800d694:	bf0c      	ite	eq
 800d696:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800d69a:	2340      	movne	r3, #64	; 0x40
 800d69c:	2000      	movs	r0, #0
 800d69e:	6031      	str	r1, [r6, #0]
 800d6a0:	602b      	str	r3, [r5, #0]
 800d6a2:	b016      	add	sp, #88	; 0x58
 800d6a4:	bd70      	pop	{r4, r5, r6, pc}
 800d6a6:	466a      	mov	r2, sp
 800d6a8:	f000 f87c 	bl	800d7a4 <_fstat_r>
 800d6ac:	2800      	cmp	r0, #0
 800d6ae:	dbec      	blt.n	800d68a <__swhatbuf_r+0x12>
 800d6b0:	9901      	ldr	r1, [sp, #4]
 800d6b2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800d6b6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800d6ba:	4259      	negs	r1, r3
 800d6bc:	4159      	adcs	r1, r3
 800d6be:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d6c2:	e7eb      	b.n	800d69c <__swhatbuf_r+0x24>

0800d6c4 <__smakebuf_r>:
 800d6c4:	898b      	ldrh	r3, [r1, #12]
 800d6c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d6c8:	079d      	lsls	r5, r3, #30
 800d6ca:	4606      	mov	r6, r0
 800d6cc:	460c      	mov	r4, r1
 800d6ce:	d507      	bpl.n	800d6e0 <__smakebuf_r+0x1c>
 800d6d0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800d6d4:	6023      	str	r3, [r4, #0]
 800d6d6:	6123      	str	r3, [r4, #16]
 800d6d8:	2301      	movs	r3, #1
 800d6da:	6163      	str	r3, [r4, #20]
 800d6dc:	b002      	add	sp, #8
 800d6de:	bd70      	pop	{r4, r5, r6, pc}
 800d6e0:	ab01      	add	r3, sp, #4
 800d6e2:	466a      	mov	r2, sp
 800d6e4:	f7ff ffc8 	bl	800d678 <__swhatbuf_r>
 800d6e8:	9900      	ldr	r1, [sp, #0]
 800d6ea:	4605      	mov	r5, r0
 800d6ec:	4630      	mov	r0, r6
 800d6ee:	f7ff fbb5 	bl	800ce5c <_malloc_r>
 800d6f2:	b948      	cbnz	r0, 800d708 <__smakebuf_r+0x44>
 800d6f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d6f8:	059a      	lsls	r2, r3, #22
 800d6fa:	d4ef      	bmi.n	800d6dc <__smakebuf_r+0x18>
 800d6fc:	f023 0303 	bic.w	r3, r3, #3
 800d700:	f043 0302 	orr.w	r3, r3, #2
 800d704:	81a3      	strh	r3, [r4, #12]
 800d706:	e7e3      	b.n	800d6d0 <__smakebuf_r+0xc>
 800d708:	89a3      	ldrh	r3, [r4, #12]
 800d70a:	6020      	str	r0, [r4, #0]
 800d70c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800d710:	81a3      	strh	r3, [r4, #12]
 800d712:	9b00      	ldr	r3, [sp, #0]
 800d714:	6163      	str	r3, [r4, #20]
 800d716:	9b01      	ldr	r3, [sp, #4]
 800d718:	6120      	str	r0, [r4, #16]
 800d71a:	b15b      	cbz	r3, 800d734 <__smakebuf_r+0x70>
 800d71c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d720:	4630      	mov	r0, r6
 800d722:	f000 f851 	bl	800d7c8 <_isatty_r>
 800d726:	b128      	cbz	r0, 800d734 <__smakebuf_r+0x70>
 800d728:	89a3      	ldrh	r3, [r4, #12]
 800d72a:	f023 0303 	bic.w	r3, r3, #3
 800d72e:	f043 0301 	orr.w	r3, r3, #1
 800d732:	81a3      	strh	r3, [r4, #12]
 800d734:	89a3      	ldrh	r3, [r4, #12]
 800d736:	431d      	orrs	r5, r3
 800d738:	81a5      	strh	r5, [r4, #12]
 800d73a:	e7cf      	b.n	800d6dc <__smakebuf_r+0x18>

0800d73c <_putc_r>:
 800d73c:	b570      	push	{r4, r5, r6, lr}
 800d73e:	460d      	mov	r5, r1
 800d740:	4614      	mov	r4, r2
 800d742:	4606      	mov	r6, r0
 800d744:	b118      	cbz	r0, 800d74e <_putc_r+0x12>
 800d746:	6a03      	ldr	r3, [r0, #32]
 800d748:	b90b      	cbnz	r3, 800d74e <_putc_r+0x12>
 800d74a:	f7ff f8f9 	bl	800c940 <__sinit>
 800d74e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d750:	07d8      	lsls	r0, r3, #31
 800d752:	d405      	bmi.n	800d760 <_putc_r+0x24>
 800d754:	89a3      	ldrh	r3, [r4, #12]
 800d756:	0599      	lsls	r1, r3, #22
 800d758:	d402      	bmi.n	800d760 <_putc_r+0x24>
 800d75a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d75c:	f7ff fafd 	bl	800cd5a <__retarget_lock_acquire_recursive>
 800d760:	68a3      	ldr	r3, [r4, #8]
 800d762:	3b01      	subs	r3, #1
 800d764:	2b00      	cmp	r3, #0
 800d766:	60a3      	str	r3, [r4, #8]
 800d768:	da05      	bge.n	800d776 <_putc_r+0x3a>
 800d76a:	69a2      	ldr	r2, [r4, #24]
 800d76c:	4293      	cmp	r3, r2
 800d76e:	db12      	blt.n	800d796 <_putc_r+0x5a>
 800d770:	b2eb      	uxtb	r3, r5
 800d772:	2b0a      	cmp	r3, #10
 800d774:	d00f      	beq.n	800d796 <_putc_r+0x5a>
 800d776:	6823      	ldr	r3, [r4, #0]
 800d778:	1c5a      	adds	r2, r3, #1
 800d77a:	6022      	str	r2, [r4, #0]
 800d77c:	701d      	strb	r5, [r3, #0]
 800d77e:	b2ed      	uxtb	r5, r5
 800d780:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d782:	07da      	lsls	r2, r3, #31
 800d784:	d405      	bmi.n	800d792 <_putc_r+0x56>
 800d786:	89a3      	ldrh	r3, [r4, #12]
 800d788:	059b      	lsls	r3, r3, #22
 800d78a:	d402      	bmi.n	800d792 <_putc_r+0x56>
 800d78c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d78e:	f7ff fae5 	bl	800cd5c <__retarget_lock_release_recursive>
 800d792:	4628      	mov	r0, r5
 800d794:	bd70      	pop	{r4, r5, r6, pc}
 800d796:	4629      	mov	r1, r5
 800d798:	4622      	mov	r2, r4
 800d79a:	4630      	mov	r0, r6
 800d79c:	f7ff f9bf 	bl	800cb1e <__swbuf_r>
 800d7a0:	4605      	mov	r5, r0
 800d7a2:	e7ed      	b.n	800d780 <_putc_r+0x44>

0800d7a4 <_fstat_r>:
 800d7a4:	b538      	push	{r3, r4, r5, lr}
 800d7a6:	4d07      	ldr	r5, [pc, #28]	; (800d7c4 <_fstat_r+0x20>)
 800d7a8:	2300      	movs	r3, #0
 800d7aa:	4604      	mov	r4, r0
 800d7ac:	4608      	mov	r0, r1
 800d7ae:	4611      	mov	r1, r2
 800d7b0:	602b      	str	r3, [r5, #0]
 800d7b2:	f7f6 ff96 	bl	80046e2 <_fstat>
 800d7b6:	1c43      	adds	r3, r0, #1
 800d7b8:	d102      	bne.n	800d7c0 <_fstat_r+0x1c>
 800d7ba:	682b      	ldr	r3, [r5, #0]
 800d7bc:	b103      	cbz	r3, 800d7c0 <_fstat_r+0x1c>
 800d7be:	6023      	str	r3, [r4, #0]
 800d7c0:	bd38      	pop	{r3, r4, r5, pc}
 800d7c2:	bf00      	nop
 800d7c4:	2000241c 	.word	0x2000241c

0800d7c8 <_isatty_r>:
 800d7c8:	b538      	push	{r3, r4, r5, lr}
 800d7ca:	4d06      	ldr	r5, [pc, #24]	; (800d7e4 <_isatty_r+0x1c>)
 800d7cc:	2300      	movs	r3, #0
 800d7ce:	4604      	mov	r4, r0
 800d7d0:	4608      	mov	r0, r1
 800d7d2:	602b      	str	r3, [r5, #0]
 800d7d4:	f7f6 ff95 	bl	8004702 <_isatty>
 800d7d8:	1c43      	adds	r3, r0, #1
 800d7da:	d102      	bne.n	800d7e2 <_isatty_r+0x1a>
 800d7dc:	682b      	ldr	r3, [r5, #0]
 800d7de:	b103      	cbz	r3, 800d7e2 <_isatty_r+0x1a>
 800d7e0:	6023      	str	r3, [r4, #0]
 800d7e2:	bd38      	pop	{r3, r4, r5, pc}
 800d7e4:	2000241c 	.word	0x2000241c

0800d7e8 <_sbrk_r>:
 800d7e8:	b538      	push	{r3, r4, r5, lr}
 800d7ea:	4d06      	ldr	r5, [pc, #24]	; (800d804 <_sbrk_r+0x1c>)
 800d7ec:	2300      	movs	r3, #0
 800d7ee:	4604      	mov	r4, r0
 800d7f0:	4608      	mov	r0, r1
 800d7f2:	602b      	str	r3, [r5, #0]
 800d7f4:	f7f6 ff9e 	bl	8004734 <_sbrk>
 800d7f8:	1c43      	adds	r3, r0, #1
 800d7fa:	d102      	bne.n	800d802 <_sbrk_r+0x1a>
 800d7fc:	682b      	ldr	r3, [r5, #0]
 800d7fe:	b103      	cbz	r3, 800d802 <_sbrk_r+0x1a>
 800d800:	6023      	str	r3, [r4, #0]
 800d802:	bd38      	pop	{r3, r4, r5, pc}
 800d804:	2000241c 	.word	0x2000241c

0800d808 <_init>:
 800d808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d80a:	bf00      	nop
 800d80c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d80e:	bc08      	pop	{r3}
 800d810:	469e      	mov	lr, r3
 800d812:	4770      	bx	lr

0800d814 <_fini>:
 800d814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d816:	bf00      	nop
 800d818:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d81a:	bc08      	pop	{r3}
 800d81c:	469e      	mov	lr, r3
 800d81e:	4770      	bx	lr
